openapi: 3.0.3
info:
  title: Mgzon Marketplace API
  description: API for managing sellers, products, orders, partners, escrow, and integrations
  version: 1.0.0
servers:
  - url: https://hager-zon.vercel.app/api
    description: Production server
  - url: http://localhost:3000/api
    description: Local development server
paths:
  /seller/{userId}:
    get:
      summary: Get seller profile
      description: Retrieves the seller profile for a given user ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
        '401':
          description: Unauthorized
        '404':
          description: Seller not found
  /seller/dashboard:
    get:
      summary: Get seller dashboard metrics
      description: Retrieves key metrics for the seller's dashboard
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      totalSales:
                        type: number
                      totalOrders:
                        type: number
                      totalProducts:
                        type: number
                      averageRating:
                        type: number
        '401':
          description: Unauthorized
        '403':
          description: Subscription expired
  /partners:
    get:
      summary: Get all partners
      description: Retrieves a list of all partners
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Partner'
    post:
      summary: Create a new partner
      description: Creates a new partner (Admin only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Partner'
        '401':
          description: Unauthorized
  /escrow/{orderId}:
    post:
      summary: Manage escrow
      description: Release or refund escrow for an order (Admin only)
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum: [release, refund]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '401':
          description: Unauthorized
        '404':
          description: Order not found
  /quickbooks/oauth-url:
    get:
      summary: Get QuickBooks OAuth URL
      description: Generates an OAuth URL for QuickBooks integration
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  url:
                    type: string
                  requestId:
                    type: string
        '500':
          description: Server error
  /xero/oauth-url:
    get:
      summary: Get Xero OAuth URL
      description: Generates an OAuth URL for Xero integration
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  url:
                    type: string
                  requestId:
                    type: string
        '500':
          description: Server error
components:
  schemas:
    Seller:
      type: object
      properties:
        userId:
          type: string
        businessName:
          type: string
        email:
          type: string
        subscription:
          type: object
          properties:
            plan:
              type: string
            status:
              type: string
            endDate:
              type: string
              format: date-time
    Partner:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        image:
          type: string
        slug:
          type: string
        description:
          type: string
        socialLinks:
          type: object
          properties:
            facebook:
              type: string
            twitter:
              type: string
            linkedin:
              type: string
    PartnerInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        image:
          type: string
        description:
          type: string
        socialLinks:
          type: object
          properties:
            facebook:
              type: string
            twitter:
              type: string
            linkedin:
              type: string