d8f02520e0dfb9ea351ac5902cfcbb9d
'use server';
"use strict";

/* istanbul ignore next */
function cov_2p2i1uo4o3() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/points.actions.ts";
  var hash = "a21a4db375eb4f08343cbe7c08b6c3b6b6d52fed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/points.actions.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 27
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 32
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 32
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 28
        }
      },
      "8": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 28
        }
      },
      "9": {
        start: {
          line: 27,
          column: 33
        },
        end: {
          line: 27,
          column: 93
        }
      },
      "10": {
        start: {
          line: 28,
          column: 46
        },
        end: {
          line: 28,
          column: 120
        }
      },
      "11": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 52
        }
      },
      "12": {
        start: {
          line: 30,
          column: 15
        },
        end: {
          line: 30,
          column: 34
        }
      },
      "13": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 6
        }
      },
      "14": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "15": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 43
        }
      },
      "16": {
        start: {
          line: 39,
          column: 24
        },
        end: {
          line: 39,
          column: 63
        }
      },
      "17": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 35
        }
      },
      "18": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "19": {
        start: {
          line: 42,
          column: 25
        },
        end: {
          line: 42,
          column: 83
        }
      },
      "20": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 57
        }
      },
      "21": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 57
        }
      },
      "22": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 41
        }
      },
      "23": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 47,
          column: 15
        }
      },
      "24": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 58,
          column: 15
        }
      },
      "25": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 46
        }
      },
      "26": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 63,
          column: 14
        }
      },
      "27": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 45
        }
      },
      "28": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 24
        }
      },
      "29": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 33
        }
      },
      "30": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 74,
          column: 10
        }
      },
      "31": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "32": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 43
        }
      },
      "33": {
        start: {
          line: 80,
          column: 24
        },
        end: {
          line: 80,
          column: 63
        }
      },
      "34": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 35
        }
      },
      "35": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "36": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 83,
          column: 83
        }
      },
      "37": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 57
        }
      },
      "38": {
        start: {
          line: 84,
          column: 23
        },
        end: {
          line: 84,
          column: 57
        }
      },
      "39": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 84
        }
      },
      "40": {
        start: {
          line: 85,
          column: 45
        },
        end: {
          line: 85,
          column: 84
        }
      },
      "41": {
        start: {
          line: 86,
          column: 29
        },
        end: {
          line: 86,
          column: 68
        }
      },
      "42": {
        start: {
          line: 87,
          column: 34
        },
        end: {
          line: 90,
          column: 18
        }
      },
      "43": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 47
        }
      },
      "44": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 27
        }
      },
      "45": {
        start: {
          line: 91,
          column: 32
        },
        end: {
          line: 91,
          column: 71
        }
      },
      "46": {
        start: {
          line: 92,
          column: 29
        },
        end: {
          line: 92,
          column: 69
        }
      },
      "47": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 41
        }
      },
      "48": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 96,
          column: 15
        }
      },
      "49": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 106,
          column: 15
        }
      },
      "50": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 46
        }
      },
      "51": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 28
        }
      },
      "52": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 45
        }
      },
      "53": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 24
        }
      },
      "54": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 33
        }
      },
      "55": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 119,
          column: 10
        }
      },
      "56": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 123,
          column: 39
        }
      },
      "57": {
        start: {
          line: 124,
          column: 17
        },
        end: {
          line: 124,
          column: 58
        }
      },
      "58": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 49
        }
      },
      "59": {
        start: {
          line: 125,
          column: 15
        },
        end: {
          line: 125,
          column: 49
        }
      },
      "60": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 30
        }
      },
      "61": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 39
        }
      },
      "62": {
        start: {
          line: 130,
          column: 25
        },
        end: {
          line: 134,
          column: 6
        }
      },
      "63": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 52
        }
      },
      "64": {
        start: {
          line: 138,
          column: 22
        },
        end: {
          line: 138,
          column: 26
        }
      },
      "65": {
        start: {
          line: 140,
          column: 17
        },
        end: {
          line: 140,
          column: 45
        }
      },
      "66": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "67": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 146,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 17
          },
          end: {
            line: 13,
            column: 18
          }
        },
        loc: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 16,
            column: 23
          }
        },
        loc: {
          start: {
            line: 16,
            column: 33
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 23
          }
        },
        loc: {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 19
          }
        },
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 33
          }
        },
        loc: {
          start: {
            line: 31,
            column: 39
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "awardPoints",
        decl: {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 26
          }
        },
        loc: {
          start: {
            line: 36,
            column: 65
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 36
      },
      "7": {
        name: "redeemPoints",
        decl: {
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 27
          }
        },
        loc: {
          start: {
            line: 77,
            column: 67
          },
          end: {
            line: 121,
            column: 1
          }
        },
        line: 77
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 87,
            column: 70
          },
          end: {
            line: 87,
            column: 71
          }
        },
        loc: {
          start: {
            line: 87,
            column: 83
          },
          end: {
            line: 90,
            column: 13
          }
        },
        line: 87
      },
      "9": {
        name: "getPointsBalance",
        decl: {
          start: {
            line: 122,
            column: 15
          },
          end: {
            line: 122,
            column: 31
          }
        },
        loc: {
          start: {
            line: 122,
            column: 40
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 122
      },
      "10": {
        name: "getPointsHistory",
        decl: {
          start: {
            line: 128,
            column: 15
          },
          end: {
            line: 128,
            column: 31
          }
        },
        loc: {
          start: {
            line: 128,
            column: 40
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 128
      },
      "11": {
        name: "getPointsValue",
        decl: {
          start: {
            line: 137,
            column: 9
          },
          end: {
            line: 137,
            column: 23
          }
        },
        loc: {
          start: {
            line: 137,
            column: 49
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 137
      },
      "12": {
        name: "formatError",
        decl: {
          start: {
            line: 145,
            column: 9
          },
          end: {
            line: 145,
            column: 20
          }
        },
        loc: {
          start: {
            line: 145,
            column: 28
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 145
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 11
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 35
          },
          end: {
            line: 32,
            column: 38
          }
        }, {
          start: {
            line: 32,
            column: 41
          },
          end: {
            line: 34,
            column: 5
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 11
          },
          end: {
            line: 32,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 11
          },
          end: {
            line: 32,
            column: 14
          }
        }, {
          start: {
            line: 32,
            column: 18
          },
          end: {
            line: 32,
            column: 32
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "4": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 85,
            column: 84
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 85,
            column: 84
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "5": {
        loc: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "6": {
        loc: {
          start: {
            line: 140,
            column: 17
          },
          end: {
            line: 140,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 17
          },
          end: {
            line: 140,
            column: 40
          }
        }, {
          start: {
            line: 140,
            column: 44
          },
          end: {
            line: 140,
            column: 45
          }
        }],
        line: 140
      },
      "7": {
        loc: {
          start: {
            line: 146,
            column: 11
          },
          end: {
            line: 146,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 146,
            column: 36
          },
          end: {
            line: 146,
            column: 49
          }
        }, {
          start: {
            line: 146,
            column: 52
          },
          end: {
            line: 146,
            column: 82
          }
        }],
        line: 146
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/points.actions.ts"],
      sourcesContent: ["'use server'\n\nimport { connectToDatabase } from '../db'\nimport User from '../db/models/user.model'\nimport PointsTransaction, { IPointsTransaction } from '../db/models/points-transaction.model'\nimport { getSetting } from './setting.actions'\nimport { round2 } from '../utils'\n\nexport async function awardPoints(userId: string, amount: number, description: string, orderId?: string) {\n  try {\n    await connectToDatabase()\n    const session = await User.startSession()\n    session.startTransaction()\n    try {\n      const user = await User.findById(userId).session(session)\n      if (!user) throw new Error('User not found')\n      user.pointsBalance += amount\n      await user.save({ session })\n      await PointsTransaction.create(\n        [{ userId, amount, type: 'earn', description, orderId }],\n        { session }\n      )\n      await session.commitTransaction()\n      return { success: true, message: 'Points awarded successfully' }\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\n\nexport async function redeemPoints(userId: string, amount: number, currency: string, description: string) {\n  try {\n    await connectToDatabase()\n    const session = await User.startSession()\n    session.startTransaction()\n    try {\n      const user = await User.findById(userId).session(session)\n      if (!user) throw new Error('User not found')\n      if (user.pointsBalance < amount) throw new Error('Insufficient points')\n      const settings = await getSetting()\n      const exchangeRates = settings.availableCurrencies.reduce(\n        (acc: { [key: string]: number }, curr: { currency: string; rate: number }) => {\n          acc[curr.currency] = curr.rate\n          return acc\n        },\n        {}\n      )\n      const pointsValue = getPointsValue(currency, exchangeRates)\n      const discount = round2(amount * pointsValue)\n      user.pointsBalance -= amount\n      await user.save({ session })\n      await PointsTransaction.create(\n        [{ userId, amount, type: 'redeem', description }],\n        { session }\n      )\n      await session.commitTransaction()\n      return discount\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\n\nexport async function getPointsBalance(userId: string): Promise<number> {\n  await connectToDatabase()\n  const user = await User.findById(userId)\n  if (!user) throw new Error('User not found')\n  return user.pointsBalance\n}\n\nexport async function getPointsHistory(userId: string): Promise<IPointsTransaction[]> {\n  await connectToDatabase()\n  const transactions = await PointsTransaction.find({ userId }).sort({ createdAt: -1 })\n  return JSON.parse(JSON.stringify(transactions))\n}\n\nfunction getPointsValue(currency: string, exchangeRates: { [key: string]: number }): number {\n  const baseValue = 0.05 // 1 point = $0.05 USD\n  const rate = exchangeRates[currency] || 1 // Default to USD\n  return baseValue / rate // Adjust for currency\n}\n\nfunction formatError(error: any): string {\n  return error instanceof Error ? error.message : 'An unexpected error occurred'\n}"],
      names: ["awardPoints", "getPointsBalance", "getPointsHistory", "redeemPoints", "userId", "amount", "description", "orderId", "connectToDatabase", "session", "User", "startSession", "startTransaction", "user", "findById", "Error", "pointsBalance", "save", "PointsTransaction", "create", "type", "commitTransaction", "success", "message", "error", "abortTransaction", "endSession", "formatError", "currency", "settings", "getSetting", "exchangeRates", "availableCurrencies", "reduce", "acc", "curr", "rate", "pointsValue", "getPointsValue", "discount", "round2", "transactions", "find", "sort", "createdAt", "JSON", "parse", "stringify", "baseValue"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a21a4db375eb4f08343cbe7c08b6c3b6b6d52fed"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2p2i1uo4o3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2p2i1uo4o3();
cov_2p2i1uo4o3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2p2i1uo4o3().f[0]++;
  cov_2p2i1uo4o3().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2p2i1uo4o3().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2p2i1uo4o3().s[3]++;
_export(exports, {
  awardPoints: function () {
    /* istanbul ignore next */
    cov_2p2i1uo4o3().f[1]++;
    cov_2p2i1uo4o3().s[4]++;
    return awardPoints;
  },
  getPointsBalance: function () {
    /* istanbul ignore next */
    cov_2p2i1uo4o3().f[2]++;
    cov_2p2i1uo4o3().s[5]++;
    return getPointsBalance;
  },
  getPointsHistory: function () {
    /* istanbul ignore next */
    cov_2p2i1uo4o3().f[3]++;
    cov_2p2i1uo4o3().s[6]++;
    return getPointsHistory;
  },
  redeemPoints: function () {
    /* istanbul ignore next */
    cov_2p2i1uo4o3().f[4]++;
    cov_2p2i1uo4o3().s[7]++;
    return redeemPoints;
  }
});
const _db =
/* istanbul ignore next */
(cov_2p2i1uo4o3().s[8]++, require("../db"));
const _usermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_2p2i1uo4o3().s[9]++, _interop_require_default(require("../db/models/user.model")));
const _pointstransactionmodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_2p2i1uo4o3().s[10]++, _interop_require_default(require("../db/models/points-transaction.model")));
const _settingactions =
/* istanbul ignore next */
(cov_2p2i1uo4o3().s[11]++, require("./setting.actions"));
const _utils =
/* istanbul ignore next */
(cov_2p2i1uo4o3().s[12]++, require("../utils"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2p2i1uo4o3().f[5]++;
  cov_2p2i1uo4o3().s[13]++;
  return /* istanbul ignore next */(cov_2p2i1uo4o3().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2p2i1uo4o3().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2p2i1uo4o3().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2p2i1uo4o3().b[0][1]++, {
    default: obj
  });
}
async function awardPoints(userId, amount, description, orderId) {
  /* istanbul ignore next */
  cov_2p2i1uo4o3().f[6]++;
  cov_2p2i1uo4o3().s[14]++;
  try {
    /* istanbul ignore next */
    cov_2p2i1uo4o3().s[15]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_2p2i1uo4o3().s[16]++, await _usermodel.default.startSession());
    /* istanbul ignore next */
    cov_2p2i1uo4o3().s[17]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_2p2i1uo4o3().s[18]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_2p2i1uo4o3().s[19]++, await _usermodel.default.findById(userId).session(session));
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[20]++;
      if (!user) {
        /* istanbul ignore next */
        cov_2p2i1uo4o3().b[2][0]++;
        cov_2p2i1uo4o3().s[21]++;
        throw new Error('User not found');
      } else
      /* istanbul ignore next */
      {
        cov_2p2i1uo4o3().b[2][1]++;
      }
      cov_2p2i1uo4o3().s[22]++;
      user.pointsBalance += amount;
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[23]++;
      await user.save({
        session
      });
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[24]++;
      await _pointstransactionmodel.default.create([{
        userId,
        amount,
        type: 'earn',
        description,
        orderId
      }], {
        session
      });
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[25]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[26]++;
      return {
        success: true,
        message: 'Points awarded successfully'
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[27]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[28]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[29]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2p2i1uo4o3().s[30]++;
    return {
      success: false,
      message: formatError(error)
    };
  }
}
async function redeemPoints(userId, amount, currency, description) {
  /* istanbul ignore next */
  cov_2p2i1uo4o3().f[7]++;
  cov_2p2i1uo4o3().s[31]++;
  try {
    /* istanbul ignore next */
    cov_2p2i1uo4o3().s[32]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_2p2i1uo4o3().s[33]++, await _usermodel.default.startSession());
    /* istanbul ignore next */
    cov_2p2i1uo4o3().s[34]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_2p2i1uo4o3().s[35]++;
    try {
      const user =
      /* istanbul ignore next */
      (cov_2p2i1uo4o3().s[36]++, await _usermodel.default.findById(userId).session(session));
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[37]++;
      if (!user) {
        /* istanbul ignore next */
        cov_2p2i1uo4o3().b[3][0]++;
        cov_2p2i1uo4o3().s[38]++;
        throw new Error('User not found');
      } else
      /* istanbul ignore next */
      {
        cov_2p2i1uo4o3().b[3][1]++;
      }
      cov_2p2i1uo4o3().s[39]++;
      if (user.pointsBalance < amount) {
        /* istanbul ignore next */
        cov_2p2i1uo4o3().b[4][0]++;
        cov_2p2i1uo4o3().s[40]++;
        throw new Error('Insufficient points');
      } else
      /* istanbul ignore next */
      {
        cov_2p2i1uo4o3().b[4][1]++;
      }
      const settings =
      /* istanbul ignore next */
      (cov_2p2i1uo4o3().s[41]++, await (0, _settingactions.getSetting)());
      const exchangeRates =
      /* istanbul ignore next */
      (cov_2p2i1uo4o3().s[42]++, settings.availableCurrencies.reduce((acc, curr) => {
        /* istanbul ignore next */
        cov_2p2i1uo4o3().f[8]++;
        cov_2p2i1uo4o3().s[43]++;
        acc[curr.currency] = curr.rate;
        /* istanbul ignore next */
        cov_2p2i1uo4o3().s[44]++;
        return acc;
      }, {}));
      const pointsValue =
      /* istanbul ignore next */
      (cov_2p2i1uo4o3().s[45]++, getPointsValue(currency, exchangeRates));
      const discount =
      /* istanbul ignore next */
      (cov_2p2i1uo4o3().s[46]++, (0, _utils.round2)(amount * pointsValue));
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[47]++;
      user.pointsBalance -= amount;
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[48]++;
      await user.save({
        session
      });
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[49]++;
      await _pointstransactionmodel.default.create([{
        userId,
        amount,
        type: 'redeem',
        description
      }], {
        session
      });
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[50]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[51]++;
      return discount;
    } catch (error) {
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[52]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[53]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_2p2i1uo4o3().s[54]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2p2i1uo4o3().s[55]++;
    return {
      success: false,
      message: formatError(error)
    };
  }
}
async function getPointsBalance(userId) {
  /* istanbul ignore next */
  cov_2p2i1uo4o3().f[9]++;
  cov_2p2i1uo4o3().s[56]++;
  await (0, _db.connectToDatabase)();
  const user =
  /* istanbul ignore next */
  (cov_2p2i1uo4o3().s[57]++, await _usermodel.default.findById(userId));
  /* istanbul ignore next */
  cov_2p2i1uo4o3().s[58]++;
  if (!user) {
    /* istanbul ignore next */
    cov_2p2i1uo4o3().b[5][0]++;
    cov_2p2i1uo4o3().s[59]++;
    throw new Error('User not found');
  } else
  /* istanbul ignore next */
  {
    cov_2p2i1uo4o3().b[5][1]++;
  }
  cov_2p2i1uo4o3().s[60]++;
  return user.pointsBalance;
}
async function getPointsHistory(userId) {
  /* istanbul ignore next */
  cov_2p2i1uo4o3().f[10]++;
  cov_2p2i1uo4o3().s[61]++;
  await (0, _db.connectToDatabase)();
  const transactions =
  /* istanbul ignore next */
  (cov_2p2i1uo4o3().s[62]++, await _pointstransactionmodel.default.find({
    userId
  }).sort({
    createdAt: -1
  }));
  /* istanbul ignore next */
  cov_2p2i1uo4o3().s[63]++;
  return JSON.parse(JSON.stringify(transactions));
}
function getPointsValue(currency, exchangeRates) {
  /* istanbul ignore next */
  cov_2p2i1uo4o3().f[11]++;
  const baseValue =
  /* istanbul ignore next */
  (cov_2p2i1uo4o3().s[64]++, 0.05) // 1 point = $0.05 USD
  ;
  const rate =
  /* istanbul ignore next */
  (cov_2p2i1uo4o3().s[65]++,
  /* istanbul ignore next */
  (cov_2p2i1uo4o3().b[6][0]++, exchangeRates[currency]) ||
  /* istanbul ignore next */
  (cov_2p2i1uo4o3().b[6][1]++, 1)) // Default to USD
  ;
  /* istanbul ignore next */
  cov_2p2i1uo4o3().s[66]++;
  return baseValue / rate // Adjust for currency
  ;
}
function formatError(error) {
  /* istanbul ignore next */
  cov_2p2i1uo4o3().f[12]++;
  cov_2p2i1uo4o3().s[67]++;
  return error instanceof Error ?
  /* istanbul ignore next */
  (cov_2p2i1uo4o3().b[7][0]++, error.message) :
  /* istanbul ignore next */
  (cov_2p2i1uo4o3().b[7][1]++, 'An unexpected error occurred');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,