{"version":3,"names":["cov_2p2i1uo4o3","actualCoverage","s","awardPoints","f","getPointsBalance","getPointsHistory","redeemPoints","userId","amount","description","orderId","_db","connectToDatabase","session","_usermodel","default","startSession","startTransaction","user","findById","b","Error","pointsBalance","save","_pointstransactionmodel","create","type","commitTransaction","success","message","error","abortTransaction","endSession","formatError","currency","settings","_settingactions","getSetting","exchangeRates","availableCurrencies","reduce","acc","curr","rate","pointsValue","getPointsValue","discount","_utils","round2","transactions","find","sort","createdAt","JSON","parse","stringify","baseValue"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/points.actions.ts"],"sourcesContent":["'use server'\n\nimport { connectToDatabase } from '../db'\nimport User from '../db/models/user.model'\nimport PointsTransaction, { IPointsTransaction } from '../db/models/points-transaction.model'\nimport { getSetting } from './setting.actions'\nimport { round2 } from '../utils'\n\nexport async function awardPoints(userId: string, amount: number, description: string, orderId?: string) {\n  try {\n    await connectToDatabase()\n    const session = await User.startSession()\n    session.startTransaction()\n    try {\n      const user = await User.findById(userId).session(session)\n      if (!user) throw new Error('User not found')\n      user.pointsBalance += amount\n      await user.save({ session })\n      await PointsTransaction.create(\n        [{ userId, amount, type: 'earn', description, orderId }],\n        { session }\n      )\n      await session.commitTransaction()\n      return { success: true, message: 'Points awarded successfully' }\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\n\nexport async function redeemPoints(userId: string, amount: number, currency: string, description: string) {\n  try {\n    await connectToDatabase()\n    const session = await User.startSession()\n    session.startTransaction()\n    try {\n      const user = await User.findById(userId).session(session)\n      if (!user) throw new Error('User not found')\n      if (user.pointsBalance < amount) throw new Error('Insufficient points')\n      const settings = await getSetting()\n      const exchangeRates = settings.availableCurrencies.reduce(\n        (acc: { [key: string]: number }, curr: { currency: string; rate: number }) => {\n          acc[curr.currency] = curr.rate\n          return acc\n        },\n        {}\n      )\n      const pointsValue = getPointsValue(currency, exchangeRates)\n      const discount = round2(amount * pointsValue)\n      user.pointsBalance -= amount\n      await user.save({ session })\n      await PointsTransaction.create(\n        [{ userId, amount, type: 'redeem', description }],\n        { session }\n      )\n      await session.commitTransaction()\n      return discount\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\n\nexport async function getPointsBalance(userId: string): Promise<number> {\n  await connectToDatabase()\n  const user = await User.findById(userId)\n  if (!user) throw new Error('User not found')\n  return user.pointsBalance\n}\n\nexport async function getPointsHistory(userId: string): Promise<IPointsTransaction[]> {\n  await connectToDatabase()\n  const transactions = await PointsTransaction.find({ userId }).sort({ createdAt: -1 })\n  return JSON.parse(JSON.stringify(transactions))\n}\n\nfunction getPointsValue(currency: string, exchangeRates: { [key: string]: number }): number {\n  const baseValue = 0.05 // 1 point = $0.05 USD\n  const rate = exchangeRates[currency] || 1 // Default to USD\n  return baseValue / rate // Adjust for currency\n}\n\nfunction formatError(error: any): string {\n  return error instanceof Error ? error.message : 'An unexpected error occurred'\n}"],"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","ignoreList":[]}