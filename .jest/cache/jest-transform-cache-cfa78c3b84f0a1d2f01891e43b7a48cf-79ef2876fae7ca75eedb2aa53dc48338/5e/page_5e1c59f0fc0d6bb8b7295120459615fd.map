{"version":3,"names":["default","cov_18a7emweaw","f","s","UserEditPage","metadata","title","props","params","id","user","_useractions","getUserById","b","_navigation","notFound","pointsBalance","_pointsactions","getPointsBalance","pointsHistory","getPointsHistory","handleAdjustPoints","formData","action","get","amount","Number","description","awardPoints","redeemPoints","success","message","error","formatError","_jsxruntime","jsxs","className","jsx","_link","href","_id","_usereditform","_card","Card","CardHeader","CardTitle","CardContent","_label","Label","htmlFor","name","value","_input","Input","type","min","required","_button","Button","length","map","tx","_utils","formatDateTime","createdAt","dateTime"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/admin/users/[id]/page.tsx"],"sourcesContent":["import { notFound } from 'next/navigation'\nimport { getUserById } from '@/lib/actions/user.actions'\nimport { getPointsBalance, getPointsHistory, awardPoints, redeemPoints } from '@/lib/actions/points.actions'\nimport UserEditForm from './user-edit-form'\nimport Link from 'next/link'\nimport { Metadata } from 'next'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label' // Added import for Label\nimport { formatDateTime } from '@/lib/utils'\n\nexport const metadata: Metadata = {\n  title: 'Edit User',\n}\n\nexport default async function UserEditPage(props: {\n  params: Promise<{\n    id: string\n  }>\n}) {\n  const params = await props.params\n  const { id } = params\n  const user = await getUserById(id)\n  if (!user) notFound()\n  const pointsBalance = await getPointsBalance(id)\n  const pointsHistory = await getPointsHistory(id)\n\n  const handleAdjustPoints = async (formData: FormData) => {\n    'use server'\n    const action = formData.get('action') as 'award' | 'deduct'\n    const amount = Number(formData.get('amount'))\n    const description = formData.get('description') as string\n    try {\n      if (action === 'award') {\n        await awardPoints(id, amount, description)\n      } else {\n        await redeemPoints(id, amount, 'USD', description)\n      }\n      return { success: true, message: 'Points adjusted successfully' }\n    } catch (error) {\n      return { success: false, message: formatError(error) }\n    }\n  }\n\n  return (\n    <main className=\"max-w-6xl mx-auto p-4\">\n      <div className=\"flex mb-4\">\n        <Link href=\"/admin/users\">Users</Link>\n        <span className=\"mx-1\">â€º</span>\n        <Link href={`/admin/users/${user._id}`}>{user._id}</Link>\n      </div>\n      <div className=\"my-8\">\n        <UserEditForm user={user} />\n      </div>\n      <Card>\n        <CardHeader>\n          <CardTitle>Points Management</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p>Current Points Balance: {pointsBalance}</p>\n          <form action={handleAdjustPoints} className=\"space-y-4 mt-4\">\n            <div>\n              <Label htmlFor=\"action\">Action</Label>\n              <select id=\"action\" name=\"action\" className=\"border p-2 w-full\">\n                <option value=\"award\">Award Points</option>\n                <option value=\"deduct\">Deduct Points</option>\n              </select>\n            </div>\n            <div>\n              <Label htmlFor=\"amount\">Amount</Label>\n              <Input id=\"amount\" name=\"amount\" type=\"number\" min=\"1\" required />\n            </div>\n            <div>\n              <Label htmlFor=\"description\">Description</Label>\n              <Input id=\"description\" name=\"description\" required />\n            </div>\n            <Button type=\"submit\">Adjust Points</Button>\n          </form>\n          <h3 className=\"text-lg font-bold mt-6\">Points History</h3>\n          {pointsHistory.length > 0 ? (\n            <ul className=\"space-y-2 mt-2\">\n              {pointsHistory.map((tx) => (\n                <li key={tx._id} className=\"border-b py-2\">\n                  <p>{tx.description}</p>\n                  <p>\n                    {tx.type === 'earn' ? '+' : '-'}{tx.amount} points on{' '}\n                    {formatDateTime(tx.createdAt).dateTime}\n                  </p>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p>No points transactions yet.</p>\n          )}\n        </CardContent>\n      </Card>\n    </main>\n  )\n}"],"mappingsgBAA,OAmFC,WAAAA,CAAA;IAAA;IAAAC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAnF6BC,YAAA;;EAJjBC,QAAQ,WAAAA,CAAA;IAAA;IAAAJ,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAARE,QAAA;;;;;;;;kCAZY;;;kCACG;;;kCACkD;;;yEACrD;;;yEACR;;;mCAEwC;;;mCAClC;;;mCACD;;;mCACA,qCAAwB;;;;mCACf;;;;;;;;;;;;;;;AAExB,MAAMA,QAAA;AAAA;AAAA,CAAAJ,cAAA,GAAAE,CAAA,QAAqB;EAChCG,KAAA,EAAO;AACT;AAEe,eAAeF,aAAaG,KAI1C;EAAA;EAAAN,cAAA,GAAAC,CAAA;EACC,MAAMM,MAAA;EAAA;EAAA,CAAAP,cAAA,GAAAE,CAAA,QAAS,MAAMI,KAAA,CAAMC,MAAM;EACjC,MAAM;IAAEC;EAAE,CAAE;EAAA;EAAA,CAAAR,cAAA,GAAAE,CAAA,QAAGK,MAAA;EACf,MAAME,IAAA;EAAA;EAAA,CAAAT,cAAA,GAAAE,CAAA,QAAO,MAAM,IAAAQ,YAAA,CAAAC,WAAW,EAACH,EAAA;EAAA;EAAAR,cAAA,GAAAE,CAAA;EAC/B,IAAI,CAACO,IAAA,EAAM;IAAA;IAAAT,cAAA,GAAAY,CAAA;IAAAZ,cAAA,GAAAE,CAAA;IAAA,IAAAW,WAAA,CAAAC,QAAQ;EAAA;EAAA;EAAA;IAAAd,cAAA,GAAAY,CAAA;EAAA;EACnB,MAAMG,aAAA;EAAA;EAAA,CAAAf,cAAA,GAAAE,CAAA,QAAgB,MAAM,IAAAc,cAAA,CAAAC,gBAAgB,EAACT,EAAA;EAC7C,MAAMU,aAAA;EAAA;EAAA,CAAAlB,cAAA,GAAAE,CAAA,QAAgB,MAAM,IAAAc,cAAA,CAAAG,gBAAgB,EAACX,EAAA;EAAA;EAAAR,cAAA,GAAAE,CAAA;EAE7C,MAAMkB,kBAAA,GAAqB,MAAOC,QAAA;IAChC;;IAAA;IAAArB,cAAA,GAAAC,CAAA;IACA,MAAMqB,MAAA;IAAA;IAAA,CAAAtB,cAAA,GAAAE,CAAA,QAASmB,QAAA,CAASE,GAAG,CAAC;IAC5B,MAAMC,MAAA;IAAA;IAAA,CAAAxB,cAAA,GAAAE,CAAA,QAASuB,MAAA,CAAOJ,QAAA,CAASE,GAAG,CAAC;IACnC,MAAMG,WAAA;IAAA;IAAA,CAAA1B,cAAA,GAAAE,CAAA,QAAcmB,QAAA,CAASE,GAAG,CAAC;IAAA;IAAAvB,cAAA,GAAAE,CAAA;IACjC,IAAI;MAAA;MAAAF,cAAA,GAAAE,CAAA;MACF,IAAIoB,MAAA,KAAW,SAAS;QAAA;QAAAtB,cAAA,GAAAY,CAAA;QAAAZ,cAAA,GAAAE,CAAA;QACtB,MAAM,IAAAc,cAAA,CAAAW,WAAW,EAACnB,EAAA,EAAIgB,MAAA,EAAQE,WAAA;MAChC,OAAO;QAAA;QAAA1B,cAAA,GAAAY,CAAA;QAAAZ,cAAA,GAAAE,CAAA;QACL,MAAM,IAAAc,cAAA,CAAAY,YAAY,EAACpB,EAAA,EAAIgB,MAAA,EAAQ,OAAOE,WAAA;MACxC;MAAA;MAAA1B,cAAA,GAAAE,CAAA;MACA,OAAO;QAAE2B,OAAA,EAAS;QAAMC,OAAA,EAAS;MAA+B;IAClE,EAAE,OAAOC,KAAA,EAAO;MAAA;MAAA/B,cAAA,GAAAE,CAAA;MACd,OAAO;QAAE2B,OAAA,EAAS;QAAOC,OAAA,EAASE,WAAA,CAAYD,KAAA;MAAO;IACvD;EACF;EAAA;EAAA/B,cAAA,GAAAE,CAAA;EAEA,oBACE,IAAA+B,WAAA,CAAAC,IAAA,EAAC;IAAKC,SAAA,EAAU;4BACd,IAAAF,WAAA,CAAAC,IAAA,EAAC;MAAIC,SAAA,EAAU;8BACb,IAAAF,WAAA,CAAAG,GAAA,EAACC,KAAA,CAAAtC,OAAI;QAACuC,IAAA,EAAK;kBAAe;uBAC1B,IAAAL,WAAA,CAAAG,GAAA,EAAC;QAAKD,SAAA,EAAU;kBAAO;uBACvB,IAAAF,WAAA,CAAAG,GAAA,EAACC,KAAA,CAAAtC,OAAI;QAACuC,IAAA,EAAM,gBAAgB7B,IAAA,CAAK8B,GAAG,EAAE;kBAAG9B,IAAA,CAAK8B;;qBAEhD,IAAAN,WAAA,CAAAG,GAAA,EAAC;MAAID,SAAA,EAAU;gBACb,iBAAAF,WAAA,CAAAG,GAAA,EAACI,aAAA,CAAAzC,OAAY;QAACU,IAAA,EAAMA;;qBAEtB,IAAAwB,WAAA,CAAAC,IAAA,EAACO,KAAA,CAAAC,IAAI;8BACH,IAAAT,WAAA,CAAAG,GAAA,EAACK,KAAA,CAAAE,UAAU;kBACT,iBAAAV,WAAA,CAAAG,GAAA,EAACK,KAAA,CAAAG,SAAS;oBAAC;;uBAEb,IAAAX,WAAA,CAAAC,IAAA,EAACO,KAAA,CAAAI,WAAW;gCACV,IAAAZ,WAAA,CAAAC,IAAA,EAAC;qBAAE,4BAAyBnB,aAAA;yBAC5B,IAAAkB,WAAA,CAAAC,IAAA,EAAC;UAAKZ,MAAA,EAAQF,kBAAA;UAAoBe,SAAA,EAAU;kCAC1C,IAAAF,WAAA,CAAAC,IAAA,EAAC;oCACC,IAAAD,WAAA,CAAAG,GAAA,EAACU,MAAA,CAAAC,KAAK;cAACC,OAAA,EAAQ;wBAAS;6BACxB,IAAAf,WAAA,CAAAC,IAAA,EAAC;cAAO1B,EAAA,EAAG;cAASyC,IAAA,EAAK;cAASd,SAAA,EAAU;sCAC1C,IAAAF,WAAA,CAAAG,GAAA,EAAC;gBAAOc,KAAA,EAAM;0BAAQ;+BACtB,IAAAjB,WAAA,CAAAG,GAAA,EAAC;gBAAOc,KAAA,EAAM;0BAAS;;;2BAG3B,IAAAjB,WAAA,CAAAC,IAAA,EAAC;oCACC,IAAAD,WAAA,CAAAG,GAAA,EAACU,MAAA,CAAAC,KAAK;cAACC,OAAA,EAAQ;wBAAS;6BACxB,IAAAf,WAAA,CAAAG,GAAA,EAACe,MAAA,CAAAC,KAAK;cAAC5C,EAAA,EAAG;cAASyC,IAAA,EAAK;cAASI,IAAA,EAAK;cAASC,GAAA,EAAI;cAAIC,QAAQ;;2BAEjE,IAAAtB,WAAA,CAAAC,IAAA,EAAC;oCACC,IAAAD,WAAA,CAAAG,GAAA,EAACU,MAAA,CAAAC,KAAK;cAACC,OAAA,EAAQ;wBAAc;6BAC7B,IAAAf,WAAA,CAAAG,GAAA,EAACe,MAAA,CAAAC,KAAK;cAAC5C,EAAA,EAAG;cAAcyC,IAAA,EAAK;cAAcM,QAAQ;;2BAErD,IAAAtB,WAAA,CAAAG,GAAA,EAACoB,OAAA,CAAAC,MAAM;YAACJ,IAAA,EAAK;sBAAS;;yBAExB,IAAApB,WAAA,CAAAG,GAAA,EAAC;UAAGD,SAAA,EAAU;oBAAyB;YACtCjB,aAAA,CAAcwC,MAAM,GAAG;QAAA;QAAA,cAAA1D,cAAA,GAAAY,CAAA,UACtB,IAAAqB,WAAA,CAAAG,GAAA,EAAC;UAAGD,SAAA,EAAU;oBACXjB,aAAA,CAAcyC,GAAG,CAAEC,EAAA,IAClB;YAAA;YAAA5D,cAAA,GAAAC,CAAA;YAAAD,cAAA,GAAAE,CAAA;YAAA,OADkB,aAClB,IAAA+B,WAAA,CAAAC,IAAA,EAAC;cAAgBC,SAAA,EAAU;sCACzB,IAAAF,WAAA,CAAAG,GAAA,EAAC;0BAAGwB,EAAA,CAAGlC;+BACP,IAAAO,WAAA,CAAAC,IAAA,EAAC;2BACE0B,EAAA,CAAGP,IAAI,KAAK;gBAAA;gBAAA,CAAArD,cAAA,GAAAY,CAAA,UAAS;gBAAA;gBAAA,CAAAZ,cAAA,GAAAY,CAAA,UAAM,MAAKgD,EAAA,CAAGpC,MAAM,EAAC,cAAW,KACrD,IAAAqC,MAAA,CAAAC,cAAc,EAACF,EAAA,CAAGG,SAAS,EAAEC,QAAQ;;eAJjCJ,EAAA,CAAGrB,GAAG;UAAA;;;kDAUnB,IAAAN,WAAA,CAAAG,GAAA,EAAC;oBAAE;;;;;AAMf","ignoreList":[]}