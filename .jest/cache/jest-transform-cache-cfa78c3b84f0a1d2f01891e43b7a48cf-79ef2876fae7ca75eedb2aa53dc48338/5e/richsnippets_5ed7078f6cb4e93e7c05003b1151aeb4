51b1d85efd8fdf4ea3b9079716f9e611
"use strict";

/* istanbul ignore next */
function cov_21ippq5t5k() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/seo/rich-snippets.ts";
  var hash = "ba64705e73308d9de0865b3b86017cca272665a1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/seo/rich-snippets.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "6": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 19,
          column: 61
        }
      },
      "7": {
        start: {
          line: 21,
          column: 49
        },
        end: {
          line: 21,
          column: 88
        }
      },
      "8": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 57
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 45,
          column: 6
        }
      },
      "10": {
        start: {
          line: 48,
          column: 36
        },
        end: {
          line: 48,
          column: 75
        }
      },
      "11": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 57
        }
      },
      "12": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 63,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 32
          },
          end: {
            line: 12,
            column: 33
          }
        },
        loc: {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 15,
            column: 30
          }
        },
        loc: {
          start: {
            line: 15,
            column: 40
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "generateOrganizationSchema",
        decl: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 41
          }
        },
        loc: {
          start: {
            line: 20,
            column: 44
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 20
      },
      "4": {
        name: "generateSearchBoxSchema",
        decl: {
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 38
          }
        },
        loc: {
          start: {
            line: 47,
            column: 41
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 47
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 22,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 22,
            column: 23
          }
        }, {
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 22,
            column: 57
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 49,
            column: 20
          },
          end: {
            line: 49,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 20
          },
          end: {
            line: 49,
            column: 23
          }
        }, {
          start: {
            line: 49,
            column: 27
          },
          end: {
            line: 49,
            column: 57
          }
        }],
        line: 49
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/seo/rich-snippets.ts"],
      sourcesContent: ["import { getSetting } from '../actions/setting.actions'\n\nexport async function generateOrganizationSchema() {\n  const {\n    site: { url, name, description },\n  } = await getSetting()\n  const baseUrl = url || 'https://hager-zon.vercel.app'\n\n  return {\n    '@context': 'https://schema.org',\n    '@type': 'Organization',\n    name: name,\n    description: description,\n    url: baseUrl,\n    logo: `${baseUrl}/icons/icon-512x512.png`,\n    sameAs: [\n      'https://twitter.com/ibrahim_lasfar',\n      'https://github.com/Mark-Lasfar',\n      // Add other social media profiles\n    ],\n    contactPoint: {\n      '@type': 'ContactPoint',\n      telephone: '+20121244617',\n      contactType: 'customer service',\n      email: 'support@hager-zon.vercel.app',\n      availableLanguage: ['English', 'French', 'Arabic'],\n    },\n  }\n}\n\nexport async function generateSearchBoxSchema() {\n  const {\n    site: { url, name },\n  } = await getSetting()\n  const baseUrl = url || 'https://hager-zon.vercel.app'\n\n  return {\n    '@context': 'https://schema.org',\n    '@type': 'WebSite',\n    name: name,\n    url: baseUrl,\n    potentialAction: {\n      '@type': 'SearchAction',\n      target: {\n        '@type': 'EntryPoint',\n        urlTemplate: `${baseUrl}/search?q={search_term_string}`,\n      },\n      'query-input': 'required name=search_term_string',\n    },\n  }\n}\n"],
      names: ["generateOrganizationSchema", "generateSearchBoxSchema", "site", "url", "name", "description", "getSetting", "baseUrl", "logo", "sameAs", "contactPoint", "telephone", "contactType", "email", "availableLanguage", "potentialAction", "target", "urlTemplate"],
      mappings: ";;;;;;;;;;;IAEsBA,0BAA0B;eAA1BA;;IA4BAC,uBAAuB;eAAvBA;;;gCA9BK;AAEpB,eAAeD;IACpB,MAAM,EACJE,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAEC,WAAW,EAAE,EACjC,GAAG,MAAMC,IAAAA,0BAAU;IACpB,MAAMC,UAAUJ,OAAO;IAEvB,OAAO;QACL,YAAY;QACZ,SAAS;QACTC,MAAMA;QACNC,aAAaA;QACbF,KAAKI;QACLC,MAAM,GAAGD,QAAQ,uBAAuB,CAAC;QACzCE,QAAQ;YACN;YACA;SAED;QACDC,cAAc;YACZ,SAAS;YACTC,WAAW;YACXC,aAAa;YACbC,OAAO;YACPC,mBAAmB;gBAAC;gBAAW;gBAAU;aAAS;QACpD;IACF;AACF;AAEO,eAAeb;IACpB,MAAM,EACJC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE,EACpB,GAAG,MAAME,IAAAA,0BAAU;IACpB,MAAMC,UAAUJ,OAAO;IAEvB,OAAO;QACL,YAAY;QACZ,SAAS;QACTC,MAAMA;QACND,KAAKI;QACLQ,iBAAiB;YACf,SAAS;YACTC,QAAQ;gBACN,SAAS;gBACTC,aAAa,GAAGV,QAAQ,8BAA8B,CAAC;YACzD;YACA,eAAe;QACjB;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ba64705e73308d9de0865b3b86017cca272665a1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_21ippq5t5k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21ippq5t5k();
cov_21ippq5t5k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_21ippq5t5k().f[0]++;
  cov_21ippq5t5k().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_21ippq5t5k().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_21ippq5t5k().s[3]++;
_export(exports, {
  generateOrganizationSchema: function () {
    /* istanbul ignore next */
    cov_21ippq5t5k().f[1]++;
    cov_21ippq5t5k().s[4]++;
    return generateOrganizationSchema;
  },
  generateSearchBoxSchema: function () {
    /* istanbul ignore next */
    cov_21ippq5t5k().f[2]++;
    cov_21ippq5t5k().s[5]++;
    return generateSearchBoxSchema;
  }
});
const _settingactions =
/* istanbul ignore next */
(cov_21ippq5t5k().s[6]++, require("../actions/setting.actions"));
async function generateOrganizationSchema() {
  /* istanbul ignore next */
  cov_21ippq5t5k().f[3]++;
  const {
    site: {
      url,
      name,
      description
    }
  } =
  /* istanbul ignore next */
  (cov_21ippq5t5k().s[7]++, await (0, _settingactions.getSetting)());
  const baseUrl =
  /* istanbul ignore next */
  (cov_21ippq5t5k().s[8]++,
  /* istanbul ignore next */
  (cov_21ippq5t5k().b[0][0]++, url) ||
  /* istanbul ignore next */
  (cov_21ippq5t5k().b[0][1]++, 'https://hager-zon.vercel.app'));
  /* istanbul ignore next */
  cov_21ippq5t5k().s[9]++;
  return {
    '@context': 'https://schema.org',
    '@type': 'Organization',
    name: name,
    description: description,
    url: baseUrl,
    logo: `${baseUrl}/icons/icon-512x512.png`,
    sameAs: ['https://twitter.com/ibrahim_lasfar', 'https://github.com/Mark-Lasfar'],
    contactPoint: {
      '@type': 'ContactPoint',
      telephone: '+20121244617',
      contactType: 'customer service',
      email: 'support@hager-zon.vercel.app',
      availableLanguage: ['English', 'French', 'Arabic']
    }
  };
}
async function generateSearchBoxSchema() {
  /* istanbul ignore next */
  cov_21ippq5t5k().f[4]++;
  const {
    site: {
      url,
      name
    }
  } =
  /* istanbul ignore next */
  (cov_21ippq5t5k().s[10]++, await (0, _settingactions.getSetting)());
  const baseUrl =
  /* istanbul ignore next */
  (cov_21ippq5t5k().s[11]++,
  /* istanbul ignore next */
  (cov_21ippq5t5k().b[1][0]++, url) ||
  /* istanbul ignore next */
  (cov_21ippq5t5k().b[1][1]++, 'https://hager-zon.vercel.app'));
  /* istanbul ignore next */
  cov_21ippq5t5k().s[12]++;
  return {
    '@context': 'https://schema.org',
    '@type': 'WebSite',
    name: name,
    url: baseUrl,
    potentialAction: {
      '@type': 'SearchAction',
      target: {
        '@type': 'EntryPoint',
        urlTemplate: `${baseUrl}/search?q={search_term_string}`
      },
      'query-input': 'required name=search_term_string'
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZW5lcmF0ZU9yZ2FuaXphdGlvblNjaGVtYSIsImNvdl8yMWlwcHE1dDVrIiwiZiIsInMiLCJnZW5lcmF0ZVNlYXJjaEJveFNjaGVtYSIsInNpdGUiLCJ1cmwiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJfc2V0dGluZ2FjdGlvbnMiLCJnZXRTZXR0aW5nIiwiYmFzZVVybCIsImIiLCJsb2dvIiwic2FtZUFzIiwiY29udGFjdFBvaW50IiwidGVsZXBob25lIiwiY29udGFjdFR5cGUiLCJlbWFpbCIsImF2YWlsYWJsZUxhbmd1YWdlIiwicG90ZW50aWFsQWN0aW9uIiwidGFyZ2V0IiwidXJsVGVtcGxhdGUiXSwic291cmNlcyI6WyIvaG9tZS9oYWdlci9uZXcvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyICgzKS9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIvbGliL3Nlby9yaWNoLXNuaXBwZXRzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFNldHRpbmcgfSBmcm9tICcuLi9hY3Rpb25zL3NldHRpbmcuYWN0aW9ucydcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlT3JnYW5pemF0aW9uU2NoZW1hKCkge1xuICBjb25zdCB7XG4gICAgc2l0ZTogeyB1cmwsIG5hbWUsIGRlc2NyaXB0aW9uIH0sXG4gIH0gPSBhd2FpdCBnZXRTZXR0aW5nKClcbiAgY29uc3QgYmFzZVVybCA9IHVybCB8fCAnaHR0cHM6Ly9oYWdlci16b24udmVyY2VsLmFwcCdcblxuICByZXR1cm4ge1xuICAgICdAY29udGV4dCc6ICdodHRwczovL3NjaGVtYS5vcmcnLFxuICAgICdAdHlwZSc6ICdPcmdhbml6YXRpb24nLFxuICAgIG5hbWU6IG5hbWUsXG4gICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLFxuICAgIHVybDogYmFzZVVybCxcbiAgICBsb2dvOiBgJHtiYXNlVXJsfS9pY29ucy9pY29uLTUxMng1MTIucG5nYCxcbiAgICBzYW1lQXM6IFtcbiAgICAgICdodHRwczovL3R3aXR0ZXIuY29tL2licmFoaW1fbGFzZmFyJyxcbiAgICAgICdodHRwczovL2dpdGh1Yi5jb20vTWFyay1MYXNmYXInLFxuICAgICAgLy8gQWRkIG90aGVyIHNvY2lhbCBtZWRpYSBwcm9maWxlc1xuICAgIF0sXG4gICAgY29udGFjdFBvaW50OiB7XG4gICAgICAnQHR5cGUnOiAnQ29udGFjdFBvaW50JyxcbiAgICAgIHRlbGVwaG9uZTogJysyMDEyMTI0NDYxNycsXG4gICAgICBjb250YWN0VHlwZTogJ2N1c3RvbWVyIHNlcnZpY2UnLFxuICAgICAgZW1haWw6ICdzdXBwb3J0QGhhZ2VyLXpvbi52ZXJjZWwuYXBwJyxcbiAgICAgIGF2YWlsYWJsZUxhbmd1YWdlOiBbJ0VuZ2xpc2gnLCAnRnJlbmNoJywgJ0FyYWJpYyddLFxuICAgIH0sXG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlU2VhcmNoQm94U2NoZW1hKCkge1xuICBjb25zdCB7XG4gICAgc2l0ZTogeyB1cmwsIG5hbWUgfSxcbiAgfSA9IGF3YWl0IGdldFNldHRpbmcoKVxuICBjb25zdCBiYXNlVXJsID0gdXJsIHx8ICdodHRwczovL2hhZ2VyLXpvbi52ZXJjZWwuYXBwJ1xuXG4gIHJldHVybiB7XG4gICAgJ0Bjb250ZXh0JzogJ2h0dHBzOi8vc2NoZW1hLm9yZycsXG4gICAgJ0B0eXBlJzogJ1dlYlNpdGUnLFxuICAgIG5hbWU6IG5hbWUsXG4gICAgdXJsOiBiYXNlVXJsLFxuICAgIHBvdGVudGlhbEFjdGlvbjoge1xuICAgICAgJ0B0eXBlJzogJ1NlYXJjaEFjdGlvbicsXG4gICAgICB0YXJnZXQ6IHtcbiAgICAgICAgJ0B0eXBlJzogJ0VudHJ5UG9pbnQnLFxuICAgICAgICB1cmxUZW1wbGF0ZTogYCR7YmFzZVVybH0vc2VhcmNoP3E9e3NlYXJjaF90ZXJtX3N0cmluZ31gLFxuICAgICAgfSxcbiAgICAgICdxdWVyeS1pbnB1dCc6ICdyZXF1aXJlZCBuYW1lPXNlYXJjaF90ZXJtX3N0cmlu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