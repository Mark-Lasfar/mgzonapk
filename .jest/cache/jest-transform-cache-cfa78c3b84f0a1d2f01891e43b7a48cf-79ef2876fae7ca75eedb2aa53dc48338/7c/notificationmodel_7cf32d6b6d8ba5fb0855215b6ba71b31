95b7ad0f0499543ebab33a2827c19bf2
"use strict";

/* istanbul ignore next */
function cov_2k573gw2g() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/models/notification.model.ts";
  var hash = "749c11092857896e1dd5397c08947b223c819b69";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/models/notification.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 32
        },
        end: {
          line: 11,
          column: 78
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 51
        }
      },
      "5": {
        start: {
          line: 13,
          column: 39
        },
        end: {
          line: 13,
          column: 51
        }
      },
      "6": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "7": {
        start: {
          line: 15,
          column: 27
        },
        end: {
          line: 15,
          column: 40
        }
      },
      "8": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 20
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 66
        }
      },
      "10": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "11": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 19
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 10
        }
      },
      "14": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 53
        }
      },
      "15": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 30
        }
      },
      "17": {
        start: {
          line: 33,
          column: 17
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 32
        },
        end: {
          line: 36,
          column: 88
        }
      },
      "19": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "20": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "21": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 95
        }
      },
      "22": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "23": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 57
        }
      },
      "24": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "25": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 25
        }
      },
      "26": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "27": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 31
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 18
        }
      },
      "29": {
        start: {
          line: 53,
          column: 27
        },
        end: {
          line: 144,
          column: 2
        }
      },
      "30": {
        start: {
          line: 146,
          column: 0
        },
        end: {
          line: 149,
          column: 3
        }
      },
      "31": {
        start: {
          line: 150,
          column: 0
        },
        end: {
          line: 153,
          column: 3
        }
      },
      "32": {
        start: {
          line: 154,
          column: 0
        },
        end: {
          line: 156,
          column: 3
        }
      },
      "33": {
        start: {
          line: 157,
          column: 0
        },
        end: {
          line: 161,
          column: 3
        }
      },
      "34": {
        start: {
          line: 163,
          column: 0
        },
        end: {
          line: 168,
          column: 2
        }
      },
      "35": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 164,
          column: 21
        }
      },
      "36": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 29
        }
      },
      "37": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 25
        }
      },
      "38": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 167,
          column: 23
        }
      },
      "39": {
        start: {
          line: 169,
          column: 0
        },
        end: {
          line: 172,
          column: 2
        }
      },
      "40": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 170,
          column: 25
        }
      },
      "41": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 23
        }
      },
      "42": {
        start: {
          line: 173,
          column: 0
        },
        end: {
          line: 177,
          column: 2
        }
      },
      "43": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 174,
          column: 27
        }
      },
      "44": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 31
        }
      },
      "45": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 176,
          column: 23
        }
      },
      "46": {
        start: {
          line: 179,
          column: 0
        },
        end: {
          line: 185,
          column: 2
        }
      },
      "47": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 184,
          column: 7
        }
      },
      "48": {
        start: {
          line: 186,
          column: 0
        },
        end: {
          line: 193,
          column: 2
        }
      },
      "49": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 192,
          column: 7
        }
      },
      "50": {
        start: {
          line: 195,
          column: 0
        },
        end: {
          line: 201,
          column: 3
        }
      },
      "51": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "52": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 73
        }
      },
      "53": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 200,
          column: 11
        }
      },
      "54": {
        start: {
          line: 202,
          column: 17
        },
        end: {
          line: 202,
          column: 117
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 33
          }
        },
        loc: {
          start: {
            line: 12,
            column: 47
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 16,
            column: 40
          }
        },
        loc: {
          start: {
            line: 16,
            column: 61
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 34
          }
        },
        loc: {
          start: {
            line: 20,
            column: 53
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 163,
            column: 40
          },
          end: {
            line: 163,
            column: 41
          }
        },
        loc: {
          start: {
            line: 163,
            column: 51
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 163
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 169,
            column: 40
          },
          end: {
            line: 169,
            column: 41
          }
        },
        loc: {
          start: {
            line: 169,
            column: 51
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 169
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 173,
            column: 42
          },
          end: {
            line: 173,
            column: 43
          }
        },
        loc: {
          start: {
            line: 173,
            column: 53
          },
          end: {
            line: 177,
            column: 1
          }
        },
        line: 173
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 179,
            column: 40
          },
          end: {
            line: 179,
            column: 41
          }
        },
        loc: {
          start: {
            line: 179,
            column: 57
          },
          end: {
            line: 185,
            column: 1
          }
        },
        line: 179
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 186,
            column: 40
          },
          end: {
            line: 186,
            column: 41
          }
        },
        loc: {
          start: {
            line: 186,
            column: 57
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 186
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 195,
            column: 31
          },
          end: {
            line: 195,
            column: 32
          }
        },
        loc: {
          start: {
            line: 195,
            column: 46
          },
          end: {
            line: 201,
            column: 1
          }
        },
        line: 195
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 29
          },
          end: {
            line: 17,
            column: 45
          }
        }, {
          start: {
            line: 17,
            column: 48
          },
          end: {
            line: 17,
            column: 65
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 20
          }
        }, {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 21,
            column: 27
          }
        }, {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 21,
            column: 45
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "5": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 20
          }
        }, {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 47
          }
        }, {
          start: {
            line: 24,
            column: 51
          },
          end: {
            line: 24,
            column: 76
          }
        }],
        line: 24
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 13
          }
        }, {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 31
          }
        }],
        line: 30
      },
      "8": {
        loc: {
          start: {
            line: 36,
            column: 32
          },
          end: {
            line: 36,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 32
          },
          end: {
            line: 36,
            column: 53
          }
        }, {
          start: {
            line: 36,
            column: 57
          },
          end: {
            line: 36,
            column: 88
          }
        }],
        line: 36
      },
      "9": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "10": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 29
          }
        }, {
          start: {
            line: 38,
            column: 33
          },
          end: {
            line: 38,
            column: 79
          }
        }],
        line: 38
      },
      "11": {
        loc: {
          start: {
            line: 39,
            column: 23
          },
          end: {
            line: 39,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 47
          },
          end: {
            line: 39,
            column: 88
          }
        }, {
          start: {
            line: 39,
            column: 91
          },
          end: {
            line: 39,
            column: 95
          }
        }],
        line: 39
      },
      "12": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 19
          },
          end: {
            line: 44,
            column: 13
          }
        }],
        line: 40
      },
      "13": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 20
          }
        }, {
          start: {
            line: 40,
            column: 25
          },
          end: {
            line: 40,
            column: 33
          }
        }, {
          start: {
            line: 40,
            column: 37
          },
          end: {
            line: 40,
            column: 45
          }
        }],
        line: 40
      },
      "14": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "15": {
        loc: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 199,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "16": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 196,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 196,
            column: 18
          }
        }, {
          start: {
            line: 196,
            column: 22
          },
          end: {
            line: 196,
            column: 37
          }
        }],
        line: 196
      },
      "17": {
        loc: {
          start: {
            line: 202,
            column: 17
          },
          end: {
            line: 202,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 17
          },
          end: {
            line: 202,
            column: 54
          }
        }, {
          start: {
            line: 202,
            column: 58
          },
          end: {
            line: 202,
            column: 117
          }
        }],
        line: 202
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/models/notification.model.ts"],
      sourcesContent: ["import mongoose, { Document, Schema } from 'mongoose'\n\n/**\n * Interface for Notification document\n */\nexport interface INotification extends Document {\n  userId: string\n  type: NotificationType\n  title: string\n  message: string\n  data?: Record<string, any>\n  channels: NotificationChannel[]\n  status: NotificationStatus\n  priority: NotificationPriority\n  read: boolean\n  readAt?: Date\n  expiresAt?: Date\n  metadata?: {\n    browser?: string\n    device?: string\n    ip?: string\n  }\n  createdAt: Date\n  updatedAt: Date\n  markAsRead: () => Promise<INotification>\n  markAsSent: () => Promise<INotification>\n  markAsQueued: () => Promise<INotification>\n}\n\n/**\n * Allowed notification types\n */\nexport type NotificationType =\n  | 'welcome'\n  | 'order_created'\n  | 'order_shipped'\n  | 'order_delivered'\n  | 'order_cancelled'\n  | 'payment_success'\n  | 'payment_failed'\n  | 'alert'\n  | 'verification'\n  | 'reset_password'\n  | 'security_alert'\n  | 'promotion'\n  | 'cart_updated'\n  | 'product_reviewed'\n\n/**\n * Allowed notification channels\n */\nexport type NotificationChannel = 'email' | 'push' | 'sms' | 'in_app'\n\n/**\n * Notification status values\n */\nexport type NotificationStatus = 'pending' | 'sent' | 'failed' | 'queued' | 'read'\n\n/**\n * Notification priority levels\n */\nexport type NotificationPriority = 'low' | 'medium' | 'high' | 'urgent'\n\nconst notificationSchema = new Schema<INotification>(\n  {\n    userId: {\n      type: String,\n      required: true,\n      index: true,\n    },\n    type: {\n      type: String,\n      required: true,\n      enum: [\n        'welcome',\n        'order_created',\n        'order_shipped',\n        'order_delivered',\n        'order_cancelled',\n        'payment_success',\n        'payment_failed',\n        'alert',\n        'verification',\n        'reset_password',\n        'security_alert',\n        'promotion',\n        'cart_updated',\n        'product_reviewed',\n      ],\n    },\n    title: {\n      type: String,\n      required: true,\n      trim: true,\n    },\n    message: {\n      type: String,\n      required: true,\n    },\n    data: {\n      type: Schema.Types.Mixed,\n      default: {},\n    },\n    channels: [{\n      type: String,\n      enum: ['email', 'push', 'sms', 'in_app'],\n      default: ['email'],\n    }],\n    status: {\n      type: String,\n      enum: ['pending', 'sent', 'failed', 'queued', 'read'],\n      default: 'pending',\n    },\n    priority: {\n      type: String,\n      enum: ['low', 'medium', 'high', 'urgent'],\n      default: 'medium',\n    },\n    read: {\n      type: Boolean,\n      default: false,\n    },\n    readAt: {\n      type: Date,\n    },\n    expiresAt: {\n      type: Date,\n    },\n    metadata: {\n      browser: String,\n      device: String,\n      ip: String,\n    },\n  },\n  {\n    timestamps: true,\n  }\n)\n\n// Indexes\nnotificationSchema.index({ userId: 1, createdAt: -1 })\nnotificationSchema.index({ status: 1, priority: 1 })\nnotificationSchema.index({ type: 1 })\nnotificationSchema.index({ expiresAt: 1 }, { expireAfterSeconds: 0 })\n\n// Methods\nnotificationSchema.methods.markAsRead = function() {\n  this.read = true\n  this.readAt = new Date()\n  this.status = 'read'\n  return this.save()\n}\n\nnotificationSchema.methods.markAsSent = function() {\n  this.status = 'sent'\n  return this.save()\n}\n\nnotificationSchema.methods.markAsQueued = function() {\n  this.status = 'queued'\n  this.queuedAt = new Date()\n  return this.save()\n}\n\n// Statics\nnotificationSchema.statics.findByUser = function(userId: string) {\n  return this.find({ userId }).sort({ createdAt: -1 })\n}\n\nnotificationSchema.statics.findUnread = function(userId: string) {\n  return this.find({ userId, read: false }).sort({ createdAt: -1 })\n}\n\n// Middleware\nnotificationSchema.pre('save', function(next) {\n  if (this.isNew && !this.expiresAt) {\n    // Set default expiration to 90 days\n    this.expiresAt = new Date(Date.now() + 90 * 24 * 60 * 60 * 1000)\n  }\n  next()\n})\n\nexport default mongoose.models.Notification || \n  mongoose.model<INotification>('Notification', notificationSchema)"],
      names: ["notificationSchema", "Schema", "userId", "type", "String", "required", "index", "enum", "title", "trim", "message", "data", "Types", "Mixed", "default", "channels", "status", "priority", "read", "Boolean", "readAt", "Date", "expiresAt", "metadata", "browser", "device", "ip", "timestamps", "createdAt", "expireAfterSeconds", "methods", "markAsRead", "save", "markAsSent", "markAsQueued", "queuedAt", "statics", "findByUser", "find", "sort", "findUnread", "pre", "next", "isNew", "now", "mongoose", "models", "Notification", "model"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "749c11092857896e1dd5397c08947b223c819b69"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2k573gw2g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2k573gw2g();
cov_2k573gw2g().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2k573gw2g().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2k573gw2g().f[0]++;
    cov_2k573gw2g().s[2]++;
    return _default;
  }
});
const _mongoose =
/* istanbul ignore next */
(/*#__PURE__*/cov_2k573gw2g().s[3]++, _interop_require_wildcard(require("mongoose")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2k573gw2g().f[1]++;
  cov_2k573gw2g().s[4]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2k573gw2g().b[0][0]++;
    cov_2k573gw2g().s[5]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2k573gw2g().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2k573gw2g().s[6]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2k573gw2g().s[7]++, new WeakMap());
  /* istanbul ignore next */
  cov_2k573gw2g().s[8]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2k573gw2g().f[2]++;
    cov_2k573gw2g().s[9]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2k573gw2g().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2k573gw2g().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2k573gw2g().f[3]++;
  cov_2k573gw2g().s[10]++;
  if (
  /* istanbul ignore next */
  (cov_2k573gw2g().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2k573gw2g().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2k573gw2g().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2k573gw2g().b[2][0]++;
    cov_2k573gw2g().s[11]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2k573gw2g().b[2][1]++;
  }
  cov_2k573gw2g().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_2k573gw2g().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2k573gw2g().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2k573gw2g().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2k573gw2g().b[4][0]++;
    cov_2k573gw2g().s[13]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2k573gw2g().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2k573gw2g().s[14]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2k573gw2g().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_2k573gw2g().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2k573gw2g().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2k573gw2g().b[6][0]++;
    cov_2k573gw2g().s[16]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2k573gw2g().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2k573gw2g().s[17]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2k573gw2g().s[18]++,
  /* istanbul ignore next */
  (cov_2k573gw2g().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2k573gw2g().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2k573gw2g().s[19]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2k573gw2g().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_2k573gw2g().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2k573gw2g().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2k573gw2g().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2k573gw2g().s[21]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2k573gw2g().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2k573gw2g().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2k573gw2g().s[22]++;
      if (
      /* istanbul ignore next */
      (cov_2k573gw2g().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2k573gw2g().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2k573gw2g().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2k573gw2g().b[12][0]++;
        cov_2k573gw2g().s[23]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2k573gw2g().b[12][1]++;
        cov_2k573gw2g().s[24]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2k573gw2g().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2k573gw2g().s[25]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2k573gw2g().s[26]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2k573gw2g().b[14][0]++;
    cov_2k573gw2g().s[27]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2k573gw2g().b[14][1]++;
  }
  cov_2k573gw2g().s[28]++;
  return newObj;
}
const notificationSchema =
/* istanbul ignore next */
(cov_2k573gw2g().s[29]++, new _mongoose.Schema({
  userId: {
    type: String,
    required: true,
    index: true
  },
  type: {
    type: String,
    required: true,
    enum: ['welcome', 'order_created', 'order_shipped', 'order_delivered', 'order_cancelled', 'payment_success', 'payment_failed', 'alert', 'verification', 'reset_password', 'security_alert', 'promotion', 'cart_updated', 'product_reviewed']
  },
  title: {
    type: String,
    required: true,
    trim: true
  },
  message: {
    type: String,
    required: true
  },
  data: {
    type: _mongoose.Schema.Types.Mixed,
    default: {}
  },
  channels: [{
    type: String,
    enum: ['email', 'push', 'sms', 'in_app'],
    default: ['email']
  }],
  status: {
    type: String,
    enum: ['pending', 'sent', 'failed', 'queued', 'read'],
    default: 'pending'
  },
  priority: {
    type: String,
    enum: ['low', 'medium', 'high', 'urgent'],
    default: 'medium'
  },
  read: {
    type: Boolean,
    default: false
  },
  readAt: {
    type: Date
  },
  expiresAt: {
    type: Date
  },
  metadata: {
    browser: String,
    device: String,
    ip: String
  }
}, {
  timestamps: true
}));
// Indexes
/* istanbul ignore next */
cov_2k573gw2g().s[30]++;
notificationSchema.index({
  userId: 1,
  createdAt: -1
});
/* istanbul ignore next */
cov_2k573gw2g().s[31]++;
notificationSchema.index({
  status: 1,
  priority: 1
});
/* istanbul ignore next */
cov_2k573gw2g().s[32]++;
notificationSchema.index({
  type: 1
});
/* istanbul ignore next */
cov_2k573gw2g().s[33]++;
notificationSchema.index({
  expiresAt: 1
}, {
  expireAfterSeconds: 0
});
// Methods
/* istanbul ignore next */
cov_2k573gw2g().s[34]++;
notificationSchema.methods.markAsRead = function () {
  /* istanbul ignore next */
  cov_2k573gw2g().f[4]++;
  cov_2k573gw2g().s[35]++;
  this.read = true;
  /* istanbul ignore next */
  cov_2k573gw2g().s[36]++;
  this.readAt = new Date();
  /* istanbul ignore next */
  cov_2k573gw2g().s[37]++;
  this.status = 'read';
  /* istanbul ignore next */
  cov_2k573gw2g().s[38]++;
  return this.save();
};
/* istanbul ignore next */
cov_2k573gw2g().s[39]++;
notificationSchema.methods.markAsSent = function () {
  /* istanbul ignore next */
  cov_2k573gw2g().f[5]++;
  cov_2k573gw2g().s[40]++;
  this.status = 'sent';
  /* istanbul ignore next */
  cov_2k573gw2g().s[41]++;
  return this.save();
};
/* istanbul ignore next */
cov_2k573gw2g().s[42]++;
notificationSchema.methods.markAsQueued = function () {
  /* istanbul ignore next */
  cov_2k573gw2g().f[6]++;
  cov_2k573gw2g().s[43]++;
  this.status = 'queued';
  /* istanbul ignore next */
  cov_2k573gw2g().s[44]++;
  this.queuedAt = new Date();
  /* istanbul ignore next */
  cov_2k573gw2g().s[45]++;
  return this.save();
};
// Statics
/* istanbul ignore next */
cov_2k573gw2g().s[46]++;
notificationSchema.statics.findByUser = function (userId) {
  /* istanbul ignore next */
  cov_2k573gw2g().f[7]++;
  cov_2k573gw2g().s[47]++;
  return this.find({
    userId
  }).sort({
    createdAt: -1
  });
};
/* istanbul ignore next */
cov_2k573gw2g().s[48]++;
notificationSchema.statics.findUnread = function (userId) {
  /* istanbul ignore next */
  cov_2k573gw2g().f[8]++;
  cov_2k573gw2g().s[49]++;
  return this.find({
    userId,
    read: false
  }).sort({
    createdAt: -1
  });
};
// Middleware
/* istanbul ignore next */
cov_2k573gw2g().s[50]++;
notificationSchema.pre('save', function (next) {
  /* istanbul ignore next */
  cov_2k573gw2g().f[9]++;
  cov_2k573gw2g().s[51]++;
  if (
  /* istanbul ignore next */
  (cov_2k573gw2g().b[16][0]++, this.isNew) &&
  /* istanbul ignore next */
  (cov_2k573gw2g().b[16][1]++, !this.expiresAt)) {
    /* istanbul ignore next */
    cov_2k573gw2g().b[15][0]++;
    cov_2k573gw2g().s[52]++;
    // Set default expiration to 90 days
    this.expiresAt = new Date(Date.now() + 90 * 24 * 60 * 60 * 1000);
  } else
  /* istanbul ignore next */
  {
    cov_2k573gw2g().b[15][1]++;
  }
  cov_2k573gw2g().s[53]++;
  next();
});
const _default =
/* istanbul ignore next */
(cov_2k573gw2g().s[54]++,
/* istanbul ignore next */
(cov_2k573gw2g().b[17][0]++, _mongoose.default.models.Notification) ||
/* istanbul ignore next */
(cov_2k573gw2g().b[17][1]++, _mongoose.default.model('Notification', notificationSchema)));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,