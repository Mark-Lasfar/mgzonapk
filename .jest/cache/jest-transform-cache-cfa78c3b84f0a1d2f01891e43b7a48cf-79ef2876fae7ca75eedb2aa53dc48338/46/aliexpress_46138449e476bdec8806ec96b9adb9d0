805e8293e2da99cbf1f7cc5fd93cddca
"use strict";

/* istanbul ignore next */
function cov_1a65icqtpv() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/marketplace/aliexpress.ts";
  var hash = "4d0ba419daf0a8883682c041f06546875dbf5fe7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/marketplace/aliexpress.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 29
        },
        end: {
          line: 19,
          column: 71
        }
      },
      "7": {
        start: {
          line: 20,
          column: 13
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "8": {
        start: {
          line: 21,
          column: 13
        },
        end: {
          line: 21,
          column: 39
        }
      },
      "9": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 45
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "11": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 29
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "13": {
        start: {
          line: 34,
          column: 29
        },
        end: {
          line: 37,
          column: 14
        }
      },
      "14": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 58
        }
      },
      "15": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 82
        }
      },
      "16": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "17": {
        start: {
          line: 50,
          column: 25
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "18": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 70
        }
      },
      "19": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "20": {
        start: {
          line: 58,
          column: 29
        },
        end: {
          line: 60,
          column: 14
        }
      },
      "21": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 69
        }
      },
      "22": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 24
        }
      },
      "23": {
        start: {
          line: 67,
          column: 32
        },
        end: {
          line: 67,
          column: 34
        }
      },
      "24": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "25": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "26": {
        start: {
          line: 70,
          column: 36
        },
        end: {
          line: 70,
          column: 69
        }
      },
      "27": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 74,
          column: 19
        }
      },
      "28": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 82
        }
      },
      "29": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 31
        }
      },
      "30": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 105,
          column: 10
        }
      },
      "31": {
        start: {
          line: 90,
          column: 54
        },
        end: {
          line: 94,
          column: 17
        }
      },
      "32": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 118,
          column: 10
        }
      },
      "33": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 44
        }
      },
      "34": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 27
        }
      },
      "35": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "36": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 38
        }
      },
      "37": {
        start: {
          line: 124,
          column: 20
        },
        end: {
          line: 124,
          column: 54
        }
      },
      "38": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "39": {
        start: {
          line: 126,
          column: 29
        },
        end: {
          line: 132,
          column: 14
        }
      },
      "40": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 33
        }
      },
      "41": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "42": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 42
        }
      },
      "43": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 55
        }
      },
      "44": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 70
        }
      },
      "45": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 19
        }
      },
      "46": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 29
        }
      },
      "47": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 45
        }
      },
      "48": {
        start: {
          line: 153,
          column: 26
        },
        end: {
          line: 153,
          column: 36
        }
      },
      "49": {
        start: {
          line: 154,
          column: 23
        },
        end: {
          line: 154,
          column: 25
        }
      },
      "50": {
        start: {
          line: 155,
          column: 23
        },
        end: {
          line: 155,
          column: 25
        }
      },
      "51": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "52": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 169,
          column: 13
        }
      },
      "53": {
        start: {
          line: 159,
          column: 20
        },
        end: {
          line: 159,
          column: 75
        }
      },
      "54": {
        start: {
          line: 160,
          column: 20
        },
        end: {
          line: 160,
          column: 26
        }
      },
      "55": {
        start: {
          line: 162,
          column: 20
        },
        end: {
          line: 162,
          column: 66
        }
      },
      "56": {
        start: {
          line: 163,
          column: 20
        },
        end: {
          line: 163,
          column: 26
        }
      },
      "57": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 165,
          column: 65
        }
      },
      "58": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 166,
          column: 26
        }
      },
      "59": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 168,
          column: 61
        }
      },
      "60": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "61": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 74
        }
      },
      "62": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "63": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 98
        }
      },
      "64": {
        start: {
          line: 174,
          column: 69
        },
        end: {
          line: 174,
          column: 95
        }
      },
      "65": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 185,
          column: 14
        }
      },
      "66": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 68
        }
      },
      "67": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 203,
          column: 14
        }
      },
      "68": {
        start: {
          line: 207,
          column: 26
        },
        end: {
          line: 207,
          column: 36
        }
      },
      "69": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "70": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 211,
          column: 13
        }
      },
      "71": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 74
        }
      },
      "72": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 225,
          column: 13
        }
      },
      "73": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 77
        }
      },
      "74": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 216,
          column: 26
        }
      },
      "75": {
        start: {
          line: 218,
          column: 20
        },
        end: {
          line: 218,
          column: 69
        }
      },
      "76": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 219,
          column: 26
        }
      },
      "77": {
        start: {
          line: 221,
          column: 20
        },
        end: {
          line: 221,
          column: 77
        }
      },
      "78": {
        start: {
          line: 222,
          column: 20
        },
        end: {
          line: 222,
          column: 26
        }
      },
      "79": {
        start: {
          line: 224,
          column: 20
        },
        end: {
          line: 224,
          column: 84
        }
      },
      "80": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 235,
          column: 14
        }
      },
      "81": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 68
        }
      },
      "82": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 249,
          column: 14
        }
      },
      "83": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "84": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 64
        }
      },
      "85": {
        start: {
          line: 256,
          column: 24
        },
        end: {
          line: 256,
          column: 49
        }
      },
      "86": {
        start: {
          line: 257,
          column: 23
        },
        end: {
          line: 257,
          column: 72
        }
      },
      "87": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "88": {
        start: {
          line: 260,
          column: 16
        },
        end: {
          line: 260,
          column: 51
        }
      },
      "89": {
        start: {
          line: 262,
          column: 16
        },
        end: {
          line: 262,
          column: 43
        }
      },
      "90": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 264,
          column: 51
        }
      },
      "91": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 70
        }
      },
      "92": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "93": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 62
        }
      },
      "94": {
        start: {
          line: 273,
          column: 25
        },
        end: {
          line: 273,
          column: 62
        }
      },
      "95": {
        start: {
          line: 274,
          column: 24
        },
        end: {
          line: 274,
          column: 37
        }
      },
      "96": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 284,
          column: 9
        }
      },
      "97": {
        start: {
          line: 277,
          column: 16
        },
        end: {
          line: 277,
          column: 51
        }
      },
      "98": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 31
        }
      },
      "99": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 51
        }
      },
      "100": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 283,
          column: 73
        }
      },
      "101": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 287,
          column: 38
        }
      },
      "102": {
        start: {
          line: 287,
          column: 22
        },
        end: {
          line: 287,
          column: 38
        }
      },
      "103": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 297,
          column: 11
        }
      },
      "104": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 291,
          column: 13
        }
      },
      "105": {
        start: {
          line: 289,
          column: 76
        },
        end: {
          line: 289,
          column: 106
        }
      },
      "106": {
        start: {
          line: 290,
          column: 16
        },
        end: {
          line: 290,
          column: 29
        }
      },
      "107": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 295,
          column: 13
        }
      },
      "108": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 99
        }
      },
      "109": {
        start: {
          line: 293,
          column: 86
        },
        end: {
          line: 293,
          column: 99
        }
      },
      "110": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 294,
          column: 99
        }
      },
      "111": {
        start: {
          line: 294,
          column: 86
        },
        end: {
          line: 294,
          column: 99
        }
      },
      "112": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 24
        }
      },
      "113": {
        start: {
          line: 300,
          column: 23
        },
        end: {
          line: 300,
          column: 52
        }
      },
      "114": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 53
        }
      },
      "115": {
        start: {
          line: 304,
          column: 23
        },
        end: {
          line: 304,
          column: 52
        }
      },
      "116": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 64
        }
      },
      "117": {
        start: {
          line: 308,
          column: 26
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "118": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "119": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 41
        }
      },
      "120": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "121": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 85
        }
      },
      "122": {
        start: {
          line: 327,
          column: 45
        },
        end: {
          line: 327,
          column: 83
        }
      },
      "123": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 25
        }
      },
      "124": {
        start: {
          line: 332,
          column: 17
        },
        end: {
          line: 332,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 27
          },
          end: {
            line: 12,
            column: 28
          }
        },
        loc: {
          start: {
            line: 12,
            column: 38
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 14
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 23
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 32
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 21
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 43
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 31
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 49
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 30
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 56
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 40
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 66
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 43
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 81
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 90,
            column: 46
          },
          end: {
            line: 90,
            column: 47
          }
        },
        loc: {
          start: {
            line: 90,
            column: 54
          },
          end: {
            line: 94,
            column: 17
          }
        },
        line: 90
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 36
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 107
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 114,
            column: 43
          },
          end: {
            line: 114,
            column: 44
          }
        },
        loc: {
          start: {
            line: 114,
            column: 56
          },
          end: {
            line: 117,
            column: 13
          }
        },
        line: 114
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 37
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 120
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 27
          },
          end: {
            line: 145,
            column: 5
          }
        },
        line: 142
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        loc: {
          start: {
            line: 148,
            column: 23
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 148
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 34
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 152
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 174,
            column: 58
          },
          end: {
            line: 174,
            column: 59
          }
        },
        loc: {
          start: {
            line: 174,
            column: 69
          },
          end: {
            line: 174,
            column: 95
          }
        },
        line: 174
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        loc: {
          start: {
            line: 206,
            column: 44
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 206
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        loc: {
          start: {
            line: 252,
            column: 34
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 252
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 33
          },
          end: {
            line: 285,
            column: 5
          }
        },
        line: 269
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 286,
            column: 4
          },
          end: {
            line: 286,
            column: 5
          }
        },
        loc: {
          start: {
            line: 286,
            column: 38
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 286
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 288,
            column: 31
          },
          end: {
            line: 288,
            column: 32
          }
        },
        loc: {
          start: {
            line: 288,
            column: 42
          },
          end: {
            line: 297,
            column: 9
          }
        },
        line: 288
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 289,
            column: 71
          },
          end: {
            line: 289,
            column: 72
          }
        },
        loc: {
          start: {
            line: 289,
            column: 76
          },
          end: {
            line: 289,
            column: 106
          }
        },
        line: 289
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 5
          }
        },
        loc: {
          start: {
            line: 299,
            column: 41
          },
          end: {
            line: 302,
            column: 5
          }
        },
        line: 299
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        loc: {
          start: {
            line: 303,
            column: 41
          },
          end: {
            line: 306,
            column: 5
          }
        },
        line: 303
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        loc: {
          start: {
            line: 307,
            column: 29
          },
          end: {
            line: 330,
            column: 5
          }
        },
        line: 307
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 327,
            column: 36
          },
          end: {
            line: 327,
            column: 37
          }
        },
        loc: {
          start: {
            line: 327,
            column: 45
          },
          end: {
            line: 327,
            column: 83
          }
        },
        line: 327
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 35
          },
          end: {
            line: 24,
            column: 38
          }
        }, {
          start: {
            line: 24,
            column: 41
          },
          end: {
            line: 26,
            column: 5
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 14
          }
        }, {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 32
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 102,
            column: 22
          },
          end: {
            line: 102,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 22
          },
          end: {
            line: 102,
            column: 75
          }
        }, {
          start: {
            line: 102,
            column: 79
          },
          end: {
            line: 102,
            column: 81
          }
        }],
        line: 102
      },
      "3": {
        loc: {
          start: {
            line: 103,
            column: 24
          },
          end: {
            line: 103,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 24
          },
          end: {
            line: 103,
            column: 45
          }
        }, {
          start: {
            line: 103,
            column: 49
          },
          end: {
            line: 103,
            column: 51
          }
        }],
        line: 103
      },
      "4": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "5": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "6": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 169,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 158,
            column: 16
          },
          end: {
            line: 160,
            column: 26
          }
        }, {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 163,
            column: 26
          }
        }, {
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 166,
            column: 26
          }
        }, {
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 168,
            column: 61
          }
        }],
        line: 157
      },
      "7": {
        loc: {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "8": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "9": {
        loc: {
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 211,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 211,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "10": {
        loc: {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 225,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 214,
            column: 16
          },
          end: {
            line: 216,
            column: 26
          }
        }, {
          start: {
            line: 217,
            column: 16
          },
          end: {
            line: 219,
            column: 26
          }
        }, {
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 222,
            column: 26
          }
        }, {
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 224,
            column: 84
          }
        }],
        line: 213
      },
      "11": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "12": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 260,
            column: 51
          }
        }, {
          start: {
            line: 261,
            column: 12
          },
          end: {
            line: 262,
            column: 43
          }
        }, {
          start: {
            line: 263,
            column: 12
          },
          end: {
            line: 264,
            column: 51
          }
        }, {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 266,
            column: 70
          }
        }],
        line: 258
      },
      "13": {
        loc: {
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 272,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 272,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "14": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 284,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 277,
            column: 51
          }
        }, {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 279,
            column: 31
          }
        }, {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 281,
            column: 51
          }
        }, {
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 283,
            column: 73
          }
        }],
        line: 275
      },
      "15": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 287,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 287,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "16": {
        loc: {
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 291,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 12
          },
          end: {
            line: 291,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "17": {
        loc: {
          start: {
            line: 289,
            column: 16
          },
          end: {
            line: 289,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 289,
            column: 16
          },
          end: {
            line: 289,
            column: 42
          }
        }, {
          start: {
            line: 289,
            column: 46
          },
          end: {
            line: 289,
            column: 107
          }
        }],
        line: 289
      },
      "18": {
        loc: {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 295,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 295,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "19": {
        loc: {
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 293,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 16
          },
          end: {
            line: 293,
            column: 99
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "20": {
        loc: {
          start: {
            line: 293,
            column: 20
          },
          end: {
            line: 293,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 293,
            column: 20
          },
          end: {
            line: 293,
            column: 42
          }
        }, {
          start: {
            line: 293,
            column: 46
          },
          end: {
            line: 293,
            column: 84
          }
        }],
        line: 293
      },
      "21": {
        loc: {
          start: {
            line: 294,
            column: 16
          },
          end: {
            line: 294,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 16
          },
          end: {
            line: 294,
            column: 99
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "22": {
        loc: {
          start: {
            line: 294,
            column: 20
          },
          end: {
            line: 294,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 294,
            column: 20
          },
          end: {
            line: 294,
            column: 42
          }
        }, {
          start: {
            line: 294,
            column: 46
          },
          end: {
            line: 294,
            column: 84
          }
        }],
        line: 294
      },
      "23": {
        loc: {
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "24": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0],
      "11": [0, 0],
      "12": [0, 0, 0, 0],
      "13": [0, 0],
      "14": [0, 0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/marketplace/aliexpress.ts"],
      sourcesContent: ["import axios from 'axios';\nimport { createCSV, parseCSV } from '@/lib/utils/csv';\nimport { parseXML } from '@/lib/utils/xml';\n// import { logger } from '../logging';\n\nimport {\n  MarketplaceProduct,\n  ProductImage,\n  ProductVariant,\n  ProductOption,\n  ImportOptions,\n  ImportResult,\n  ImportError,\n  ImportWarning,\n  ExportOptions,\n  ExportResult,\n  MarketplaceConfig,\n  SyncOptions,\n  SyncResult,\n  SyncConflict,\n  AnalyticsData,\n  TransformationRule,\n  BackupMetadata,\n  MarketplaceOrder,\n} from './types';\nimport { logger } from '@/lib/utils/logger';\n\nclass AliExpressAPI {\n  private accessToken?: string;\n\n  constructor(private config: MarketplaceConfig) {}\n\n  async authenticate(): Promise<void> {\n    try {\n      const response = await axios.post(`${this.config.apiUrl}/auth`, {\n        app_key: this.config.clientId,\n        app_secret: this.config.clientSecret,\n      });\n\n      this.accessToken = response.data.access_token;\n    } catch (error: any) {\n      throw new Error('AliExpress authentication failed: ' + error.message);\n    }\n  }\n\n  private getAuthHeaders() {\n    return {\n      Authorization: `Bearer ${this.accessToken}`,\n      'Content-Type': 'application/json',\n    };\n  }\n\n  async getProducts(filters?: any): Promise<MarketplaceProduct[]> {\n    const response = await this.request('/products', {\n      method: 'GET',\n      params: filters,\n    });\n    return response.products.map(this.transformAliExpressProduct);\n  }\n\n  async findProductById(id: string): Promise<MarketplaceProduct | null> {\n    try {\n      const response = await this.request(`/product/${id}`, {\n        method: 'GET',\n      });\n      return this.transformAliExpressProduct(response.product);\n    } catch {\n      return null;\n    }\n  }\n\n  async processProductImages(product: MarketplaceProduct): Promise<ProductImage[]> {\n    const processedImages: ProductImage[] = [];\n    for (const image of product.images) {\n      try {\n        const uploadedUrl = await this.uploadImage(image.url);\n        processedImages.push({ ...image, url: uploadedUrl });\n      } catch (error: any) {\n        logger.error(`Failed to process image: ${error.message}`);\n      }\n    }\n    return processedImages;\n  }\n\n  private transformAliExpressProduct(aliProduct: any): MarketplaceProduct {\n    return {\n      id: aliProduct.product_id,\n      title: aliProduct.subject,\n      description: aliProduct.description,\n      price: Number(aliProduct.price),\n      compareAtPrice: Number(aliProduct.original_price),\n      sku: aliProduct.product_id,\n      quantity: aliProduct.total_available_stock,\n      images: aliProduct.image_urls.map((url: string) => ({\n        url,\n        position: 0,\n        isDefault: false,\n      })),\n      categories: [aliProduct.category_name],\n      vendor: aliProduct.store_name,\n      sourceUrl: aliProduct.product_url,\n      sourceId: aliProduct.product_id,\n      sourcePlatform: 'aliexpress',\n      variants: aliProduct.skus?.map(this.transformAliExpressVariant) || [],\n      attributes: aliProduct.attributes || {},\n      status: aliProduct.status,\n    };\n  }\n\n  private transformAliExpressVariant(sku: any): ProductVariant {\n    return {\n      id: sku.sku_id,\n      title: sku.properties_names.join(' / '),\n      sku: sku.sku_code,\n      price: Number(sku.price),\n      quantity: sku.available_quantity,\n      options: sku.properties.reduce((acc: any, prop: any) => {\n        acc[prop.name] = prop.value;\n        return acc;\n      }, {}),\n    };\n  }\n\n  private async request(endpoint: string, options: { method: string; params?: any; body?: any }): Promise<any> {\n    if (!this.accessToken) {\n      await this.authenticate();\n    }\n\n    const url = `${this.config.apiUrl}${endpoint}`;\n\n    try {\n      const response = await axios({\n        method: options.method,\n        url,\n        headers: this.getAuthHeaders(),\n        params: options.params,\n        data: options.body,\n      });\n\n      return response.data;\n    } catch (error: any) {\n      if (error.response?.status === 401) {\n        await this.authenticate();\n        return this.request(endpoint, options);\n      }\n      throw new Error(`AliExpress API Error: ${error.message}`);\n    }\n  }\n\n  private async uploadImage(url: string): Promise<string> {\n    // Stub method: needs real implementation\n    return url;\n  }\n}\n\nexport class AliExpressMarketplace {\n  private api: AliExpressAPI;\n\n  constructor(private config: MarketplaceConfig) {\n    this.api = new AliExpressAPI(config);\n  }\n\n  async importProducts(options: ImportOptions): Promise<ImportResult> {\n    const startTime = Date.now();\n    const errors: ImportError[] = [];\n    let products: MarketplaceProduct[] = [];\n\n    try {\n      switch (options.source) {\n        case 'api':\n          products = await this.api.getProducts(options.filters);\n          break;\n        case 'file':\n          products = await this.importFromFile(options);\n          break;\n        case 'url':\n          products = await this.importFromUrl(options);\n          break;\n        default:\n          throw new Error('Invalid import source');\n      }\n\n      if (options.filters) {\n        products = this.filterProducts(products, options.filters);\n      }\n\n      if (options.transform) {\n        products = await Promise.all(products.map(product => options.transform!(product)));\n      }\n\n      return {\n        success: true,\n        products,\n        stats: {\n          total: products.length,\n          imported: products.length,\n          failed: 0,\n          timeElapsed: Date.now() - startTime,\n        },\n      };\n    } catch (error: any) {\n      logger.error('AliExpress import error:', error);\n      return {\n        success: false,\n        products: [],\n        errors: [\n          {\n            code: 'IMPORT_FAILED',\n            message: error.message,\n          },\n        ],\n        stats: {\n          total: 0,\n          imported: 0,\n          failed: 1,\n          timeElapsed: Date.now() - startTime,\n        },\n      };\n    }\n  }\n\n  async exportProducts(products: MarketplaceProduct[], options: ExportOptions): Promise<ExportResult> {\n    const startTime = Date.now();\n\n    try {\n      if (options.filters) {\n        products = this.filterProducts(products, options.filters);\n      }\n\n      let exportedData: string;\n\n      switch (options.format) {\n        case 'csv':\n          exportedData = await this.exportToCSV(products, options);\n          break;\n        case 'json':\n          exportedData = JSON.stringify(products, null, 2);\n          break;\n        case 'xml':\n          exportedData = await this.exportToXML(products, options);\n          break;\n        default:\n          throw new Error(`Unsupported export format: ${options.format}`);\n      }\n\n      return {\n        success: true,\n        data: exportedData,\n        stats: {\n          total: products.length,\n          exported: products.length,\n          failed: 0,\n          timeElapsed: Date.now() - startTime,\n        },\n      };\n    } catch (error: any) {\n      logger.error('AliExpress export error:', error);\n      return {\n        success: false,\n        errors: [error.message],\n        stats: {\n          total: products.length,\n          exported: 0,\n          failed: products.length,\n          timeElapsed: Date.now() - startTime,\n        },\n      };\n    }\n  }\n\n  private async importFromFile(options: ImportOptions): Promise<MarketplaceProduct[]> {\n    if (!options.file) {\n      throw new Error('File is required for file import');\n    }\n\n    const content = await options.file.text();\n    const format = options.file.name.split('.').pop()?.toLowerCase();\n\n    switch (format) {\n      case 'csv':\n        return parseCSV(content);\n      case 'json':\n        return JSON.parse(content);\n      case 'xml':\n        return parseXML(content);\n      default:\n        throw new Error(`Unsupported file format: ${format}`);\n    }\n  }\n\n  private async importFromUrl(options: ImportOptions): Promise<MarketplaceProduct[]> {\n    if (!options.url) {\n      throw new Error('URL is required for URL import');\n    }\n\n    const response = await axios.get(options.url);\n    const content = response.data;\n\n    switch (options.format) {\n      case 'csv':\n        return parseCSV(content);\n      case 'json':\n        return content;\n      case 'xml':\n        return parseXML(content);\n      default:\n        throw new Error(`Unsupported format: ${options.format}`);\n    }\n  }\n\n  private filterProducts(products: MarketplaceProduct[], filters: ImportOptions['filters']): MarketplaceProduct[] {\n    if (!filters) return products;\n\n    return products.filter(product => {\n      if (filters.categories?.length && !filters.categories.some(c => product.categories.includes(c))) {\n        return false;\n      }\n      if (filters.priceRange) {\n        if (filters.priceRange.min && product.price < filters.priceRange.min) return false;\n        if (filters.priceRange.max && product.price > filters.priceRange.max) return false;\n      }\n      return true;\n    });\n  }\n\n  private async exportToCSV(products: MarketplaceProduct[], options: ExportOptions): Promise<string> {\n    const fields = this.getExportFields(options);\n    return createCSV(products, fields);\n  }\n\n  private async exportToXML(products: MarketplaceProduct[], options: ExportOptions): Promise<string> {\n    const fields = this.getExportFields(options);\n    return parseXML('products', products, fields);\n  }\n\n  private getExportFields(options: ExportOptions): string[] {\n    const allFields = [\n      'id', 'title', 'description', 'price', 'compareAtPrice',\n      'sku', 'quantity', 'images', 'categories', 'vendor',\n      'sourceUrl', 'sourceId', 'sourcePlatform',\n    ];\n\n    if (options.includeFields) {\n      return options.includeFields;\n    }\n\n    if (options.excludeFields) {\n      return allFields.filter(field => !options.excludeFields!.includes(field));\n    }\n\n    return allFields;\n  }\n}\n\nexport default AliExpressMarketplace;\n"],
      names: ["AliExpressMarketplace", "AliExpressAPI", "constructor", "config", "authenticate", "response", "axios", "post", "apiUrl", "app_key", "clientId", "app_secret", "clientSecret", "accessToken", "data", "access_token", "error", "Error", "message", "getAuthHeaders", "Authorization", "getProducts", "filters", "request", "method", "params", "products", "map", "transformAliExpressProduct", "findProductById", "id", "product", "processProductImages", "processedImages", "image", "images", "uploadedUrl", "uploadImage", "url", "push", "logger", "aliProduct", "product_id", "title", "subject", "description", "price", "Number", "compareAtPrice", "original_price", "sku", "quantity", "total_available_stock", "image_urls", "position", "isDefault", "categories", "category_name", "vendor", "store_name", "sourceUrl", "product_url", "sourceId", "sourcePlatform", "variants", "skus", "transformAliExpressVariant", "attributes", "status", "sku_id", "properties_names", "join", "sku_code", "available_quantity", "options", "properties", "reduce", "acc", "prop", "name", "value", "endpoint", "headers", "body", "api", "importProducts", "startTime", "Date", "now", "errors", "source", "importFromFile", "importFromUrl", "filterProducts", "transform", "Promise", "all", "success", "stats", "total", "length", "imported", "failed", "timeElapsed", "code", "exportProducts", "exportedData", "format", "exportToCSV", "JSON", "stringify", "exportToXML", "exported", "file", "content", "text", "split", "pop", "toLowerCase", "parseCSV", "parse", "parseXML", "get", "filter", "some", "c", "includes", "priceRange", "min", "max", "fields", "getExportFields", "createCSV", "allFields", "includeFields", "excludeFields", "field"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4d0ba419daf0a8883682c041f06546875dbf5fe7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1a65icqtpv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1a65icqtpv();
cov_1a65icqtpv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1a65icqtpv().f[0]++;
  cov_1a65icqtpv().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1a65icqtpv().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1a65icqtpv().s[3]++;
_export(exports, {
  AliExpressMarketplace: function () {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[1]++;
    cov_1a65icqtpv().s[4]++;
    return AliExpressMarketplace;
  },
  default: function () {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[2]++;
    cov_1a65icqtpv().s[5]++;
    return _default;
  }
});
const _axios =
/* istanbul ignore next */
(/*#__PURE__*/cov_1a65icqtpv().s[6]++, _interop_require_default(require("axios")));
const _csv =
/* istanbul ignore next */
(cov_1a65icqtpv().s[7]++, require("../../utils/csv"));
const _xml =
/* istanbul ignore next */
(cov_1a65icqtpv().s[8]++, require("../../utils/xml"));
const _logger =
/* istanbul ignore next */
(cov_1a65icqtpv().s[9]++, require("../../utils/logger"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1a65icqtpv().f[3]++;
  cov_1a65icqtpv().s[10]++;
  return /* istanbul ignore next */(cov_1a65icqtpv().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1a65icqtpv().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1a65icqtpv().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1a65icqtpv().b[0][1]++, {
    default: obj
  });
}
class AliExpressAPI {
  constructor(config) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[4]++;
    cov_1a65icqtpv().s[11]++;
    this.config = config;
  }
  async authenticate() {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[5]++;
    cov_1a65icqtpv().s[12]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1a65icqtpv().s[13]++, await _axios.default.post(`${this.config.apiUrl}/auth`, {
        app_key: this.config.clientId,
        app_secret: this.config.clientSecret
      }));
      /* istanbul ignore next */
      cov_1a65icqtpv().s[14]++;
      this.accessToken = response.data.access_token;
    } catch (error) {
      /* istanbul ignore next */
      cov_1a65icqtpv().s[15]++;
      throw new Error('AliExpress authentication failed: ' + error.message);
    }
  }
  getAuthHeaders() {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[6]++;
    cov_1a65icqtpv().s[16]++;
    return {
      Authorization: `Bearer ${this.accessToken}`,
      'Content-Type': 'application/json'
    };
  }
  async getProducts(filters) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[7]++;
    const response =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[17]++, await this.request('/products', {
      method: 'GET',
      params: filters
    }));
    /* istanbul ignore next */
    cov_1a65icqtpv().s[18]++;
    return response.products.map(this.transformAliExpressProduct);
  }
  async findProductById(id) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[8]++;
    cov_1a65icqtpv().s[19]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1a65icqtpv().s[20]++, await this.request(`/product/${id}`, {
        method: 'GET'
      }));
      /* istanbul ignore next */
      cov_1a65icqtpv().s[21]++;
      return this.transformAliExpressProduct(response.product);
    } catch {
      /* istanbul ignore next */
      cov_1a65icqtpv().s[22]++;
      return null;
    }
  }
  async processProductImages(product) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[9]++;
    const processedImages =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[23]++, []);
    /* istanbul ignore next */
    cov_1a65icqtpv().s[24]++;
    for (const image of product.images) {
      /* istanbul ignore next */
      cov_1a65icqtpv().s[25]++;
      try {
        const uploadedUrl =
        /* istanbul ignore next */
        (cov_1a65icqtpv().s[26]++, await this.uploadImage(image.url));
        /* istanbul ignore next */
        cov_1a65icqtpv().s[27]++;
        processedImages.push({
          ...image,
          url: uploadedUrl
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1a65icqtpv().s[28]++;
        _logger.logger.error(`Failed to process image: ${error.message}`);
      }
    }
    /* istanbul ignore next */
    cov_1a65icqtpv().s[29]++;
    return processedImages;
  }
  transformAliExpressProduct(aliProduct) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[10]++;
    cov_1a65icqtpv().s[30]++;
    return {
      id: aliProduct.product_id,
      title: aliProduct.subject,
      description: aliProduct.description,
      price: Number(aliProduct.price),
      compareAtPrice: Number(aliProduct.original_price),
      sku: aliProduct.product_id,
      quantity: aliProduct.total_available_stock,
      images: aliProduct.image_urls.map(url => {
        /* istanbul ignore next */
        cov_1a65icqtpv().f[11]++;
        cov_1a65icqtpv().s[31]++;
        return {
          url,
          position: 0,
          isDefault: false
        };
      }),
      categories: [aliProduct.category_name],
      vendor: aliProduct.store_name,
      sourceUrl: aliProduct.product_url,
      sourceId: aliProduct.product_id,
      sourcePlatform: 'aliexpress',
      variants:
      /* istanbul ignore next */
      (cov_1a65icqtpv().b[2][0]++, aliProduct.skus?.map(this.transformAliExpressVariant)) ||
      /* istanbul ignore next */
      (cov_1a65icqtpv().b[2][1]++, []),
      attributes:
      /* istanbul ignore next */
      (cov_1a65icqtpv().b[3][0]++, aliProduct.attributes) ||
      /* istanbul ignore next */
      (cov_1a65icqtpv().b[3][1]++, {}),
      status: aliProduct.status
    };
  }
  transformAliExpressVariant(sku) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[12]++;
    cov_1a65icqtpv().s[32]++;
    return {
      id: sku.sku_id,
      title: sku.properties_names.join(' / '),
      sku: sku.sku_code,
      price: Number(sku.price),
      quantity: sku.available_quantity,
      options: sku.properties.reduce((acc, prop) => {
        /* istanbul ignore next */
        cov_1a65icqtpv().f[13]++;
        cov_1a65icqtpv().s[33]++;
        acc[prop.name] = prop.value;
        /* istanbul ignore next */
        cov_1a65icqtpv().s[34]++;
        return acc;
      }, {})
    };
  }
  async request(endpoint, options) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[14]++;
    cov_1a65icqtpv().s[35]++;
    if (!this.accessToken) {
      /* istanbul ignore next */
      cov_1a65icqtpv().b[4][0]++;
      cov_1a65icqtpv().s[36]++;
      await this.authenticate();
    } else
    /* istanbul ignore next */
    {
      cov_1a65icqtpv().b[4][1]++;
    }
    const url =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[37]++, `${this.config.apiUrl}${endpoint}`);
    /* istanbul ignore next */
    cov_1a65icqtpv().s[38]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1a65icqtpv().s[39]++, await (0, _axios.default)({
        method: options.method,
        url,
        headers: this.getAuthHeaders(),
        params: options.params,
        data: options.body
      }));
      /* istanbul ignore next */
      cov_1a65icqtpv().s[40]++;
      return response.data;
    } catch (error) {
      /* istanbul ignore next */
      cov_1a65icqtpv().s[41]++;
      if (error.response?.status === 401) {
        /* istanbul ignore next */
        cov_1a65icqtpv().b[5][0]++;
        cov_1a65icqtpv().s[42]++;
        await this.authenticate();
        /* istanbul ignore next */
        cov_1a65icqtpv().s[43]++;
        return this.request(endpoint, options);
      } else
      /* istanbul ignore next */
      {
        cov_1a65icqtpv().b[5][1]++;
      }
      cov_1a65icqtpv().s[44]++;
      throw new Error(`AliExpress API Error: ${error.message}`);
    }
  }
  async uploadImage(url) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[15]++;
    cov_1a65icqtpv().s[45]++;
    // Stub method: needs real implementation
    return url;
  }
}
class AliExpressMarketplace {
  constructor(config) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[16]++;
    cov_1a65icqtpv().s[46]++;
    this.config = config;
    /* istanbul ignore next */
    cov_1a65icqtpv().s[47]++;
    this.api = new AliExpressAPI(config);
  }
  async importProducts(options) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[17]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[48]++, Date.now());
    const errors =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[49]++, []);
    let products =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[50]++, []);
    /* istanbul ignore next */
    cov_1a65icqtpv().s[51]++;
    try {
      /* istanbul ignore next */
      cov_1a65icqtpv().s[52]++;
      switch (options.source) {
        case 'api':
          /* istanbul ignore next */
          cov_1a65icqtpv().b[6][0]++;
          cov_1a65icqtpv().s[53]++;
          products = await this.api.getProducts(options.filters);
          /* istanbul ignore next */
          cov_1a65icqtpv().s[54]++;
          break;
        case 'file':
          /* istanbul ignore next */
          cov_1a65icqtpv().b[6][1]++;
          cov_1a65icqtpv().s[55]++;
          products = await this.importFromFile(options);
          /* istanbul ignore next */
          cov_1a65icqtpv().s[56]++;
          break;
        case 'url':
          /* istanbul ignore next */
          cov_1a65icqtpv().b[6][2]++;
          cov_1a65icqtpv().s[57]++;
          products = await this.importFromUrl(options);
          /* istanbul ignore next */
          cov_1a65icqtpv().s[58]++;
          break;
        default:
          /* istanbul ignore next */
          cov_1a65icqtpv().b[6][3]++;
          cov_1a65icqtpv().s[59]++;
          throw new Error('Invalid import source');
      }
      /* istanbul ignore next */
      cov_1a65icqtpv().s[60]++;
      if (options.filters) {
        /* istanbul ignore next */
        cov_1a65icqtpv().b[7][0]++;
        cov_1a65icqtpv().s[61]++;
        products = this.filterProducts(products, options.filters);
      } else
      /* istanbul ignore next */
      {
        cov_1a65icqtpv().b[7][1]++;
      }
      cov_1a65icqtpv().s[62]++;
      if (options.transform) {
        /* istanbul ignore next */
        cov_1a65icqtpv().b[8][0]++;
        cov_1a65icqtpv().s[63]++;
        products = await Promise.all(products.map(product => {
          /* istanbul ignore next */
          cov_1a65icqtpv().f[18]++;
          cov_1a65icqtpv().s[64]++;
          return options.transform(product);
        }));
      } else
      /* istanbul ignore next */
      {
        cov_1a65icqtpv().b[8][1]++;
      }
      cov_1a65icqtpv().s[65]++;
      return {
        success: true,
        products,
        stats: {
          total: products.length,
          imported: products.length,
          failed: 0,
          timeElapsed: Date.now() - startTime
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1a65icqtpv().s[66]++;
      _logger.logger.error('AliExpress import error:', error);
      /* istanbul ignore next */
      cov_1a65icqtpv().s[67]++;
      return {
        success: false,
        products: [],
        errors: [{
          code: 'IMPORT_FAILED',
          message: error.message
        }],
        stats: {
          total: 0,
          imported: 0,
          failed: 1,
          timeElapsed: Date.now() - startTime
        }
      };
    }
  }
  async exportProducts(products, options) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[19]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[68]++, Date.now());
    /* istanbul ignore next */
    cov_1a65icqtpv().s[69]++;
    try {
      /* istanbul ignore next */
      cov_1a65icqtpv().s[70]++;
      if (options.filters) {
        /* istanbul ignore next */
        cov_1a65icqtpv().b[9][0]++;
        cov_1a65icqtpv().s[71]++;
        products = this.filterProducts(products, options.filters);
      } else
      /* istanbul ignore next */
      {
        cov_1a65icqtpv().b[9][1]++;
      }
      let exportedData;
      /* istanbul ignore next */
      cov_1a65icqtpv().s[72]++;
      switch (options.format) {
        case 'csv':
          /* istanbul ignore next */
          cov_1a65icqtpv().b[10][0]++;
          cov_1a65icqtpv().s[73]++;
          exportedData = await this.exportToCSV(products, options);
          /* istanbul ignore next */
          cov_1a65icqtpv().s[74]++;
          break;
        case 'json':
          /* istanbul ignore next */
          cov_1a65icqtpv().b[10][1]++;
          cov_1a65icqtpv().s[75]++;
          exportedData = JSON.stringify(products, null, 2);
          /* istanbul ignore next */
          cov_1a65icqtpv().s[76]++;
          break;
        case 'xml':
          /* istanbul ignore next */
          cov_1a65icqtpv().b[10][2]++;
          cov_1a65icqtpv().s[77]++;
          exportedData = await this.exportToXML(products, options);
          /* istanbul ignore next */
          cov_1a65icqtpv().s[78]++;
          break;
        default:
          /* istanbul ignore next */
          cov_1a65icqtpv().b[10][3]++;
          cov_1a65icqtpv().s[79]++;
          throw new Error(`Unsupported export format: ${options.format}`);
      }
      /* istanbul ignore next */
      cov_1a65icqtpv().s[80]++;
      return {
        success: true,
        data: exportedData,
        stats: {
          total: products.length,
          exported: products.length,
          failed: 0,
          timeElapsed: Date.now() - startTime
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1a65icqtpv().s[81]++;
      _logger.logger.error('AliExpress export error:', error);
      /* istanbul ignore next */
      cov_1a65icqtpv().s[82]++;
      return {
        success: false,
        errors: [error.message],
        stats: {
          total: products.length,
          exported: 0,
          failed: products.length,
          timeElapsed: Date.now() - startTime
        }
      };
    }
  }
  async importFromFile(options) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[20]++;
    cov_1a65icqtpv().s[83]++;
    if (!options.file) {
      /* istanbul ignore next */
      cov_1a65icqtpv().b[11][0]++;
      cov_1a65icqtpv().s[84]++;
      throw new Error('File is required for file import');
    } else
    /* istanbul ignore next */
    {
      cov_1a65icqtpv().b[11][1]++;
    }
    const content =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[85]++, await options.file.text());
    const format =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[86]++, options.file.name.split('.').pop()?.toLowerCase());
    /* istanbul ignore next */
    cov_1a65icqtpv().s[87]++;
    switch (format) {
      case 'csv':
        /* istanbul ignore next */
        cov_1a65icqtpv().b[12][0]++;
        cov_1a65icqtpv().s[88]++;
        return (0, _csv.parseCSV)(content);
      case 'json':
        /* istanbul ignore next */
        cov_1a65icqtpv().b[12][1]++;
        cov_1a65icqtpv().s[89]++;
        return JSON.parse(content);
      case 'xml':
        /* istanbul ignore next */
        cov_1a65icqtpv().b[12][2]++;
        cov_1a65icqtpv().s[90]++;
        return (0, _xml.parseXML)(content);
      default:
        /* istanbul ignore next */
        cov_1a65icqtpv().b[12][3]++;
        cov_1a65icqtpv().s[91]++;
        throw new Error(`Unsupported file format: ${format}`);
    }
  }
  async importFromUrl(options) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[21]++;
    cov_1a65icqtpv().s[92]++;
    if (!options.url) {
      /* istanbul ignore next */
      cov_1a65icqtpv().b[13][0]++;
      cov_1a65icqtpv().s[93]++;
      throw new Error('URL is required for URL import');
    } else
    /* istanbul ignore next */
    {
      cov_1a65icqtpv().b[13][1]++;
    }
    const response =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[94]++, await _axios.default.get(options.url));
    const content =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[95]++, response.data);
    /* istanbul ignore next */
    cov_1a65icqtpv().s[96]++;
    switch (options.format) {
      case 'csv':
        /* istanbul ignore next */
        cov_1a65icqtpv().b[14][0]++;
        cov_1a65icqtpv().s[97]++;
        return (0, _csv.parseCSV)(content);
      case 'json':
        /* istanbul ignore next */
        cov_1a65icqtpv().b[14][1]++;
        cov_1a65icqtpv().s[98]++;
        return content;
      case 'xml':
        /* istanbul ignore next */
        cov_1a65icqtpv().b[14][2]++;
        cov_1a65icqtpv().s[99]++;
        return (0, _xml.parseXML)(content);
      default:
        /* istanbul ignore next */
        cov_1a65icqtpv().b[14][3]++;
        cov_1a65icqtpv().s[100]++;
        throw new Error(`Unsupported format: ${options.format}`);
    }
  }
  filterProducts(products, filters) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[22]++;
    cov_1a65icqtpv().s[101]++;
    if (!filters) {
      /* istanbul ignore next */
      cov_1a65icqtpv().b[15][0]++;
      cov_1a65icqtpv().s[102]++;
      return products;
    } else
    /* istanbul ignore next */
    {
      cov_1a65icqtpv().b[15][1]++;
    }
    cov_1a65icqtpv().s[103]++;
    return products.filter(product => {
      /* istanbul ignore next */
      cov_1a65icqtpv().f[23]++;
      cov_1a65icqtpv().s[104]++;
      if (
      /* istanbul ignore next */
      (cov_1a65icqtpv().b[17][0]++, filters.categories?.length) &&
      /* istanbul ignore next */
      (cov_1a65icqtpv().b[17][1]++, !filters.categories.some(c => {
        /* istanbul ignore next */
        cov_1a65icqtpv().f[24]++;
        cov_1a65icqtpv().s[105]++;
        return product.categories.includes(c);
      }))) {
        /* istanbul ignore next */
        cov_1a65icqtpv().b[16][0]++;
        cov_1a65icqtpv().s[106]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1a65icqtpv().b[16][1]++;
      }
      cov_1a65icqtpv().s[107]++;
      if (filters.priceRange) {
        /* istanbul ignore next */
        cov_1a65icqtpv().b[18][0]++;
        cov_1a65icqtpv().s[108]++;
        if (
        /* istanbul ignore next */
        (cov_1a65icqtpv().b[20][0]++, filters.priceRange.min) &&
        /* istanbul ignore next */
        (cov_1a65icqtpv().b[20][1]++, product.price < filters.priceRange.min)) {
          /* istanbul ignore next */
          cov_1a65icqtpv().b[19][0]++;
          cov_1a65icqtpv().s[109]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_1a65icqtpv().b[19][1]++;
        }
        cov_1a65icqtpv().s[110]++;
        if (
        /* istanbul ignore next */
        (cov_1a65icqtpv().b[22][0]++, filters.priceRange.max) &&
        /* istanbul ignore next */
        (cov_1a65icqtpv().b[22][1]++, product.price > filters.priceRange.max)) {
          /* istanbul ignore next */
          cov_1a65icqtpv().b[21][0]++;
          cov_1a65icqtpv().s[111]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_1a65icqtpv().b[21][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1a65icqtpv().b[18][1]++;
      }
      cov_1a65icqtpv().s[112]++;
      return true;
    });
  }
  async exportToCSV(products, options) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[25]++;
    const fields =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[113]++, this.getExportFields(options));
    /* istanbul ignore next */
    cov_1a65icqtpv().s[114]++;
    return (0, _csv.createCSV)(products, fields);
  }
  async exportToXML(products, options) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[26]++;
    const fields =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[115]++, this.getExportFields(options));
    /* istanbul ignore next */
    cov_1a65icqtpv().s[116]++;
    return (0, _xml.parseXML)('products', products, fields);
  }
  getExportFields(options) {
    /* istanbul ignore next */
    cov_1a65icqtpv().f[27]++;
    const allFields =
    /* istanbul ignore next */
    (cov_1a65icqtpv().s[117]++, ['id', 'title', 'description', 'price', 'compareAtPrice', 'sku', 'quantity', 'images', 'categories', 'vendor', 'sourceUrl', 'sourceId', 'sourcePlatform']);
    /* istanbul ignore next */
    cov_1a65icqtpv().s[118]++;
    if (options.includeFields) {
      /* istanbul ignore next */
      cov_1a65icqtpv().b[23][0]++;
      cov_1a65icqtpv().s[119]++;
      return options.includeFields;
    } else
    /* istanbul ignore next */
    {
      cov_1a65icqtpv().b[23][1]++;
    }
    cov_1a65icqtpv().s[120]++;
    if (options.excludeFields) {
      /* istanbul ignore next */
      cov_1a65icqtpv().b[24][0]++;
      cov_1a65icqtpv().s[121]++;
      return allFields.filter(field => {
        /* istanbul ignore next */
        cov_1a65icqtpv().f[28]++;
        cov_1a65icqtpv().s[122]++;
        return !options.excludeFields.includes(field);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1a65icqtpv().b[24][1]++;
    }
    cov_1a65icqtpv().s[123]++;
    return allFields;
  }
}
const _default =
/* istanbul ignore next */
(cov_1a65icqtpv().s[124]++, AliExpressMarketplace);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBbGlFeHByZXNzTWFya2V0cGxhY2UiLCJjb3ZfMWE2NWljcXRwdiIsImYiLCJzIiwiZGVmYXVsdCIsIl9kZWZhdWx0IiwiQWxpRXhwcmVzc0FQSSIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwiYXV0aGVudGljYXRlIiwicmVzcG9uc2UiLCJfYXhpb3MiLCJwb3N0IiwiYXBpVXJsIiwiYXBwX2tleSIsImNsaWVudElkIiwiYXBwX3NlY3JldCIsImNsaWVudFNlY3JldCIsImFjY2Vzc1Rva2VuIiwiZGF0YSIsImFjY2Vzc190b2tlbiIsImVycm9yIiwiRXJyb3IiLCJtZXNzYWdlIiwiZ2V0QXV0aEhlYWRlcnMiLCJBdXRob3JpemF0aW9uIiwiZ2V0UHJvZHVjdHMiLCJmaWx0ZXJzIiwicmVxdWVzdCIsIm1ldGhvZCIsInBhcmFtcyIsInByb2R1Y3RzIiwibWFwIiwidHJhbnNmb3JtQWxpRXhwcmVzc1Byb2R1Y3QiLCJmaW5kUHJvZHVjdEJ5SWQiLCJpZCIsInByb2R1Y3QiLCJwcm9jZXNzUHJvZHVjdEltYWdlcyIsInByb2Nlc3NlZEltYWdlcyIsImltYWdlIiwiaW1hZ2VzIiwidXBsb2FkZWRVcmwiLCJ1cGxvYWRJbWFnZSIsInVybCIsInB1c2giLCJfbG9nZ2VyIiwibG9nZ2VyIiwiYWxpUHJvZHVjdCIsInByb2R1Y3RfaWQiLCJ0aXRsZSIsInN1YmplY3QiLCJkZXNjcmlwdGlvbiIsInByaWNlIiwiTnVtYmVyIiwiY29tcGFyZUF0UHJpY2UiLCJvcmlnaW5hbF9wcmljZSIsInNrdSIsInF1YW50aXR5IiwidG90YWxfYXZhaWxhYmxlX3N0b2NrIiwiaW1hZ2VfdXJscyIsInBvc2l0aW9uIiwiaXNEZWZhdWx0IiwiY2F0ZWdvcmllcyIsImNhdGVnb3J5X25hbWUiLCJ2ZW5kb3IiLCJzdG9yZV9uYW1lIiwic291cmNlVXJsIiwicHJvZHVjdF91cmwiLCJzb3VyY2VJZCIsInNvdXJjZVBsYXRmb3JtIiwidmFyaWFudHMiLCJiIiwic2t1cyIsInRyYW5zZm9ybUFsaUV4cHJlc3NWYXJpYW50IiwiYXR0cmlidXRlcyIsInN0YXR1cyIsInNrdV9pZCIsInByb3BlcnRpZXNfbmFtZXMiLCJqb2luIiwic2t1X2NvZGUiLCJhdmFpbGFibGVfcXVhbnRpdHkiLCJvcHRpb25zIiwicHJvcGVydGllcyIsInJlZHVjZSIsImFjYyIsInByb3AiLCJuYW1lIiwidmFsdWUiLCJlbmRwb2ludCIsImhlYWRlcnMiLCJib2R5IiwiYXBpIiwiaW1wb3J0UHJvZHVjdHMiLCJzdGFydFRpbWUiLCJEYXRlIiwibm93IiwiZXJyb3JzIiwic291cmNlIiwiaW1wb3J0RnJvbUZpbGUiLCJpbXBvcnRGcm9tVXJsIiwiZmlsdGVyUHJvZHVjdHMiLCJ0cmFuc2Zvcm0iLCJQcm9taXNlIiwiYWxsIiwic3VjY2VzcyIsInN0YXRzIiwidG90YWwiLCJsZW5ndGgiLCJpbXBvcnRlZCIsImZhaWxlZCIsInRpbWVFbGFwc2VkIiwiY29kZSIsImV4cG9ydFByb2R1Y3RzIiwiZXhwb3J0ZWREYXRhIiwiZm9ybWF0IiwiZXhwb3J0VG9DU1YiLCJKU09OIiwic3RyaW5naWZ5IiwiZXhwb3J0VG9YTUwiLCJleHBvcnRlZCIsImZpbGUiLCJjb250ZW50IiwidGV4dCIsInNwbGl0IiwicG9wIiwidG9Mb3dlckNhc2UiLCJfY3N2IiwicGFyc2VDU1YiLCJwYXJzZSIsIl94bWwiLCJwYXJzZVhNTCIsImdldCIsImZpbHRlciIsInNvbWUiLCJjIiwiaW5jbHVkZXMiLCJwcmljZVJhbmdlIiwibWluIiwibWF4IiwiZmllbGRzIiwiZ2V0RXhwb3J0RmllbGRzIiwiY3JlYXRlQ1NWIiwiYWxsRmllbGRzIiwiaW5jbHVkZUZpZWxkcyIsImV4Y2x1ZGVGaWVsZHMiLCJmaWVsZCJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9saWIvc2VydmljZXMvbWFya2V0cGxhY2UvYWxpZXhwcmVzcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuaW1wb3J0IHsgY3JlYXRlQ1NWLCBwYXJzZUNTViB9IGZyb20gJ0AvbGliL3V0aWxzL2Nzdic7XG5pbXBvcnQgeyBwYXJzZVhNTCB9IGZyb20gJ0AvbGliL3V0aWxzL3htbCc7XG4vLyBpbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuLi9sb2dnaW5nJztcblxuaW1wb3J0IHtcbiAgTWFya2V0cGxhY2VQcm9kdWN0LFxuICBQcm9kdWN0SW1hZ2UsXG4gIFByb2R1Y3RWYXJpYW50LFxuICBQcm9kdWN0T3B0aW9uLFxuICBJbXBvcnRPcHRpb25zLFxuICBJbXBvcnRSZXN1bHQsXG4gIEltcG9ydEVycm9yLFxuICBJbXBvcnRXYXJuaW5nLFxuICBFeHBvcnRPcHRpb25zLFxuICBFeHBvcnRSZXN1bHQsXG4gIE1hcmtldHBsYWNlQ29uZmlnLFxuICBTeW5jT3B0aW9ucyxcbiAgU3luY1Jlc3VsdCxcbiAgU3luY0NvbmZsaWN0LFxuICBBbmFseXRpY3NEYXRhLFxuICBUcmFuc2Zvcm1hdGlvblJ1bGUsXG4gIEJhY2t1cE1ldGFkYXRhLFxuICBNYXJrZXRwbGFjZU9yZGVyLFxufSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ0AvbGliL3V0aWxzL2xvZ2dlcic7XG5cbmNsYXNzIEFsaUV4cHJlc3NBUEkge1xuICBwcml2YXRlIGFjY2Vzc1Rva2VuPzogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY29uZmlnOiBNYXJrZXRwbGFjZUNvbmZpZykge31cblxuICBhc3luYyBhdXRoZW50aWNhdGUoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdChgJHt0aGlzLmNvbmZpZy5hcGlVcmx9L2F1dGhgLCB7XG4gICAgICAgIGFwcF9rZXk6IHRoaXMuY29uZmlnLmNsaWVudElkLFxuICAgICAgICBhcHBfc2VjcmV0OiB0aGlzLmNvbmZpZy5jbGllbnRTZWNyZXQsXG4gICAgICB9KTtcblxuICAgICAgdGhpcy5hY2Nlc3NUb2tlbiA9IHJlc3BvbnNlLmRhdGEuYWNjZXNzX3Rva2VuO1xuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQWxpRXhwcmVzcyBhdXRoZW50aWNhdGlvbiBmYWlsZWQ6ICcgKyBlcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldEF1dGhIZWFkZXJzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dGhpcy5hY2Nlc3NUb2tlbn1gLFxuICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICB9O1xuICB9XG5cbiAgYXN5bmMgZ2V0UHJvZHVjdHMoZmlsdGVycz86IGFueSk6IFByb21pc2U8TWFya2V0cGxhY2VQcm9kdWN0W10+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMucmVxdWVzdCgnL3Byb2R1Y3RzJywge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIHBhcmFtczogZmlsdGVycyxcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzcG9uc2UucHJvZHVjdHMubWFwKHRoaXMudHJhbnNmb3JtQWxpRXhwcmVzc1Byb2R1Y3QpO1xuICB9XG5cbiAgYXN5bmMgZmluZFByb2R1Y3RCeUlkKGlkOiBzdHJpbmcpOiBQcm9taXNlPE1hcmtldHBsYWNlUHJvZHVjdCB8IG51bGw+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnJlcXVlc3QoYC9wcm9kdWN0LyR7aWR9YCwge1xuICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgfSk7XG4gICAgICByZXR1cm4gdGhpcy50cmFuc2Zvcm1BbGlFeHByZXNzUHJvZHVjdChyZXNwb25zZS5wcm9kdWN0KTtcbiAgICB9IGNhdGNoIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHByb2Nlc3NQcm9kdWN0SW1hZ2VzKHByb2R1Y3Q6IE1hcmtldHBsYWNlUHJvZHVjdCk6IFByb21pc2U8UHJvZHVjdEltYWdlW10+IHtcbiAgICBjb25zdCBwcm9jZXNzZWRJbWFnZXM6IFByb2R1Y3RJbWFnZVtdID0gW107XG4gICAgZm9yIChjb25zdCBpbWFnZSBvZiBwcm9kdWN0LmltYWdlcykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgdXBsb2FkZWRVcmwgPSBhd2FpdCB0aGlzLnVwbG9hZEltYWdlKGltYWdlLnVybCk7XG4gICAgICAgIHByb2Nlc3NlZEltYWdlcy5wdXNoKHsgLi4uaW1hZ2UsIHVybDogdXBsb2FkZWRVcmwgfSk7XG4gICAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICAgIGxvZ2dlci5lcnJvcihgRmFpbGVkIHRvIHByb2Nlc3MgaW1hZ2U6ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHByb2Nlc3NlZEltYWdlcztcbiAgfVxuXG4gIHByaXZhdGUgdHJhbnNmb3JtQWxpRXhwcmVzc1Byb2R1Y3QoYWxpUHJvZHVjdDogYW55KTogTWFya2V0cGxhY2VQcm9kdWN0IHtcbiAgICByZXR1cm4ge1xuICAgICAgaWQ6IGFsaVByb2R1Y3QucHJvZHVjdF9pZCxcbiAgICAgIHRpdGxlOiBhbGlQcm9kdWN0LnN1YmplY3QsXG4gICAgICBkZXNjcmlwdGlvbjogYWxpUHJvZHVjdC5kZXNjcmlwdGlvbixcbiAgICAgIHByaWNlOiBOdW1iZXIoYWxpUHJvZHVjdC5wcmljZSksXG4gICAgICBjb21wYXJlQXRQcmljZTogTnVtYmVyKGFsaVByb2R1Y3Qub3JpZ2luYWxfcHJpY2UpLFxuICAgICAgc2t1OiBhbGlQcm9kdWN0LnByb2R1Y3RfaWQsXG4gICAgICBxdWFudGl0eTogYWxpUHJvZHVjdC50b3RhbF9hdmFpbGFibGVfc3RvY2ssXG4gICAgICBpbWFnZXM6IGFsaVByb2R1Y3QuaW1hZ2VfdXJscy5tYXAoKHVybDogc3RyaW5nKSA9PiAoe1xuICAgICAgICB1cmwsXG4gICAgICAgIHBvc2l0aW9uOiAwLFxuICAgICAgICBpc0RlZmF1bHQ6IGZhbHNlLFxuICAgICAgfSkpLFxuICAgICAgY2F0ZWdvcmllczogW2FsaVByb2R1Y3QuY2F0ZWdvcnlfbmFtZV0sXG4gICAgICB2ZW5kb3I6IGFsaVByb2R1Y3Quc3RvcmVfbmFtZSxcbiAgICAgIHNvdXJjZVVybDogYWxpUHJvZHVjdC5wcm9kdWN0X3VybCxcbiAgICAgIHNvdXJjZUlkOiBhbGlQcm9kdWN0LnByb2R1Y3RfaWQsXG4gICAgICBzb3VyY2VQbGF0Zm9ybTogJ2FsaWV4cHJlc3MnLFxuICAgICAgdmFyaWFudHM6IGFsaVByb2R1Y3Quc2t1cz8ubWFwKHRoaXMudHJhbnNmb3JtQWxpRXhwcmVzc1ZhcmlhbnQpIHx8IFtdLFxuICAgICAgYXR0cmlidXRlczogYWxpUHJvZHVjdC5hdHRyaWJ1dGVzIHx8IHt9LFxuICAgICAgc3RhdHVzOiBhbGlQcm9kdWN0LnN0YXR1cyxcbiAgICB9O1xuICB9XG5cbiAgcHJpdmF0ZSB0cmFuc2Zvcm1BbGlFeHByZXNzVmFyaWFudChza3U6IGFueSk6IFByb2R1Y3RWYXJpYW50IHtcbiAgICByZXR1cm4ge1xuICAgICAgaWQ6IHNrdS5za3VfaWQsXG4gICAgICB0aXRsZTogc2t1LnByb3BlcnRpZXNfbmFtZXMuam9pbignIC8gJyksXG4gICAgICBza3U6IHNrdS5za3VfY29kZSxcbiAgICAgIHByaWNlOiBOdW1iZXIoc2t1LnByaWNlKSxcbiAgICAgIHF1YW50aXR5OiBza3UuYXZhaWxhYmxlX3F1YW50aXR5LFxuICAgICAgb3B0aW9uczogc2t1LnByb3BlcnRpZXMucmVkdWNlKChhY2M6IGFueSwgcHJvcDogYW55KSA9PiB7XG4gICAgICAgIGFjY1twcm9wLm5hbWVdID0gcHJvcC52YWx1ZTtcbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgIH0sIHt9KSxcbiAgICB9O1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyByZXF1ZXN0KGVuZHBvaW50OiBzdHJpbmcsIG9wdGlvbnM6IHsgbWV0aG9kOiBzdHJpbmc7IHBhcmFtcz86IGFueTsgYm9keT86IGFueSB9KTogUHJvbWlzZTxhbnk+IHtcbiAgICBpZiAoIXRoaXMuYWNjZXNzVG9rZW4pIHtcbiAgICAgIGF3YWl0IHRoaXMuYXV0aGVudGljYXRlKCk7XG4gICAgfVxuXG4gICAgY29uc3QgdXJsID0gYCR7dGhpcy5jb25maWcuYXBpVXJsfSR7ZW5kcG9pbnR9YDtcblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zKHtcbiAgICAgICAgbWV0aG9kOiBvcHRpb25zLm1ldGhvZCxcbiAgICAgICAgdXJsLFxuICAgICAgICBoZWFkZXJzOiB0aGlzLmdldEF1dGhIZWFkZXJzKCksXG4gICAgICAgIHBhcmFtczogb3B0aW9ucy5wYXJhbXMsXG4gICAgICAgIGRhdGE6IG9wdGlvbnMuYm9keSxcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICBpZiAoZXJyb3IucmVzcG9uc2U/LnN0YXR1cyA9PT0gNDAxKSB7XG4gICAgICAgIGF3YWl0IHRoaXMuYXV0aGVudGljYXRlKCk7XG4gICAgICAgIHJldHVybiB0aGlzLnJlcXVlc3QoZW5kcG9pbnQsIG9wdGlvbnMpO1xuICAgICAgfVxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBBbGlFeHByZXNzIEFQSSBFcnJvcjogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgdXBsb2FkSW1hZ2UodXJsOiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIC8vIFN0dWIgbWV0aG9kOiBuZWVkcyByZWFsIGltcGxlbWVudGF0aW9uXG4gICAgcmV0dXJuIHVybDtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQWxpRXhwcmVzc01hcmtldHBsYWNlIHtcbiAgcHJpdmF0ZSBhcGk6IEFsaUV4cHJlc3NBUEk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjb25maWc6IE1hcmtldHBsYWNlQ29uZmlnKSB7XG4gICAgdGhpcy5hcGkgPSBuZXcgQWxpRXhwcmVzc0FQSShjb25maWcpO1xuICB9XG5cbiAgYXN5bmMgaW1wb3J0UHJvZHVjdHMob3B0aW9uczogSW1wb3J0T3B0aW9ucyk6IFByb21pc2U8SW1wb3J0UmVzdWx0PiB7XG4gICAgY29uc3Qgc3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICBjb25zdCBlcnJvcnM6IEltcG9ydEVycm9yW10gPSBbXTtcbiAgICBsZXQgcHJvZHVjdHM6IE1hcmtldHBsYWNlUHJvZHVjdFtdID0gW107XG5cbiAgICB0cnkge1xuICAgICAgc3dpdGNoIChvcHRpb25zLnNvdXJjZSkge1xuICAgICAgICBjYXNlICdhcGknOlxuICAgICAgICAgIHByb2R1Y3RzID0gYXdhaXQgdGhpcy5hcGkuZ2V0UHJvZHVjdHMob3B0aW9ucy5maWx0ZXJzKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnZmlsZSc6XG4gICAgICAgICAgcHJvZHVjdHMgPSBhd2FpdCB0aGlzLmltcG9ydEZyb21GaWxlKG9wdGlvbnMpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICd1cmwnOlxuICAgICAgICAgIHByb2R1Y3RzID0gYXdhaXQgdGhpcy5pbXBvcnRGcm9tVXJsKG9wdGlvbnMpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBpbXBvcnQgc291cmNlJyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChvcHRpb25zLmZpbHRlcnMpIHtcbiAgICAgICAgcHJvZHVjdHMgPSB0aGlzLmZpbHRlclByb2R1Y3RzKHByb2R1Y3RzLCBvcHRpb25zLmZpbHRlcnMpO1xuICAgICAgfVxuXG4gICAgICBpZiAob3B0aW9ucy50cmFuc2Zvcm0pIHtcbiAgICAgICAgcHJvZHVjdHMgPSBhd2FpdCBQcm9taXNlLmFsbChwcm9kdWN0cy5tYXAocHJvZHVjdCA9PiBvcHRpb25zLnRyYW5zZm9ybSEocHJvZHVjdCkpKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgcHJvZHVjdHMsXG4gICAgICAgIHN0YXRzOiB7XG4gICAgICAgICAgdG90YWw6IHByb2R1Y3RzLmxlbmd0aCxcbiAgICAgICAgICBpbXBvcnRlZDogcHJvZHVjdHMubGVuZ3RoLFxuICAgICAgICAgIGZhaWxlZDogMCxcbiAgICAgICAgICB0aW1lRWxhcHNlZDogRGF0ZS5ub3coKSAtIHN0YXJ0VGltZSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgbG9nZ2VyLmVycm9yKCdBbGlFeHByZXNzIGltcG9ydCBlcnJvcjonLCBlcnJvcik7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgcHJvZHVjdHM6IFtdLFxuICAgICAgICBlcnJvcnM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBjb2RlOiAnSU1QT1JUX0ZBSUxFRCcsXG4gICAgICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIHN0YXRzOiB7XG4gICAgICAgICAgdG90YWw6IDAsXG4gICAgICAgICAgaW1wb3J0ZWQ6IDAsXG4gICAgICAgICAgZmFpbGVkOiAxLFxuICAgICAgICAgIHRpbWVFbGFwc2VkOiBEYXRlLm5vdygpIC0gc3RhcnRUaW1lLFxuICAgICAgICB9LFxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBleHBvcnRQcm9kdWN0cyhwcm9kdWN0czogTWFya2V0cGxhY2VQcm9kdWN0W10sIG9wdGlvbnM6IEV4cG9ydE9wdGlvbnMpOiBQcm9taXNlPEV4cG9ydFJlc3VsdD4ge1xuICAgIGNvbnN0IHN0YXJ0VGltZSA9IERhdGUubm93KCk7XG5cbiAgICB0cnkge1xuICAgICAgaWYgKG9wdGlvbnMuZmlsdGVycykge1xuICAgICAgICBwcm9kdWN0cyA9IHRoaXMuZmlsdGVyUHJvZHVjdHMocHJvZHVjdHMsIG9wdGlvbnMuZmlsdGVycyk7XG4gICAgICB9XG5cbiAgICAgIGxldCBleHBvcnRlZERhdGE6IHN0cmluZztcblxuICAgICAgc3dpdGNoIChvcHRpb25zLmZvcm1hdCkge1xuICAgICAgICBjYXNlICdjc3YnOlxuICAgICAgICAgIGV4cG9ydGVkRGF0YSA9IGF3YWl0IHRoaXMuZXhwb3J0VG9DU1YocHJvZHVjdHMsIG9wdGlvbnMpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdqc29uJzpcbiAgICAgICAgICBleHBvcnRlZERhdGEgPSBKU09OLnN0cmluZ2lmeShwcm9kdWN0cywgbnVsbCwgMik7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3htbCc6XG4gICAgICAgICAgZXhwb3J0ZWREYXRhID0gYXdhaXQgdGhpcy5leHBvcnRUb1hNTChwcm9kdWN0cywgb3B0aW9ucyk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBleHBvcnQgZm9ybWF0OiAke29wdGlvbnMuZm9ybWF0fWApO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICBkYXRhOiBleHBvcnRlZERhdGEsXG4gICAgICAgIHN0YXRzOiB7XG4gICAgICAgICAgdG90YWw6IHByb2R1Y3RzLmxlbmd0aCxcbiAgICAgICAgICBleHBvcnRlZDogcHJvZHVjdHMubGVuZ3RoLFxuICAgICAgICAgIGZhaWxlZDogMCxcbiAgICAgICAgICB0aW1lRWxhcHNlZDogRGF0ZS5ub3coKSAtIHN0YXJ0VGltZSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgbG9nZ2VyLmVycm9yKCdBbGlFeHByZXNzIGV4cG9ydCBlcnJvcjonLCBlcnJvcik7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3JzOiBbZXJyb3IubWVzc2FnZV0sXG4gICAgICAgIHN0YXRzOiB7XG4gICAgICAgICAgdG90YWw6IHByb2R1Y3RzLmxlbmd0aCxcbiAgICAgICAgICBleHBvcnRlZDogMCxcbiAgICAgICAgICBmYWlsZWQ6IHByb2R1Y3RzLmxlbmd0aCxcbiAgICAgICAgICB0aW1lRWxhcHNlZDogRGF0ZS5ub3coKSAtIHN0YXJ0VGltZSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBpbXBvcnRGcm9tRmlsZShvcHRpb25zOiBJbXBvcnRPcHRpb25zKTogUHJvbWlzZTxNYXJrZXRwbGFjZVByb2R1Y3RbXT4ge1xuICAgIGlmICghb3B0aW9ucy5maWxlKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZpbGUgaXMgcmVxdWlyZWQgZm9yIGZpbGUgaW1wb3J0Jyk7XG4gICAgfVxuXG4gICAgY29uc3QgY29udGVudCA9IGF3YWl0IG9wdGlvbnMuZmlsZS50ZXh0KCk7XG4gICAgY29uc3QgZm9ybWF0ID0gb3B0aW9ucy5maWxlLm5hbWUuc3BsaXQoJy4nKS5wb3AoKT8udG9Mb3dlckNhc2UoKTtcblxuICAgIHN3aXRjaCAoZm9ybWF0KSB7XG4gICAgICBjYXNlICdjc3YnOlxuICAgICAgICByZXR1cm4gcGFyc2VDU1YoY29udGVudCk7XG4gICAgICBjYXNlICdqc29uJzpcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoY29udGVudCk7XG4gICAgICBjYXNlICd4bWwnOlxuICAgICAgICByZXR1cm4gcGFyc2VYTUwoY29udGVudCk7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGZpbGUgZm9ybWF0OiAke2Zvcm1hdH1gKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGltcG9ydEZyb21Vcmwob3B0aW9uczogSW1wb3J0T3B0aW9ucyk6IFByb21pc2U8TWFya2V0cGxhY2VQcm9kdWN0W10+IHtcbiAgICBpZiAoIW9wdGlvbnMudXJsKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VSTCBpcyByZXF1aXJlZCBmb3IgVVJMIGltcG9ydCcpO1xuICAgIH1cblxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KG9wdGlvbnMudXJsKTtcbiAgICBjb25zdCBjb250ZW50ID0gcmVzcG9uc2UuZGF0YTtcblxuICAgIHN3aXRjaCAob3B0aW9ucy5mb3JtYXQpIHtcbiAgICAgIGNhc2UgJ2Nzdic6XG4gICAgICAgIHJldHVybiBwYXJzZUNTVihjb250ZW50KTtcbiAgICAgIGNhc2UgJ2pzb24nOlxuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICAgIGNhc2UgJ3htbCc6XG4gICAgICAgIHJldHVybiBwYXJzZVhNTChjb250ZW50KTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgZm9ybWF0OiAke29wdGlvbnMuZm9ybWF0fWApO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgZmlsdGVyUHJvZHVjdHMocHJvZHVjdHM6IE1hcmtldHBsYWNlUHJvZHVjdFtdLCBmaWx0ZXJzOiBJbXBvcnRPcHRpb25zWydmaWx0ZXJzJ10pOiBNYXJrZXRwbGFjZVByb2R1Y3RbXSB7XG4gICAgaWYgKCFmaWx0ZXJzKSByZXR1cm4gcHJvZHVjdHM7XG5cbiAgICByZXR1cm4gcHJvZHVjdHMuZmlsdGVyKHByb2R1Y3QgPT4ge1xuICAgICAgaWYgKGZpbHRlcnMuY2F0ZWdvcmllcz8ubGVuZ3RoICYmICFmaWx0ZXJzLmNhdGVnb3JpZXMuc29tZShjID0+IHByb2R1Y3QuY2F0ZWdvcmllcy5pbmNsdWRlcyhjKSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgaWYgKGZpbHRlcnMucHJpY2VSYW5nZSkge1xuICAgICAgICBpZiAoZmlsdGVycy5wcmljZVJhbmdlLm1pbiAmJiBwcm9kdWN0LnByaWNlIDwgZmlsdGVycy5wcmljZVJhbmdlLm1pbikgcmV0dXJuIGZhbHNlO1xuICAgICAgICBpZiAoZmlsdGVycy5wcmljZVJhbmdlLm1heCAmJiBwcm9kdWN0LnByaWNlID4gZmlsdGVycy5wcmljZVJhbmdlLm1heCkgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIGV4cG9ydFRvQ1NWKHByb2R1Y3RzOiBNYXJrZXRwbGFjZVByb2R1Y3RbXSwgb3B0aW9uczogRXhwb3J0T3B0aW9ucyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgY29uc3QgZmllbGRzID0gdGhpcy5nZXRFeHBvcnRGaWVsZHMob3B0aW9ucyk7XG4gICAgcmV0dXJuIGNyZWF0ZUNTVihwcm9kdWN0cywgZmllbGRzKTtcbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgZXhwb3J0VG9YTUwocHJvZHVjdHM6IE1hcmtldHBsYWNlUHJvZHVjdFtdLCBvcHRpb25zOiBFeHBvcnRPcHRpb25zKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICBjb25zdCBmaWVsZHMgPSB0aGlzLmdldEV4cG9ydEZpZWxkcyhvcHRpb25zKTtcbiAgICByZXR1cm4gcGFyc2VYTUwoJ3Byb2R1Y3RzJywgcHJvZHVjdHMsIGZpZWxkcyk7XG4gIH1cblxuICBwcml2YXRlIGdldEV4cG9ydEZpZWxkcyhvcHRpb25zOiBFeHBvcnRPcHRpb25zKTogc3RyaW5nW10ge1xuICAgIGNvbnN0IGFsbEZpZWxkcyA9IFtcbiAgICAgICdpZCcsICd0aXRsZScsICdkZXNjcmlwdGlvbicsICdwcmljZScsICdjb21wYXJlQXRQcmljZScsXG4gICAgICAnc2t1JywgJ3F1YW50aXR5JywgJ2ltYWdlcycsICdjYXRlZ29yaWVzJywgJ3ZlbmRvcicsXG4gICAgICAnc291cmNlVXJsJywgJ3NvdXJjZUlkJywgJ3NvdXJjZVBsYXRmb3JtJyxcbiAgICBdO1xuXG4gICAgaWYgKG9wdGlvbnMuaW5jbHVkZUZpZWxkcykge1xuICAgICAgcmV0dXJuIG9wdGlvbnMuaW5jbHVkZUZpZWxkcztcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5leGNsdWRlRmllbGRzKSB7XG4gICAgICByZXR1cm4gYWxsRmllbGRzLmZpbHRlcihmaWVsZCA9PiAhb3B0aW9ucy5leGNsdWRlRmllbGRzIS5pbmNsdWRlcyhmaWVsZCkpO1xuICAgIH1cblxuICAgIHJldHVybiBhbGxGaWVsZHM7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQWxpRXhwcmVzc01hcmtldHBsYWNlO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBMkphQSxxQkFBcUIsV0FBQUEsQ0FBQTtJQUFBO0lBQUFDLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBckJILHFCQUFBOztFQXVNYkksT0FBcUMsV0FBQUEsQ0FBQTtJQUFBO0lBQUFILGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7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