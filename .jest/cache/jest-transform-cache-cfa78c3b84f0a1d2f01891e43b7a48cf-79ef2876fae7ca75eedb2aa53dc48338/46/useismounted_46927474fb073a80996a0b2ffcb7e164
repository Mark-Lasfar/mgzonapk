ad2838ee0b7394855e4bafa9afac6b53
"use strict";

/* istanbul ignore next */
function cov_1n7e37gl66() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/hooks/use-is-mounted.ts";
  var hash = "c44216ac17be86b76772d43febb04424ed14eb9e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/hooks/use-is-mounted.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 38
        },
        end: {
          line: 13,
          column: 65
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 11
        }
      },
      "6": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 27
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 21
        }
      },
      "8": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "useIsMounted",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 21
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 26
          },
          end: {
            line: 14,
            column: 27
          }
        },
        loc: {
          start: {
            line: 14,
            column: 30
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/hooks/use-is-mounted.ts"],
      sourcesContent: ["import { useEffect, useState } from 'react'\n\nfunction useIsMounted() {\n  const [isMounted, setIsMounted] = useState(false)\n\n  useEffect(() => {\n    setIsMounted(true)\n  }, [])\n\n  return isMounted\n}\n\nexport default useIsMounted\n"],
      names: ["useIsMounted", "isMounted", "setIsMounted", "useState", "useEffect"],
      mappings: ";;;;+BAYA;;;eAAA;;;uBAZoC;AAEpC,SAASA;IACP,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAC;IAE3CC,IAAAA,gBAAS,EAAC;QACRF,aAAa;IACf,GAAG,EAAE;IAEL,OAAOD;AACT;MAEA,WAAeD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c44216ac17be86b76772d43febb04424ed14eb9e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1n7e37gl66 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1n7e37gl66();
cov_1n7e37gl66().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1n7e37gl66().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1n7e37gl66().f[0]++;
    cov_1n7e37gl66().s[2]++;
    return _default;
  }
});
const _react =
/* istanbul ignore next */
(cov_1n7e37gl66().s[3]++, require("react"));
function useIsMounted() {
  /* istanbul ignore next */
  cov_1n7e37gl66().f[1]++;
  const [isMounted, setIsMounted] =
  /* istanbul ignore next */
  (cov_1n7e37gl66().s[4]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_1n7e37gl66().s[5]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1n7e37gl66().f[2]++;
    cov_1n7e37gl66().s[6]++;
    setIsMounted(true);
  }, []);
  /* istanbul ignore next */
  cov_1n7e37gl66().s[7]++;
  return isMounted;
}
const _default =
/* istanbul ignore next */
(cov_1n7e37gl66().s[8]++, useIsMounted);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW43ZTM3Z2w2NiIsImFjdHVhbENvdmVyYWdlIiwicyIsIl9kZWZhdWx0IiwidXNlSXNNb3VudGVkIiwiZiIsImlzTW91bnRlZCIsInNldElzTW91bnRlZCIsIl9yZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0Il0sInNvdXJjZXMiOlsiL2hvbWUvaGFnZXIvbmV3L215LW5leHRqcy1wcm9qZWN0LW1hc3RlciAoMykvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyL2hvb2tzL3VzZS1pcy1tb3VudGVkLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcblxuZnVuY3Rpb24gdXNlSXNNb3VudGVkKCkge1xuICBjb25zdCBbaXNNb3VudGVkLCBzZXRJc01vdW50ZWRdID0gdXNlU3RhdGUoZmFsc2UpXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRJc01vdW50ZWQodHJ1ZSlcbiAgfSwgW10pXG5cbiAgcmV0dXJuIGlzTW91bnRlZFxufVxuXG5leHBvcnQgZGVmYXVsdCB1c2VJc01vdW50ZWRcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBT087SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7Ozs7OzsrQkFLUDs7Ozs7O1dBQUFDLFFBQUE7Ozs7O2tDQVpvQztBQUVwQyxTQUFTQyxhQUFBO0VBQUE7RUFBQUosY0FBQSxHQUFBSyxDQUFBO0VBQ1AsTUFBTSxDQUFDQyxTQUFBLEVBQVdDLFlBQUEsQ0FBYTtFQUFBO0VBQUEsQ0FBQVAsY0FBQSxHQUFBRSxDQUFBLE9BQUcsSUFBQU0sTUFBQSxDQUFBQyxRQUFRLEVBQUM7RUFBQTtFQUFBVCxjQUFBLEdBQUFFLENBQUE7RUFFM0MsSUFBQU0sTUFBQSxDQUFBRSxTQUFTLEVBQUM7SUFBQTtJQUFBVixjQUFBLEdBQUFLLENBQUE7SUFBQUwsY0FBQSxHQUFBRSxDQUFBO0lBQ1JLLFlBQUEsQ0FBYTtFQUNmLEdBQUcsRUFBRTtFQUFBO0VBQUFQLGNBQUEsR0FBQUUsQ0FBQTtFQUVMLE9BQU9JLFNBQUE7QUFDVDtNQUVBSCxRQUFBO0FBQUE7QUFBQSxDQUFBSCxjQUFBLEdBQUFFLENBQUEsT0FBZUUsWUFBQSIsImlnbm9yZUxpc3QiOltdfQ==