{"version":3,"names":["cov_2gyshk9887","actualCoverage","s","default","f","HomePage","generateStaticParams","images","metadata","revalidate","mapProductToCardItem","product","name","image","b","Array","isArray","length","href","slug","price","finalPrice","rating","metrics","badge","getBadgeForProduct","mapCategoryToCardItem","category","encodeURIComponent","productCount","sales","tags","includes","undefined","fetchProductsByTag","tag","limit","products","_productactions","getProductsForCard","map","error","console","CardSectionSkeleton","_jsxruntime","jsxs","className","jsx","_skeleton","Skeleton","_","i","ProductSliderSkeleton","_card","Card","CardContent","t","_server","getTranslations","settings","_settingactions","getSetting","featuredCategoriesCount","common","featuredCategories","todaysDeals","bestSellingProducts","categories","newArrivals","featureds","bestSellers","flashDeals","Promise","all","getProductsByTag","getProductCategories","carousels","categoryCards","cards","title","link","text","items","layout","_react","Suspense","fallback","_homecarousel","HomeCarousel","_homecard","HomeCard","_productslider","viewAll","hideDetails","_browsinghistorylist","description","keywords","locale","domains","deviceSizes","imageSizes","formats"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(home)/page.tsx"],"sourcesContent":["import { Suspense } from 'react'\nimport BrowsingHistoryList from '@/components/shared/browsing-history-list'\nimport { HomeCard } from '@/components/shared/home/home-card'\nimport { HomeCarousel } from '@/components/shared/home/home-carousel'\nimport ProductSlider from '@/components/shared/product/product-slider'\nimport { Card, CardContent } from '@/components/ui/card'\nimport { Skeleton } from '@/components/ui/skeleton'\nimport {\n  getProductsForCard,\n  getProductsByTag,\n  getProductCategories,\n} from '@/lib/actions/product.actions'\nimport { getSetting } from '@/lib/actions/setting.actions'\nimport { getTranslations } from 'next-intl/server'\n\n// Types\ninterface ProductBase {\n  _id: string\n  name: string\n  images: string[]\n  slug: string\n  price: number\n  finalPrice?: number\n  description?: string\n  category?: string\n  tags?: string[]\n  metrics?: {\n    rating: number\n    sales: number\n  }\n}\n\ninterface CardItem {\n  name: string\n  image: string\n  href: string\n  badge?: string\n  price?: number\n  rating?: number\n}\n\ninterface CardSection {\n  title: string\n  items: CardItem[]\n  link: {\n    text: string\n    href: string\n  }\n  layout?: 'grid' | 'carousel'\n}\n\n// Helper Functions\nfunction mapProductToCardItem(product: ProductBase): CardItem {\n  return {\n    name: product.name,\n    image: Array.isArray(product.images) && product.images.length > 0\n      ? product.images[0]\n      : '/images/fallback.jpg',\n    href: `/product/${product.slug}`,\n    price: product.finalPrice || product.price,\n    rating: product.metrics?.rating,\n    badge: getBadgeForProduct(product)\n  }\n}\n\nfunction mapCategoryToCardItem(category: any): CardItem {\n  return {\n    name: category.name,\n    image: category.image || '/images/fallback.jpg',\n    href: `/search?category=${encodeURIComponent(category.name)}`,\n    badge: `${category.productCount || 0} Products`\n  }\n}\n\nfunction getBadgeForProduct(product: ProductBase): string | undefined {\n  if (product.metrics?.sales && product.metrics.sales > 100) {\n    return 'Best Seller'\n  }\n  if (product.tags?.includes('new-arrival')) {\n    return 'New'\n  }\n  if (product.tags?.includes('sale')) {\n    return 'Sale'\n  }\n  return undefined\n}\n\nasync function fetchProductsByTag(tag: string, limit = 4) {\n  try {\n    const products = await getProductsForCard({ tag, limit })\n    return products.map(mapProductToCardItem)\n  } catch (error) {\n    console.error(`Error fetching products for tag ${tag}:`, error)\n    return []\n  }\n}\n\n// Loading Components\nfunction CardSectionSkeleton() {\n  return (\n    <div className=\"space-y-4\">\n      <Skeleton className=\"h-8 w-1/3\" />\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n        {[...Array(4)].map((_, i) => (\n          <div key={i} className=\"space-y-3\">\n            <Skeleton className=\"h-48 w-full rounded-lg\" />\n            <Skeleton className=\"h-4 w-2/3\" />\n            <Skeleton className=\"h-4 w-1/2\" />\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nfunction ProductSliderSkeleton() {\n  return (\n    <Card className=\"w-full rounded-none\">\n      <CardContent className=\"p-4\">\n        <Skeleton className=\"h-8 w-1/4 mb-4\" />\n        <div className=\"flex gap-4 overflow-hidden\">\n          {[...Array(4)].map((_, i) => (\n            <div key={i} className=\"w-48 flex-shrink-0 space-y-3\">\n              <Skeleton className=\"h-48 w-full rounded-lg\" />\n              <Skeleton className=\"h-4 w-3/4\" />\n              <Skeleton className=\"h-4 w-1/2\" />\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n\n// Main Component\nexport default async function HomePage() {\n  const t = await getTranslations('Home')\n  \n  // Get settings first\n  const settings = await getSetting()\n  const featuredCategoriesCount = settings.common?.featuredCategories || 4\n  \n  // Fetch all data in parallel\n  const [\n    todaysDeals,\n    bestSellingProducts,\n    categories,\n    newArrivals,\n    featureds,\n    bestSellers,\n    flashDeals,\n  ] = await Promise.all([\n    getProductsByTag({ tag: 'todays-deal', limit: 8 }),\n    getProductsByTag({ tag: 'best-seller', limit: 8 }),\n    getProductCategories(featuredCategoriesCount),\n    fetchProductsByTag('new-arrival', 4),\n    fetchProductsByTag('featured', 4),\n    fetchProductsByTag('best-seller', 4),\n    fetchProductsByTag('flash-sale', 4),\n  ])\n\n  const carousels = settings.carousels || []\n\n  // Map categories to card items\n  const categoryCards = categories.map(mapCategoryToCardItem)\n\n  // Define card sections\n  const cards: CardSection[] = [\n    {\n      title: t('Categories to explore'),\n      link: {\n        text: t('See More'),\n        href: '/search',\n      },\n      items: categoryCards,\n      layout: 'grid'\n    },\n    {\n      title: t('Explore New Arrivals'),\n      items: newArrivals,\n      link: {\n        text: t('View All'),\n        href: '/search?tag=new-arrival',\n      },\n      layout: 'carousel'\n    },\n    {\n      title: t('Flash Deals'),\n      items: flashDeals,\n      link: {\n        text: t('Shop Now'),\n        href: '/search?tag=flash-sale',\n      },\n      layout: 'grid'\n    },\n    {\n      title: t('Discover Best Sellers'),\n      items: bestSellers,\n      link: {\n        text: t('View All'),\n        href: '/search?tag=best-seller',\n      },\n      layout: 'carousel'\n    },\n    {\n      title: t('Featured Products'),\n      items: featureds,\n      link: {\n        text: t('Shop Now'),\n        href: '/search?tag=featured',\n      },\n      layout: 'grid'\n    },\n  ]\n\n  return (\n    <main className=\"min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"relative\">\n        <Suspense fallback={<Skeleton className=\"h-[400px] w-full\" />}>\n          <HomeCarousel items={carousels} />\n        </Suspense>\n      </section>\n\n      {/* Main Content */}\n      <div className=\"md:p-4 md:space-y-4 bg-border\">\n        {/* Categories and Featured Sections */}\n        <Suspense fallback={<CardSectionSkeleton />}>\n          <HomeCard cards={cards} />\n        </Suspense>\n\n        {/* Today's Deals */}\n        <Suspense fallback={<ProductSliderSkeleton />}>\n          <Card className=\"w-full rounded-none\">\n            <CardContent className=\"p-4 items-center gap-3\">\n              <ProductSlider \n                title={t(\"Today's Deals\")} \n                products={todaysDeals}\n                viewAll=\"/search?tag=todays-deal\"\n              />\n            </CardContent>\n          </Card>\n        </Suspense>\n\n        {/* Best Selling Products */}\n        <Suspense fallback={<ProductSliderSkeleton />}>\n          <Card className=\"w-full rounded-none\">\n            <CardContent className=\"p-4 items-center gap-3\">\n              <ProductSlider\n                title={t('Best Selling Products')}\n                products={bestSellingProducts}\n                viewAll=\"/search?tag=best-seller\"\n                hideDetails\n              />\n            </CardContent>\n          </Card>\n        </Suspense>\n      </div>\n\n      {/* Browsing History */}\n      <div className=\"p-4 bg-background\">\n        <Suspense fallback={<CardSectionSkeleton />}>\n          <BrowsingHistoryList />\n        </Suspense>\n      </div>\n    </main>\n  )\n}\n\n// Metadata\nexport const metadata = {\n  title: 'Home | MGZon',\n  description: 'Discover amazing products at great prices',\n  keywords: 'online shopping, e-commerce, deals, best sellers, new arrivals',\n}\n\n// Cache and revalidation\nexport const revalidate = 3600 // Revalidate every hour\n\n// Generate static params\nexport async function generateStaticParams() {\n  return [{ locale: 'en' }, { locale: 'ar' }]\n}\n\n// Optimize images\nexport const images = {\n  domains: ['res.cloudinary.com', 'hager-zon.vercel.app'],\n  deviceSizes: [640, 750, 828, 1080, 1200, 1920],\n  imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],\n  formats: ['image/webp'],\n}"],"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","ignoreList":[]}