407e2466ef69b3447a7f73bbc66dfaea
"use strict";

/* istanbul ignore next */
function cov_1wjs2gdirc() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/earnings/route.ts";
  var hash = "b1228d87feb3ddea26337dfc363b7542156b2793";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/earnings/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 109
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "7": {
        start: {
          line: 20,
          column: 33
        },
        end: {
          line: 20,
          column: 49
        }
      },
      "8": {
        start: {
          line: 21,
          column: 26
        },
        end: {
          line: 21,
          column: 55
        }
      },
      "9": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "10": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 28,
          column: 15
        }
      },
      "11": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 30,
          column: 71
        }
      },
      "12": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "13": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 37,
          column: 15
        }
      },
      "14": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "15": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 53,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "GET",
        decl: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 18
          }
        },
        loc: {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/earnings/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport Partner from '@/lib/db/models/partner.model';\n\nexport async function GET(req: NextRequest) {\n  try {\n    const { searchParams } = new URL(req.url);\n    const partnerId = searchParams.get('partnerId');\n\n    if (!partnerId) {\n      return NextResponse.json({ success: false, message: 'Partner ID is required' }, { status: 400 });\n    }\n\n    const partner = await Partner.findById(partnerId);\n\n    if (!partner) {\n      return NextResponse.json({ success: false, message: 'Partner not found' }, { status: 404 });\n    }\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        totalEarnings: partner.totalEarnings,\n        balance: partner.balance,\n        transactions: partner.transactions,\n      },\n    });\n  } catch (error) {\n    return NextResponse.json({ success: false, message: error.message }, { status: 500 });\n  }\n}"],
      names: ["GET", "req", "searchParams", "URL", "url", "partnerId", "get", "NextResponse", "json", "success", "message", "status", "partner", "Partner", "findById", "data", "totalEarnings", "balance", "transactions", "error"],
      mappings: ";;;;+BAGsBA;;;eAAAA;;;wBAHoB;qEACtB;;;;;;AAEb,eAAeA,IAAIC,GAAgB;IACxC,IAAI;QACF,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAIC,IAAIF,IAAIG,GAAG;QACxC,MAAMC,YAAYH,aAAaI,GAAG,CAAC;QAEnC,IAAI,CAACD,WAAW;YACd,OAAOE,oBAAY,CAACC,IAAI,CAAC;gBAAEC,SAAS;gBAAOC,SAAS;YAAyB,GAAG;gBAAEC,QAAQ;YAAI;QAChG;QAEA,MAAMC,UAAU,MAAMC,qBAAO,CAACC,QAAQ,CAACT;QAEvC,IAAI,CAACO,SAAS;YACZ,OAAOL,oBAAY,CAACC,IAAI,CAAC;gBAAEC,SAAS;gBAAOC,SAAS;YAAoB,GAAG;gBAAEC,QAAQ;YAAI;QAC3F;QAEA,OAAOJ,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTM,MAAM;gBACJC,eAAeJ,QAAQI,aAAa;gBACpCC,SAASL,QAAQK,OAAO;gBACxBC,cAAcN,QAAQM,YAAY;YACpC;QACF;IACF,EAAE,OAAOC,OAAO;QACd,OAAOZ,oBAAY,CAACC,IAAI,CAAC;YAAEC,SAAS;YAAOC,SAASS,MAAMT,OAAO;QAAC,GAAG;YAAEC,QAAQ;QAAI;IACrF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b1228d87feb3ddea26337dfc363b7542156b2793"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wjs2gdirc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wjs2gdirc();
cov_1wjs2gdirc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1wjs2gdirc().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1wjs2gdirc().f[0]++;
    cov_1wjs2gdirc().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_1wjs2gdirc().s[3]++, require("next/server"));
const _partnermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_1wjs2gdirc().s[4]++, _interop_require_default(require("../../../lib/db/models/partner.model")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1wjs2gdirc().f[1]++;
  cov_1wjs2gdirc().s[5]++;
  return /* istanbul ignore next */(cov_1wjs2gdirc().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1wjs2gdirc().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1wjs2gdirc().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1wjs2gdirc().b[0][1]++, {
    default: obj
  });
}
async function GET(req) {
  /* istanbul ignore next */
  cov_1wjs2gdirc().f[2]++;
  cov_1wjs2gdirc().s[6]++;
  try {
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1wjs2gdirc().s[7]++, new URL(req.url));
    const partnerId =
    /* istanbul ignore next */
    (cov_1wjs2gdirc().s[8]++, searchParams.get('partnerId'));
    /* istanbul ignore next */
    cov_1wjs2gdirc().s[9]++;
    if (!partnerId) {
      /* istanbul ignore next */
      cov_1wjs2gdirc().b[2][0]++;
      cov_1wjs2gdirc().s[10]++;
      return _server.NextResponse.json({
        success: false,
        message: 'Partner ID is required'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wjs2gdirc().b[2][1]++;
    }
    const partner =
    /* istanbul ignore next */
    (cov_1wjs2gdirc().s[11]++, await _partnermodel.default.findById(partnerId));
    /* istanbul ignore next */
    cov_1wjs2gdirc().s[12]++;
    if (!partner) {
      /* istanbul ignore next */
      cov_1wjs2gdirc().b[3][0]++;
      cov_1wjs2gdirc().s[13]++;
      return _server.NextResponse.json({
        success: false,
        message: 'Partner not found'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wjs2gdirc().b[3][1]++;
    }
    cov_1wjs2gdirc().s[14]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        totalEarnings: partner.totalEarnings,
        balance: partner.balance,
        transactions: partner.transactions
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wjs2gdirc().s[15]++;
    return _server.NextResponse.json({
      success: false,
      message: error.message
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHRVQiLCJyZXEiLCJjb3ZfMXdqczJnZGlyYyIsImYiLCJzIiwic2VhcmNoUGFyYW1zIiwiVVJMIiwidXJsIiwicGFydG5lcklkIiwiZ2V0IiwiYiIsIl9zZXJ2ZXIiLCJOZXh0UmVzcG9uc2UiLCJqc29uIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJwYXJ0bmVyIiwiX3BhcnRuZXJtb2RlbCIsImRlZmF1bHQiLCJmaW5kQnlJZCIsImRhdGEiLCJ0b3RhbEVhcm5pbmdzIiwiYmFsYW5jZSIsInRyYW5zYWN0aW9ucyIsImVycm9yIl0sInNvdXJjZXMiOlsiL2hvbWUvaGFnZXIvbmV3L215LW5leHRqcy1wcm9qZWN0LW1hc3RlciAoMykvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyL2FwcC9hcGkvZWFybmluZ3Mvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCBQYXJ0bmVyIGZyb20gJ0AvbGliL2RiL21vZGVscy9wYXJ0bmVyLm1vZGVsJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXE6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxLnVybCk7XG4gICAgY29uc3QgcGFydG5lcklkID0gc2VhcmNoUGFyYW1zLmdldCgncGFydG5lcklkJyk7XG5cbiAgICBpZiAoIXBhcnRuZXJJZCkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6ICdQYXJ0bmVyIElEIGlzIHJlcXVpcmVkJyB9LCB7IHN0YXR1czogNDAwIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IHBhcnRuZXIgPSBhd2FpdCBQYXJ0bmVyLmZpbmRCeUlkKHBhcnRuZXJJZCk7XG5cbiAgICBpZiAoIXBhcnRuZXIpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiAnUGFydG5lciBub3QgZm91bmQnIH0sIHsgc3RhdHVzOiA0MDQgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIHRvdGFsRWFybmluZ3M6IHBhcnRuZXIudG90YWxFYXJuaW5ncyxcbiAgICAgICAgYmFsYW5jZTogcGFydG5lci5iYWxhbmNlLFxuICAgICAgICB0cmFuc2FjdGlvbnM6IHBhcnRuZXIudHJhbnNhY3Rpb25zLFxuICAgICAgfSxcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogZXJyb3IubWVzc2FnZSB9LCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQUdzQjs7Ozs7O1dBQUFBLEdBQUE7Ozs7O2tDQUhvQjs7O3dFQUN0Qjs7Ozs7Ozs7Ozs7Ozs7O0FBRWIsZUFBZUEsSUFBSUMsR0FBZ0I7RUFBQTtFQUFBQyxjQUFBLEdBQUFDLENBQUE7RUFBQUQsY0FBQSxHQUFBRSxDQUFBO0VBQ3hDLElBQUk7SUFDRixNQUFNO01BQUVDO0lBQVksQ0FBRTtJQUFBO0lBQUEsQ0FBQUgsY0FBQSxHQUFBRSxDQUFBLE9BQUcsSUFBSUUsR0FBQSxDQUFJTCxHQUFBLENBQUlNLEdBQUc7SUFDeEMsTUFBTUMsU0FBQTtJQUFBO0lBQUEsQ0FBQU4sY0FBQSxHQUFBRSxDQUFBLE9BQVlDLFlBQUEsQ0FBYUksR0FBRyxDQUFDO0lBQUE7SUFBQVAsY0FBQSxHQUFBRSxDQUFBO0lBRW5DLElBQUksQ0FBQ0ksU0FBQSxFQUFXO01BQUE7TUFBQU4sY0FBQSxHQUFBUSxDQUFBO01BQUFSLGNBQUEsR0FBQUUsQ0FBQTtNQUNkLE9BQU9PLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQUM7UUFBRUMsT0FBQSxFQUFTO1FBQU9DLE9BQUEsRUFBUztNQUF5QixHQUFHO1FBQUVDLE1BQUEsRUFBUTtNQUFJO0lBQ2hHO0lBQUE7SUFBQTtNQUFBZCxjQUFBLEdBQUFRLENBQUE7SUFBQTtJQUVBLE1BQU1PLE9BQUE7SUFBQTtJQUFBLENBQUFmLGNBQUEsR0FBQUUsQ0FBQSxRQUFVLE1BQU1jLGFBQUEsQ0FBQUMsT0FBTyxDQUFDQyxRQUFRLENBQUNaLFNBQUE7SUFBQTtJQUFBTixjQUFBLEdBQUFFLENBQUE7SUFFdkMsSUFBSSxDQUFDYSxPQUFBLEVBQVM7TUFBQTtNQUFBZixjQUFBLEdBQUFRLENBQUE7TUFBQVIsY0FBQSxHQUFBRSxDQUFBO01BQ1osT0FBT08sT0FBQSxDQUFBQyxZQUFZLENBQUNDLElBQUksQ0FBQztRQUFFQyxPQUFBLEVBQVM7UUFBT0MsT0FBQSxFQUFTO01BQW9CLEdBQUc7UUFBRUMsTUFBQSxFQUFRO01BQUk7SUFDM0Y7SUFBQTtJQUFBO01BQUFkLGNBQUEsR0FBQVEsQ0FBQTtJQUFBO0lBQUFSLGNBQUEsR0FBQUUsQ0FBQTtJQUVBLE9BQU9PLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQUM7TUFDdkJDLE9BQUEsRUFBUztNQUNUTyxJQUFBLEVBQU07UUFDSkMsYUFBQSxFQUFlTCxPQUFBLENBQVFLLGFBQWE7UUFDcENDLE9BQUEsRUFBU04sT0FBQSxDQUFRTSxPQUFPO1FBQ3hCQyxZQUFBLEVBQWNQLE9BQUEsQ0FBUU87TUFDeEI7SUFDRjtFQUNGLEVBQUUsT0FBT0MsS0FBQSxFQUFPO0lBQUE7SUFBQXZCLGNBQUEsR0FBQUUsQ0FBQTtJQUNkLE9BQU9PLE9BQUEsQ0FBQUMsWUFBWSxDQUFDQyxJQUFJLENBQUM7TUFBRUMsT0FBQSxFQUFTO01BQU9DLE9BQUEsRUFBU1UsS0FBQSxDQUFNVjtJQUFRLEdBQUc7TUFBRUMsTUFBQSxFQUFRO0lBQUk7RUFDckY7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==