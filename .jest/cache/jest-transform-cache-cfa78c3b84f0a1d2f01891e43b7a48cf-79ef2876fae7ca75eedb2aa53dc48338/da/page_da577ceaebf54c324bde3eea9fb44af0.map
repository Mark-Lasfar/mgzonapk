{"version":3,"names":["ResetPasswordFinal","cov_1ta761vpep","f","password","setPassword","s","_react","useState","confirm","setConfirm","email","setEmail","error","setError","router","_navigation","useRouter","toast","_usetoast","useToast","useEffect","storedEmail","localStorage","getItem","b","push","handleSubmit","e","preventDefault","description","variant","res","fetch","method","headers","body","JSON","stringify","ok","removeItem","data","json","errorMsg","err","_jsxruntime","jsx","className","jsxs","_card","Card","CardHeader","CardTitle","CardContent","onSubmit","_label","Label","htmlFor","_input","Input","id","type","placeholder","value","onChange","target","required","_button","Button"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(auth)/reset-password-final/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function ResetPasswordFinal() {\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const router = useRouter();\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('recoveryEmail');\n    if (!storedEmail) {\n      router.push('/reset-password');\n    } else {\n      setEmail(storedEmail);\n    }\n  }, [router]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    if (password !== confirm) {\n      setError('Passwords do not match');\n      toast({ description: 'Passwords do not match', variant: 'destructive' });\n      return;\n    }\n\n    try {\n      const res = await fetch('/api/auth/update-password', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (res.ok) {\n        localStorage.removeItem('recoveryEmail');\n        toast({ description: 'Password updated successfully', variant: 'default' });\n        router.push('/sign-in');\n      } else {\n        const data = await res.json();\n        const errorMsg = data.error || 'Error updating password';\n        setError(errorMsg);\n        toast({ description: errorMsg, variant: 'destructive' });\n      }\n    } catch (err) {\n      const errorMsg = 'An error occurred. Please try again.';\n      setError(errorMsg);\n      toast({ description: errorMsg, variant: 'destructive' });\n    }\n  };\n\n  return (\n    <main className=\"max-w-md mx-auto py-8\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Set New Password</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"password\">New Password</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"New password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"confirm\">Confirm Password</Label>\n              <Input\n                id=\"confirm\"\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                value={confirm}\n                onChange={(e) => setConfirm(e.target.value)}\n                required\n              />\n            </div>\n            {error && <p className=\"text-red-500\">{error}</p>}\n            <Button type=\"submit\" className=\"w-full bg-green-600 hover:bg-green-700\">\n              Update Password\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </main>\n  );\n}"],"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","ignoreList":[]}