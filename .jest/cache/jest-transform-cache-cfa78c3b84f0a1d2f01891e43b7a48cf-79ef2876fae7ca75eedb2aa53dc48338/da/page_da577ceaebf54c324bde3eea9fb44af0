521e5f0bfdb3fc5d7c36ed98a182f09c
'use client';
"use strict";

/* istanbul ignore next */
function cov_1ta761vpep() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(auth)/reset-password-final/page.tsx";
  var hash = "f79f3d86e6f09bc830d63bcd4bf71f5dc84f28a1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(auth)/reset-password-final/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "6": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "7": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 57
        }
      },
      "8": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 59
        }
      },
      "9": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 57
        }
      },
      "10": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 56
        }
      },
      "11": {
        start: {
          line: 21,
          column: 36
        },
        end: {
          line: 21,
          column: 60
        }
      },
      "12": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 58
        }
      },
      "13": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 23,
          column: 54
        }
      },
      "14": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "15": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 47
        }
      },
      "16": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "17": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 36,
          column: 7
        }
      },
      "18": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 65
        }
      },
      "19": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "20": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 43
        }
      },
      "21": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 34
        }
      },
      "22": {
        start: {
          line: 37,
          column: 25
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "23": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 27
        }
      },
      "24": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 21
        }
      },
      "25": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "26": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 47
        }
      },
      "27": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 45,
          column: 15
        }
      },
      "28": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 19
        }
      },
      "29": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "30": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 58,
          column: 14
        }
      },
      "31": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 74,
          column: 13
        }
      },
      "32": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 57
        }
      },
      "33": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 64,
          column: 19
        }
      },
      "34": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 40
        }
      },
      "35": {
        start: {
          line: 67,
          column: 29
        },
        end: {
          line: 67,
          column: 45
        }
      },
      "36": {
        start: {
          line: 68,
          column: 33
        },
        end: {
          line: 68,
          column: 72
        }
      },
      "37": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 35
        }
      },
      "38": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 73,
          column: 19
        }
      },
      "39": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 76,
          column: 67
        }
      },
      "40": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 31
        }
      },
      "41": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 81,
          column: 15
        }
      },
      "42": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 144,
          column: 7
        }
      },
      "43": {
        start: {
          line: 109,
          column: 55
        },
        end: {
          line: 109,
          column: 82
        }
      },
      "44": {
        start: {
          line: 125,
          column: 55
        },
        end: {
          line: 125,
          column: 81
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "ResetPasswordFinal",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 27
          }
        },
        loc: {
          start: {
            line: 20,
            column: 30
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 27,
            column: 27
          }
        },
        loc: {
          start: {
            line: 27,
            column: 30
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 27
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 37,
            column: 26
          }
        },
        loc: {
          start: {
            line: 37,
            column: 36
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 109,
            column: 50
          },
          end: {
            line: 109,
            column: 51
          }
        },
        loc: {
          start: {
            line: 109,
            column: 55
          },
          end: {
            line: 109,
            column: 82
          }
        },
        line: 109
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 125,
            column: 50
          },
          end: {
            line: 125,
            column: 51
          }
        },
        loc: {
          start: {
            line: 125,
            column: 55
          },
          end: {
            line: 125,
            column: 81
          }
        },
        line: 125
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 33,
            column: 9
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        }, {
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 74,
            column: 13
          }
        }],
        line: 59
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 33
          },
          end: {
            line: 68,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 33
          },
          end: {
            line: 68,
            column: 43
          }
        }, {
          start: {
            line: 68,
            column: 47
          },
          end: {
            line: 68,
            column: 72
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 130,
            column: 28
          },
          end: {
            line: 133,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 28
          },
          end: {
            line: 130,
            column: 33
          }
        }, {
          start: {
            line: 130,
            column: 51
          },
          end: {
            line: 133,
            column: 30
          }
        }],
        line: 130
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(auth)/reset-password-final/page.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function ResetPasswordFinal() {\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const router = useRouter();\n  const { toast } = useToast();\n\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('recoveryEmail');\n    if (!storedEmail) {\n      router.push('/reset-password');\n    } else {\n      setEmail(storedEmail);\n    }\n  }, [router]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    if (password !== confirm) {\n      setError('Passwords do not match');\n      toast({ description: 'Passwords do not match', variant: 'destructive' });\n      return;\n    }\n\n    try {\n      const res = await fetch('/api/auth/update-password', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (res.ok) {\n        localStorage.removeItem('recoveryEmail');\n        toast({ description: 'Password updated successfully', variant: 'default' });\n        router.push('/sign-in');\n      } else {\n        const data = await res.json();\n        const errorMsg = data.error || 'Error updating password';\n        setError(errorMsg);\n        toast({ description: errorMsg, variant: 'destructive' });\n      }\n    } catch (err) {\n      const errorMsg = 'An error occurred. Please try again.';\n      setError(errorMsg);\n      toast({ description: errorMsg, variant: 'destructive' });\n    }\n  };\n\n  return (\n    <main className=\"max-w-md mx-auto py-8\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Set New Password</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"password\">New Password</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"New password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"confirm\">Confirm Password</Label>\n              <Input\n                id=\"confirm\"\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                value={confirm}\n                onChange={(e) => setConfirm(e.target.value)}\n                required\n              />\n            </div>\n            {error && <p className=\"text-red-500\">{error}</p>}\n            <Button type=\"submit\" className=\"w-full bg-green-600 hover:bg-green-700\">\n              Update Password\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </main>\n  );\n}"],
      names: ["ResetPasswordFinal", "password", "setPassword", "useState", "confirm", "setConfirm", "email", "setEmail", "error", "setError", "router", "useRouter", "toast", "useToast", "useEffect", "storedEmail", "localStorage", "getItem", "push", "handleSubmit", "e", "preventDefault", "description", "variant", "res", "fetch", "method", "headers", "body", "JSON", "stringify", "ok", "removeItem", "data", "json", "errorMsg", "err", "main", "className", "Card", "CardHeader", "CardTitle", "CardContent", "form", "onSubmit", "div", "Label", "htmlFor", "Input", "id", "type", "placeholder", "value", "onChange", "target", "required", "p", "Button"],
      mappings: "AAAA;;;;;+BAUA;;;eAAwBA;;;;uBARY;4BACV;sBAC+B;uBACnC;wBACC;uBACD;0BACG;AAEV,SAASA;IACtB,MAAM,CAACC,UAAUC,YAAY,GAAGC,IAAAA,eAAQ,EAAC;IACzC,MAAM,CAACC,SAASC,WAAW,GAAGF,IAAAA,eAAQ,EAAC;IACvC,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAC;IACnC,MAAM,CAACK,OAAOC,SAAS,GAAGN,IAAAA,eAAQ,EAAC;IACnC,MAAMO,SAASC,IAAAA,qBAAS;IACxB,MAAM,EAAEC,KAAK,EAAE,GAAGC,IAAAA,kBAAQ;IAE1BC,IAAAA,gBAAS,EAAC;QACR,MAAMC,cAAcC,aAAaC,OAAO,CAAC;QACzC,IAAI,CAACF,aAAa;YAChBL,OAAOQ,IAAI,CAAC;QACd,OAAO;YACLX,SAASQ;QACX;IACF,GAAG;QAACL;KAAO;IAEX,MAAMS,eAAe,OAAOC;QAC1BA,EAAEC,cAAc;QAChBZ,SAAS;QAET,IAAIR,aAAaG,SAAS;YACxBK,SAAS;YACTG,MAAM;gBAAEU,aAAa;gBAA0BC,SAAS;YAAc;YACtE;QACF;QAEA,IAAI;YACF,MAAMC,MAAM,MAAMC,MAAM,6BAA6B;gBACnDC,QAAQ;gBACRC,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9CC,MAAMC,KAAKC,SAAS,CAAC;oBAAExB;oBAAOL;gBAAS;YACzC;YAEA,IAAIuB,IAAIO,EAAE,EAAE;gBACVf,aAAagB,UAAU,CAAC;gBACxBpB,MAAM;oBAAEU,aAAa;oBAAiCC,SAAS;gBAAU;gBACzEb,OAAOQ,IAAI,CAAC;YACd,OAAO;gBACL,MAAMe,OAAO,MAAMT,IAAIU,IAAI;gBAC3B,MAAMC,WAAWF,KAAKzB,KAAK,IAAI;gBAC/BC,SAAS0B;gBACTvB,MAAM;oBAAEU,aAAaa;oBAAUZ,SAAS;gBAAc;YACxD;QACF,EAAE,OAAOa,KAAK;YACZ,MAAMD,WAAW;YACjB1B,SAAS0B;YACTvB,MAAM;gBAAEU,aAAaa;gBAAUZ,SAAS;YAAc;QACxD;IACF;IAEA,qBACE,qBAACc;QAAKC,WAAU;kBACd,cAAA,sBAACC,UAAI;;8BACH,qBAACC,gBAAU;8BACT,cAAA,qBAACC,eAAS;kCAAC;;;8BAEb,qBAACC,iBAAW;8BACV,cAAA,sBAACC;wBAAKC,UAAUzB;wBAAcmB,WAAU;;0CACtC,sBAACO;;kDACC,qBAACC,YAAK;wCAACC,SAAQ;kDAAW;;kDAC1B,qBAACC,YAAK;wCACJC,IAAG;wCACHC,MAAK;wCACLC,aAAY;wCACZC,OAAOnD;wCACPoD,UAAU,CAACjC,IAAMlB,YAAYkB,EAAEkC,MAAM,CAACF,KAAK;wCAC3CG,QAAQ;;;;0CAGZ,sBAACV;;kDACC,qBAACC,YAAK;wCAACC,SAAQ;kDAAU;;kDACzB,qBAACC,YAAK;wCACJC,IAAG;wCACHC,MAAK;wCACLC,aAAY;wCACZC,OAAOhD;wCACPiD,UAAU,CAACjC,IAAMf,WAAWe,EAAEkC,MAAM,CAACF,KAAK;wCAC1CG,QAAQ;;;;4BAGX/C,uBAAS,qBAACgD;gCAAElB,WAAU;0CAAgB9B;;0CACvC,qBAACiD,cAAM;gCAACP,MAAK;gCAASZ,WAAU;0CAAyC;;;;;;;;AAQrF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f79f3d86e6f09bc830d63bcd4bf71f5dc84f28a1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ta761vpep = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ta761vpep();
cov_1ta761vpep().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ta761vpep().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1ta761vpep().f[0]++;
    cov_1ta761vpep().s[2]++;
    return ResetPasswordFinal;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1ta761vpep().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1ta761vpep().s[4]++, require("react"));
const _navigation =
/* istanbul ignore next */
(cov_1ta761vpep().s[5]++, require("next/navigation"));
const _card =
/* istanbul ignore next */
(cov_1ta761vpep().s[6]++, require("../../../../components/ui/card"));
const _input =
/* istanbul ignore next */
(cov_1ta761vpep().s[7]++, require("../../../../components/ui/input"));
const _button =
/* istanbul ignore next */
(cov_1ta761vpep().s[8]++, require("../../../../components/ui/button"));
const _label =
/* istanbul ignore next */
(cov_1ta761vpep().s[9]++, require("../../../../components/ui/label"));
const _usetoast =
/* istanbul ignore next */
(cov_1ta761vpep().s[10]++, require("../../../../hooks/use-toast"));
function ResetPasswordFinal() {
  /* istanbul ignore next */
  cov_1ta761vpep().f[1]++;
  const [password, setPassword] =
  /* istanbul ignore next */
  (cov_1ta761vpep().s[11]++, (0, _react.useState)(''));
  const [confirm, setConfirm] =
  /* istanbul ignore next */
  (cov_1ta761vpep().s[12]++, (0, _react.useState)(''));
  const [email, setEmail] =
  /* istanbul ignore next */
  (cov_1ta761vpep().s[13]++, (0, _react.useState)(''));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1ta761vpep().s[14]++, (0, _react.useState)(''));
  const router =
  /* istanbul ignore next */
  (cov_1ta761vpep().s[15]++, (0, _navigation.useRouter)());
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_1ta761vpep().s[16]++, (0, _usetoast.useToast)());
  /* istanbul ignore next */
  cov_1ta761vpep().s[17]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1ta761vpep().f[2]++;
    const storedEmail =
    /* istanbul ignore next */
    (cov_1ta761vpep().s[18]++, localStorage.getItem('recoveryEmail'));
    /* istanbul ignore next */
    cov_1ta761vpep().s[19]++;
    if (!storedEmail) {
      /* istanbul ignore next */
      cov_1ta761vpep().b[0][0]++;
      cov_1ta761vpep().s[20]++;
      router.push('/reset-password');
    } else {
      /* istanbul ignore next */
      cov_1ta761vpep().b[0][1]++;
      cov_1ta761vpep().s[21]++;
      setEmail(storedEmail);
    }
  }, [router]);
  /* istanbul ignore next */
  cov_1ta761vpep().s[22]++;
  const handleSubmit = async e => {
    /* istanbul ignore next */
    cov_1ta761vpep().f[3]++;
    cov_1ta761vpep().s[23]++;
    e.preventDefault();
    /* istanbul ignore next */
    cov_1ta761vpep().s[24]++;
    setError('');
    /* istanbul ignore next */
    cov_1ta761vpep().s[25]++;
    if (password !== confirm) {
      /* istanbul ignore next */
      cov_1ta761vpep().b[1][0]++;
      cov_1ta761vpep().s[26]++;
      setError('Passwords do not match');
      /* istanbul ignore next */
      cov_1ta761vpep().s[27]++;
      toast({
        description: 'Passwords do not match',
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_1ta761vpep().s[28]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ta761vpep().b[1][1]++;
    }
    cov_1ta761vpep().s[29]++;
    try {
      const res =
      /* istanbul ignore next */
      (cov_1ta761vpep().s[30]++, await fetch('/api/auth/update-password', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          email,
          password
        })
      }));
      /* istanbul ignore next */
      cov_1ta761vpep().s[31]++;
      if (res.ok) {
        /* istanbul ignore next */
        cov_1ta761vpep().b[2][0]++;
        cov_1ta761vpep().s[32]++;
        localStorage.removeItem('recoveryEmail');
        /* istanbul ignore next */
        cov_1ta761vpep().s[33]++;
        toast({
          description: 'Password updated successfully',
          variant: 'default'
        });
        /* istanbul ignore next */
        cov_1ta761vpep().s[34]++;
        router.push('/sign-in');
      } else {
        /* istanbul ignore next */
        cov_1ta761vpep().b[2][1]++;
        const data =
        /* istanbul ignore next */
        (cov_1ta761vpep().s[35]++, await res.json());
        const errorMsg =
        /* istanbul ignore next */
        (cov_1ta761vpep().s[36]++,
        /* istanbul ignore next */
        (cov_1ta761vpep().b[3][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_1ta761vpep().b[3][1]++, 'Error updating password'));
        /* istanbul ignore next */
        cov_1ta761vpep().s[37]++;
        setError(errorMsg);
        /* istanbul ignore next */
        cov_1ta761vpep().s[38]++;
        toast({
          description: errorMsg,
          variant: 'destructive'
        });
      }
    } catch (err) {
      const errorMsg =
      /* istanbul ignore next */
      (cov_1ta761vpep().s[39]++, 'An error occurred. Please try again.');
      /* istanbul ignore next */
      cov_1ta761vpep().s[40]++;
      setError(errorMsg);
      /* istanbul ignore next */
      cov_1ta761vpep().s[41]++;
      toast({
        description: errorMsg,
        variant: 'destructive'
      });
    }
  };
  /* istanbul ignore next */
  cov_1ta761vpep().s[42]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("main", {
    className: "max-w-md mx-auto py-8",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
          children: "Set New Password"
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("form", {
          onSubmit: handleSubmit,
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
              htmlFor: "password",
              children: "New Password"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
              id: "password",
              type: "password",
              placeholder: "New password",
              value: password,
              onChange: e => {
                /* istanbul ignore next */
                cov_1ta761vpep().f[4]++;
                cov_1ta761vpep().s[43]++;
                return setPassword(e.target.value);
              },
              required: true
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
              htmlFor: "confirm",
              children: "Confirm Password"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
              id: "confirm",
              type: "password",
              placeholder: "Confirm password",
              value: confirm,
              onChange: e => {
                /* istanbul ignore next */
                cov_1ta761vpep().f[5]++;
                cov_1ta761vpep().s[44]++;
                return setConfirm(e.target.value);
              },
              required: true
            })]
          }),
          /* istanbul ignore next */
          (cov_1ta761vpep().b[4][0]++, error) &&
          /* istanbul ignore next */
          (cov_1ta761vpep().b[4][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-red-500",
            children: error
          })), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            type: "submit",
            className: "w-full bg-green-600 hover:bg-green-700",
            children: "Update Password"
          })]
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,