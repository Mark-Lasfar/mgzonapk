5dd6b6d8c9d1fb1d6371f106c6386cce
"use strict";

/* istanbul ignore next */
function cov_s0uk17stt() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/sales/record/route.ts";
  var hash = "71ac83af79a956b3b4c1580f07858bc52d1ad239";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/sales/record/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 74
        }
      },
      "5": {
        start: {
          line: 13,
          column: 36
        },
        end: {
          line: 13,
          column: 112
        }
      },
      "6": {
        start: {
          line: 14,
          column: 36
        },
        end: {
          line: 14,
          column: 112
        }
      },
      "7": {
        start: {
          line: 15,
          column: 33
        },
        end: {
          line: 15,
          column: 106
        }
      },
      "8": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 72
        }
      },
      "9": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 6
        }
      },
      "10": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "11": {
        start: {
          line: 24,
          column: 52
        },
        end: {
          line: 24,
          column: 68
        }
      },
      "12": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "13": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 32,
          column: 15
        }
      },
      "14": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 35,
          column: 71
        }
      },
      "15": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "16": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 42,
          column: 15
        }
      },
      "17": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 45,
          column: 69
        }
      },
      "18": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "19": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "20": {
        start: {
          line: 55,
          column: 31
        },
        end: {
          line: 55,
          column: 101
        }
      },
      "21": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 55
        }
      },
      "22": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 28
        }
      },
      "23": {
        start: {
          line: 60,
          column: 21
        },
        end: {
          line: 62,
          column: 10
        }
      },
      "24": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "25": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 107
        }
      },
      "26": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "27": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 55
        }
      },
      "28": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 33
          }
        },
        loc: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "POST",
        decl: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 19
          }
        },
        loc: {
          start: {
            line: 22,
            column: 25
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 22
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 18,
            column: 38
          }
        }, {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 20,
            column: 5
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 14
          }
        }, {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 32
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 22
          }
        }, {
          start: {
            line: 26,
            column: 26
          },
          end: {
            line: 26,
            column: 37
          }
        }, {
          start: {
            line: 26,
            column: 41
          },
          end: {
            line: 26,
            column: 50
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/sales/record/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { handleRevenueSharing } from '@/lib/actions/revenue-sharing';\nimport Partner from '@/lib/db/models/partner.model';\nimport Product from '@/lib/db/models/product.model';\nimport User from '@/lib/db/models/user.model';\nimport { awardPoints } from '@/lib/actions/points.actions';\n\nexport async function POST(req: NextRequest) {\n  try {\n    const { productId, saleAmount, sellerId } = await req.json();\n\n    // Validate inputs\n    if (!productId || !saleAmount || !sellerId) {\n      return NextResponse.json(\n        { success: false, message: 'Missing required fields' },\n        { status: 400 }\n      );\n    }\n\n    // Verify product\n    const product = await Product.findById(productId);\n    if (!product) {\n      return NextResponse.json({ success: false, message: 'Product not found' }, { status: 404 });\n    }\n\n    // Verify seller\n    const seller = await Partner.findById(sellerId);\n    if (!seller) {\n      return NextResponse.json({ success: false, message: 'Seller not found' }, { status: 404 });\n    }\n\n    // Handle revenue sharing\n    const revenueDetails = await handleRevenueSharing(productId, saleAmount);\n\n    // Credit seller's balance\n    seller.balance += revenueDetails.sellerRevenue;\n    await seller.save();\n\n    // Award points to seller\n    const user = await User.findOne({ businessProfile: sellerId });\n    if (user) {\n      await awardPoints(user._id.toString(), 10, `Sale of product ${productId}`);\n    }\n\n    return NextResponse.json({ success: true, data: revenueDetails });\n  } catch (error: any) {\n    console.error('Error processing sale:', error);\n    return NextResponse.json({ success: false, message: error.message }, { status: 500 });\n  }\n}"],
      names: ["POST", "req", "productId", "saleAmount", "sellerId", "json", "NextResponse", "success", "message", "status", "product", "Product", "findById", "seller", "Partner", "revenueDetails", "handleRevenueSharing", "balance", "sellerRevenue", "save", "user", "User", "findOne", "businessProfile", "awardPoints", "_id", "toString", "data", "error", "console"],
      mappings: ";;;;+BAOsBA;;;eAAAA;;;wBAPoB;gCACL;qEACjB;qEACA;kEACH;+BACW;;;;;;AAErB,eAAeA,KAAKC,GAAgB;IACzC,IAAI;QACF,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,EAAE,GAAG,MAAMH,IAAII,IAAI;QAE1D,kBAAkB;QAClB,IAAI,CAACH,aAAa,CAACC,cAAc,CAACC,UAAU;YAC1C,OAAOE,oBAAY,CAACD,IAAI,CACtB;gBAAEE,SAAS;gBAAOC,SAAS;YAA0B,GACrD;gBAAEC,QAAQ;YAAI;QAElB;QAEA,iBAAiB;QACjB,MAAMC,UAAU,MAAMC,qBAAO,CAACC,QAAQ,CAACV;QACvC,IAAI,CAACQ,SAAS;YACZ,OAAOJ,oBAAY,CAACD,IAAI,CAAC;gBAAEE,SAAS;gBAAOC,SAAS;YAAoB,GAAG;gBAAEC,QAAQ;YAAI;QAC3F;QAEA,gBAAgB;QAChB,MAAMI,SAAS,MAAMC,qBAAO,CAACF,QAAQ,CAACR;QACtC,IAAI,CAACS,QAAQ;YACX,OAAOP,oBAAY,CAACD,IAAI,CAAC;gBAAEE,SAAS;gBAAOC,SAAS;YAAmB,GAAG;gBAAEC,QAAQ;YAAI;QAC1F;QAEA,yBAAyB;QACzB,MAAMM,iBAAiB,MAAMC,IAAAA,oCAAoB,EAACd,WAAWC;QAE7D,0BAA0B;QAC1BU,OAAOI,OAAO,IAAIF,eAAeG,aAAa;QAC9C,MAAML,OAAOM,IAAI;QAEjB,yBAAyB;QACzB,MAAMC,OAAO,MAAMC,kBAAI,CAACC,OAAO,CAAC;YAAEC,iBAAiBnB;QAAS;QAC5D,IAAIgB,MAAM;YACR,MAAMI,IAAAA,0BAAW,EAACJ,KAAKK,GAAG,CAACC,QAAQ,IAAI,IAAI,CAAC,gBAAgB,EAAExB,WAAW;QAC3E;QAEA,OAAOI,oBAAY,CAACD,IAAI,CAAC;YAAEE,SAAS;YAAMoB,MAAMZ;QAAe;IACjE,EAAE,OAAOa,OAAY;QACnBC,QAAQD,KAAK,CAAC,0BAA0BA;QACxC,OAAOtB,oBAAY,CAACD,IAAI,CAAC;YAAEE,SAAS;YAAOC,SAASoB,MAAMpB,OAAO;QAAC,GAAG;YAAEC,QAAQ;QAAI;IACrF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "71ac83af79a956b3b4c1580f07858bc52d1ad239"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_s0uk17stt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_s0uk17stt();
cov_s0uk17stt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_s0uk17stt().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_s0uk17stt().f[0]++;
    cov_s0uk17stt().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_s0uk17stt().s[3]++, require("next/server"));
const _revenuesharing =
/* istanbul ignore next */
(cov_s0uk17stt().s[4]++, require("../../../../lib/actions/revenue-sharing"));
const _partnermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_s0uk17stt().s[5]++, _interop_require_default(require("../../../../lib/db/models/partner.model")));
const _productmodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_s0uk17stt().s[6]++, _interop_require_default(require("../../../../lib/db/models/product.model")));
const _usermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_s0uk17stt().s[7]++, _interop_require_default(require("../../../../lib/db/models/user.model")));
const _pointsactions =
/* istanbul ignore next */
(cov_s0uk17stt().s[8]++, require("../../../../lib/actions/points.actions"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_s0uk17stt().f[1]++;
  cov_s0uk17stt().s[9]++;
  return /* istanbul ignore next */(cov_s0uk17stt().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_s0uk17stt().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_s0uk17stt().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_s0uk17stt().b[0][1]++, {
    default: obj
  });
}
async function POST(req) {
  /* istanbul ignore next */
  cov_s0uk17stt().f[2]++;
  cov_s0uk17stt().s[10]++;
  try {
    const {
      productId,
      saleAmount,
      sellerId
    } =
    /* istanbul ignore next */
    (cov_s0uk17stt().s[11]++, await req.json());
    // Validate inputs
    /* istanbul ignore next */
    cov_s0uk17stt().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_s0uk17stt().b[3][0]++, !productId) ||
    /* istanbul ignore next */
    (cov_s0uk17stt().b[3][1]++, !saleAmount) ||
    /* istanbul ignore next */
    (cov_s0uk17stt().b[3][2]++, !sellerId)) {
      /* istanbul ignore next */
      cov_s0uk17stt().b[2][0]++;
      cov_s0uk17stt().s[13]++;
      return _server.NextResponse.json({
        success: false,
        message: 'Missing required fields'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_s0uk17stt().b[2][1]++;
    }
    // Verify product
    const product =
    /* istanbul ignore next */
    (cov_s0uk17stt().s[14]++, await _productmodel.default.findById(productId));
    /* istanbul ignore next */
    cov_s0uk17stt().s[15]++;
    if (!product) {
      /* istanbul ignore next */
      cov_s0uk17stt().b[4][0]++;
      cov_s0uk17stt().s[16]++;
      return _server.NextResponse.json({
        success: false,
        message: 'Product not found'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_s0uk17stt().b[4][1]++;
    }
    // Verify seller
    const seller =
    /* istanbul ignore next */
    (cov_s0uk17stt().s[17]++, await _partnermodel.default.findById(sellerId));
    /* istanbul ignore next */
    cov_s0uk17stt().s[18]++;
    if (!seller) {
      /* istanbul ignore next */
      cov_s0uk17stt().b[5][0]++;
      cov_s0uk17stt().s[19]++;
      return _server.NextResponse.json({
        success: false,
        message: 'Seller not found'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_s0uk17stt().b[5][1]++;
    }
    // Handle revenue sharing
    const revenueDetails =
    /* istanbul ignore next */
    (cov_s0uk17stt().s[20]++, await (0, _revenuesharing.handleRevenueSharing)(productId, saleAmount));
    // Credit seller's balance
    /* istanbul ignore next */
    cov_s0uk17stt().s[21]++;
    seller.balance += revenueDetails.sellerRevenue;
    /* istanbul ignore next */
    cov_s0uk17stt().s[22]++;
    await seller.save();
    // Award points to seller
    const user =
    /* istanbul ignore next */
    (cov_s0uk17stt().s[23]++, await _usermodel.default.findOne({
      businessProfile: sellerId
    }));
    /* istanbul ignore next */
    cov_s0uk17stt().s[24]++;
    if (user) {
      /* istanbul ignore next */
      cov_s0uk17stt().b[6][0]++;
      cov_s0uk17stt().s[25]++;
      await (0, _pointsactions.awardPoints)(user._id.toString(), 10, `Sale of product ${productId}`);
    } else
    /* istanbul ignore next */
    {
      cov_s0uk17stt().b[6][1]++;
    }
    cov_s0uk17stt().s[26]++;
    return _server.NextResponse.json({
      success: true,
      data: revenueDetails
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_s0uk17stt().s[27]++;
    console.error('Error processing sale:', error);
    /* istanbul ignore next */
    cov_s0uk17stt().s[28]++;
    return _server.NextResponse.json({
      success: false,
      message: error.message
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQT1NUIiwicmVxIiwiY292X3MwdWsxN3N0dCIsImYiLCJzIiwicHJvZHVjdElkIiwic2FsZUFtb3VudCIsInNlbGxlcklkIiwianNvbiIsImIiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJwcm9kdWN0IiwiX3Byb2R1Y3Rtb2RlbCIsImRlZmF1bHQiLCJmaW5kQnlJZCIsInNlbGxlciIsIl9wYXJ0bmVybW9kZWwiLCJyZXZlbnVlRGV0YWlscyIsIl9yZXZlbnVlc2hhcmluZyIsImhhbmRsZVJldmVudWVTaGFyaW5nIiwiYmFsYW5jZSIsInNlbGxlclJldmVudWUiLCJzYXZlIiwidXNlciIsIl91c2VybW9kZWwiLCJmaW5kT25lIiwiYnVzaW5lc3NQcm9maWxlIiwiX3BvaW50c2FjdGlvbnMiLCJhd2FyZFBvaW50cyIsIl9pZCIsInRvU3RyaW5nIiwiZGF0YSIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9hcHAvYXBpL3NhbGVzL3JlY29yZC9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgaGFuZGxlUmV2ZW51ZVNoYXJpbmcgfSBmcm9tICdAL2xpYi9hY3Rpb25zL3JldmVudWUtc2hhcmluZyc7XG5pbXBvcnQgUGFydG5lciBmcm9tICdAL2xpYi9kYi9tb2RlbHMvcGFydG5lci5tb2RlbCc7XG5pbXBvcnQgUHJvZHVjdCBmcm9tICdAL2xpYi9kYi9tb2RlbHMvcHJvZHVjdC5tb2RlbCc7XG5pbXBvcnQgVXNlciBmcm9tICdAL2xpYi9kYi9tb2RlbHMvdXNlci5tb2RlbCc7XG5pbXBvcnQgeyBhd2FyZFBvaW50cyB9IGZyb20gJ0AvbGliL2FjdGlvbnMvcG9pbnRzLmFjdGlvbnMnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXE6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBwcm9kdWN0SWQsIHNhbGVBbW91bnQsIHNlbGxlcklkIH0gPSBhd2FpdCByZXEuanNvbigpO1xuXG4gICAgLy8gVmFsaWRhdGUgaW5wdXRzXG4gICAgaWYgKCFwcm9kdWN0SWQgfHwgIXNhbGVBbW91bnQgfHwgIXNlbGxlcklkKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6ICdNaXNzaW5nIHJlcXVpcmVkIGZpZWxkcycgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIFZlcmlmeSBwcm9kdWN0XG4gICAgY29uc3QgcHJvZHVjdCA9IGF3YWl0IFByb2R1Y3QuZmluZEJ5SWQocHJvZHVjdElkKTtcbiAgICBpZiAoIXByb2R1Y3QpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiAnUHJvZHVjdCBub3QgZm91bmQnIH0sIHsgc3RhdHVzOiA0MDQgfSk7XG4gICAgfVxuXG4gICAgLy8gVmVyaWZ5IHNlbGxlclxuICAgIGNvbnN0IHNlbGxlciA9IGF3YWl0IFBhcnRuZXIuZmluZEJ5SWQoc2VsbGVySWQpO1xuICAgIGlmICghc2VsbGVyKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogJ1NlbGxlciBub3QgZm91bmQnIH0sIHsgc3RhdHVzOiA0MDQgfSk7XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIHJldmVudWUgc2hhcmluZ1xuICAgIGNvbnN0IHJldmVudWVEZXRhaWxzID0gYXdhaXQgaGFuZGxlUmV2ZW51ZVNoYXJpbmcocHJvZHVjdElkLCBzYWxlQW1vdW50KTtcblxuICAgIC8vIENyZWRpdCBzZWxsZXIncyBiYWxhbmNlXG4gICAgc2VsbGVyLmJhbGFuY2UgKz0gcmV2ZW51ZURldGFpbHMuc2VsbGVyUmV2ZW51ZTtcbiAgICBhd2FpdCBzZWxsZXIuc2F2ZSgpO1xuXG4gICAgLy8gQXdhcmQgcG9pbnRzIHRvIHNlbGxlclxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRPbmUoeyBidXNpbmVzc1Byb2ZpbGU6IHNlbGxlcklkIH0pO1xuICAgIGlmICh1c2VyKSB7XG4gICAgICBhd2FpdCBhd2FyZFBvaW50cyh1c2VyLl9pZC50b1N0cmluZygpLCAxMCwgYFNhbGUgb2YgcHJvZHVjdCAke3Byb2R1Y3RJZH1gKTtcbiAgICB9XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiB0cnVlLCBkYXRhOiByZXZlbnVlRGV0YWlscyB9KTtcbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHByb2Nlc3Npbmcgc2FsZTonLCBlcnJvcik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UgfSwgeyBzdGF0dXM6IDUwMCB9KTtcbiAgfVxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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