f06325e2ea5b9ae63d5e1f32fabb4a94
"use strict";

/* istanbul ignore next */
function cov_2nn4cd8u2r() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/utils/xml.ts";
  var hash = "0b377cc4af2cf764e0935bfce95fda9b8f414f7e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/utils/xml.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 25
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "7": {
        start: {
          line: 23,
          column: 114
        },
        end: {
          line: 23,
          column: 121
        }
      },
      "8": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 34
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "10": {
        start: {
          line: 26,
          column: 23
        },
        end: {
          line: 26,
          column: 55
        }
      },
      "11": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 70
        }
      },
      "13": {
        start: {
          line: 30,
          column: 24
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "14": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 31,
          column: 25
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "16": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 49
        }
      },
      "17": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "18": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "19": {
        start: {
          line: 37,
          column: 27
        },
        end: {
          line: 37,
          column: 32
        }
      },
      "20": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 38,
          column: 91
        }
      },
      "21": {
        start: {
          line: 39,
          column: 35
        },
        end: {
          line: 39,
          column: 50
        }
      },
      "22": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 45,
          column: 17
        }
      },
      "23": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 60
        }
      },
      "24": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "25": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 49
        }
      },
      "26": {
        start: {
          line: 46,
          column: 19
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "27": {
        start: {
          line: 47,
          column: 29
        },
        end: {
          line: 47,
          column: 54
        }
      },
      "28": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 54,
          column: 17
        }
      },
      "29": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 49,
          column: 44
        }
      },
      "30": {
        start: {
          line: 50,
          column: 20
        },
        end: {
          line: 53,
          column: 48
        }
      },
      "31": {
        start: {
          line: 50,
          column: 50
        },
        end: {
          line: 50,
          column: 83
        }
      },
      "32": {
        start: {
          line: 51,
          column: 25
        },
        end: {
          line: 53,
          column: 48
        }
      },
      "33": {
        start: {
          line: 51,
          column: 57
        },
        end: {
          line: 51,
          column: 88
        }
      },
      "34": {
        start: {
          line: 52,
          column: 25
        },
        end: {
          line: 53,
          column: 48
        }
      },
      "35": {
        start: {
          line: 52,
          column: 58
        },
        end: {
          line: 52,
          column: 106
        }
      },
      "36": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 53,
          column: 48
        }
      },
      "37": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 96
        }
      },
      "38": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 79
        }
      },
      "39": {
        start: {
          line: 59,
          column: 62
        },
        end: {
          line: 59,
          column: 77
        }
      },
      "40": {
        start: {
          line: 62,
          column: 65
        },
        end: {
          line: 62,
          column: 72
        }
      },
      "41": {
        start: {
          line: 63,
          column: 19
        },
        end: {
          line: 63,
          column: 144
        }
      },
      "42": {
        start: {
          line: 63,
          column: 26
        },
        end: {
          line: 63,
          column: 144
        }
      },
      "43": {
        start: {
          line: 64,
          column: 22
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "44": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 61
        }
      },
      "45": {
        start: {
          line: 66,
          column: 18
        },
        end: {
          line: 66,
          column: 20
        }
      },
      "46": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "47": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 42
        }
      },
      "48": {
        start: {
          line: 68,
          column: 33
        },
        end: {
          line: 68,
          column: 42
        }
      },
      "49": {
        start: {
          line: 69,
          column: 26
        },
        end: {
          line: 69,
          column: 36
        }
      },
      "50": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 40
        }
      },
      "51": {
        start: {
          line: 70,
          column: 31
        },
        end: {
          line: 70,
          column: 40
        }
      },
      "52": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 38
        }
      },
      "53": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "54": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 75,
          column: 17
        }
      },
      "55": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 137
        }
      },
      "56": {
        start: {
          line: 76,
          column: 19
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "57": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 51
        }
      },
      "58": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 45
        }
      },
      "59": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 33
        }
      },
      "60": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 19
        }
      },
      "61": {
        start: {
          line: 85,
          column: 14
        },
        end: {
          line: 85,
          column: 73
        }
      },
      "62": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 86,
          column: 28
        }
      },
      "63": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 28
        }
      },
      "64": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 26
        }
      },
      "65": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "66": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 54
        }
      },
      "67": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 47
        }
      },
      "68": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 55
        }
      },
      "69": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 30
        }
      },
      "70": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 27
        }
      },
      "71": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 15
        }
      },
      "72": {
        start: {
          line: 98,
          column: 19
        },
        end: {
          line: 98,
          column: 21
        }
      },
      "73": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "74": {
        start: {
          line: 100,
          column: 23
        },
        end: {
          line: 100,
          column: 38
        }
      },
      "75": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 70
        }
      },
      "76": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "77": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 47
        }
      },
      "78": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 107,
          column: 14
        }
      },
      "79": {
        start: {
          line: 109,
          column: 26
        },
        end: {
          line: 109,
          column: 51
        }
      },
      "80": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "81": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 53
        }
      },
      "82": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 115,
          column: 14
        }
      },
      "83": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "84": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "85": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 66
        }
      },
      "86": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 125,
          column: 10
        }
      },
      "87": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 56
        }
      },
      "88": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 131,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 15
          },
          end: {
            line: 12,
            column: 16
          }
        },
        loc: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 14
          },
          end: {
            line: 15,
            column: 15
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 17
          },
          end: {
            line: 18,
            column: 18
          }
        },
        loc: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "parseXML",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 17
          }
        },
        loc: {
          start: {
            line: 22,
            column: 41
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 25
          }
        },
        loc: {
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 59,
            column: 56
          },
          end: {
            line: 59,
            column: 57
          }
        },
        loc: {
          start: {
            line: 59,
            column: 62
          },
          end: {
            line: 59,
            column: 77
          }
        },
        line: 59
      },
      "7": {
        name: "createXML",
        decl: {
          start: {
            line: 61,
            column: 9
          },
          end: {
            line: 61,
            column: 18
          }
        },
        loc: {
          start: {
            line: 61,
            column: 56
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 61
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 63,
            column: 19
          },
          end: {
            line: 63,
            column: 20
          }
        },
        loc: {
          start: {
            line: 63,
            column: 26
          },
          end: {
            line: 63,
            column: 144
          }
        },
        line: 63
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 64,
            column: 22
          },
          end: {
            line: 64,
            column: 23
          }
        },
        loc: {
          start: {
            line: 64,
            column: 40
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 64
      },
      "10": {
        name: "validateXML",
        decl: {
          start: {
            line: 97,
            column: 9
          },
          end: {
            line: 97,
            column: 20
          }
        },
        loc: {
          start: {
            line: 97,
            column: 46
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 97
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 22,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 22,
            column: 37
          },
          end: {
            line: 22,
            column: 39
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 31
          },
          end: {
            line: 23,
            column: 35
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 37
          },
          end: {
            line: 23,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 50
          },
          end: {
            line: 23,
            column: 52
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 54
          },
          end: {
            line: 23,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 69
          },
          end: {
            line: 23,
            column: 71
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 23,
            column: 73
          },
          end: {
            line: 23,
            column: 91
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 89
          },
          end: {
            line: 23,
            column: 91
          }
        }],
        line: 23
      },
      "5": {
        loc: {
          start: {
            line: 23,
            column: 93
          },
          end: {
            line: 23,
            column: 109
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 23,
            column: 107
          },
          end: {
            line: 23,
            column: 109
          }
        }],
        line: 23
      },
      "6": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 55,
            column: 13
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 38,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 51
          },
          end: {
            line: 38,
            column: 78
          }
        }, {
          start: {
            line: 38,
            column: 81
          },
          end: {
            line: 38,
            column: 91
          }
        }],
        line: 38
      },
      "9": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 45,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 45,
            column: 17
          }
        }, {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 45,
            column: 17
          }
        }],
        line: 40
      },
      "10": {
        loc: {
          start: {
            line: 41,
            column: 38
          },
          end: {
            line: 41,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 38
          },
          end: {
            line: 41,
            column: 53
          }
        }, {
          start: {
            line: 41,
            column: 57
          },
          end: {
            line: 41,
            column: 59
          }
        }],
        line: 41
      },
      "11": {
        loc: {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "12": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "13": {
        loc: {
          start: {
            line: 50,
            column: 20
          },
          end: {
            line: 53,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 20
          },
          end: {
            line: 53,
            column: 48
          }
        }, {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 53,
            column: 48
          }
        }],
        line: 50
      },
      "14": {
        loc: {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 53,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 53,
            column: 48
          }
        }, {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 53,
            column: 48
          }
        }],
        line: 51
      },
      "15": {
        loc: {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 53,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 53,
            column: 48
          }
        }, {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 53,
            column: 48
          }
        }],
        line: 52
      },
      "16": {
        loc: {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 57,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 71
          },
          end: {
            line: 57,
            column: 86
          }
        }, {
          start: {
            line: 57,
            column: 89
          },
          end: {
            line: 57,
            column: 95
          }
        }],
        line: 57
      },
      "17": {
        loc: {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 57,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 57,
            column: 47
          }
        }, {
          start: {
            line: 57,
            column: 51
          },
          end: {
            line: 57,
            column: 68
          }
        }],
        line: 57
      },
      "18": {
        loc: {
          start: {
            line: 61,
            column: 42
          },
          end: {
            line: 61,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 61,
            column: 52
          },
          end: {
            line: 61,
            column: 54
          }
        }],
        line: 61
      },
      "19": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 21
          },
          end: {
            line: 62,
            column: 25
          }
        }],
        line: 62
      },
      "20": {
        loc: {
          start: {
            line: 62,
            column: 27
          },
          end: {
            line: 62,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 36
          },
          end: {
            line: 62,
            column: 40
          }
        }],
        line: 62
      },
      "21": {
        loc: {
          start: {
            line: 62,
            column: 42
          },
          end: {
            line: 62,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 56
          },
          end: {
            line: 62,
            column: 60
          }
        }],
        line: 62
      },
      "22": {
        loc: {
          start: {
            line: 64,
            column: 28
          },
          end: {
            line: 64,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 64,
            column: 36
          },
          end: {
            line: 64,
            column: 37
          }
        }],
        line: 64
      },
      "23": {
        loc: {
          start: {
            line: 65,
            column: 20
          },
          end: {
            line: 65,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 29
          },
          end: {
            line: 65,
            column: 56
          }
        }, {
          start: {
            line: 65,
            column: 59
          },
          end: {
            line: 65,
            column: 61
          }
        }],
        line: 65
      },
      "24": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "25": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "26": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: 76,
            column: 19
          },
          end: {
            line: 80,
            column: 13
          }
        }],
        line: 72
      },
      "27": {
        loc: {
          start: {
            line: 74,
            column: 27
          },
          end: {
            line: 74,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 54
          },
          end: {
            line: 74,
            column: 80
          }
        }, {
          start: {
            line: 74,
            column: 83
          },
          end: {
            line: 74,
            column: 136
          }
        }],
        line: 74
      },
      "28": {
        loc: {
          start: {
            line: 76,
            column: 19
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 19
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: 78,
            column: 19
          },
          end: {
            line: 80,
            column: 13
          }
        }],
        line: 76
      },
      "29": {
        loc: {
          start: {
            line: 85,
            column: 14
          },
          end: {
            line: 85,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 28
          },
          end: {
            line: 85,
            column: 68
          }
        }, {
          start: {
            line: 85,
            column: 71
          },
          end: {
            line: 85,
            column: 73
          }
        }],
        line: 85
      },
      "30": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "31": {
        loc: {
          start: {
            line: 89,
            column: 18
          },
          end: {
            line: 89,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 27
          },
          end: {
            line: 89,
            column: 40
          }
        }, {
          start: {
            line: 89,
            column: 43
          },
          end: {
            line: 89,
            column: 45
          }
        }],
        line: 89
      },
      "32": {
        loc: {
          start: {
            line: 90,
            column: 31
          },
          end: {
            line: 90,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 40
          },
          end: {
            line: 90,
            column: 41
          }
        }, {
          start: {
            line: 90,
            column: 44
          },
          end: {
            line: 90,
            column: 45
          }
        }],
        line: 90
      },
      "33": {
        loc: {
          start: {
            line: 91,
            column: 18
          },
          end: {
            line: 91,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 27
          },
          end: {
            line: 91,
            column: 40
          }
        }, {
          start: {
            line: 91,
            column: 43
          },
          end: {
            line: 91,
            column: 45
          }
        }],
        line: 91
      },
      "34": {
        loc: {
          start: {
            line: 93,
            column: 11
          },
          end: {
            line: 93,
            column: 29
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 93,
            column: 24
          }
        }, {
          start: {
            line: 93,
            column: 27
          },
          end: {
            line: 93,
            column: 29
          }
        }],
        line: 93
      },
      "35": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "36": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "37": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0],
      "20": [0],
      "21": [0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/utils/xml.ts"],
      sourcesContent: ["interface XMLParseOptions {\n    removeNamespaces?: boolean;\n    dateFields?: string[];\n    numberFields?: string[];\n    booleanFields?: string[];\n    arrayFields?: string[];\n  }\n  \n  interface XMLCreateOptions {\n    rootTag?: string;\n    pretty?: boolean;\n    indent?: string;\n    declaration?: boolean;\n  }\n  \n  export function parseXML<T>(content: string, options: XMLParseOptions = {}): T[] {\n    const {\n      removeNamespaces = true,\n      dateFields = [],\n      numberFields = [],\n      booleanFields = [],\n      arrayFields = [],\n    } = options;\n  \n    const parser = new DOMParser();\n    const doc = parser.parseFromString(content, 'application/xml');\n    const parseError = doc.querySelector('parsererror');\n  \n    if (parseError) {\n      throw new Error(`XML Parse Error: ${parseError.textContent}`);\n    }\n  \n    const convertNode = (node: Element): any => {\n      const result: Record<string, any> = {};\n  \n      for (const attr of Array.from(node.attributes)) {\n        result[`@${attr.name}`] = attr.value;\n      }\n  \n      for (const child of Array.from(node.childNodes)) {\n        if (child.nodeType === Node.ELEMENT_NODE) {\n          const el = child as Element;\n          const tagName = removeNamespaces ? el.tagName.split(':').pop()! : el.tagName;\n          const childValue = convertNode(el);\n  \n          if (arrayFields.includes(tagName)) {\n            result[tagName] = result[tagName] || [];\n            result[tagName].push(childValue);\n          } else {\n            result[tagName] = childValue;\n          }\n        } else if (child.nodeType === Node.TEXT_NODE) {\n          const text = child.textContent?.trim();\n          if (text) {\n            const tag = node.tagName;\n            if (dateFields.includes(tag)) result['#text'] = new Date(text);\n            else if (numberFields.includes(tag)) result['#text'] = Number(text);\n            else if (booleanFields.includes(tag)) result['#text'] = text.toLowerCase() === 'true';\n            else result['#text'] = text;\n          }\n        }\n      }\n  \n      return Object.keys(result).length === 1 && '#text' in result ? result['#text'] : result;\n    };\n  \n    return Array.from(doc.documentElement.children).map(el => convertNode(el as Element)) as T[];\n  }\n  \n  export function createXML(\n    rootTag: string,\n    data: any[],\n    fields: string[],\n    options: XMLCreateOptions = {}\n  ): string {\n    const { pretty = true, indent = '  ', declaration = true } = options;\n  \n    const escape = (val: string) =>\n      val\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;');\n  \n    const serialize = (obj: any, depth = 0): string => {\n      const pad = pretty ? '\\n' + indent.repeat(depth) : '';\n      let xml = '';\n  \n      for (const field of fields) {\n        if (!(field in obj)) continue;\n        const value = obj[field];\n        if (value == null) continue;\n  \n        xml += `${pad}<${field}>`;\n  \n        if (Array.isArray(value)) {\n          for (const item of value) {\n            xml += typeof item === 'object'\n              ? serialize(item, depth + 1)\n              : `${pad}${indent}<item>${escape(String(item))}</item>`;\n          }\n        } else if (typeof value === 'object') {\n          xml += serialize(value, depth + 1);\n        } else {\n          xml += escape(String(value));\n        }\n  \n        xml += `</${field}>`;\n      }\n  \n      return xml;\n    };\n  \n    let xml = declaration ? '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' : '';\n    if (pretty) xml += '\\n';\n    xml += `<${rootTag}>`;\n  \n    for (const item of data) {\n      xml += `${pretty ? '\\n' + indent : ''}<item>`;\n      xml += serialize(item, pretty ? 2 : 0);\n      xml += `${pretty ? '\\n' + indent : ''}</item>`;\n    }\n  \n    xml += pretty ? '\\n' : '';\n    xml += `</${rootTag}>`;\n  \n    return xml;\n  }\n  \n  export function validateXML(\n    content: string,\n    requiredFields: string[]\n  ): { valid: boolean; errors: string[] } {\n    const errors: string[] = [];\n  \n    try {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(content, 'application/xml');\n  \n      if (doc.querySelector('parsererror')) {\n        errors.push('Invalid XML format.');\n        return { valid: false, errors };\n      }\n  \n      const firstItem = doc.querySelector('item');\n      if (!firstItem) {\n        errors.push('No <item> elements found.');\n        return { valid: false, errors };\n      }\n  \n      for (const field of requiredFields) {\n        if (!firstItem.querySelector(field)) {\n          errors.push(`Missing required field: <${field}>`);\n        }\n      }\n  \n      return { valid: errors.length === 0, errors };\n    } catch (err: any) {\n      errors.push(`Validation error: ${err.message}`);\n      return { valid: false, errors };\n    }\n  }\n  "],
      names: ["createXML", "parseXML", "validateXML", "content", "options", "removeNamespaces", "dateFields", "numberFields", "booleanFields", "arrayFields", "parser", "DOMParser", "doc", "parseFromString", "parseError", "querySelector", "Error", "textContent", "convertNode", "node", "result", "attr", "Array", "from", "attributes", "name", "value", "child", "childNodes", "nodeType", "Node", "ELEMENT_NODE", "el", "tagName", "split", "pop", "childValue", "includes", "push", "TEXT_NODE", "text", "trim", "tag", "Date", "Number", "toLowerCase", "Object", "keys", "length", "documentElement", "children", "map", "rootTag", "data", "fields", "pretty", "indent", "declaration", "escape", "val", "replace", "serialize", "obj", "depth", "pad", "repeat", "xml", "field", "isArray", "item", "String", "requiredFields", "errors", "valid", "firstItem", "err", "message"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0b377cc4af2cf764e0935bfce95fda9b8f414f7e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2nn4cd8u2r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2nn4cd8u2r();
cov_2nn4cd8u2r().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2nn4cd8u2r().f[0]++;
  cov_2nn4cd8u2r().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2nn4cd8u2r().s[3]++;
_export(exports, {
  createXML: function () {
    /* istanbul ignore next */
    cov_2nn4cd8u2r().f[1]++;
    cov_2nn4cd8u2r().s[4]++;
    return createXML;
  },
  parseXML: function () {
    /* istanbul ignore next */
    cov_2nn4cd8u2r().f[2]++;
    cov_2nn4cd8u2r().s[5]++;
    return parseXML;
  },
  validateXML: function () {
    /* istanbul ignore next */
    cov_2nn4cd8u2r().f[3]++;
    cov_2nn4cd8u2r().s[6]++;
    return validateXML;
  }
});
function parseXML(content, options =
/* istanbul ignore next */
(cov_2nn4cd8u2r().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_2nn4cd8u2r().f[4]++;
  const {
    removeNamespaces =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[1][0]++, true),
    dateFields =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[2][0]++, []),
    numberFields =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[3][0]++, []),
    booleanFields =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[4][0]++, []),
    arrayFields =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[5][0]++, [])
  } =
  /* istanbul ignore next */
  (cov_2nn4cd8u2r().s[7]++, options);
  const parser =
  /* istanbul ignore next */
  (cov_2nn4cd8u2r().s[8]++, new DOMParser());
  const doc =
  /* istanbul ignore next */
  (cov_2nn4cd8u2r().s[9]++, parser.parseFromString(content, 'application/xml'));
  const parseError =
  /* istanbul ignore next */
  (cov_2nn4cd8u2r().s[10]++, doc.querySelector('parsererror'));
  /* istanbul ignore next */
  cov_2nn4cd8u2r().s[11]++;
  if (parseError) {
    /* istanbul ignore next */
    cov_2nn4cd8u2r().b[6][0]++;
    cov_2nn4cd8u2r().s[12]++;
    throw new Error(`XML Parse Error: ${parseError.textContent}`);
  } else
  /* istanbul ignore next */
  {
    cov_2nn4cd8u2r().b[6][1]++;
  }
  cov_2nn4cd8u2r().s[13]++;
  const convertNode = node => {
    /* istanbul ignore next */
    cov_2nn4cd8u2r().f[5]++;
    const result =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().s[14]++, {});
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[15]++;
    for (const attr of Array.from(node.attributes)) {
      /* istanbul ignore next */
      cov_2nn4cd8u2r().s[16]++;
      result[`@${attr.name}`] = attr.value;
    }
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[17]++;
    for (const child of Array.from(node.childNodes)) {
      /* istanbul ignore next */
      cov_2nn4cd8u2r().s[18]++;
      if (child.nodeType === Node.ELEMENT_NODE) {
        /* istanbul ignore next */
        cov_2nn4cd8u2r().b[7][0]++;
        const el =
        /* istanbul ignore next */
        (cov_2nn4cd8u2r().s[19]++, child);
        const tagName =
        /* istanbul ignore next */
        (cov_2nn4cd8u2r().s[20]++, removeNamespaces ?
        /* istanbul ignore next */
        (cov_2nn4cd8u2r().b[8][0]++, el.tagName.split(':').pop()) :
        /* istanbul ignore next */
        (cov_2nn4cd8u2r().b[8][1]++, el.tagName));
        const childValue =
        /* istanbul ignore next */
        (cov_2nn4cd8u2r().s[21]++, convertNode(el));
        /* istanbul ignore next */
        cov_2nn4cd8u2r().s[22]++;
        if (arrayFields.includes(tagName)) {
          /* istanbul ignore next */
          cov_2nn4cd8u2r().b[9][0]++;
          cov_2nn4cd8u2r().s[23]++;
          result[tagName] =
          /* istanbul ignore next */
          (cov_2nn4cd8u2r().b[10][0]++, result[tagName]) ||
          /* istanbul ignore next */
          (cov_2nn4cd8u2r().b[10][1]++, []);
          /* istanbul ignore next */
          cov_2nn4cd8u2r().s[24]++;
          result[tagName].push(childValue);
        } else {
          /* istanbul ignore next */
          cov_2nn4cd8u2r().b[9][1]++;
          cov_2nn4cd8u2r().s[25]++;
          result[tagName] = childValue;
        }
      } else {
        /* istanbul ignore next */
        cov_2nn4cd8u2r().b[7][1]++;
        cov_2nn4cd8u2r().s[26]++;
        if (child.nodeType === Node.TEXT_NODE) {
          /* istanbul ignore next */
          cov_2nn4cd8u2r().b[11][0]++;
          const text =
          /* istanbul ignore next */
          (cov_2nn4cd8u2r().s[27]++, child.textContent?.trim());
          /* istanbul ignore next */
          cov_2nn4cd8u2r().s[28]++;
          if (text) {
            /* istanbul ignore next */
            cov_2nn4cd8u2r().b[12][0]++;
            const tag =
            /* istanbul ignore next */
            (cov_2nn4cd8u2r().s[29]++, node.tagName);
            /* istanbul ignore next */
            cov_2nn4cd8u2r().s[30]++;
            if (dateFields.includes(tag)) {
              /* istanbul ignore next */
              cov_2nn4cd8u2r().b[13][0]++;
              cov_2nn4cd8u2r().s[31]++;
              result['#text'] = new Date(text);
            } else {
              /* istanbul ignore next */
              cov_2nn4cd8u2r().b[13][1]++;
              cov_2nn4cd8u2r().s[32]++;
              if (numberFields.includes(tag)) {
                /* istanbul ignore next */
                cov_2nn4cd8u2r().b[14][0]++;
                cov_2nn4cd8u2r().s[33]++;
                result['#text'] = Number(text);
              } else {
                /* istanbul ignore next */
                cov_2nn4cd8u2r().b[14][1]++;
                cov_2nn4cd8u2r().s[34]++;
                if (booleanFields.includes(tag)) {
                  /* istanbul ignore next */
                  cov_2nn4cd8u2r().b[15][0]++;
                  cov_2nn4cd8u2r().s[35]++;
                  result['#text'] = text.toLowerCase() === 'true';
                } else {
                  /* istanbul ignore next */
                  cov_2nn4cd8u2r().b[15][1]++;
                  cov_2nn4cd8u2r().s[36]++;
                  result['#text'] = text;
                }
              }
            }
          } else
          /* istanbul ignore next */
          {
            cov_2nn4cd8u2r().b[12][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2nn4cd8u2r().b[11][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[37]++;
    return /* istanbul ignore next */(cov_2nn4cd8u2r().b[17][0]++, Object.keys(result).length === 1) &&
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[17][1]++, '#text' in result) ?
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[16][0]++, result['#text']) :
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[16][1]++, result);
  };
  /* istanbul ignore next */
  cov_2nn4cd8u2r().s[38]++;
  return Array.from(doc.documentElement.children).map(el => {
    /* istanbul ignore next */
    cov_2nn4cd8u2r().f[6]++;
    cov_2nn4cd8u2r().s[39]++;
    return convertNode(el);
  });
}
function createXML(rootTag, data, fields, options =
/* istanbul ignore next */
(cov_2nn4cd8u2r().b[18][0]++, {})) {
  /* istanbul ignore next */
  cov_2nn4cd8u2r().f[7]++;
  const {
    pretty =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[19][0]++, true),
    indent =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[20][0]++, '  '),
    declaration =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[21][0]++, true)
  } =
  /* istanbul ignore next */
  (cov_2nn4cd8u2r().s[40]++, options);
  /* istanbul ignore next */
  cov_2nn4cd8u2r().s[41]++;
  const escape = val => {
    /* istanbul ignore next */
    cov_2nn4cd8u2r().f[8]++;
    cov_2nn4cd8u2r().s[42]++;
    return val.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&apos;');
  };
  /* istanbul ignore next */
  cov_2nn4cd8u2r().s[43]++;
  const serialize = (obj, depth =
  /* istanbul ignore next */
  (cov_2nn4cd8u2r().b[22][0]++, 0)) => {
    /* istanbul ignore next */
    cov_2nn4cd8u2r().f[9]++;
    const pad =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().s[44]++, pretty ?
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[23][0]++, '\n' + indent.repeat(depth)) :
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[23][1]++, ''));
    let xml =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().s[45]++, '');
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[46]++;
    for (const field of fields) {
      /* istanbul ignore next */
      cov_2nn4cd8u2r().s[47]++;
      if (!(field in obj)) {
        /* istanbul ignore next */
        cov_2nn4cd8u2r().b[24][0]++;
        cov_2nn4cd8u2r().s[48]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_2nn4cd8u2r().b[24][1]++;
      }
      const value =
      /* istanbul ignore next */
      (cov_2nn4cd8u2r().s[49]++, obj[field]);
      /* istanbul ignore next */
      cov_2nn4cd8u2r().s[50]++;
      if (value == null) {
        /* istanbul ignore next */
        cov_2nn4cd8u2r().b[25][0]++;
        cov_2nn4cd8u2r().s[51]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_2nn4cd8u2r().b[25][1]++;
      }
      cov_2nn4cd8u2r().s[52]++;
      xml += `${pad}<${field}>`;
      /* istanbul ignore next */
      cov_2nn4cd8u2r().s[53]++;
      if (Array.isArray(value)) {
        /* istanbul ignore next */
        cov_2nn4cd8u2r().b[26][0]++;
        cov_2nn4cd8u2r().s[54]++;
        for (const item of value) {
          /* istanbul ignore next */
          cov_2nn4cd8u2r().s[55]++;
          xml += typeof item === 'object' ?
          /* istanbul ignore next */
          (cov_2nn4cd8u2r().b[27][0]++, serialize(item, depth + 1)) :
          /* istanbul ignore next */
          (cov_2nn4cd8u2r().b[27][1]++, `${pad}${indent}<item>${escape(String(item))}</item>`);
        }
      } else {
        /* istanbul ignore next */
        cov_2nn4cd8u2r().b[26][1]++;
        cov_2nn4cd8u2r().s[56]++;
        if (typeof value === 'object') {
          /* istanbul ignore next */
          cov_2nn4cd8u2r().b[28][0]++;
          cov_2nn4cd8u2r().s[57]++;
          xml += serialize(value, depth + 1);
        } else {
          /* istanbul ignore next */
          cov_2nn4cd8u2r().b[28][1]++;
          cov_2nn4cd8u2r().s[58]++;
          xml += escape(String(value));
        }
      }
      /* istanbul ignore next */
      cov_2nn4cd8u2r().s[59]++;
      xml += `</${field}>`;
    }
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[60]++;
    return xml;
  };
  let xml =
  /* istanbul ignore next */
  (cov_2nn4cd8u2r().s[61]++, declaration ?
  /* istanbul ignore next */
  (cov_2nn4cd8u2r().b[29][0]++, '<?xml version="1.0" encoding="UTF-8"?>') :
  /* istanbul ignore next */
  (cov_2nn4cd8u2r().b[29][1]++, ''));
  /* istanbul ignore next */
  cov_2nn4cd8u2r().s[62]++;
  if (pretty) {
    /* istanbul ignore next */
    cov_2nn4cd8u2r().b[30][0]++;
    cov_2nn4cd8u2r().s[63]++;
    xml += '\n';
  } else
  /* istanbul ignore next */
  {
    cov_2nn4cd8u2r().b[30][1]++;
  }
  cov_2nn4cd8u2r().s[64]++;
  xml += `<${rootTag}>`;
  /* istanbul ignore next */
  cov_2nn4cd8u2r().s[65]++;
  for (const item of data) {
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[66]++;
    xml += `${pretty ?
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[31][0]++, '\n' + indent) :
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[31][1]++, '')}<item>`;
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[67]++;
    xml += serialize(item, pretty ?
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[32][0]++, 2) :
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[32][1]++, 0));
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[68]++;
    xml += `${pretty ?
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[33][0]++, '\n' + indent) :
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().b[33][1]++, '')}</item>`;
  }
  /* istanbul ignore next */
  cov_2nn4cd8u2r().s[69]++;
  xml += pretty ?
  /* istanbul ignore next */
  (cov_2nn4cd8u2r().b[34][0]++, '\n') :
  /* istanbul ignore next */
  (cov_2nn4cd8u2r().b[34][1]++, '');
  /* istanbul ignore next */
  cov_2nn4cd8u2r().s[70]++;
  xml += `</${rootTag}>`;
  /* istanbul ignore next */
  cov_2nn4cd8u2r().s[71]++;
  return xml;
}
function validateXML(content, requiredFields) {
  /* istanbul ignore next */
  cov_2nn4cd8u2r().f[10]++;
  const errors =
  /* istanbul ignore next */
  (cov_2nn4cd8u2r().s[72]++, []);
  /* istanbul ignore next */
  cov_2nn4cd8u2r().s[73]++;
  try {
    const parser =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().s[74]++, new DOMParser());
    const doc =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().s[75]++, parser.parseFromString(content, 'application/xml'));
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[76]++;
    if (doc.querySelector('parsererror')) {
      /* istanbul ignore next */
      cov_2nn4cd8u2r().b[35][0]++;
      cov_2nn4cd8u2r().s[77]++;
      errors.push('Invalid XML format.');
      /* istanbul ignore next */
      cov_2nn4cd8u2r().s[78]++;
      return {
        valid: false,
        errors
      };
    } else
    /* istanbul ignore next */
    {
      cov_2nn4cd8u2r().b[35][1]++;
    }
    const firstItem =
    /* istanbul ignore next */
    (cov_2nn4cd8u2r().s[79]++, doc.querySelector('item'));
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[80]++;
    if (!firstItem) {
      /* istanbul ignore next */
      cov_2nn4cd8u2r().b[36][0]++;
      cov_2nn4cd8u2r().s[81]++;
      errors.push('No <item> elements found.');
      /* istanbul ignore next */
      cov_2nn4cd8u2r().s[82]++;
      return {
        valid: false,
        errors
      };
    } else
    /* istanbul ignore next */
    {
      cov_2nn4cd8u2r().b[36][1]++;
    }
    cov_2nn4cd8u2r().s[83]++;
    for (const field of requiredFields) {
      /* istanbul ignore next */
      cov_2nn4cd8u2r().s[84]++;
      if (!firstItem.querySelector(field)) {
        /* istanbul ignore next */
        cov_2nn4cd8u2r().b[37][0]++;
        cov_2nn4cd8u2r().s[85]++;
        errors.push(`Missing required field: <${field}>`);
      } else
      /* istanbul ignore next */
      {
        cov_2nn4cd8u2r().b[37][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[86]++;
    return {
      valid: errors.length === 0,
      errors
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[87]++;
    errors.push(`Validation error: ${err.message}`);
    /* istanbul ignore next */
    cov_2nn4cd8u2r().s[88]++;
    return {
      valid: false,
      errors
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,