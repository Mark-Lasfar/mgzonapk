{"version":3,"names":["GET","cov_28eh5sgvqi","f","s","POST","req","session","_auth","auth","b","_server","NextResponse","json","success","message","status","url","URL","action","pathname","split","pop","balance","_pointsactions","getPointsBalance","user","id","data","error","console","points","currency","discount","redeemPoints"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/points/[action]/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { auth } from '@/auth';\nimport { getPointsBalance, redeemPoints } from '@/lib/actions/points.actions';\n\nexport async function GET(req: NextRequest) {\n  try {\n    const session = await auth();\n    if (!session) return NextResponse.json({ success: false, message: 'Unauthorized' }, { status: 401 });\n\n    const url = new URL(req.url);\n    const action = url.pathname.split('/').pop(); // Extract action from URL\n\n    if (action === 'balance') {\n      const balance = await getPointsBalance(session.user.id);\n      return NextResponse.json({ success: true, data: balance });\n    }\n    return NextResponse.json({ success: false, message: 'Invalid action' }, { status: 400 });\n  } catch (error) {\n    console.error('Points GET error:', error);\n    return NextResponse.json({ success: false, message: 'Server error' }, { status: 500 });\n  }\n}\n\nexport async function POST(req: NextRequest) {\n  try {\n    const session = await auth();\n    if (!session) return NextResponse.json({ success: false, message: 'Unauthorized' }, { status: 401 });\n\n    const url = new URL(req.url);\n    const action = url.pathname.split('/').pop(); // Extract action from URL\n\n    if (action === 'apply') {\n      const { points, currency } = await req.json();\n      if (!points || !currency) {\n        return NextResponse.json({ success: false, message: 'Missing points or currency' }, { status: 400 });\n      }\n      const discount = await redeemPoints(session.user.id, points, currency, 'Points redemption at checkout');\n      if (typeof discount === 'number') {\n        return NextResponse.json({ success: true, data: { discount } });\n      }\n      return NextResponse.json(discount, { status: 400 });\n    }\n    return NextResponse.json({ success: false, message: 'Invalid action' }, { status: 400 });\n  } catch (error) {\n    console.error('Points POST error:', error);\n    return NextResponse.json({ success: false, message: 'Server error' }, { status: 500 });\n  }\n}"],"mappings":"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","ignoreList":[]}