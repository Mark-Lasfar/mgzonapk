f18d90774f0431ba05925a359bf3f25c
"use strict";

/* istanbul ignore next */
function cov_1onuny82js() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/firebase/config.ts";
  var hash = "44161f6104707af0e225ef18c5443ec4aff5de82";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/firebase/config.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 80
        }
      },
      "5": {
        start: {
          line: 14,
          column: 23
        },
        end: {
          line: 22,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 0
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 0
          },
          end: {
            line: 13,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/firebase/config.ts"],
      sourcesContent: ["if (!process.env.NEXT_PUBLIC_FIREBASE_API_KEY) {\n    throw new Error('Firebase API Key is not defined in environment variables');\n  }\n  \n  export const firebaseConfig = {\n    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n    measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\n  };"],
      names: ["firebaseConfig", "process", "env", "NEXT_PUBLIC_FIREBASE_API_KEY", "Error", "apiKey", "authDomain", "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN", "projectId", "NEXT_PUBLIC_FIREBASE_PROJECT_ID", "storageBucket", "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET", "messagingSenderId", "NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID", "appId", "NEXT_PUBLIC_FIREBASE_APP_ID", "measurementId", "NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID"],
      mappings: ";;;;+BAIeA;;;eAAAA;;;AAJf,IAAI,CAACC,QAAQC,GAAG,CAACC,4BAA4B,EAAE;IAC3C,MAAM,IAAIC,MAAM;AAClB;AAEO,MAAMJ,iBAAiB;IAC5BK,QAAQJ,QAAQC,GAAG,CAACC,4BAA4B;IAChDG,YAAYL,QAAQC,GAAG,CAACK,gCAAgC;IACxDC,WAAWP,QAAQC,GAAG,CAACO,+BAA+B;IACtDC,eAAeT,QAAQC,GAAG,CAACS,mCAAmC;IAC9DC,mBAAmBX,QAAQC,GAAG,CAACW,wCAAwC;IACvEC,OAAOb,QAAQC,GAAG,CAACa,2BAA2B;IAC9CC,eAAef,QAAQC,GAAG,CAACe,mCAAmC;AAChE"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "44161f6104707af0e225ef18c5443ec4aff5de82"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1onuny82js = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1onuny82js();
cov_1onuny82js().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1onuny82js().s[1]++;
Object.defineProperty(exports, "firebaseConfig", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1onuny82js().f[0]++;
    cov_1onuny82js().s[2]++;
    return firebaseConfig;
  }
});
/* istanbul ignore next */
cov_1onuny82js().s[3]++;
if (!process.env.NEXT_PUBLIC_FIREBASE_API_KEY) {
  /* istanbul ignore next */
  cov_1onuny82js().b[0][0]++;
  cov_1onuny82js().s[4]++;
  throw new Error('Firebase API Key is not defined in environment variables');
} else
/* istanbul ignore next */
{
  cov_1onuny82js().b[0][1]++;
}
const firebaseConfig =
/* istanbul ignore next */
(cov_1onuny82js().s[5]++, {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMW9udW55ODJqcyIsImFjdHVhbENvdmVyYWdlIiwicyIsImZpcmViYXNlQ29uZmlnIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVkiLCJiIiwiRXJyb3IiLCJhcGlLZXkiLCJhdXRoRG9tYWluIiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfQVVUSF9ET01BSU4iLCJwcm9qZWN0SWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9QUk9KRUNUX0lEIiwic3RvcmFnZUJ1Y2tldCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX1NUT1JBR0VfQlVDS0VUIiwibWVzc2FnaW5nU2VuZGVySWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9NRVNTQUdJTkdfU0VOREVSX0lEIiwiYXBwSWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9BUFBfSUQiLCJtZWFzdXJlbWVudElkIiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfTUVBU1VSRU1FTlRfSUQiXSwic291cmNlcyI6WyIvaG9tZS9oYWdlci9uZXcvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyICgzKS9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIvbGliL2ZpcmViYXNlL2NvbmZpZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpZiAoIXByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZpcmViYXNlIEFQSSBLZXkgaXMgbm90IGRlZmluZWQgaW4gZW52aXJvbm1lbnQgdmFyaWFibGVzJyk7XG4gIH1cbiAgXG4gIGV4cG9ydCBjb25zdCBmaXJlYmFzZUNvbmZpZyA9IHtcbiAgICBhcGlLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVksXG4gICAgYXV0aERvbWFpbjogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfQVVUSF9ET01BSU4sXG4gICAgcHJvamVjdElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9QUk9KRUNUX0lELFxuICAgIHN0b3JhZ2VCdWNrZXQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX1NUT1JBR0VfQlVDS0VULFxuICAgIG1lc3NhZ2luZ1NlbmRlcklkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9NRVNTQUdJTkdfU0VOREVSX0lELFxuICAgIGFwcElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9BUFBfSUQsXG4gICAgbWVhc3VyZW1lbnRJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfTUVBU1VSRU1FTlRfSURcbiAgfTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFNSTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7OytCQUZXOzs7Ozs7V0FBQUMsY0FBQTs7Ozs7QUFKZixJQUFJLENBQUNDLE9BQUEsQ0FBUUMsR0FBRyxDQUFDQyw0QkFBNEIsRUFBRTtFQUFBO0VBQUFOLGNBQUEsR0FBQU8sQ0FBQTtFQUFBUCxjQUFBLEdBQUFFLENBQUE7RUFDM0MsTUFBTSxJQUFJTSxLQUFBLENBQU07QUFDbEI7QUFBQTtBQUFBO0VBQUFSLGNBQUEsR0FBQU8sQ0FBQTtBQUFBO0FBRU8sTUFBTUosY0FBQTtBQUFBO0FBQUEsQ0FBQUgsY0FBQSxHQUFBRSxDQUFBLE9BQWlCO0VBQzVCTyxNQUFBLEVBQVFMLE9BQUEsQ0FBUUMsR0FBRyxDQUFDQyw0QkFBNEI7RUFDaERJLFVBQUEsRUFBWU4sT0FBQSxDQUFRQyxHQUFHLENBQUNNLGdDQUFnQztFQUN4REMsU0FBQSxFQUFXUixPQUFBLENBQVFDLEdBQUcsQ0FBQ1EsK0JBQStCO0VBQ3REQyxhQUFBLEVBQWVWLE9BQUEsQ0FBUUMsR0FBRyxDQUFDVSxtQ0FBbUM7RUFDOURDLGlCQUFBLEVBQW1CWixPQUFBLENBQVFDLEdBQUcsQ0FBQ1ksd0NBQXdDO0VBQ3ZFQyxLQUFBLEVBQU9kLE9BQUEsQ0FBUUMsR0FBRyxDQUFDYywyQkFBMkI7RUFDOUNDLGFBQUEsRUFBZWhCLE9BQUEsQ0FBUUMsR0FBRyxDQUFDZ0I7QUFDN0IiLCJpZ25vcmVMaXN0IjpbXX0=