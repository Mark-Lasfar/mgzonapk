3f9169cd5dd3dcd23be608feb18128b6
"use strict";

/* istanbul ignore next */
function cov_gri8p5i9c() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/setting.model.ts";
  var hash = "a47ccf2f1dc813e440d7045291ec9a060617e7d9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/setting.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 18
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "4": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 190,
          column: 2
        }
      },
      "5": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 90
        }
      },
      "6": {
        start: {
          line: 192,
          column: 17
        },
        end: {
          line: 192,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 16
          },
          end: {
            line: 191,
            column: 40
          }
        }, {
          start: {
            line: 191,
            column: 44
          },
          end: {
            line: 191,
            column: 90
          }
        }],
        line: 191
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/setting.model.ts"],
      sourcesContent: ["import { ISettingInput } from '@/types'\nimport { Document, Model, model, models, Schema } from 'mongoose'\n\nexport interface ISetting extends Document, ISettingInput {\n  _id: string\n  createdAt: Date\n  updatedAt: Date\n}\n\nconst settingSchema = new Schema<ISetting>(\n  {\n    common: {\n      pageSize: { type: Number, required: true, default: 9 },\n      isMaintenanceMode: { type: Boolean, required: true, default: false },\n      freeShippingMinPrice: { type: Number, required: true, default: 0 },\n      defaultTheme: { type: String, required: true, default: 'light' },\n      defaultColor: { type: String, required: true, default: 'gold' },\n    },\n    site: {\n      name: { type: String, required: true },\n      url: { type: String, required: true },\n      logo: { type: String, required: true },\n      slogan: { type: String, required: true },\n      description: { type: String, required: true },\n      keywords: { type: String, required: true },\n      email: { type: String, required: true },\n      phone: { type: String, required: true },\n      author: { type: String, required: true },\n      copyright: { type: String, required: true },\n      address: { type: String, required: true },\n    },\n    carousels: [\n      {\n        title: { type: String, required: true },\n        url: { type: String, required: true, unique: true },\n        image: { type: String, required: true },\n        buttonCaption: { type: String, required: true },\n      },\n    ],\n    availableLanguages: [\n      {\n        name: { type: String, required: true },\n        code: { type: String, required: true },\n      },\n    ],\n    defaultLanguage: { type: String, required: true },\n    availableCurrencies: [\n      {\n        name: { type: String, required: true },\n        code: { type: String, required: true },\n        convertRate: { type: Number, required: true },\n        symbol: { type: String, required: true },\n      },\n    ],\n    defaultCurrency: { type: String, required: true },\n    availablePaymentMethods: [\n      {\n        name: { type: String, required: true },\n        commission: { type: Number, required: true, default: 0 },\n      },\n    ],\n    defaultPaymentMethod: { type: String, required: true },\n    availableDeliveryDates: [\n      {\n        name: { type: String, required: true },\n        daysToDeliver: { type: Number, required: true },\n        shippingPrice: { type: Number, required: true },\n        freeShippingMinPrice: { type: Number, required: true },\n      },\n    ],\n    defaultDeliveryDate: { type: String, required: true },\n  },\n  {\n    timestamps: true,\n  }\n)\n\nconst Setting =\n  (models.Setting as Model<ISetting>) ||\n  model<ISetting>('Setting', settingSchema)\n\nexport default Setting"],
      names: ["settingSchema", "Schema", "common", "pageSize", "type", "Number", "required", "default", "isMaintenanceMode", "Boolean", "freeShippingMinPrice", "defaultTheme", "String", "defaultColor", "site", "name", "url", "logo", "slogan", "description", "keywords", "email", "phone", "author", "copyright", "address", "carousels", "title", "unique", "image", "buttonCaption", "availableLanguages", "code", "defaultLanguage", "availableCurrencies", "convertRate", "symbol", "defaultCurrency", "availablePaymentMethods", "commission", "defaultPaymentMethod", "availableDeliveryDates", "daysToDeliver", "shippingPrice", "defaultDeliveryDate", "timestamps", "Setting", "models", "model"],
      mappings: ";;;;+BAiFA;;;eAAA;;;0BAhFuD;AAQvD,MAAMA,gBAAgB,IAAIC,gBAAM,CAC9B;IACEC,QAAQ;QACNC,UAAU;YAAEC,MAAMC;YAAQC,UAAU;YAAMC,SAAS;QAAE;QACrDC,mBAAmB;YAAEJ,MAAMK;YAASH,UAAU;YAAMC,SAAS;QAAM;QACnEG,sBAAsB;YAAEN,MAAMC;YAAQC,UAAU;YAAMC,SAAS;QAAE;QACjEI,cAAc;YAAEP,MAAMQ;YAAQN,UAAU;YAAMC,SAAS;QAAQ;QAC/DM,cAAc;YAAET,MAAMQ;YAAQN,UAAU;YAAMC,SAAS;QAAO;IAChE;IACAO,MAAM;QACJC,MAAM;YAAEX,MAAMQ;YAAQN,UAAU;QAAK;QACrCU,KAAK;YAAEZ,MAAMQ;YAAQN,UAAU;QAAK;QACpCW,MAAM;YAAEb,MAAMQ;YAAQN,UAAU;QAAK;QACrCY,QAAQ;YAAEd,MAAMQ;YAAQN,UAAU;QAAK;QACvCa,aAAa;YAAEf,MAAMQ;YAAQN,UAAU;QAAK;QAC5Cc,UAAU;YAAEhB,MAAMQ;YAAQN,UAAU;QAAK;QACzCe,OAAO;YAAEjB,MAAMQ;YAAQN,UAAU;QAAK;QACtCgB,OAAO;YAAElB,MAAMQ;YAAQN,UAAU;QAAK;QACtCiB,QAAQ;YAAEnB,MAAMQ;YAAQN,UAAU;QAAK;QACvCkB,WAAW;YAAEpB,MAAMQ;YAAQN,UAAU;QAAK;QAC1CmB,SAAS;YAAErB,MAAMQ;YAAQN,UAAU;QAAK;IAC1C;IACAoB,WAAW;QACT;YACEC,OAAO;gBAAEvB,MAAMQ;gBAAQN,UAAU;YAAK;YACtCU,KAAK;gBAAEZ,MAAMQ;gBAAQN,UAAU;gBAAMsB,QAAQ;YAAK;YAClDC,OAAO;gBAAEzB,MAAMQ;gBAAQN,UAAU;YAAK;YACtCwB,eAAe;gBAAE1B,MAAMQ;gBAAQN,UAAU;YAAK;QAChD;KACD;IACDyB,oBAAoB;QAClB;YACEhB,MAAM;gBAAEX,MAAMQ;gBAAQN,UAAU;YAAK;YACrC0B,MAAM;gBAAE5B,MAAMQ;gBAAQN,UAAU;YAAK;QACvC;KACD;IACD2B,iBAAiB;QAAE7B,MAAMQ;QAAQN,UAAU;IAAK;IAChD4B,qBAAqB;QACnB;YACEnB,MAAM;gBAAEX,MAAMQ;gBAAQN,UAAU;YAAK;YACrC0B,MAAM;gBAAE5B,MAAMQ;gBAAQN,UAAU;YAAK;YACrC6B,aAAa;gBAAE/B,MAAMC;gBAAQC,UAAU;YAAK;YAC5C8B,QAAQ;gBAAEhC,MAAMQ;gBAAQN,UAAU;YAAK;QACzC;KACD;IACD+B,iBAAiB;QAAEjC,MAAMQ;QAAQN,UAAU;IAAK;IAChDgC,yBAAyB;QACvB;YACEvB,MAAM;gBAAEX,MAAMQ;gBAAQN,UAAU;YAAK;YACrCiC,YAAY;gBAAEnC,MAAMC;gBAAQC,UAAU;gBAAMC,SAAS;YAAE;QACzD;KACD;IACDiC,sBAAsB;QAAEpC,MAAMQ;QAAQN,UAAU;IAAK;IACrDmC,wBAAwB;QACtB;YACE1B,MAAM;gBAAEX,MAAMQ;gBAAQN,UAAU;YAAK;YACrCoC,eAAe;gBAAEtC,MAAMC;gBAAQC,UAAU;YAAK;YAC9CqC,eAAe;gBAAEvC,MAAMC;gBAAQC,UAAU;YAAK;YAC9CI,sBAAsB;gBAAEN,MAAMC;gBAAQC,UAAU;YAAK;QACvD;KACD;IACDsC,qBAAqB;QAAExC,MAAMQ;QAAQN,UAAU;IAAK;AACtD,GACA;IACEuC,YAAY;AACd;AAGF,MAAMC,UACJ,AAACC,gBAAM,CAACD,OAAO,IACfE,IAAAA,eAAK,EAAW,WAAWhD;MAE7B,WAAe8C"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a47ccf2f1dc813e440d7045291ec9a060617e7d9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_gri8p5i9c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_gri8p5i9c();
cov_gri8p5i9c().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_gri8p5i9c().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_gri8p5i9c().f[0]++;
    cov_gri8p5i9c().s[2]++;
    return _default;
  }
});
const _mongoose =
/* istanbul ignore next */
(cov_gri8p5i9c().s[3]++, require("mongoose"));
const settingSchema =
/* istanbul ignore next */
(cov_gri8p5i9c().s[4]++, new _mongoose.Schema({
  common: {
    pageSize: {
      type: Number,
      required: true,
      default: 9
    },
    isMaintenanceMode: {
      type: Boolean,
      required: true,
      default: false
    },
    freeShippingMinPrice: {
      type: Number,
      required: true,
      default: 0
    },
    defaultTheme: {
      type: String,
      required: true,
      default: 'light'
    },
    defaultColor: {
      type: String,
      required: true,
      default: 'gold'
    }
  },
  site: {
    name: {
      type: String,
      required: true
    },
    url: {
      type: String,
      required: true
    },
    logo: {
      type: String,
      required: true
    },
    slogan: {
      type: String,
      required: true
    },
    description: {
      type: String,
      required: true
    },
    keywords: {
      type: String,
      required: true
    },
    email: {
      type: String,
      required: true
    },
    phone: {
      type: String,
      required: true
    },
    author: {
      type: String,
      required: true
    },
    copyright: {
      type: String,
      required: true
    },
    address: {
      type: String,
      required: true
    }
  },
  carousels: [{
    title: {
      type: String,
      required: true
    },
    url: {
      type: String,
      required: true,
      unique: true
    },
    image: {
      type: String,
      required: true
    },
    buttonCaption: {
      type: String,
      required: true
    }
  }],
  availableLanguages: [{
    name: {
      type: String,
      required: true
    },
    code: {
      type: String,
      required: true
    }
  }],
  defaultLanguage: {
    type: String,
    required: true
  },
  availableCurrencies: [{
    name: {
      type: String,
      required: true
    },
    code: {
      type: String,
      required: true
    },
    convertRate: {
      type: Number,
      required: true
    },
    symbol: {
      type: String,
      required: true
    }
  }],
  defaultCurrency: {
    type: String,
    required: true
  },
  availablePaymentMethods: [{
    name: {
      type: String,
      required: true
    },
    commission: {
      type: Number,
      required: true,
      default: 0
    }
  }],
  defaultPaymentMethod: {
    type: String,
    required: true
  },
  availableDeliveryDates: [{
    name: {
      type: String,
      required: true
    },
    daysToDeliver: {
      type: Number,
      required: true
    },
    shippingPrice: {
      type: Number,
      required: true
    },
    freeShippingMinPrice: {
      type: Number,
      required: true
    }
  }],
  defaultDeliveryDate: {
    type: String,
    required: true
  }
}, {
  timestamps: true
}));
const Setting =
/* istanbul ignore next */
(cov_gri8p5i9c().s[5]++,
/* istanbul ignore next */
(cov_gri8p5i9c().b[0][0]++, _mongoose.models.Setting) ||
/* istanbul ignore next */
(cov_gri8p5i9c().b[0][1]++, (0, _mongoose.model)('Setting', settingSchema)));
const _default =
/* istanbul ignore next */
(cov_gri8p5i9c().s[6]++, Setting);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,