5e3c0c26f6aec7886fe837e3e98be1a1
"use strict";

/* istanbul ignore next */
function cov_ifonbdo5v() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/inventory.model.ts";
  var hash = "c25d09d8e8d7d22e115277bac3af861c198516a8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/inventory.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 18
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "4": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 66,
          column: 2
        }
      },
      "5": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 67,
          column: 73
        }
      },
      "6": {
        start: {
          line: 68,
          column: 17
        },
        end: {
          line: 68,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/inventory.model.ts"],
      sourcesContent: ["import { Schema, model, Document } from 'mongoose';\n\nexport interface InventoryItem {\n  sku: string;\n  provider: string;\n  quantity: number;\n  thresholds: {\n    low: number;\n  };\n  metadata: Record<string, any>;\n  lastSyncedAt: Date;\n  adjustments: Array<{\n    type: 'increase' | 'decrease' | 'set';\n    quantity: number;\n    timestamp: Date;\n  }>;\n}\n\ninterface InventoryItemDocument extends InventoryItem, Document {}\n\nconst inventorySchema = new Schema<InventoryItemDocument>(\n  {\n    sku: { type: String, required: true, unique: true },\n    provider: { type: String, required: true },\n    quantity: { type: Number, required: true, default: 0 },\n    thresholds: {\n      low: { type: Number, required: true, default: 10 },\n    },\n    metadata: { type: Object, default: {} },\n    lastSyncedAt: { type: Date, required: true },\n    adjustments: [\n      {\n        type: { type: String, enum: ['increase', 'decrease', 'set'], required: true },\n        quantity: { type: Number, required: true },\n        timestamp: { type: Date, required: true, default: Date.now },\n      },\n    ],\n  },\n  {\n    timestamps: true,\n  }\n);\n\nconst InventoryModel = model<InventoryItemDocument>('Inventory', inventorySchema);\n\nexport default InventoryModel;"],
      names: ["inventorySchema", "Schema", "sku", "type", "String", "required", "unique", "provider", "quantity", "Number", "default", "thresholds", "low", "metadata", "Object", "lastSyncedAt", "Date", "adjustments", "enum", "timestamp", "now", "timestamps", "InventoryModel", "model"],
      mappings: ";;;;+BA6CA;;;eAAA;;;0BA7CwC;AAoBxC,MAAMA,kBAAkB,IAAIC,gBAAM,CAChC;IACEC,KAAK;QAAEC,MAAMC;QAAQC,UAAU;QAAMC,QAAQ;IAAK;IAClDC,UAAU;QAAEJ,MAAMC;QAAQC,UAAU;IAAK;IACzCG,UAAU;QAAEL,MAAMM;QAAQJ,UAAU;QAAMK,SAAS;IAAE;IACrDC,YAAY;QACVC,KAAK;YAAET,MAAMM;YAAQJ,UAAU;YAAMK,SAAS;QAAG;IACnD;IACAG,UAAU;QAAEV,MAAMW;QAAQJ,SAAS,CAAC;IAAE;IACtCK,cAAc;QAAEZ,MAAMa;QAAMX,UAAU;IAAK;IAC3CY,aAAa;QACX;YACEd,MAAM;gBAAEA,MAAMC;gBAAQc,MAAM;oBAAC;oBAAY;oBAAY;iBAAM;gBAAEb,UAAU;YAAK;YAC5EG,UAAU;gBAAEL,MAAMM;gBAAQJ,UAAU;YAAK;YACzCc,WAAW;gBAAEhB,MAAMa;gBAAMX,UAAU;gBAAMK,SAASM,KAAKI,GAAG;YAAC;QAC7D;KACD;AACH,GACA;IACEC,YAAY;AACd;AAGF,MAAMC,iBAAiBC,IAAAA,eAAK,EAAwB,aAAavB;MAEjE,WAAesB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c25d09d8e8d7d22e115277bac3af861c198516a8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ifonbdo5v = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ifonbdo5v();
cov_ifonbdo5v().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ifonbdo5v().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_ifonbdo5v().f[0]++;
    cov_ifonbdo5v().s[2]++;
    return _default;
  }
});
const _mongoose =
/* istanbul ignore next */
(cov_ifonbdo5v().s[3]++, require("mongoose"));
const inventorySchema =
/* istanbul ignore next */
(cov_ifonbdo5v().s[4]++, new _mongoose.Schema({
  sku: {
    type: String,
    required: true,
    unique: true
  },
  provider: {
    type: String,
    required: true
  },
  quantity: {
    type: Number,
    required: true,
    default: 0
  },
  thresholds: {
    low: {
      type: Number,
      required: true,
      default: 10
    }
  },
  metadata: {
    type: Object,
    default: {}
  },
  lastSyncedAt: {
    type: Date,
    required: true
  },
  adjustments: [{
    type: {
      type: String,
      enum: ['increase', 'decrease', 'set'],
      required: true
    },
    quantity: {
      type: Number,
      required: true
    },
    timestamp: {
      type: Date,
      required: true,
      default: Date.now
    }
  }]
}, {
  timestamps: true
}));
const InventoryModel =
/* istanbul ignore next */
(cov_ifonbdo5v().s[5]++, (0, _mongoose.model)('Inventory', inventorySchema));
const _default =
/* istanbul ignore next */
(cov_ifonbdo5v().s[6]++, InventoryModel);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfaWZvbmJkbzV2IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiX2RlZmF1bHQiLCJpbnZlbnRvcnlTY2hlbWEiLCJfbW9uZ29vc2UiLCJTY2hlbWEiLCJza3UiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ1bmlxdWUiLCJwcm92aWRlciIsInF1YW50aXR5IiwiTnVtYmVyIiwiZGVmYXVsdCIsInRocmVzaG9sZHMiLCJsb3ciLCJtZXRhZGF0YSIsIk9iamVjdCIsImxhc3RTeW5jZWRBdCIsIkRhdGUiLCJhZGp1c3RtZW50cyIsImVudW0iLCJ0aW1lc3RhbXAiLCJub3ciLCJ0aW1lc3RhbXBzIiwiSW52ZW50b3J5TW9kZWwiLCJtb2RlbCJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9saWIvZGIvbW9kZWxzL2ludmVudG9yeS5tb2RlbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTY2hlbWEsIG1vZGVsLCBEb2N1bWVudCB9IGZyb20gJ21vbmdvb3NlJztcblxuZXhwb3J0IGludGVyZmFjZSBJbnZlbnRvcnlJdGVtIHtcbiAgc2t1OiBzdHJpbmc7XG4gIHByb3ZpZGVyOiBzdHJpbmc7XG4gIHF1YW50aXR5OiBudW1iZXI7XG4gIHRocmVzaG9sZHM6IHtcbiAgICBsb3c6IG51bWJlcjtcbiAgfTtcbiAgbWV0YWRhdGE6IFJlY29yZDxzdHJpbmcsIGFueT47XG4gIGxhc3RTeW5jZWRBdDogRGF0ZTtcbiAgYWRqdXN0bWVudHM6IEFycmF5PHtcbiAgICB0eXBlOiAnaW5jcmVhc2UnIHwgJ2RlY3JlYXNlJyB8ICdzZXQnO1xuICAgIHF1YW50aXR5OiBudW1iZXI7XG4gICAgdGltZXN0YW1wOiBEYXRlO1xuICB9Pjtcbn1cblxuaW50ZXJmYWNlIEludmVudG9yeUl0ZW1Eb2N1bWVudCBleHRlbmRzIEludmVudG9yeUl0ZW0sIERvY3VtZW50IHt9XG5cbmNvbnN0IGludmVudG9yeVNjaGVtYSA9IG5ldyBTY2hlbWE8SW52ZW50b3J5SXRlbURvY3VtZW50PihcbiAge1xuICAgIHNrdTogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlLCB1bmlxdWU6IHRydWUgfSxcbiAgICBwcm92aWRlcjogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sXG4gICAgcXVhbnRpdHk6IHsgdHlwZTogTnVtYmVyLCByZXF1aXJlZDogdHJ1ZSwgZGVmYXVsdDogMCB9LFxuICAgIHRocmVzaG9sZHM6IHtcbiAgICAgIGxvdzogeyB0eXBlOiBOdW1iZXIsIHJlcXVpcmVkOiB0cnVlLCBkZWZhdWx0OiAxMCB9LFxuICAgIH0sXG4gICAgbWV0YWRhdGE6IHsgdHlwZTogT2JqZWN0LCBkZWZhdWx0OiB7fSB9LFxuICAgIGxhc3RTeW5jZWRBdDogeyB0eXBlOiBEYXRlLCByZXF1aXJlZDogdHJ1ZSB9LFxuICAgIGFkanVzdG1lbnRzOiBbXG4gICAgICB7XG4gICAgICAgIHR5cGU6IHsgdHlwZTogU3RyaW5nLCBlbnVtOiBbJ2luY3JlYXNlJywgJ2RlY3JlYXNlJywgJ3NldCddLCByZXF1aXJlZDogdHJ1ZSB9LFxuICAgICAgICBxdWFudGl0eTogeyB0eXBlOiBOdW1iZXIsIHJlcXVpcmVkOiB0cnVlIH0sXG4gICAgICAgIHRpbWVzdGFtcDogeyB0eXBlOiBEYXRlLCByZXF1aXJlZDogdHJ1ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfSxcbiAgICAgIH0sXG4gICAgXSxcbiAgfSxcbiAge1xuICAgIHRpbWVzdGFtcHM6IHRydWUsXG4gIH1cbik7XG5cbmNvbnN0IEludmVudG9yeU1vZGVsID0gbW9kZWw8SW52ZW50b3J5SXRlbURvY3VtZW50PignSW52ZW50b3J5JywgaW52ZW50b3J5U2NoZW1hKTtcblxuZXhwb3J0IGRlZmF1bHQgSW52ZW50b3J5TW9kZWw7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFzQnlDO0lBQUFBLGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGFBQUE7QUFBQUEsYUFBQSxHQUFBRSxDQUFBOzs7Ozs7K0JBdUJ6Qzs7Ozs7O1dBQUFDLFFBQUE7Ozs7O2lDQTdDd0M7QUFvQnhDLE1BQU1DLGVBQUE7QUFBQTtBQUFBLENBQUFKLGFBQUEsR0FBQUUsQ0FBQSxPQUFrQixJQUFJRyxTQUFBLENBQUFDLE1BQU0sQ0FDaEM7RUFDRUMsR0FBQSxFQUFLO0lBQUVDLElBQUEsRUFBTUMsTUFBQTtJQUFRQyxRQUFBLEVBQVU7SUFBTUMsTUFBQSxFQUFRO0VBQUs7RUFDbERDLFFBQUEsRUFBVTtJQUFFSixJQUFBLEVBQU1DLE1BQUE7SUFBUUMsUUFBQSxFQUFVO0VBQUs7RUFDekNHLFFBQUEsRUFBVTtJQUFFTCxJQUFBLEVBQU1NLE1BQUE7SUFBUUosUUFBQSxFQUFVO0lBQU1LLE9BQUEsRUFBUztFQUFFO0VBQ3JEQyxVQUFBLEVBQVk7SUFDVkMsR0FBQSxFQUFLO01BQUVULElBQUEsRUFBTU0sTUFBQTtNQUFRSixRQUFBLEVBQVU7TUFBTUssT0FBQSxFQUFTO0lBQUc7RUFDbkQ7RUFDQUcsUUFBQSxFQUFVO0lBQUVWLElBQUEsRUFBTVcsTUFBQTtJQUFRSixPQUFBLEVBQVMsQ0FBQztFQUFFO0VBQ3RDSyxZQUFBLEVBQWM7SUFBRVosSUFBQSxFQUFNYSxJQUFBO0lBQU1YLFFBQUEsRUFBVTtFQUFLO0VBQzNDWSxXQUFBLEVBQWEsQ0FDWDtJQUNFZCxJQUFBLEVBQU07TUFBRUEsSUFBQSxFQUFNQyxNQUFBO01BQVFjLElBQUEsRUFBTSxDQUFDLFlBQVksWUFBWSxNQUFNO01BQUViLFFBQUEsRUFBVTtJQUFLO0lBQzVFRyxRQUFBLEVBQVU7TUFBRUwsSUFBQSxFQUFNTSxNQUFBO01BQVFKLFFBQUEsRUFBVTtJQUFLO0lBQ3pDYyxTQUFBLEVBQVc7TUFBRWhCLElBQUEsRUFBTWEsSUFBQTtNQUFNWCxRQUFBLEVBQVU7TUFBTUssT0FBQSxFQUFTTSxJQUFBLENBQUtJO0lBQUk7RUFDN0Q7QUFFSixHQUNBO0VBQ0VDLFVBQUEsRUFBWTtBQUNkO0FBR0YsTUFBTUMsY0FBQTtBQUFBO0FBQUEsQ0FBQTNCLGFBQUEsR0FBQUUsQ0FBQSxPQUFpQixJQUFBRyxTQUFBLENBQUF1QixLQUFLLEVBQXdCLGFBQWF4QixlQUFBO01BRWpFRCxRQUFBO0FBQUE7QUFBQSxDQUFBSCxhQUFBLEdBQUFFLENBQUEsT0FBZXlCLGNBQUEiLCJpZ25vcmVMaXN0IjpbXX0=