8789b3e0f6b45bfda79c45066b091cdc
"use strict";

/* istanbul ignore next */
function cov_2m71yu9kul() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/auth/verify-code/route.ts";
  var hash = "36c5627906fa76ec8e3449e53ab81f7f42d42d5d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/auth/verify-code/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 45
        },
        end: {
          line: 12,
          column: 131
        }
      },
      "5": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 6
        }
      },
      "7": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "8": {
        start: {
          line: 21,
          column: 28
        },
        end: {
          line: 21,
          column: 44
        }
      },
      "9": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "10": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 27,
          column: 11
        }
      },
      "11": {
        start: {
          line: 29,
          column: 19
        },
        end: {
          line: 32,
          column: 6
        }
      },
      "12": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "13": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "14": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "15": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 45,
          column: 11
        }
      },
      "16": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "POST",
        decl: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 25
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 15,
            column: 38
          }
        }, {
          start: {
            line: 15,
            column: 41
          },
          end: {
            line: 17,
            column: 5
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 14
          }
        }, {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 15,
            column: 32
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 23
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 14
          }
        }, {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 23
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/auth/verify-code/route.ts"],
      sourcesContent: ["import { NextResponse } from 'next/server';\nimport VerificationCode from '@/lib/db/models/verification-code.model';\nimport { connectToDatabase } from '@/lib/db';\n\nexport async function POST(req: Request) {\n  await connectToDatabase();\n  const { email, code } = await req.json();\n\n  if (!email || !code) {\n    return NextResponse.json({ error: 'Email and code are required' }, { status: 400 });\n  }\n\n  const record = await VerificationCode.findOne({ email, code });\n\n  if (!record) {\n    return NextResponse.json({ error: 'Invalid or expired code' }, { status: 401 });\n  }\n\n  if (record.expiresAt < new Date()) {\n    return NextResponse.json({ error: 'Code expired' }, { status: 401 });\n  }\n\n  return NextResponse.json({ success: true });\n}\n"],
      names: ["POST", "req", "connectToDatabase", "email", "code", "json", "NextResponse", "error", "status", "record", "VerificationCode", "findOne", "expiresAt", "Date", "success"],
      mappings: ";;;;+BAIsBA;;;eAAAA;;;wBAJO;8EACA;oBACK;;;;;;AAE3B,eAAeA,KAAKC,GAAY;IACrC,MAAMC,IAAAA,qBAAiB;IACvB,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAE,GAAG,MAAMH,IAAII,IAAI;IAEtC,IAAI,CAACF,SAAS,CAACC,MAAM;QACnB,OAAOE,oBAAY,CAACD,IAAI,CAAC;YAAEE,OAAO;QAA8B,GAAG;YAAEC,QAAQ;QAAI;IACnF;IAEA,MAAMC,SAAS,MAAMC,8BAAgB,CAACC,OAAO,CAAC;QAAER;QAAOC;IAAK;IAE5D,IAAI,CAACK,QAAQ;QACX,OAAOH,oBAAY,CAACD,IAAI,CAAC;YAAEE,OAAO;QAA0B,GAAG;YAAEC,QAAQ;QAAI;IAC/E;IAEA,IAAIC,OAAOG,SAAS,GAAG,IAAIC,QAAQ;QACjC,OAAOP,oBAAY,CAACD,IAAI,CAAC;YAAEE,OAAO;QAAe,GAAG;YAAEC,QAAQ;QAAI;IACpE;IAEA,OAAOF,oBAAY,CAACD,IAAI,CAAC;QAAES,SAAS;IAAK;AAC3C"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "36c5627906fa76ec8e3449e53ab81f7f42d42d5d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2m71yu9kul = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2m71yu9kul();
cov_2m71yu9kul().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2m71yu9kul().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2m71yu9kul().f[0]++;
    cov_2m71yu9kul().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_2m71yu9kul().s[3]++, require("next/server"));
const _verificationcodemodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_2m71yu9kul().s[4]++, _interop_require_default(require("../../../../lib/db/models/verification-code.model")));
const _db =
/* istanbul ignore next */
(cov_2m71yu9kul().s[5]++, require("../../../../lib/db"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2m71yu9kul().f[1]++;
  cov_2m71yu9kul().s[6]++;
  return /* istanbul ignore next */(cov_2m71yu9kul().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2m71yu9kul().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2m71yu9kul().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2m71yu9kul().b[0][1]++, {
    default: obj
  });
}
async function POST(req) {
  /* istanbul ignore next */
  cov_2m71yu9kul().f[2]++;
  cov_2m71yu9kul().s[7]++;
  await (0, _db.connectToDatabase)();
  const {
    email,
    code
  } =
  /* istanbul ignore next */
  (cov_2m71yu9kul().s[8]++, await req.json());
  /* istanbul ignore next */
  cov_2m71yu9kul().s[9]++;
  if (
  /* istanbul ignore next */
  (cov_2m71yu9kul().b[3][0]++, !email) ||
  /* istanbul ignore next */
  (cov_2m71yu9kul().b[3][1]++, !code)) {
    /* istanbul ignore next */
    cov_2m71yu9kul().b[2][0]++;
    cov_2m71yu9kul().s[10]++;
    return _server.NextResponse.json({
      error: 'Email and code are required'
    }, {
      status: 400
    });
  } else
  /* istanbul ignore next */
  {
    cov_2m71yu9kul().b[2][1]++;
  }
  const record =
  /* istanbul ignore next */
  (cov_2m71yu9kul().s[11]++, await _verificationcodemodel.default.findOne({
    email,
    code
  }));
  /* istanbul ignore next */
  cov_2m71yu9kul().s[12]++;
  if (!record) {
    /* istanbul ignore next */
    cov_2m71yu9kul().b[4][0]++;
    cov_2m71yu9kul().s[13]++;
    return _server.NextResponse.json({
      error: 'Invalid or expired code'
    }, {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_2m71yu9kul().b[4][1]++;
  }
  cov_2m71yu9kul().s[14]++;
  if (record.expiresAt < new Date()) {
    /* istanbul ignore next */
    cov_2m71yu9kul().b[5][0]++;
    cov_2m71yu9kul().s[15]++;
    return _server.NextResponse.json({
      error: 'Code expired'
    }, {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_2m71yu9kul().b[5][1]++;
  }
  cov_2m71yu9kul().s[16]++;
  return _server.NextResponse.json({
    success: true
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQT1NUIiwicmVxIiwiY292XzJtNzF5dTlrdWwiLCJmIiwicyIsIl9kYiIsImNvbm5lY3RUb0RhdGFiYXNlIiwiZW1haWwiLCJjb2RlIiwianNvbiIsImIiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwiZXJyb3IiLCJzdGF0dXMiLCJyZWNvcmQiLCJfdmVyaWZpY2F0aW9uY29kZW1vZGVsIiwiZGVmYXVsdCIsImZpbmRPbmUiLCJleHBpcmVzQXQiLCJEYXRlIiwic3VjY2VzcyJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9hcHAvYXBpL2F1dGgvdmVyaWZ5LWNvZGUvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IFZlcmlmaWNhdGlvbkNvZGUgZnJvbSAnQC9saWIvZGIvbW9kZWxzL3ZlcmlmaWNhdGlvbi1jb2RlLm1vZGVsJztcbmltcG9ydCB7IGNvbm5lY3RUb0RhdGFiYXNlIH0gZnJvbSAnQC9saWIvZGInO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXE6IFJlcXVlc3QpIHtcbiAgYXdhaXQgY29ubmVjdFRvRGF0YWJhc2UoKTtcbiAgY29uc3QgeyBlbWFpbCwgY29kZSB9ID0gYXdhaXQgcmVxLmpzb24oKTtcblxuICBpZiAoIWVtYWlsIHx8ICFjb2RlKSB7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdFbWFpbCBhbmQgY29kZSBhcmUgcmVxdWlyZWQnIH0sIHsgc3RhdHVzOiA0MDAgfSk7XG4gIH1cblxuICBjb25zdCByZWNvcmQgPSBhd2FpdCBWZXJpZmljYXRpb25Db2RlLmZpbmRPbmUoeyBlbWFpbCwgY29kZSB9KTtcblxuICBpZiAoIXJlY29yZCkge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnSW52YWxpZCBvciBleHBpcmVkIGNvZGUnIH0sIHsgc3RhdHVzOiA0MDEgfSk7XG4gIH1cblxuICBpZiAocmVjb3JkLmV4cGlyZXNBdCA8IG5ldyBEYXRlKCkpIHtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogJ0NvZGUgZXhwaXJlZCcgfSwgeyBzdGF0dXM6IDQwMSB9KTtcbiAgfVxuXG4gIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IHRydWUgfSk7XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQUlzQjs7Ozs7O1dBQUFBLElBQUE7Ozs7O2tDQUpPOzs7d0VBQ0E7OztrQ0FDSzs7Ozs7Ozs7Ozs7Ozs7O0FBRTNCLGVBQWVBLEtBQUtDLEdBQVk7RUFBQTtFQUFBQyxjQUFBLEdBQUFDLENBQUE7RUFBQUQsY0FBQSxHQUFBRSxDQUFBO0VBQ3JDLE1BQU0sSUFBQUMsR0FBQSxDQUFBQyxpQkFBaUI7RUFDdkIsTUFBTTtJQUFFQyxLQUFLO0lBQUVDO0VBQUksQ0FBRTtFQUFBO0VBQUEsQ0FBQU4sY0FBQSxHQUFBRSxDQUFBLE9BQUcsTUFBTUgsR0FBQSxDQUFJUSxJQUFJO0VBQUE7RUFBQVAsY0FBQSxHQUFBRSxDQUFBO0VBRXRDO0VBQUk7RUFBQSxDQUFBRixjQUFBLEdBQUFRLENBQUEsV0FBQ0gsS0FBQTtFQUFBO0VBQUEsQ0FBQUwsY0FBQSxHQUFBUSxDQUFBLFVBQVMsQ0FBQ0YsSUFBQSxHQUFNO0lBQUE7SUFBQU4sY0FBQSxHQUFBUSxDQUFBO0lBQUFSLGNBQUEsR0FBQUUsQ0FBQTtJQUNuQixPQUFPTyxPQUFBLENBQUFDLFlBQVksQ0FBQ0gsSUFBSSxDQUFDO01BQUVJLEtBQUEsRUFBTztJQUE4QixHQUFHO01BQUVDLE1BQUEsRUFBUTtJQUFJO0VBQ25GO0VBQUE7RUFBQTtJQUFBWixjQUFBLEdBQUFRLENBQUE7RUFBQTtFQUVBLE1BQU1LLE1BQUE7RUFBQTtFQUFBLENBQUFiLGNBQUEsR0FBQUUsQ0FBQSxRQUFTLE1BQU1ZLHNCQUFBLENBQUFDLE9BQWdCLENBQUNDLE9BQU8sQ0FBQztJQUFFWCxLQUFBO0lBQU9DO0VBQUs7RUFBQTtFQUFBTixjQUFBLEdBQUFFLENBQUE7RUFFNUQsSUFBSSxDQUFDVyxNQUFBLEVBQVE7SUFBQTtJQUFBYixjQUFBLEdBQUFRLENBQUE7SUFBQVIsY0FBQSxHQUFBRSxDQUFBO0lBQ1gsT0FBT08sT0FBQSxDQUFBQyxZQUFZLENBQUNILElBQUksQ0FBQztNQUFFSSxLQUFBLEVBQU87SUFBMEIsR0FBRztNQUFFQyxNQUFBLEVBQVE7SUFBSTtFQUMvRTtFQUFBO0VBQUE7SUFBQVosY0FBQSxHQUFBUSxDQUFBO0VBQUE7RUFBQVIsY0FBQSxHQUFBRSxDQUFBO0VBRUEsSUFBSVcsTUFBQSxDQUFPSSxTQUFTLEdBQUcsSUFBSUMsSUFBQSxJQUFRO0lBQUE7SUFBQWxCLGNBQUEsR0FBQVEsQ0FBQTtJQUFBUixjQUFBLEdBQUFFLENBQUE7SUFDakMsT0FBT08sT0FBQSxDQUFBQyxZQUFZLENBQUNILElBQUksQ0FBQztNQUFFSSxLQUFBLEVBQU87SUFBZSxHQUFHO01BQUVDLE1BQUEsRUFBUTtJQUFJO0VBQ3BFO0VBQUE7RUFBQTtJQUFBWixjQUFBLEdBQUFRLENBQUE7RUFBQTtFQUFBUixjQUFBLEdBQUFFLENBQUE7RUFFQSxPQUFPTyxPQUFBLENBQUFDLFlBQVksQ0FBQ0gsSUFBSSxDQUFDO0lBQUVZLE9BQUEsRUFBUztFQUFLO0FBQzNDIiwiaWdub3JlTGlzdCI6W119