ce4a2fd220447678c39e86b20d3e7a58
'use server';
"use strict";

/* istanbul ignore next */
function cov_1xuxhnjlzf() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/warehouse.actions.ts";
  var hash = "19ed80ad6ab7bb3a67771cd4fefa29e77cf4c8c6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/warehouse.actions.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 36
        }
      },
      "8": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 28
        }
      },
      "9": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 57
        }
      },
      "10": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 55
        }
      },
      "11": {
        start: {
          line: 29,
          column: 36
        },
        end: {
          line: 29,
          column: 99
        }
      },
      "12": {
        start: {
          line: 30,
          column: 34
        },
        end: {
          line: 30,
          column: 95
        }
      },
      "13": {
        start: {
          line: 31,
          column: 15
        },
        end: {
          line: 31,
          column: 34
        }
      },
      "14": {
        start: {
          line: 32,
          column: 15
        },
        end: {
          line: 32,
          column: 36
        }
      },
      "15": {
        start: {
          line: 33,
          column: 32
        },
        end: {
          line: 33,
          column: 77
        }
      },
      "16": {
        start: {
          line: 34,
          column: 14
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "17": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 35,
          column: 63
        }
      },
      "18": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 6
        }
      },
      "19": {
        start: {
          line: 42,
          column: 27
        },
        end: {
          line: 51,
          column: 1
        }
      },
      "20": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 58
        }
      },
      "21": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 31
        }
      },
      "22": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "23": {
        start: {
          line: 56,
          column: 28
        },
        end: {
          line: 56,
          column: 38
        }
      },
      "24": {
        start: {
          line: 57,
          column: 28
        },
        end: {
          line: 57,
          column: 51
        }
      },
      "25": {
        start: {
          line: 58,
          column: 28
        },
        end: {
          line: 58,
          column: 63
        }
      },
      "26": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 101
        }
      },
      "27": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 43
        }
      },
      "28": {
        start: {
          line: 61,
          column: 30
        },
        end: {
          line: 65,
          column: 10
        }
      },
      "29": {
        start: {
          line: 66,
          column: 24
        },
        end: {
          line: 66,
          column: 102
        }
      },
      "30": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 59
        }
      },
      "31": {
        start: {
          line: 67,
          column: 22
        },
        end: {
          line: 67,
          column: 59
        }
      },
      "32": {
        start: {
          line: 68,
          column: 25
        },
        end: {
          line: 68,
          column: 71
        }
      },
      "33": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 69
        }
      },
      "34": {
        start: {
          line: 69,
          column: 23
        },
        end: {
          line: 69,
          column: 69
        }
      },
      "35": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 82
        }
      },
      "36": {
        start: {
          line: 71,
          column: 31
        },
        end: {
          line: 71,
          column: 114
        }
      },
      "37": {
        start: {
          line: 71,
          column: 69
        },
        end: {
          line: 71,
          column: 113
        }
      },
      "38": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "39": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 54
        }
      },
      "40": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 78,
          column: 14
        }
      },
      "41": {
        start: {
          line: 80,
          column: 27
        },
        end: {
          line: 80,
          column: 88
        }
      },
      "42": {
        start: {
          line: 80,
          column: 67
        },
        end: {
          line: 80,
          column: 84
        }
      },
      "43": {
        start: {
          line: 81,
          column: 32
        },
        end: {
          line: 81,
          column: 170
        }
      },
      "44": {
        start: {
          line: 81,
          column: 126
        },
        end: {
          line: 81,
          column: 141
        }
      },
      "45": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "46": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 42
        }
      },
      "47": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 54
        }
      },
      "48": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 65
        }
      },
      "49": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 63
        }
      },
      "50": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 104,
          column: 10
        }
      },
      "51": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 41
        }
      },
      "52": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 82
        }
      },
      "53": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 111,
          column: 10
        }
      },
      "54": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 29
        }
      },
      "55": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 58
        }
      },
      "56": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 118,
          column: 31
        }
      },
      "57": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "58": {
        start: {
          line: 120,
          column: 28
        },
        end: {
          line: 120,
          column: 38
        }
      },
      "59": {
        start: {
          line: 121,
          column: 28
        },
        end: {
          line: 121,
          column: 51
        }
      },
      "60": {
        start: {
          line: 122,
          column: 28
        },
        end: {
          line: 122,
          column: 63
        }
      },
      "61": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 97
        }
      },
      "62": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 43
        }
      },
      "63": {
        start: {
          line: 125,
          column: 24
        },
        end: {
          line: 125,
          column: 88
        }
      },
      "64": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 59
        }
      },
      "65": {
        start: {
          line: 126,
          column: 22
        },
        end: {
          line: 126,
          column: 59
        }
      },
      "66": {
        start: {
          line: 127,
          column: 25
        },
        end: {
          line: 127,
          column: 71
        }
      },
      "67": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 69
        }
      },
      "68": {
        start: {
          line: 128,
          column: 23
        },
        end: {
          line: 128,
          column: 69
        }
      },
      "69": {
        start: {
          line: 129,
          column: 26
        },
        end: {
          line: 129,
          column: 76
        }
      },
      "70": {
        start: {
          line: 130,
          column: 30
        },
        end: {
          line: 142,
          column: 10
        }
      },
      "71": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "72": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 139,
          column: 18
        }
      },
      "73": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 22
        }
      },
      "74": {
        start: {
          line: 143,
          column: 27
        },
        end: {
          line: 143,
          column: 80
        }
      },
      "75": {
        start: {
          line: 143,
          column: 59
        },
        end: {
          line: 143,
          column: 76
        }
      },
      "76": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 157,
          column: 11
        }
      },
      "77": {
        start: {
          line: 151,
          column: 119
        },
        end: {
          line: 151,
          column: 134
        }
      },
      "78": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 42
        }
      },
      "79": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 54
        }
      },
      "80": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 65
        }
      },
      "81": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 63
        }
      },
      "82": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 169,
          column: 10
        }
      },
      "83": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 41
        }
      },
      "84": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 84
        }
      },
      "85": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 176,
          column: 10
        }
      },
      "86": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 29
        }
      },
      "87": {
        start: {
          line: 182,
          column: 20
        },
        end: {
          line: 182,
          column: 58
        }
      },
      "88": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 183,
          column: 31
        }
      },
      "89": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 249,
          column: 5
        }
      },
      "90": {
        start: {
          line: 185,
          column: 28
        },
        end: {
          line: 185,
          column: 51
        }
      },
      "91": {
        start: {
          line: 186,
          column: 28
        },
        end: {
          line: 186,
          column: 63
        }
      },
      "92": {
        start: {
          line: 187,
          column: 28
        },
        end: {
          line: 187,
          column: 38
        }
      },
      "93": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 93
        }
      },
      "94": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 43
        }
      },
      "95": {
        start: {
          line: 190,
          column: 22
        },
        end: {
          line: 190,
          column: 108
        }
      },
      "96": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 55
        }
      },
      "97": {
        start: {
          line: 191,
          column: 20
        },
        end: {
          line: 191,
          column: 55
        }
      },
      "98": {
        start: {
          line: 192,
          column: 32
        },
        end: {
          line: 192,
          column: 34
        }
      },
      "99": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 215,
          column: 11
        }
      },
      "100": {
        start: {
          line: 194,
          column: 28
        },
        end: {
          line: 194,
          column: 40
        }
      },
      "101": {
        start: {
          line: 195,
          column: 29
        },
        end: {
          line: 195,
          column: 55
        }
      },
      "102": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 210,
          column: 13
        }
      },
      "103": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 209,
          column: 18
        }
      },
      "104": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 214,
          column: 15
        }
      },
      "105": {
        start: {
          line: 216,
          column: 26
        },
        end: {
          line: 226,
          column: 11
        }
      },
      "106": {
        start: {
          line: 217,
          column: 38
        },
        end: {
          line: 217,
          column: 66
        }
      },
      "107": {
        start: {
          line: 218,
          column: 29
        },
        end: {
          line: 218,
          column: 76
        }
      },
      "108": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 225,
          column: 14
        }
      },
      "109": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 36
        }
      },
      "110": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 36
        }
      },
      "111": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 38
        }
      },
      "112": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 38
        }
      },
      "113": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 233,
          column: 11
        }
      },
      "114": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 42
        }
      },
      "115": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 239,
          column: 10
        }
      },
      "116": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 41
        }
      },
      "117": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 87
        }
      },
      "118": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 246,
          column: 10
        }
      },
      "119": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 29
        }
      },
      "120": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "121": {
        start: {
          line: 253,
          column: 28
        },
        end: {
          line: 253,
          column: 38
        }
      },
      "122": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 257,
          column: 11
        }
      },
      "123": {
        start: {
          line: 258,
          column: 34
        },
        end: {
          line: 258,
          column: 62
        }
      },
      "124": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 78
        }
      },
      "125": {
        start: {
          line: 259,
          column: 32
        },
        end: {
          line: 259,
          column: 78
        }
      },
      "126": {
        start: {
          line: 260,
          column: 23
        },
        end: {
          line: 260,
          column: 76
        }
      },
      "127": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 264,
          column: 10
        }
      },
      "128": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 89
        }
      },
      "129": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 270,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 21
          }
        },
        loc: {
          start: {
            line: 13,
            column: 31
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 16,
            column: 24
          }
        },
        loc: {
          start: {
            line: 16,
            column: 34
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 19,
            column: 27
          }
        },
        loc: {
          start: {
            line: 19,
            column: 37
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 27
          }
        },
        loc: {
          start: {
            line: 22,
            column: 37
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 36,
            column: 33
          }
        },
        loc: {
          start: {
            line: 36,
            column: 39
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 36
      },
      "6": {
        name: "updateWarehouseStock",
        decl: {
          start: {
            line: 52,
            column: 15
          },
          end: {
            line: 52,
            column: 35
          }
        },
        loc: {
          start: {
            line: 52,
            column: 44
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 52
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 63
          },
          end: {
            line: 71,
            column: 64
          }
        },
        loc: {
          start: {
            line: 71,
            column: 69
          },
          end: {
            line: 71,
            column: 113
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 80,
            column: 56
          },
          end: {
            line: 80,
            column: 57
          }
        },
        loc: {
          start: {
            line: 80,
            column: 67
          },
          end: {
            line: 80,
            column: 84
          }
        },
        line: 80
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 81,
            column: 120
          },
          end: {
            line: 81,
            column: 121
          }
        },
        loc: {
          start: {
            line: 81,
            column: 126
          },
          end: {
            line: 81,
            column: 141
          }
        },
        line: 81
      },
      "10": {
        name: "syncProductInventory",
        decl: {
          start: {
            line: 116,
            column: 15
          },
          end: {
            line: 116,
            column: 35
          }
        },
        loc: {
          start: {
            line: 116,
            column: 47
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 116
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 130,
            column: 56
          },
          end: {
            line: 130,
            column: 57
          }
        },
        loc: {
          start: {
            line: 130,
            column: 62
          },
          end: {
            line: 142,
            column: 9
          }
        },
        line: 130
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 143,
            column: 48
          },
          end: {
            line: 143,
            column: 49
          }
        },
        loc: {
          start: {
            line: 143,
            column: 59
          },
          end: {
            line: 143,
            column: 76
          }
        },
        line: 143
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 151,
            column: 113
          },
          end: {
            line: 151,
            column: 114
          }
        },
        loc: {
          start: {
            line: 151,
            column: 119
          },
          end: {
            line: 151,
            column: 134
          }
        },
        line: 151
      },
      "14": {
        name: "createShipment",
        decl: {
          start: {
            line: 181,
            column: 15
          },
          end: {
            line: 181,
            column: 29
          }
        },
        loc: {
          start: {
            line: 181,
            column: 39
          },
          end: {
            line: 250,
            column: 1
          }
        },
        line: 181
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 193,
            column: 28
          },
          end: {
            line: 193,
            column: 29
          }
        },
        loc: {
          start: {
            line: 193,
            column: 36
          },
          end: {
            line: 215,
            column: 9
          }
        },
        line: 193
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 216,
            column: 80
          },
          end: {
            line: 216,
            column: 81
          }
        },
        loc: {
          start: {
            line: 216,
            column: 109
          },
          end: {
            line: 226,
            column: 9
          }
        },
        line: 216
      },
      "17": {
        name: "getShipmentStatus",
        decl: {
          start: {
            line: 251,
            column: 15
          },
          end: {
            line: 251,
            column: 32
          }
        },
        loc: {
          start: {
            line: 251,
            column: 55
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 251
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 11
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 35
          },
          end: {
            line: 37,
            column: 38
          }
        }, {
          start: {
            line: 37,
            column: 41
          },
          end: {
            line: 39,
            column: 5
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 11
          },
          end: {
            line: 37,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 11
          },
          end: {
            line: 37,
            column: 14
          }
        }, {
          start: {
            line: 37,
            column: 18
          },
          end: {
            line: 37,
            column: 32
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 51
          }
        }, {
          start: {
            line: 58,
            column: 55
          },
          end: {
            line: 58,
            column: 63
          }
        }],
        line: 58
      },
      "3": {
        loc: {
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 39
          }
        }, {
          start: {
            line: 64,
            column: 43
          },
          end: {
            line: 64,
            column: 54
          }
        }],
        line: 64
      },
      "4": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 67,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 67,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 69,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 69,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: 74,
            column: 15
          },
          end: {
            line: 79,
            column: 9
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 81,
            column: 32
          },
          end: {
            line: 81,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 81,
            column: 51
          },
          end: {
            line: 81,
            column: 65
          }
        }, {
          start: {
            line: 81,
            column: 68
          },
          end: {
            line: 81,
            column: 170
          }
        }],
        line: 81
      },
      "8": {
        loc: {
          start: {
            line: 81,
            column: 68
          },
          end: {
            line: 81,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 81,
            column: 146
          },
          end: {
            line: 81,
            column: 157
          }
        }, {
          start: {
            line: 81,
            column: 160
          },
          end: {
            line: 81,
            column: 170
          }
        }],
        line: 81
      },
      "9": {
        loc: {
          start: {
            line: 122,
            column: 28
          },
          end: {
            line: 122,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 28
          },
          end: {
            line: 122,
            column: 51
          }
        }, {
          start: {
            line: 122,
            column: 55
          },
          end: {
            line: 122,
            column: 63
          }
        }],
        line: 122
      },
      "10": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 126,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 126,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "11": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 128,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 128,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "12": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "13": {
        loc: {
          start: {
            line: 151,
            column: 33
          },
          end: {
            line: 151,
            column: 163
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 151,
            column: 52
          },
          end: {
            line: 151,
            column: 66
          }
        }, {
          start: {
            line: 151,
            column: 69
          },
          end: {
            line: 151,
            column: 163
          }
        }],
        line: 151
      },
      "14": {
        loc: {
          start: {
            line: 151,
            column: 69
          },
          end: {
            line: 151,
            column: 163
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 151,
            column: 139
          },
          end: {
            line: 151,
            column: 150
          }
        }, {
          start: {
            line: 151,
            column: 153
          },
          end: {
            line: 151,
            column: 163
          }
        }],
        line: 151
      },
      "15": {
        loc: {
          start: {
            line: 186,
            column: 28
          },
          end: {
            line: 186,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 28
          },
          end: {
            line: 186,
            column: 51
          }
        }, {
          start: {
            line: 186,
            column: 55
          },
          end: {
            line: 186,
            column: 63
          }
        }],
        line: 186
      },
      "16": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 191,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 191,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "17": {
        loc: {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "18": {
        loc: {
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 259,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 259,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/warehouse.actions.ts"],
      sourcesContent: ["'use server'\n\nimport { connectToDatabase } from '@/lib/db'\nimport { ShipBobService } from '../services/warehouse/shipbob'\nimport { FourPXService } from '../services/warehouse/fourpx'\nimport { WarehouseProvider } from '../services/warehouse/types'\nimport Product from '../db/models/product.model'\nimport Order from '../db/models/order.model'\nimport { formatError } from '../utils'\nimport { revalidatePath } from 'next/cache'\nimport mongoose from 'mongoose'\nimport { auth } from '@/auth'\nimport { WarehouseStockSchema } from '../schemas/warehouse.schema'\n\n// Warehouse Providers Configuration\nconst warehouseProviders: { [key: string]: WarehouseProvider } = {\n  ShipBob: new ShipBobService({\n    apiKey: process.env.SHIPBOB_API_KEY!,\n    apiUrl: process.env.SHIPBOB_API_URL!,\n  }),\n  '4PX': new FourPXService({\n    apiKey: process.env.FOURPX_API_KEY!,\n    apiUrl: process.env.FOURPX_API_URL!,\n  }),\n}\n\n// Types\nexport interface UpdateWarehouseStockParams {\n  productId: string\n  warehouseId: string\n  quantity: number\n  sku: string\n  location: string\n  minimumStock: number\n  reorderPoint: number\n  colors?: Array<{\n    name: string\n    quantity: number\n    inStock: boolean\n    sizes: Array<{\n      name: string\n      quantity: number\n      inStock: boolean\n    }>\n  }>\n  updatedBy: string\n}\n\n/**\n * Updates the stock level for a product in a specific warehouse.\n */\nexport async function updateWarehouseStock(params: UpdateWarehouseStockParams) {\n  const session = await mongoose.startSession()\n  session.startTransaction()\n\n  try {\n    const currentDate = new Date()\n    const sessionAuth = await auth()\n    const currentUser = sessionAuth?.user?.name || 'System'\n\n    console.log(`[${currentDate.toISOString()}] Updating stock for product ${params.productId}`)\n    \n    await connectToDatabase()\n\n    const validatedData = WarehouseStockSchema.parse({\n      ...params,\n      lastUpdated: currentDate,\n      updatedBy: params.updatedBy || currentUser\n    })\n\n    const product = await Product.findById(validatedData.productId).session(session)\n    if (!product) throw new Error('Product not found')\n\n    const provider = warehouseProviders[product.warehouse.provider]\n    if (!provider) throw new Error('Invalid warehouse provider')\n\n    await provider.updateInventory(validatedData.sku, validatedData.quantity)\n\n    const warehouseIndex = product.warehouseData.findIndex(\n      (wh: any) => wh.warehouseId === validatedData.warehouseId\n    )\n\n    if (warehouseIndex === -1) {\n      product.warehouseData.push(validatedData)\n    } else {\n      product.warehouseData[warehouseIndex] = {\n        ...product.warehouseData[warehouseIndex],\n        ...validatedData\n      }\n    }\n\n    const totalStock = product.warehouseData.reduce(\n      (sum: number, wh: any) => sum + wh.quantity,\n      0\n    )\n\n    const inventoryStatus =\n      totalStock === 0\n        ? 'OUT_OF_STOCK'\n        : totalStock <= Math.min(...product.warehouseData.map((wh: any) => wh.minimumStock))\n          ? 'LOW_STOCK'\n          : 'IN_STOCK'\n\n    await Product.findByIdAndUpdate(\n      validatedData.productId,\n      {\n        $set: {\n          warehouseData: product.warehouseData,\n          countInStock: totalStock,\n          inventoryStatus,\n          updatedAt: currentDate,\n          updatedBy: validatedData.updatedBy\n        }\n      },\n      { session }\n    )\n\n    await session.commitTransaction()\n\n    revalidatePath('/admin/products')\n    revalidatePath('/seller/dashboard/products')\n    revalidatePath(`/product/${product.slug}`)\n\n    return {\n      success: true,\n      message: 'Stock updated successfully',\n      data: { totalStock, status: inventoryStatus }\n    }\n\n  } catch (error) {\n    await session.abortTransaction()\n    console.error(`[${new Date().toISOString()}] Stock update error:`, error)\n    return {\n      success: false,\n      message: formatError(error)\n    }\n  } finally {\n    session.endSession()\n  }\n}\n\n/**\n * Syncs product inventory with external warehouse provider.\n */\nexport async function syncProductInventory(productId: string) {\n  const session = await mongoose.startSession()\n  session.startTransaction()\n\n  try {\n    const currentDate = new Date()\n    const sessionAuth = await auth()\n    const currentUser = sessionAuth?.user?.name || 'System'\n\n    console.log(`[${currentDate.toISOString()}] Syncing inventory for product ${productId}`)\n    \n    await connectToDatabase()\n\n    const product = await Product.findById(productId).session(session)\n    if (!product) throw new Error('Product not found')\n\n    const provider = warehouseProviders[product.warehouse.provider]\n    if (!provider) throw new Error('Invalid warehouse provider')\n\n    const inventory = await provider.getInventory(product.warehouse.sku)\n\n    const warehouseData = product.warehouseData.map((wh: any) => {\n      if (wh.sku === product.warehouse.sku) {\n        return {\n          ...wh,\n          quantity: inventory.quantity,\n          location: inventory.location,\n          lastSync: currentDate,\n          lastUpdated: currentDate,\n          updatedBy: currentUser,\n        }\n      }\n      return wh\n    })\n\n    const totalStock = warehouseData.reduce((sum: number, wh: any) => sum + wh.quantity, 0)\n\n    await Product.findByIdAndUpdate(\n      productId,\n      {\n        $set: {\n          warehouseData,\n          countInStock: totalStock,\n          'warehouse.availableQuantity': totalStock,\n          'warehouse.location': inventory.location,\n          'warehouse.lastSync': currentDate,\n          inventoryStatus:\n            totalStock === 0\n              ? 'OUT_OF_STOCK'\n              : totalStock <= Math.min(...warehouseData.map((wh: any) => wh.minimumStock))\n                ? 'LOW_STOCK'\n                : 'IN_STOCK',\n          updatedAt: currentDate,\n          updatedBy: currentUser,\n        },\n      },\n      { session }\n    )\n\n    await session.commitTransaction()\n\n    revalidatePath('/admin/products')\n    revalidatePath('/seller/dashboard/products')\n    revalidatePath(`/product/${product.slug}`)\n\n    return {\n      success: true,\n      data: {\n        inventory,\n        totalStock,\n        lastSync: currentDate\n      }\n    }\n  } catch (error) {\n    await session.abortTransaction()\n    console.error(`[${new Date().toISOString()}] Inventory sync error:`, error)\n    return {\n      success: false,\n      message: formatError(error)\n    }\n  } finally {\n    session.endSession()\n  }\n}\n\n/**\n * Creates shipments for an order using appropriate warehouse providers.\n */\nexport async function createShipment(orderId: string) {\n  const session = await mongoose.startSession()\n  session.startTransaction()\n\n  try {\n    const sessionAuth = await auth()\n    const currentUser = sessionAuth?.user?.name || 'System'\n    const currentDate = new Date()\n\n    console.log(`[${currentDate.toISOString()}] Creating shipment for order ${orderId}`)\n    \n    await connectToDatabase()\n\n    const order = await Order.findById(orderId)\n      .populate('items.product')\n      .session(session)\n\n    if (!order) throw new Error('Order not found')\n\n    const itemsByProvider: { [key: string]: any } = {}\n    order.items.forEach((item: any) => {\n      const product = item.product\n      const provider = product.warehouse.provider\n\n      if (!itemsByProvider[provider]) {\n        itemsByProvider[provider] = {\n          orderId,\n          items: [],\n          shippingAddress: {\n            name: order.shippingAddress.fullName,\n            street: order.shippingAddress.street,\n            city: order.shippingAddress.city,\n            state: order.shippingAddress.province,\n            country: order.shippingAddress.country,\n            postalCode: order.shippingAddress.postalCode,\n            phone: order.shippingAddress.phone,\n          },\n        }\n      }\n\n      itemsByProvider[provider].items.push({\n        sku: product.warehouse.sku,\n        quantity: item.quantity,\n      })\n    })\n\n    const shipments = await Promise.all(\n      Object.entries(itemsByProvider).map(async ([provider, request]) => {\n        const warehouseProvider = warehouseProviders[provider]\n        const shipment = await warehouseProvider.createShipment(request)\n        return {\n          provider,\n          trackingId: shipment.trackingId,\n          createdAt: currentDate,\n          createdBy: currentUser,\n          status: 'pending',\n        }\n      })\n    )\n\n    order.shipments = shipments\n    order.status = 'processing'\n    order.updatedAt = currentDate\n    order.updatedBy = currentUser\n    await order.save({ session })\n\n    await session.commitTransaction()\n\n    return {\n      success: true,\n      message: 'Shipments created successfully',\n      data: shipments\n    }\n  } catch (error) {\n    await session.abortTransaction()\n    console.error(`[${new Date().toISOString()}] Shipment creation error:`, error)\n    return {\n      success: false,\n      message: formatError(error)\n    }\n  } finally {\n    session.endSession()\n  }\n}\n\n/**\n * Gets the current status of a shipment from the warehouse provider.\n */\nexport async function getShipmentStatus(provider: string, trackingId: string) {\n  try {\n    const currentDate = new Date()\n    console.log(`[${currentDate.toISOString()}] Getting shipment status:`, {\n      provider,\n      trackingId\n    })\n\n    const warehouseProvider = warehouseProviders[provider]\n    if (!warehouseProvider) throw new Error('Invalid warehouse provider')\n\n    const status = await warehouseProvider.getShipmentStatus(trackingId)\n\n    return {\n      success: true,\n      data: status\n    }\n  } catch (error) {\n    console.error(`[${new Date().toISOString()}] Get shipment status error:`, error)\n    return {\n      success: false,\n      message: formatError(error)\n    }\n  }\n}"],
      names: ["createShipment", "getShipmentStatus", "syncProductInventory", "updateWarehouseStock", "warehouseProviders", "ShipBob", "ShipBobService", "apiKey", "process", "env", "SHIPBOB_API_KEY", "apiUrl", "SHIPBOB_API_URL", "FourPXService", "FOURPX_API_KEY", "FOURPX_API_URL", "params", "session", "mongoose", "startSession", "startTransaction", "currentDate", "Date", "sessionAuth", "auth", "currentUser", "user", "name", "console", "log", "toISOString", "productId", "connectToDatabase", "validatedData", "WarehouseStockSchema", "parse", "lastUpdated", "updatedBy", "product", "Product", "findById", "Error", "provider", "warehouse", "updateInventory", "sku", "quantity", "warehouseIndex", "warehouseData", "findIndex", "wh", "warehouseId", "push", "totalStock", "reduce", "sum", "inventoryStatus", "Math", "min", "map", "minimumStock", "findByIdAndUpdate", "$set", "countInStock", "updatedAt", "commitTransaction", "revalidatePath", "slug", "success", "message", "data", "status", "error", "abortTransaction", "formatError", "endSession", "inventory", "getInventory", "location", "lastSync", "orderId", "order", "Order", "populate", "itemsByProvider", "items", "forEach", "item", "shippingAddress", "fullName", "street", "city", "state", "province", "country", "postalCode", "phone", "shipments", "Promise", "all", "Object", "entries", "request", "warehouseProvider", "shipment", "trackingId", "createdAt", "createdBy", "save"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "19ed80ad6ab7bb3a67771cd4fefa29e77cf4c8c6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xuxhnjlzf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xuxhnjlzf();
cov_1xuxhnjlzf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1xuxhnjlzf().f[0]++;
  cov_1xuxhnjlzf().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1xuxhnjlzf().s[3]++;
_export(exports, {
  createShipment: function () {
    /* istanbul ignore next */
    cov_1xuxhnjlzf().f[1]++;
    cov_1xuxhnjlzf().s[4]++;
    return createShipment;
  },
  getShipmentStatus: function () {
    /* istanbul ignore next */
    cov_1xuxhnjlzf().f[2]++;
    cov_1xuxhnjlzf().s[5]++;
    return getShipmentStatus;
  },
  syncProductInventory: function () {
    /* istanbul ignore next */
    cov_1xuxhnjlzf().f[3]++;
    cov_1xuxhnjlzf().s[6]++;
    return syncProductInventory;
  },
  updateWarehouseStock: function () {
    /* istanbul ignore next */
    cov_1xuxhnjlzf().f[4]++;
    cov_1xuxhnjlzf().s[7]++;
    return updateWarehouseStock;
  }
});
const _db =
/* istanbul ignore next */
(cov_1xuxhnjlzf().s[8]++, require("../db"));
const _shipbob =
/* istanbul ignore next */
(cov_1xuxhnjlzf().s[9]++, require("../services/warehouse/shipbob"));
const _fourpx =
/* istanbul ignore next */
(cov_1xuxhnjlzf().s[10]++, require("../services/warehouse/fourpx"));
const _productmodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_1xuxhnjlzf().s[11]++, _interop_require_default(require("../db/models/product.model")));
const _ordermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_1xuxhnjlzf().s[12]++, _interop_require_default(require("../db/models/order.model")));
const _utils =
/* istanbul ignore next */
(cov_1xuxhnjlzf().s[13]++, require("../utils"));
const _cache =
/* istanbul ignore next */
(cov_1xuxhnjlzf().s[14]++, require("next/cache"));
const _mongoose =
/* istanbul ignore next */
(/*#__PURE__*/cov_1xuxhnjlzf().s[15]++, _interop_require_default(require("mongoose")));
const _auth =
/* istanbul ignore next */
(cov_1xuxhnjlzf().s[16]++, require("../../auth"));
const _warehouseschema =
/* istanbul ignore next */
(cov_1xuxhnjlzf().s[17]++, require("../schemas/warehouse.schema"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1xuxhnjlzf().f[5]++;
  cov_1xuxhnjlzf().s[18]++;
  return /* istanbul ignore next */(cov_1xuxhnjlzf().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1xuxhnjlzf().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1xuxhnjlzf().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1xuxhnjlzf().b[0][1]++, {
    default: obj
  });
}
// Warehouse Providers Configuration
const warehouseProviders =
/* istanbul ignore next */
(cov_1xuxhnjlzf().s[19]++, {
  ShipBob: new _shipbob.ShipBobService({
    apiKey: process.env.SHIPBOB_API_KEY,
    apiUrl: process.env.SHIPBOB_API_URL
  }),
  '4PX': new _fourpx.FourPXService({
    apiKey: process.env.FOURPX_API_KEY,
    apiUrl: process.env.FOURPX_API_URL
  })
});
async function updateWarehouseStock(params) {
  /* istanbul ignore next */
  cov_1xuxhnjlzf().f[6]++;
  const session =
  /* istanbul ignore next */
  (cov_1xuxhnjlzf().s[20]++, await _mongoose.default.startSession());
  /* istanbul ignore next */
  cov_1xuxhnjlzf().s[21]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_1xuxhnjlzf().s[22]++;
  try {
    const currentDate =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[23]++, new Date());
    const sessionAuth =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[24]++, await (0, _auth.auth)());
    const currentUser =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[25]++,
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().b[2][0]++, sessionAuth?.user?.name) ||
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().b[2][1]++, 'System'));
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[26]++;
    console.log(`[${currentDate.toISOString()}] Updating stock for product ${params.productId}`);
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[27]++;
    await (0, _db.connectToDatabase)();
    const validatedData =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[28]++, _warehouseschema.WarehouseStockSchema.parse({
      ...params,
      lastUpdated: currentDate,
      updatedBy:
      /* istanbul ignore next */
      (cov_1xuxhnjlzf().b[3][0]++, params.updatedBy) ||
      /* istanbul ignore next */
      (cov_1xuxhnjlzf().b[3][1]++, currentUser)
    }));
    const product =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[29]++, await _productmodel.default.findById(validatedData.productId).session(session));
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[30]++;
    if (!product) {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().b[4][0]++;
      cov_1xuxhnjlzf().s[31]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_1xuxhnjlzf().b[4][1]++;
    }
    const provider =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[32]++, warehouseProviders[product.warehouse.provider]);
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[33]++;
    if (!provider) {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().b[5][0]++;
      cov_1xuxhnjlzf().s[34]++;
      throw new Error('Invalid warehouse provider');
    } else
    /* istanbul ignore next */
    {
      cov_1xuxhnjlzf().b[5][1]++;
    }
    cov_1xuxhnjlzf().s[35]++;
    await provider.updateInventory(validatedData.sku, validatedData.quantity);
    const warehouseIndex =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[36]++, product.warehouseData.findIndex(wh => {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().f[7]++;
      cov_1xuxhnjlzf().s[37]++;
      return wh.warehouseId === validatedData.warehouseId;
    }));
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[38]++;
    if (warehouseIndex === -1) {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().b[6][0]++;
      cov_1xuxhnjlzf().s[39]++;
      product.warehouseData.push(validatedData);
    } else {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().b[6][1]++;
      cov_1xuxhnjlzf().s[40]++;
      product.warehouseData[warehouseIndex] = {
        ...product.warehouseData[warehouseIndex],
        ...validatedData
      };
    }
    const totalStock =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[41]++, product.warehouseData.reduce((sum, wh) => {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().f[8]++;
      cov_1xuxhnjlzf().s[42]++;
      return sum + wh.quantity;
    }, 0));
    const inventoryStatus =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[43]++, totalStock === 0 ?
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().b[7][0]++, 'OUT_OF_STOCK') :
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().b[7][1]++, totalStock <= Math.min(...product.warehouseData.map(wh => {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().f[9]++;
      cov_1xuxhnjlzf().s[44]++;
      return wh.minimumStock;
    })) ?
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().b[8][0]++, 'LOW_STOCK') :
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().b[8][1]++, 'IN_STOCK')));
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[45]++;
    await _productmodel.default.findByIdAndUpdate(validatedData.productId, {
      $set: {
        warehouseData: product.warehouseData,
        countInStock: totalStock,
        inventoryStatus,
        updatedAt: currentDate,
        updatedBy: validatedData.updatedBy
      }
    }, {
      session
    });
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[46]++;
    await session.commitTransaction();
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[47]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[48]++;
    (0, _cache.revalidatePath)('/seller/dashboard/products');
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[49]++;
    (0, _cache.revalidatePath)(`/product/${product.slug}`);
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[50]++;
    return {
      success: true,
      message: 'Stock updated successfully',
      data: {
        totalStock,
        status: inventoryStatus
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[51]++;
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[52]++;
    console.error(`[${new Date().toISOString()}] Stock update error:`, error);
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[53]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  } finally {
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[54]++;
    session.endSession();
  }
}
async function syncProductInventory(productId) {
  /* istanbul ignore next */
  cov_1xuxhnjlzf().f[10]++;
  const session =
  /* istanbul ignore next */
  (cov_1xuxhnjlzf().s[55]++, await _mongoose.default.startSession());
  /* istanbul ignore next */
  cov_1xuxhnjlzf().s[56]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_1xuxhnjlzf().s[57]++;
  try {
    const currentDate =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[58]++, new Date());
    const sessionAuth =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[59]++, await (0, _auth.auth)());
    const currentUser =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[60]++,
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().b[9][0]++, sessionAuth?.user?.name) ||
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().b[9][1]++, 'System'));
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[61]++;
    console.log(`[${currentDate.toISOString()}] Syncing inventory for product ${productId}`);
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[62]++;
    await (0, _db.connectToDatabase)();
    const product =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[63]++, await _productmodel.default.findById(productId).session(session));
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[64]++;
    if (!product) {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().b[10][0]++;
      cov_1xuxhnjlzf().s[65]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_1xuxhnjlzf().b[10][1]++;
    }
    const provider =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[66]++, warehouseProviders[product.warehouse.provider]);
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[67]++;
    if (!provider) {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().b[11][0]++;
      cov_1xuxhnjlzf().s[68]++;
      throw new Error('Invalid warehouse provider');
    } else
    /* istanbul ignore next */
    {
      cov_1xuxhnjlzf().b[11][1]++;
    }
    const inventory =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[69]++, await provider.getInventory(product.warehouse.sku));
    const warehouseData =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[70]++, product.warehouseData.map(wh => {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().f[11]++;
      cov_1xuxhnjlzf().s[71]++;
      if (wh.sku === product.warehouse.sku) {
        /* istanbul ignore next */
        cov_1xuxhnjlzf().b[12][0]++;
        cov_1xuxhnjlzf().s[72]++;
        return {
          ...wh,
          quantity: inventory.quantity,
          location: inventory.location,
          lastSync: currentDate,
          lastUpdated: currentDate,
          updatedBy: currentUser
        };
      } else
      /* istanbul ignore next */
      {
        cov_1xuxhnjlzf().b[12][1]++;
      }
      cov_1xuxhnjlzf().s[73]++;
      return wh;
    }));
    const totalStock =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[74]++, warehouseData.reduce((sum, wh) => {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().f[12]++;
      cov_1xuxhnjlzf().s[75]++;
      return sum + wh.quantity;
    }, 0));
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[76]++;
    await _productmodel.default.findByIdAndUpdate(productId, {
      $set: {
        warehouseData,
        countInStock: totalStock,
        'warehouse.availableQuantity': totalStock,
        'warehouse.location': inventory.location,
        'warehouse.lastSync': currentDate,
        inventoryStatus: totalStock === 0 ?
        /* istanbul ignore next */
        (cov_1xuxhnjlzf().b[13][0]++, 'OUT_OF_STOCK') :
        /* istanbul ignore next */
        (cov_1xuxhnjlzf().b[13][1]++, totalStock <= Math.min(...warehouseData.map(wh => {
          /* istanbul ignore next */
          cov_1xuxhnjlzf().f[13]++;
          cov_1xuxhnjlzf().s[77]++;
          return wh.minimumStock;
        })) ?
        /* istanbul ignore next */
        (cov_1xuxhnjlzf().b[14][0]++, 'LOW_STOCK') :
        /* istanbul ignore next */
        (cov_1xuxhnjlzf().b[14][1]++, 'IN_STOCK')),
        updatedAt: currentDate,
        updatedBy: currentUser
      }
    }, {
      session
    });
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[78]++;
    await session.commitTransaction();
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[79]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[80]++;
    (0, _cache.revalidatePath)('/seller/dashboard/products');
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[81]++;
    (0, _cache.revalidatePath)(`/product/${product.slug}`);
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[82]++;
    return {
      success: true,
      data: {
        inventory,
        totalStock,
        lastSync: currentDate
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[83]++;
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[84]++;
    console.error(`[${new Date().toISOString()}] Inventory sync error:`, error);
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[85]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  } finally {
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[86]++;
    session.endSession();
  }
}
async function createShipment(orderId) {
  /* istanbul ignore next */
  cov_1xuxhnjlzf().f[14]++;
  const session =
  /* istanbul ignore next */
  (cov_1xuxhnjlzf().s[87]++, await _mongoose.default.startSession());
  /* istanbul ignore next */
  cov_1xuxhnjlzf().s[88]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_1xuxhnjlzf().s[89]++;
  try {
    const sessionAuth =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[90]++, await (0, _auth.auth)());
    const currentUser =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[91]++,
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().b[15][0]++, sessionAuth?.user?.name) ||
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().b[15][1]++, 'System'));
    const currentDate =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[92]++, new Date());
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[93]++;
    console.log(`[${currentDate.toISOString()}] Creating shipment for order ${orderId}`);
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[94]++;
    await (0, _db.connectToDatabase)();
    const order =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[95]++, await _ordermodel.default.findById(orderId).populate('items.product').session(session));
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[96]++;
    if (!order) {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().b[16][0]++;
      cov_1xuxhnjlzf().s[97]++;
      throw new Error('Order not found');
    } else
    /* istanbul ignore next */
    {
      cov_1xuxhnjlzf().b[16][1]++;
    }
    const itemsByProvider =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[98]++, {});
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[99]++;
    order.items.forEach(item => {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().f[15]++;
      const product =
      /* istanbul ignore next */
      (cov_1xuxhnjlzf().s[100]++, item.product);
      const provider =
      /* istanbul ignore next */
      (cov_1xuxhnjlzf().s[101]++, product.warehouse.provider);
      /* istanbul ignore next */
      cov_1xuxhnjlzf().s[102]++;
      if (!itemsByProvider[provider]) {
        /* istanbul ignore next */
        cov_1xuxhnjlzf().b[17][0]++;
        cov_1xuxhnjlzf().s[103]++;
        itemsByProvider[provider] = {
          orderId,
          items: [],
          shippingAddress: {
            name: order.shippingAddress.fullName,
            street: order.shippingAddress.street,
            city: order.shippingAddress.city,
            state: order.shippingAddress.province,
            country: order.shippingAddress.country,
            postalCode: order.shippingAddress.postalCode,
            phone: order.shippingAddress.phone
          }
        };
      } else
      /* istanbul ignore next */
      {
        cov_1xuxhnjlzf().b[17][1]++;
      }
      cov_1xuxhnjlzf().s[104]++;
      itemsByProvider[provider].items.push({
        sku: product.warehouse.sku,
        quantity: item.quantity
      });
    });
    const shipments =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[105]++, await Promise.all(Object.entries(itemsByProvider).map(async ([provider, request]) => {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().f[16]++;
      const warehouseProvider =
      /* istanbul ignore next */
      (cov_1xuxhnjlzf().s[106]++, warehouseProviders[provider]);
      const shipment =
      /* istanbul ignore next */
      (cov_1xuxhnjlzf().s[107]++, await warehouseProvider.createShipment(request));
      /* istanbul ignore next */
      cov_1xuxhnjlzf().s[108]++;
      return {
        provider,
        trackingId: shipment.trackingId,
        createdAt: currentDate,
        createdBy: currentUser,
        status: 'pending'
      };
    })));
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[109]++;
    order.shipments = shipments;
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[110]++;
    order.status = 'processing';
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[111]++;
    order.updatedAt = currentDate;
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[112]++;
    order.updatedBy = currentUser;
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[113]++;
    await order.save({
      session
    });
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[114]++;
    await session.commitTransaction();
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[115]++;
    return {
      success: true,
      message: 'Shipments created successfully',
      data: shipments
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[116]++;
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[117]++;
    console.error(`[${new Date().toISOString()}] Shipment creation error:`, error);
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[118]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  } finally {
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[119]++;
    session.endSession();
  }
}
async function getShipmentStatus(provider, trackingId) {
  /* istanbul ignore next */
  cov_1xuxhnjlzf().f[17]++;
  cov_1xuxhnjlzf().s[120]++;
  try {
    const currentDate =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[121]++, new Date());
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[122]++;
    console.log(`[${currentDate.toISOString()}] Getting shipment status:`, {
      provider,
      trackingId
    });
    const warehouseProvider =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[123]++, warehouseProviders[provider]);
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[124]++;
    if (!warehouseProvider) {
      /* istanbul ignore next */
      cov_1xuxhnjlzf().b[18][0]++;
      cov_1xuxhnjlzf().s[125]++;
      throw new Error('Invalid warehouse provider');
    } else
    /* istanbul ignore next */
    {
      cov_1xuxhnjlzf().b[18][1]++;
    }
    const status =
    /* istanbul ignore next */
    (cov_1xuxhnjlzf().s[126]++, await warehouseProvider.getShipmentStatus(trackingId));
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[127]++;
    return {
      success: true,
      data: status
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[128]++;
    console.error(`[${new Date().toISOString()}] Get shipment status error:`, error);
    /* istanbul ignore next */
    cov_1xuxhnjlzf().s[129]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,