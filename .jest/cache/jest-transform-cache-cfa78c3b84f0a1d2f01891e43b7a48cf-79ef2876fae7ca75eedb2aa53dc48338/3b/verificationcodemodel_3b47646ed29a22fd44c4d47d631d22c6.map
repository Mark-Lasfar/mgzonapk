{"version":3,"names":["_default","verificationCodeSchema","cov_1l1pl0nci4","s","_mongoose","default","Schema","email","type","String","required","lowercase","trim","code","length","enum","expiresAt","Date","f","now","verified","Boolean","userId","Types","ObjectId","ref","timestamps","toJSON","virtuals","toObject","methods","isExpired","index","expireAfterSeconds","background","pre","next","b","isModified","test","Error","virtual","get","remaining","getTime","Math","max","floor","VerificationCode","models","model"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/verification-code.model.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nexport interface IVerificationCode extends mongoose.Document {\n  email: string;\n  code: string;\n  type: 'EMAIL_VERIFICATION' | 'PASSWORD_RESET';\n  expiresAt: Date;\n  verified: boolean;\n  userId: mongoose.Types.ObjectId;\n  createdAt: Date;\n  updatedAt: Date;\n  isExpired(): boolean;\n}\n\nconst verificationCodeSchema = new mongoose.Schema<IVerificationCode>(\n  {\n    email: { \n      type: String, \n      required: true,\n      lowercase: true,\n      trim: true\n    },\n    code: { \n      type: String, \n      required: true,\n      length: 6\n    },\n    type: {\n      type: String,\n      enum: ['EMAIL_VERIFICATION', 'PASSWORD_RESET'],\n      default: 'EMAIL_VERIFICATION',\n      required: true\n    },\n    expiresAt: { \n      type: Date, \n      required: true,\n      default: () => new Date(Date.now() + 10 * 60 * 1000)\n    },\n    verified: { \n      type: Boolean, \n      default: false,\n      required: true\n    },\n    userId: {\n      type: mongoose.Schema.Types.ObjectId,\n      ref: 'User',\n      required: true\n    }\n  },\n  {\n    timestamps: true,\n    toJSON: { virtuals: true },\n    toObject: { virtuals: true }\n  }\n);\n\n// دالة للتحقق من انتهاء صلاحية الرمز\nverificationCodeSchema.methods.isExpired = function(): boolean {\n  return this.expiresAt < new Date();\n};\n\n// مؤشر مركب للبحث السريع (فقط مرة واحدة)\nverificationCodeSchema.index({ email: 1, type: 1 });\nverificationCodeSchema.index({ userId: 1 });\n\n// التنظيف التلقائي للرموز منتهية الصلاحية (فقط مرة واحدة)\nverificationCodeSchema.index(\n  { expiresAt: 1 }, \n  { \n    expireAfterSeconds: 0,\n    background: true \n  }\n);\n\n// التحقق قبل الحفظ\nverificationCodeSchema.pre('save', function(next) {\n  if (this.isModified('code') && !/^\\d{6}$/.test(this.code)) {\n    next(new Error('Verification code must be exactly 6 digits'));\n  }\n  next();\n});\n\n// إضافة virtual field لمعرفة الوقت المتبقي\nverificationCodeSchema.virtual('timeRemaining').get(function() {\n  const remaining = this.expiresAt.getTime() - Date.now();\n  return Math.max(0, Math.floor(remaining / 1000));\n});\n\nconst VerificationCode = mongoose.models.VerificationCode || \n  mongoose.model<IVerificationCode>('VerificationCode', verificationCodeSchema);\n\nexport default VerificationCode;"],"mappings":"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","ignoreList":[]}