bb88dc6eb8f4c49c67954298e89a668e
"use strict";

/* istanbul ignore next */
function cov_1hh228ukbq() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/notifications/push.ts";
  var hash = "1a0627aebc00c758f24b897f4be533b5eec173ac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/notifications/push.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 39
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "6": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 77
        }
      },
      "7": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "8": {
        start: {
          line: 21,
          column: 33
        },
        end: {
          line: 21,
          column: 96
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 6
        }
      },
      "10": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "11": {
        start: {
          line: 28,
          column: 39
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "12": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 41
        }
      },
      "13": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 40
        }
      },
      "14": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 20
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 66
        }
      },
      "16": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "17": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 19
        }
      },
      "18": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "20": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 53
        }
      },
      "21": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "22": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 30
        }
      },
      "23": {
        start: {
          line: 48,
          column: 17
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "24": {
        start: {
          line: 51,
          column: 32
        },
        end: {
          line: 51,
          column: 88
        }
      },
      "25": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "26": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "27": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 54,
          column: 95
        }
      },
      "28": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "29": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 57
        }
      },
      "30": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 39
        }
      },
      "31": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "32": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "33": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 31
        }
      },
      "34": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 18
        }
      },
      "35": {
        start: {
          line: 68,
          column: 0
        },
        end: {
          line: 68,
          column: 126
        }
      },
      "36": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 43
        }
      },
      "37": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 76,
          column: 11
        }
      },
      "38": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 10
        }
      },
      "39": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 43
        }
      },
      "40": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 89,
          column: 11
        }
      },
      "41": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 10
        }
      },
      "42": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "43": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 98,
          column: 16
        }
      },
      "44": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 101,
          column: 14
        }
      },
      "45": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "46": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 108,
          column: 18
        }
      },
      "47": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 24
        }
      },
      "48": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 43
        }
      },
      "49": {
        start: {
          line: 115,
          column: 21
        },
        end: {
          line: 115,
          column: 62
        }
      },
      "50": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 53
        }
      },
      "51": {
        start: {
          line: 116,
          column: 46
        },
        end: {
          line: 116,
          column: 53
        }
      },
      "52": {
        start: {
          line: 117,
          column: 24
        },
        end: {
          line: 131,
          column: 11
        }
      },
      "53": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "54": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 72
        }
      },
      "55": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 123,
          column: 18
        }
      },
      "56": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 129,
          column: 18
        }
      },
      "57": {
        start: {
          line: 133,
          column: 37
        },
        end: {
          line: 133,
          column: 149
        }
      },
      "58": {
        start: {
          line: 133,
          column: 62
        },
        end: {
          line: 133,
          column: 113
        }
      },
      "59": {
        start: {
          line: 133,
          column: 129
        },
        end: {
          line: 133,
          column: 148
        }
      },
      "60": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "61": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 143,
          column: 15
        }
      },
      "62": {
        start: {
          line: 139,
          column: 63
        },
        end: {
          line: 139,
          column: 73
        }
      },
      "63": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 147,
          column: 10
        }
      },
      "64": {
        start: {
          line: 150,
          column: 32
        },
        end: {
          line: 150,
          column: 61
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 12,
            column: 30
          }
        },
        loc: {
          start: {
            line: 12,
            column: 40
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 15,
            column: 30
          }
        },
        loc: {
          start: {
            line: 15,
            column: 40
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 33
          }
        },
        loc: {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 47
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 31,
            column: 39
          },
          end: {
            line: 31,
            column: 40
          }
        },
        loc: {
          start: {
            line: 31,
            column: 61
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 34
          }
        },
        loc: {
          start: {
            line: 35,
            column: 53
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 35
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 42
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 70
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 40
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 81
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        loc: {
          start: {
            line: 94,
            column: 55
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 94
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 43
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 113
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 117,
            column: 69
          },
          end: {
            line: 117,
            column: 70
          }
        },
        loc: {
          start: {
            line: 117,
            column: 91
          },
          end: {
            line: 131,
            column: 9
          }
        },
        line: 117
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 133,
            column: 52
          },
          end: {
            line: 133,
            column: 53
          }
        },
        loc: {
          start: {
            line: 133,
            column: 62
          },
          end: {
            line: 133,
            column: 113
          }
        },
        line: 133
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 133,
            column: 119
          },
          end: {
            line: 133,
            column: 120
          }
        },
        loc: {
          start: {
            line: 133,
            column: 129
          },
          end: {
            line: 133,
            column: 148
          }
        },
        line: 133
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 139,
            column: 58
          },
          end: {
            line: 139,
            column: 59
          }
        },
        loc: {
          start: {
            line: 139,
            column: 63
          },
          end: {
            line: 139,
            column: 73
          }
        },
        line: 139
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 35
          },
          end: {
            line: 23,
            column: 38
          }
        }, {
          start: {
            line: 23,
            column: 41
          },
          end: {
            line: 25,
            column: 5
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 23,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 23,
            column: 14
          }
        }, {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 23,
            column: 32
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 15
          },
          end: {
            line: 32,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 32,
            column: 45
          }
        }, {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 65
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 27
          }
        }, {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 36,
            column: 45
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "7": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 20
          }
        }, {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 47
          }
        }, {
          start: {
            line: 39,
            column: 51
          },
          end: {
            line: 39,
            column: 76
          }
        }],
        line: 39
      },
      "8": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "9": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 17
          },
          end: {
            line: 45,
            column: 31
          }
        }],
        line: 45
      },
      "10": {
        loc: {
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 51,
            column: 53
          }
        }, {
          start: {
            line: 51,
            column: 57
          },
          end: {
            line: 51,
            column: 88
          }
        }],
        line: 51
      },
      "11": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "12": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 29
          }
        }, {
          start: {
            line: 53,
            column: 33
          },
          end: {
            line: 53,
            column: 79
          }
        }],
        line: 53
      },
      "13": {
        loc: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 47
          },
          end: {
            line: 54,
            column: 88
          }
        }, {
          start: {
            line: 54,
            column: 91
          },
          end: {
            line: 54,
            column: 95
          }
        }],
        line: 54
      },
      "14": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 57,
            column: 19
          },
          end: {
            line: 59,
            column: 13
          }
        }],
        line: 55
      },
      "15": {
        loc: {
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 16
          },
          end: {
            line: 55,
            column: 20
          }
        }, {
          start: {
            line: 55,
            column: 25
          },
          end: {
            line: 55,
            column: 33
          }
        }, {
          start: {
            line: 55,
            column: 37
          },
          end: {
            line: 55,
            column: 45
          }
        }],
        line: 55
      },
      "16": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "17": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "18": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "19": {
        loc: {
          start: {
            line: 133,
            column: 62
          },
          end: {
            line: 133,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 62
          },
          end: {
            line: 133,
            column: 77
          }
        }, {
          start: {
            line: 133,
            column: 81
          },
          end: {
            line: 133,
            column: 113
          }
        }],
        line: 133
      },
      "20": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/notifications/push.ts"],
      sourcesContent: ["import * as webPush from 'web-push'\nimport { connectToDatabase } from '@/lib/db'\nimport User from '@/lib/db/models/user.model'\n\nwebPush.setVapidDetails(\n  'mailto:support@mgzon.com',\n  process.env.NEXT_PUBLIC_VAPID_PUBLIC_KEY!,\n  process.env.VAPID_PRIVATE_KEY!\n)\n\nexport class PushNotificationService {\n  async subscribe(userId: string, subscription: PushSubscription) {\n    await connectToDatabase()\n\n    await User.findByIdAndUpdate(userId, {\n      $push: { pushSubscriptions: subscription },\n    })\n\n    return { success: true }\n  }\n\n  async unsubscribe(userId: string, endpoint: string) {\n    await connectToDatabase()\n\n    await User.findByIdAndUpdate(userId, {\n      $pull: { pushSubscriptions: { endpoint } },\n    })\n\n    return { success: true }\n  }\n\n  async sendNotification(\n    subscription: PushSubscription,\n    notification: {\n      title: string\n      body: string\n      icon?: string\n      badge?: string\n      data?: any\n    }\n  ) {\n    try {\n      await webPush.sendNotification(\n        subscription,\n        JSON.stringify({\n          notification,\n        })\n      )\n      return { success: true }\n    } catch (error) {\n      if (error.statusCode === 410) {\n        // Subscription has expired or is no longer valid\n        return { success: false, expired: true }\n      }\n      throw error\n    }\n  }\n\n  async notifyUser(userId: string, notification: {\n    title: string\n    body: string\n    icon?: string\n    badge?: string\n    data?: any\n  }) {\n    await connectToDatabase()\n\n    const user = await User.findById(userId)\n    if (!user?.pushSubscriptions?.length) return\n\n    const results = await Promise.all(\n      user.pushSubscriptions.map(async (subscription) => {\n        try {\n          await this.sendNotification(subscription, notification)\n          return { success: true, subscription }\n        } catch (error) {\n          return { success: false, subscription, error }\n        }\n      })\n    )\n\n    // Remove expired subscriptions\n    const expiredSubscriptions = results\n      .filter((result) => !result.success && result.error?.statusCode === 410)\n      .map((result) => result.subscription)\n\n    if (expiredSubscriptions.length) {\n      await User.findByIdAndUpdate(userId, {\n        $pull: {\n          pushSubscriptions: {\n            endpoint: { $in: expiredSubscriptions.map((s) => s.endpoint) },\n          },\n        },\n      })\n    }\n\n    return { success: true }\n  }\n}\n\nexport const pushNotificationService = new PushNotificationService()"],
      names: ["PushNotificationService", "pushNotificationService", "webPush", "setVapidDetails", "process", "env", "NEXT_PUBLIC_VAPID_PUBLIC_KEY", "VAPID_PRIVATE_KEY", "subscribe", "userId", "subscription", "connectToDatabase", "User", "findByIdAndUpdate", "$push", "pushSubscriptions", "success", "unsubscribe", "endpoint", "$pull", "sendNotification", "notification", "JSON", "stringify", "error", "statusCode", "expired", "notifyUser", "user", "findById", "length", "results", "Promise", "all", "map", "expiredSubscriptions", "filter", "result", "$in", "s"],
      mappings: ";;;;;;;;;;;IAUaA,uBAAuB;eAAvBA;;IA0FAC,uBAAuB;eAAvBA;;;iEApGY;oBACS;kEACjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEjBC,SAAQC,eAAe,CACrB,4BACAC,QAAQC,GAAG,CAACC,4BAA4B,EACxCF,QAAQC,GAAG,CAACE,iBAAiB;AAGxB,MAAMP;IACX,MAAMQ,UAAUC,MAAc,EAAEC,YAA8B,EAAE;QAC9D,MAAMC,IAAAA,qBAAiB;QAEvB,MAAMC,kBAAI,CAACC,iBAAiB,CAACJ,QAAQ;YACnCK,OAAO;gBAAEC,mBAAmBL;YAAa;QAC3C;QAEA,OAAO;YAAEM,SAAS;QAAK;IACzB;IAEA,MAAMC,YAAYR,MAAc,EAAES,QAAgB,EAAE;QAClD,MAAMP,IAAAA,qBAAiB;QAEvB,MAAMC,kBAAI,CAACC,iBAAiB,CAACJ,QAAQ;YACnCU,OAAO;gBAAEJ,mBAAmB;oBAAEG;gBAAS;YAAE;QAC3C;QAEA,OAAO;YAAEF,SAAS;QAAK;IACzB;IAEA,MAAMI,iBACJV,YAA8B,EAC9BW,YAMC,EACD;QACA,IAAI;YACF,MAAMnB,SAAQkB,gBAAgB,CAC5BV,cACAY,KAAKC,SAAS,CAAC;gBACbF;YACF;YAEF,OAAO;gBAAEL,SAAS;YAAK;QACzB,EAAE,OAAOQ,OAAO;YACd,IAAIA,MAAMC,UAAU,KAAK,KAAK;gBAC5B,iDAAiD;gBACjD,OAAO;oBAAET,SAAS;oBAAOU,SAAS;gBAAK;YACzC;YACA,MAAMF;QACR;IACF;IAEA,MAAMG,WAAWlB,MAAc,EAAEY,YAMhC,EAAE;QACD,MAAMV,IAAAA,qBAAiB;QAEvB,MAAMiB,OAAO,MAAMhB,kBAAI,CAACiB,QAAQ,CAACpB;QACjC,IAAI,CAACmB,MAAMb,mBAAmBe,QAAQ;QAEtC,MAAMC,UAAU,MAAMC,QAAQC,GAAG,CAC/BL,KAAKb,iBAAiB,CAACmB,GAAG,CAAC,OAAOxB;YAChC,IAAI;gBACF,MAAM,IAAI,CAACU,gBAAgB,CAACV,cAAcW;gBAC1C,OAAO;oBAAEL,SAAS;oBAAMN;gBAAa;YACvC,EAAE,OAAOc,OAAO;gBACd,OAAO;oBAAER,SAAS;oBAAON;oBAAcc;gBAAM;YAC/C;QACF;QAGF,+BAA+B;QAC/B,MAAMW,uBAAuBJ,QAC1BK,MAAM,CAAC,CAACC,SAAW,CAACA,OAAOrB,OAAO,IAAIqB,OAAOb,KAAK,EAAEC,eAAe,KACnES,GAAG,CAAC,CAACG,SAAWA,OAAO3B,YAAY;QAEtC,IAAIyB,qBAAqBL,MAAM,EAAE;YAC/B,MAAMlB,kBAAI,CAACC,iBAAiB,CAACJ,QAAQ;gBACnCU,OAAO;oBACLJ,mBAAmB;wBACjBG,UAAU;4BAAEoB,KAAKH,qBAAqBD,GAAG,CAAC,CAACK,IAAMA,EAAErB,QAAQ;wBAAE;oBAC/D;gBACF;YACF;QACF;QAEA,OAAO;YAAEF,SAAS;QAAK;IACzB;AACF;AAEO,MAAMf,0BAA0B,IAAID"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1a0627aebc00c758f24b897f4be533b5eec173ac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hh228ukbq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hh228ukbq();
cov_1hh228ukbq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1hh228ukbq().f[0]++;
  cov_1hh228ukbq().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1hh228ukbq().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1hh228ukbq().s[3]++;
_export(exports, {
  PushNotificationService: function () {
    /* istanbul ignore next */
    cov_1hh228ukbq().f[1]++;
    cov_1hh228ukbq().s[4]++;
    return PushNotificationService;
  },
  pushNotificationService: function () {
    /* istanbul ignore next */
    cov_1hh228ukbq().f[2]++;
    cov_1hh228ukbq().s[5]++;
    return pushNotificationService;
  }
});
const _webpush =
/* istanbul ignore next */
(/*#__PURE__*/cov_1hh228ukbq().s[6]++, _interop_require_wildcard(require("web-push")));
const _db =
/* istanbul ignore next */
(cov_1hh228ukbq().s[7]++, require("../../db"));
const _usermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_1hh228ukbq().s[8]++, _interop_require_default(require("../../db/models/user.model")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1hh228ukbq().f[3]++;
  cov_1hh228ukbq().s[9]++;
  return /* istanbul ignore next */(cov_1hh228ukbq().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1hh228ukbq().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1hh228ukbq().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1hh228ukbq().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1hh228ukbq().f[4]++;
  cov_1hh228ukbq().s[10]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1hh228ukbq().b[2][0]++;
    cov_1hh228ukbq().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1hh228ukbq().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1hh228ukbq().s[12]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1hh228ukbq().s[13]++, new WeakMap());
  /* istanbul ignore next */
  cov_1hh228ukbq().s[14]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1hh228ukbq().f[5]++;
    cov_1hh228ukbq().s[15]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1hh228ukbq().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1hh228ukbq().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1hh228ukbq().f[6]++;
  cov_1hh228ukbq().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_1hh228ukbq().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1hh228ukbq().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1hh228ukbq().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1hh228ukbq().b[4][0]++;
    cov_1hh228ukbq().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1hh228ukbq().b[4][1]++;
  }
  cov_1hh228ukbq().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_1hh228ukbq().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1hh228ukbq().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1hh228ukbq().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1hh228ukbq().b[6][0]++;
    cov_1hh228ukbq().s[19]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1hh228ukbq().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1hh228ukbq().s[20]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1hh228ukbq().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_1hh228ukbq().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1hh228ukbq().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1hh228ukbq().b[8][0]++;
    cov_1hh228ukbq().s[22]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1hh228ukbq().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1hh228ukbq().s[23]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1hh228ukbq().s[24]++,
  /* istanbul ignore next */
  (cov_1hh228ukbq().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1hh228ukbq().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1hh228ukbq().s[25]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1hh228ukbq().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_1hh228ukbq().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1hh228ukbq().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1hh228ukbq().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1hh228ukbq().s[27]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1hh228ukbq().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1hh228ukbq().b[13][1]++, null));
      /* istanbul ignore next */
      cov_1hh228ukbq().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_1hh228ukbq().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1hh228ukbq().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1hh228ukbq().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1hh228ukbq().b[14][0]++;
        cov_1hh228ukbq().s[29]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1hh228ukbq().b[14][1]++;
        cov_1hh228ukbq().s[30]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1hh228ukbq().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1hh228ukbq().s[31]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1hh228ukbq().s[32]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1hh228ukbq().b[16][0]++;
    cov_1hh228ukbq().s[33]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1hh228ukbq().b[16][1]++;
  }
  cov_1hh228ukbq().s[34]++;
  return newObj;
}
/* istanbul ignore next */
cov_1hh228ukbq().s[35]++;
_webpush.setVapidDetails('mailto:support@mgzon.com', process.env.NEXT_PUBLIC_VAPID_PUBLIC_KEY, process.env.VAPID_PRIVATE_KEY);
class PushNotificationService {
  async subscribe(userId, subscription) {
    /* istanbul ignore next */
    cov_1hh228ukbq().f[7]++;
    cov_1hh228ukbq().s[36]++;
    await (0, _db.connectToDatabase)();
    /* istanbul ignore next */
    cov_1hh228ukbq().s[37]++;
    await _usermodel.default.findByIdAndUpdate(userId, {
      $push: {
        pushSubscriptions: subscription
      }
    });
    /* istanbul ignore next */
    cov_1hh228ukbq().s[38]++;
    return {
      success: true
    };
  }
  async unsubscribe(userId, endpoint) {
    /* istanbul ignore next */
    cov_1hh228ukbq().f[8]++;
    cov_1hh228ukbq().s[39]++;
    await (0, _db.connectToDatabase)();
    /* istanbul ignore next */
    cov_1hh228ukbq().s[40]++;
    await _usermodel.default.findByIdAndUpdate(userId, {
      $pull: {
        pushSubscriptions: {
          endpoint
        }
      }
    });
    /* istanbul ignore next */
    cov_1hh228ukbq().s[41]++;
    return {
      success: true
    };
  }
  async sendNotification(subscription, notification) {
    /* istanbul ignore next */
    cov_1hh228ukbq().f[9]++;
    cov_1hh228ukbq().s[42]++;
    try {
      /* istanbul ignore next */
      cov_1hh228ukbq().s[43]++;
      await _webpush.sendNotification(subscription, JSON.stringify({
        notification
      }));
      /* istanbul ignore next */
      cov_1hh228ukbq().s[44]++;
      return {
        success: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1hh228ukbq().s[45]++;
      if (error.statusCode === 410) {
        /* istanbul ignore next */
        cov_1hh228ukbq().b[17][0]++;
        cov_1hh228ukbq().s[46]++;
        // Subscription has expired or is no longer valid
        return {
          success: false,
          expired: true
        };
      } else
      /* istanbul ignore next */
      {
        cov_1hh228ukbq().b[17][1]++;
      }
      cov_1hh228ukbq().s[47]++;
      throw error;
    }
  }
  async notifyUser(userId, notification) {
    /* istanbul ignore next */
    cov_1hh228ukbq().f[10]++;
    cov_1hh228ukbq().s[48]++;
    await (0, _db.connectToDatabase)();
    const user =
    /* istanbul ignore next */
    (cov_1hh228ukbq().s[49]++, await _usermodel.default.findById(userId));
    /* istanbul ignore next */
    cov_1hh228ukbq().s[50]++;
    if (!user?.pushSubscriptions?.length) {
      /* istanbul ignore next */
      cov_1hh228ukbq().b[18][0]++;
      cov_1hh228ukbq().s[51]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1hh228ukbq().b[18][1]++;
    }
    const results =
    /* istanbul ignore next */
    (cov_1hh228ukbq().s[52]++, await Promise.all(user.pushSubscriptions.map(async subscription => {
      /* istanbul ignore next */
      cov_1hh228ukbq().f[11]++;
      cov_1hh228ukbq().s[53]++;
      try {
        /* istanbul ignore next */
        cov_1hh228ukbq().s[54]++;
        await this.sendNotification(subscription, notification);
        /* istanbul ignore next */
        cov_1hh228ukbq().s[55]++;
        return {
          success: true,
          subscription
        };
      } catch (error) {
        /* istanbul ignore next */
        cov_1hh228ukbq().s[56]++;
        return {
          success: false,
          subscription,
          error
        };
      }
    })));
    // Remove expired subscriptions
    const expiredSubscriptions =
    /* istanbul ignore next */
    (cov_1hh228ukbq().s[57]++, results.filter(result => {
      /* istanbul ignore next */
      cov_1hh228ukbq().f[12]++;
      cov_1hh228ukbq().s[58]++;
      return /* istanbul ignore next */(cov_1hh228ukbq().b[19][0]++, !result.success) &&
      /* istanbul ignore next */
      (cov_1hh228ukbq().b[19][1]++, result.error?.statusCode === 410);
    }).map(result => {
      /* istanbul ignore next */
      cov_1hh228ukbq().f[13]++;
      cov_1hh228ukbq().s[59]++;
      return result.subscription;
    }));
    /* istanbul ignore next */
    cov_1hh228ukbq().s[60]++;
    if (expiredSubscriptions.length) {
      /* istanbul ignore next */
      cov_1hh228ukbq().b[20][0]++;
      cov_1hh228ukbq().s[61]++;
      await _usermodel.default.findByIdAndUpdate(userId, {
        $pull: {
          pushSubscriptions: {
            endpoint: {
              $in: expiredSubscriptions.map(s => {
                /* istanbul ignore next */
                cov_1hh228ukbq().f[14]++;
                cov_1hh228ukbq().s[62]++;
                return s.endpoint;
              })
            }
          }
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1hh228ukbq().b[20][1]++;
    }
    cov_1hh228ukbq().s[63]++;
    return {
      success: true
    };
  }
}
const pushNotificationService =
/* istanbul ignore next */
(cov_1hh228ukbq().s[64]++, new PushNotificationService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,