{"version":3,"names":["PushNotificationService","cov_1hh228ukbq","f","s","pushNotificationService","_webpush","setVapidDetails","process","env","NEXT_PUBLIC_VAPID_PUBLIC_KEY","VAPID_PRIVATE_KEY","subscribe","userId","subscription","_db","connectToDatabase","_usermodel","default","findByIdAndUpdate","$push","pushSubscriptions","success","unsubscribe","endpoint","$pull","sendNotification","notification","JSON","stringify","error","statusCode","b","expired","notifyUser","user","findById","length","results","Promise","all","map","expiredSubscriptions","filter","result","$in"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/notifications/push.ts"],"sourcesContent":["import * as webPush from 'web-push'\nimport { connectToDatabase } from '@/lib/db'\nimport User from '@/lib/db/models/user.model'\n\nwebPush.setVapidDetails(\n  'mailto:support@mgzon.com',\n  process.env.NEXT_PUBLIC_VAPID_PUBLIC_KEY!,\n  process.env.VAPID_PRIVATE_KEY!\n)\n\nexport class PushNotificationService {\n  async subscribe(userId: string, subscription: PushSubscription) {\n    await connectToDatabase()\n\n    await User.findByIdAndUpdate(userId, {\n      $push: { pushSubscriptions: subscription },\n    })\n\n    return { success: true }\n  }\n\n  async unsubscribe(userId: string, endpoint: string) {\n    await connectToDatabase()\n\n    await User.findByIdAndUpdate(userId, {\n      $pull: { pushSubscriptions: { endpoint } },\n    })\n\n    return { success: true }\n  }\n\n  async sendNotification(\n    subscription: PushSubscription,\n    notification: {\n      title: string\n      body: string\n      icon?: string\n      badge?: string\n      data?: any\n    }\n  ) {\n    try {\n      await webPush.sendNotification(\n        subscription,\n        JSON.stringify({\n          notification,\n        })\n      )\n      return { success: true }\n    } catch (error) {\n      if (error.statusCode === 410) {\n        // Subscription has expired or is no longer valid\n        return { success: false, expired: true }\n      }\n      throw error\n    }\n  }\n\n  async notifyUser(userId: string, notification: {\n    title: string\n    body: string\n    icon?: string\n    badge?: string\n    data?: any\n  }) {\n    await connectToDatabase()\n\n    const user = await User.findById(userId)\n    if (!user?.pushSubscriptions?.length) return\n\n    const results = await Promise.all(\n      user.pushSubscriptions.map(async (subscription) => {\n        try {\n          await this.sendNotification(subscription, notification)\n          return { success: true, subscription }\n        } catch (error) {\n          return { success: false, subscription, error }\n        }\n      })\n    )\n\n    // Remove expired subscriptions\n    const expiredSubscriptions = results\n      .filter((result) => !result.success && result.error?.statusCode === 410)\n      .map((result) => result.subscription)\n\n    if (expiredSubscriptions.length) {\n      await User.findByIdAndUpdate(userId, {\n        $pull: {\n          pushSubscriptions: {\n            endpoint: { $in: expiredSubscriptions.map((s) => s.endpoint) },\n          },\n        },\n      })\n    }\n\n    return { success: true }\n  }\n}\n\nexport const pushNotificationService = new PushNotificationService()"],"mappingsaA,uBAAuB,WAAAA,CAAA;IAAA;IAAAC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAvBH,uBAAA;;EA0FAI,uBAAuB,WAAAA,CAAA;IAAA;IAAAH,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAvBC,uBAAA;;;;;yEApGY;;;kCACS;;;wEACjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEjBC,QAAA,CAAQC,eAAe,CACrB,4BACAC,OAAA,CAAQC,GAAG,CAACC,4BAA4B,EACxCF,OAAA,CAAQC,GAAG,CAACE,iBAAiB;AAGxB,MAAMV,uBAAA;EACX,MAAMW,UAAUC,MAAc,EAAEC,YAA8B,EAAE;IAAA;IAAAZ,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IAC9D,MAAM,IAAAW,GAAA,CAAAC,iBAAiB;IAAA;IAAAd,cAAA,GAAAE,CAAA;IAEvB,MAAMa,UAAA,CAAAC,OAAI,CAACC,iBAAiB,CAACN,MAAA,EAAQ;MACnCO,KAAA,EAAO;QAAEC,iBAAA,EAAmBP;MAAa;IAC3C;IAAA;IAAAZ,cAAA,GAAAE,CAAA;IAEA,OAAO;MAAEkB,OAAA,EAAS;IAAK;EACzB;EAEA,MAAMC,YAAYV,MAAc,EAAEW,QAAgB,EAAE;IAAA;IAAAtB,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IAClD,MAAM,IAAAW,GAAA,CAAAC,iBAAiB;IAAA;IAAAd,cAAA,GAAAE,CAAA;IAEvB,MAAMa,UAAA,CAAAC,OAAI,CAACC,iBAAiB,CAACN,MAAA,EAAQ;MACnCY,KAAA,EAAO;QAAEJ,iBAAA,EAAmB;UAAEG;QAAS;MAAE;IAC3C;IAAA;IAAAtB,cAAA,GAAAE,CAAA;IAEA,OAAO;MAAEkB,OAAA,EAAS;IAAK;EACzB;EAEA,MAAMI,iBACJZ,YAA8B,EAC9Ba,YAMC,EACD;IAAA;IAAAzB,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IACA,IAAI;MAAA;MAAAF,cAAA,GAAAE,CAAA;MACF,MAAME,QAAA,CAAQoB,gBAAgB,CAC5BZ,YAAA,EACAc,IAAA,CAAKC,SAAS,CAAC;QACbF;MACF;MAAA;MAAAzB,cAAA,GAAAE,CAAA;MAEF,OAAO;QAAEkB,OAAA,EAAS;MAAK;IACzB,EAAE,OAAOQ,KAAA,EAAO;MAAA;MAAA5B,cAAA,GAAAE,CAAA;MACd,IAAI0B,KAAA,CAAMC,UAAU,KAAK,KAAK;QAAA;QAAA7B,cAAA,GAAA8B,CAAA;QAAA9B,cAAA,GAAAE,CAAA;QAC5B;QACA,OAAO;UAAEkB,OAAA,EAAS;UAAOW,OAAA,EAAS;QAAK;MACzC;MAAA;MAAA;QAAA/B,cAAA,GAAA8B,CAAA;MAAA;MAAA9B,cAAA,GAAAE,CAAA;MACA,MAAM0B,KAAA;IACR;EACF;EAEA,MAAMI,WAAWrB,MAAc,EAAEc,YAMhC,EAAE;IAAA;IAAAzB,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;IACD,MAAM,IAAAW,GAAA,CAAAC,iBAAiB;IAEvB,MAAMmB,IAAA;IAAA;IAAA,CAAAjC,cAAA,GAAAE,CAAA,QAAO,MAAMa,UAAA,CAAAC,OAAI,CAACkB,QAAQ,CAACvB,MAAA;IAAA;IAAAX,cAAA,GAAAE,CAAA;IACjC,IAAI,CAAC+B,IAAA,EAAMd,iBAAA,EAAmBgB,MAAA,EAAQ;MAAA;MAAAnC,cAAA,GAAA8B,CAAA;MAAA9B,cAAA,GAAAE,CAAA;MAAA;IAAA;IAAA;IAAA;MAAAF,cAAA,GAAA8B,CAAA;IAAA;IAEtC,MAAMM,OAAA;IAAA;IAAA,CAAApC,cAAA,GAAAE,CAAA,QAAU,MAAMmC,OAAA,CAAQC,GAAG,CAC/BL,IAAA,CAAKd,iBAAiB,CAACoB,GAAG,CAAC,MAAO3B,YAAA;MAAA;MAAAZ,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MAChC,IAAI;QAAA;QAAAF,cAAA,GAAAE,CAAA;QACF,MAAM,IAAI,CAACsB,gBAAgB,CAACZ,YAAA,EAAca,YAAA;QAAA;QAAAzB,cAAA,GAAAE,CAAA;QAC1C,OAAO;UAAEkB,OAAA,EAAS;UAAMR;QAAa;MACvC,EAAE,OAAOgB,KAAA,EAAO;QAAA;QAAA5B,cAAA,GAAAE,CAAA;QACd,OAAO;UAAEkB,OAAA,EAAS;UAAOR,YAAA;UAAcgB;QAAM;MAC/C;IACF;IAGF;IACA,MAAMY,oBAAA;IAAA;IAAA,CAAAxC,cAAA,GAAAE,CAAA,QAAuBkC,OAAA,CAC1BK,MAAM,CAAEC,MAAA,IAAW;MAAA;MAAA1C,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MAAA,kCAAAF,cAAA,GAAA8B,CAAA,YAACY,MAAA,CAAOtB,OAAO;MAAA;MAAA,CAAApB,cAAA,GAAA8B,CAAA,WAAIY,MAAA,CAAOd,KAAK,EAAEC,UAAA,KAAe;IAAA,GACnEU,GAAG,CAAEG,MAAA,IAAW;MAAA;MAAA1C,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MAAA,OAAAwC,MAAA,CAAO9B,YAAY;IAAZ,CAAY;IAAA;IAAAZ,cAAA,GAAAE,CAAA;IAEtC,IAAIsC,oBAAA,CAAqBL,MAAM,EAAE;MAAA;MAAAnC,cAAA,GAAA8B,CAAA;MAAA9B,cAAA,GAAAE,CAAA;MAC/B,MAAMa,UAAA,CAAAC,OAAI,CAACC,iBAAiB,CAACN,MAAA,EAAQ;QACnCY,KAAA,EAAO;UACLJ,iBAAA,EAAmB;YACjBG,QAAA,EAAU;cAAEqB,GAAA,EAAKH,oBAAA,CAAqBD,GAAG,CAAErC,CAAA,IAAM;gBAAA;gBAAAF,cAAA,GAAAC,CAAA;gBAAAD,cAAA,GAAAE,CAAA;gBAAA,OAAAA,CAAA,CAAEoB,QAAQ;cAAR,CAAQ;YAAE;UAC/D;QACF;MACF;IACF;IAAA;IAAA;MAAAtB,cAAA,GAAA8B,CAAA;IAAA;IAAA9B,cAAA,GAAAE,CAAA;IAEA,OAAO;MAAEkB,OAAA,EAAS;IAAK;EACzB;AACF;AAEO,MAAMjB,uBAAA;AAAA;AAAA,CAAAH,cAAA,GAAAE,CAAA,QAA0B,IAAIH,uBAAA","ignoreList":[]}