148a7089c22b4ecced3eed2e1e90a0db
"use strict";

/* istanbul ignore next */
function cov_1hogvi3pdn() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/integrations/4px/4px-client.ts";
  var hash = "55cd12caa2d74046db315722cab5273da93f0926";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/integrations/4px/4px-client.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "3": {
        start: {
          line: 11,
          column: 30
        },
        end: {
          line: 11,
          column: 73
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 42
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 61
        }
      },
      "10": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 70
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 97
        }
      },
      "12": {
        start: {
          line: 30,
          column: 26
        },
        end: {
          line: 30,
          column: 47
        }
      },
      "13": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 31,
          column: 46
        }
      },
      "14": {
        start: {
          line: 32,
          column: 26
        },
        end: {
          line: 32,
          column: 68
        }
      },
      "15": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "16": {
        start: {
          line: 43,
          column: 25
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "18": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 66
        }
      },
      "19": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 46
        }
      },
      "20": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 51
        }
      },
      "21": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 42
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 29
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 53
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 28
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 56
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 28
          },
          end: {
            line: 49,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 28
          },
          end: {
            line: 49,
            column: 45
          }
        }, {
          start: {
            line: 49,
            column: 49
          },
          end: {
            line: 49,
            column: 64
          }
        }],
        line: 49
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/integrations/4px/4px-client.ts"],
      sourcesContent: ["import crypto from 'crypto';\nimport axios from 'axios';\n\ninterface FourPXClientConfig {\n  apiKey: string;\n  apiSecret: string;\n  warehouseId?: string;\n}\n\nexport class FourPXClient {\n  private apiKey: string;\n  private apiSecret: string;\n  public defaultWarehouse?: string;\n  private baseUrl: string;\n\n  constructor(config: FourPXClientConfig) {\n    this.apiKey = config.apiKey;\n    this.apiSecret = config.apiSecret;\n    this.defaultWarehouse = config.warehouseId;\n    this.baseUrl = 'https://openapi.4px.com/api/service'; \n  }\n\n  private generateSignature(content: string, timestamp: string): string {\n    const raw = this.apiKey + content + timestamp + this.apiSecret;\n    return crypto.createHash('md5').update(raw, 'utf8').digest('hex').toUpperCase();\n  }\n\n  private async request<T = any>(serviceCode: string, params: any): Promise<T> {\n    const timestamp = Date.now().toString();\n    const content = JSON.stringify(params);\n    const signature = this.generateSignature(content, timestamp);\n\n    const body = {\n      serviceCode,\n      requestBody: content,\n      sign: signature,\n      accessToken: '',\n      appKey: this.apiKey,\n      timestamp,\n      version: '1.0',\n      format: 'json',\n    };\n\n    const response = await axios.post(this.baseUrl, body, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (response.data.code !== '0') {\n      throw new Error(response.data.msg || '4PX API Error');\n    }\n\n    return JSON.parse(response.data.data);\n  }\n\n  async createOrder(order: any) {\n    return this.request('ORDER_CREATE', order);\n  }\n\n  async getOrder(orderId: string) {\n    return this.request('ORDER_TRACK', { ref_no: orderId });\n  }\n}\n"],
      names: ["FourPXClient", "constructor", "config", "apiKey", "apiSecret", "defaultWarehouse", "warehouseId", "baseUrl", "generateSignature", "content", "timestamp", "raw", "crypto", "createHash", "update", "digest", "toUpperCase", "request", "serviceCode", "params", "Date", "now", "toString", "JSON", "stringify", "signature", "body", "requestBody", "sign", "accessToken", "appKey", "version", "format", "response", "axios", "post", "headers", "data", "code", "Error", "msg", "parse", "createOrder", "order", "getOrder", "orderId", "ref_no"],
      mappings: ";;;;+BASaA;;;eAAAA;;;+DATM;8DACD;;;;;;AAQX,MAAMA;IAMXC,YAAYC,MAA0B,CAAE;QACtC,IAAI,CAACC,MAAM,GAAGD,OAAOC,MAAM;QAC3B,IAAI,CAACC,SAAS,GAAGF,OAAOE,SAAS;QACjC,IAAI,CAACC,gBAAgB,GAAGH,OAAOI,WAAW;QAC1C,IAAI,CAACC,OAAO,GAAG;IACjB;IAEQC,kBAAkBC,OAAe,EAAEC,SAAiB,EAAU;QACpE,MAAMC,MAAM,IAAI,CAACR,MAAM,GAAGM,UAAUC,YAAY,IAAI,CAACN,SAAS;QAC9D,OAAOQ,eAAM,CAACC,UAAU,CAAC,OAAOC,MAAM,CAACH,KAAK,QAAQI,MAAM,CAAC,OAAOC,WAAW;IAC/E;IAEA,MAAcC,QAAiBC,WAAmB,EAAEC,MAAW,EAAc;QAC3E,MAAMT,YAAYU,KAAKC,GAAG,GAAGC,QAAQ;QACrC,MAAMb,UAAUc,KAAKC,SAAS,CAACL;QAC/B,MAAMM,YAAY,IAAI,CAACjB,iBAAiB,CAACC,SAASC;QAElD,MAAMgB,OAAO;YACXR;YACAS,aAAalB;YACbmB,MAAMH;YACNI,aAAa;YACbC,QAAQ,IAAI,CAAC3B,MAAM;YACnBO;YACAqB,SAAS;YACTC,QAAQ;QACV;QAEA,MAAMC,WAAW,MAAMC,cAAK,CAACC,IAAI,CAAC,IAAI,CAAC5B,OAAO,EAAEmB,MAAM;YACpDU,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,IAAIH,SAASI,IAAI,CAACC,IAAI,KAAK,KAAK;YAC9B,MAAM,IAAIC,MAAMN,SAASI,IAAI,CAACG,GAAG,IAAI;QACvC;QAEA,OAAOjB,KAAKkB,KAAK,CAACR,SAASI,IAAI,CAACA,IAAI;IACtC;IAEA,MAAMK,YAAYC,KAAU,EAAE;QAC5B,OAAO,IAAI,CAAC1B,OAAO,CAAC,gBAAgB0B;IACtC;IAEA,MAAMC,SAASC,OAAe,EAAE;QAC9B,OAAO,IAAI,CAAC5B,OAAO,CAAC,eAAe;YAAE6B,QAAQD;QAAQ;IACvD;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "55cd12caa2d74046db315722cab5273da93f0926"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hogvi3pdn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hogvi3pdn();
cov_1hogvi3pdn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1hogvi3pdn().s[1]++;
Object.defineProperty(exports, "FourPXClient", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1hogvi3pdn().f[0]++;
    cov_1hogvi3pdn().s[2]++;
    return FourPXClient;
  }
});
const _crypto =
/* istanbul ignore next */
(/*#__PURE__*/cov_1hogvi3pdn().s[3]++, _interop_require_default(require("crypto")));
const _axios =
/* istanbul ignore next */
(/*#__PURE__*/cov_1hogvi3pdn().s[4]++, _interop_require_default(require("axios")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1hogvi3pdn().f[1]++;
  cov_1hogvi3pdn().s[5]++;
  return /* istanbul ignore next */(cov_1hogvi3pdn().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1hogvi3pdn().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1hogvi3pdn().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1hogvi3pdn().b[0][1]++, {
    default: obj
  });
}
class FourPXClient {
  constructor(config) {
    /* istanbul ignore next */
    cov_1hogvi3pdn().f[2]++;
    cov_1hogvi3pdn().s[6]++;
    this.apiKey = config.apiKey;
    /* istanbul ignore next */
    cov_1hogvi3pdn().s[7]++;
    this.apiSecret = config.apiSecret;
    /* istanbul ignore next */
    cov_1hogvi3pdn().s[8]++;
    this.defaultWarehouse = config.warehouseId;
    /* istanbul ignore next */
    cov_1hogvi3pdn().s[9]++;
    this.baseUrl = 'https://openapi.4px.com/api/service';
  }
  generateSignature(content, timestamp) {
    /* istanbul ignore next */
    cov_1hogvi3pdn().f[3]++;
    const raw =
    /* istanbul ignore next */
    (cov_1hogvi3pdn().s[10]++, this.apiKey + content + timestamp + this.apiSecret);
    /* istanbul ignore next */
    cov_1hogvi3pdn().s[11]++;
    return _crypto.default.createHash('md5').update(raw, 'utf8').digest('hex').toUpperCase();
  }
  async request(serviceCode, params) {
    /* istanbul ignore next */
    cov_1hogvi3pdn().f[4]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_1hogvi3pdn().s[12]++, Date.now().toString());
    const content =
    /* istanbul ignore next */
    (cov_1hogvi3pdn().s[13]++, JSON.stringify(params));
    const signature =
    /* istanbul ignore next */
    (cov_1hogvi3pdn().s[14]++, this.generateSignature(content, timestamp));
    const body =
    /* istanbul ignore next */
    (cov_1hogvi3pdn().s[15]++, {
      serviceCode,
      requestBody: content,
      sign: signature,
      accessToken: '',
      appKey: this.apiKey,
      timestamp,
      version: '1.0',
      format: 'json'
    });
    const response =
    /* istanbul ignore next */
    (cov_1hogvi3pdn().s[16]++, await _axios.default.post(this.baseUrl, body, {
      headers: {
        'Content-Type': 'application/json'
      }
    }));
    /* istanbul ignore next */
    cov_1hogvi3pdn().s[17]++;
    if (response.data.code !== '0') {
      /* istanbul ignore next */
      cov_1hogvi3pdn().b[2][0]++;
      cov_1hogvi3pdn().s[18]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1hogvi3pdn().b[3][0]++, response.data.msg) ||
      /* istanbul ignore next */
      (cov_1hogvi3pdn().b[3][1]++, '4PX API Error'));
    } else
    /* istanbul ignore next */
    {
      cov_1hogvi3pdn().b[2][1]++;
    }
    cov_1hogvi3pdn().s[19]++;
    return JSON.parse(response.data.data);
  }
  async createOrder(order) {
    /* istanbul ignore next */
    cov_1hogvi3pdn().f[5]++;
    cov_1hogvi3pdn().s[20]++;
    return this.request('ORDER_CREATE', order);
  }
  async getOrder(orderId) {
    /* istanbul ignore next */
    cov_1hogvi3pdn().f[6]++;
    cov_1hogvi3pdn().s[21]++;
    return this.request('ORDER_TRACK', {
      ref_no: orderId
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJGb3VyUFhDbGllbnQiLCJjb25zdHJ1Y3RvciIsImNvbmZpZyIsImNvdl8xaG9ndmkzcGRuIiwiZiIsInMiLCJhcGlLZXkiLCJhcGlTZWNyZXQiLCJkZWZhdWx0V2FyZWhvdXNlIiwid2FyZWhvdXNlSWQiLCJiYXNlVXJsIiwiZ2VuZXJhdGVTaWduYXR1cmUiLCJjb250ZW50IiwidGltZXN0YW1wIiwicmF3IiwiX2NyeXB0byIsImRlZmF1bHQiLCJjcmVhdGVIYXNoIiwidXBkYXRlIiwiZGlnZXN0IiwidG9VcHBlckNhc2UiLCJyZXF1ZXN0Iiwic2VydmljZUNvZGUiLCJwYXJhbXMiLCJEYXRlIiwibm93IiwidG9TdHJpbmciLCJKU09OIiwic3RyaW5naWZ5Iiwic2lnbmF0dXJlIiwiYm9keSIsInJlcXVlc3RCb2R5Iiwic2lnbiIsImFjY2Vzc1Rva2VuIiwiYXBwS2V5IiwidmVyc2lvbiIsImZvcm1hdCIsInJlc3BvbnNlIiwiX2F4aW9zIiwicG9zdCIsImhlYWRlcnMiLCJkYXRhIiwiY29kZSIsImIiLCJFcnJvciIsIm1zZyIsInBhcnNlIiwiY3JlYXRlT3JkZXIiLCJvcmRlciIsImdldE9yZGVyIiwib3JkZXJJZCIsInJlZl9ubyJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9saWIvYXBpL2ludGVncmF0aW9ucy80cHgvNHB4LWNsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3J5cHRvIGZyb20gJ2NyeXB0byc7XG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuXG5pbnRlcmZhY2UgRm91clBYQ2xpZW50Q29uZmlnIHtcbiAgYXBpS2V5OiBzdHJpbmc7XG4gIGFwaVNlY3JldDogc3RyaW5nO1xuICB3YXJlaG91c2VJZD86IHN0cmluZztcbn1cblxuZXhwb3J0IGNsYXNzIEZvdXJQWENsaWVudCB7XG4gIHByaXZhdGUgYXBpS2V5OiBzdHJpbmc7XG4gIHByaXZhdGUgYXBpU2VjcmV0OiBzdHJpbmc7XG4gIHB1YmxpYyBkZWZhdWx0V2FyZWhvdXNlPzogc3RyaW5nO1xuICBwcml2YXRlIGJhc2VVcmw6IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihjb25maWc6IEZvdXJQWENsaWVudENvbmZpZykge1xuICAgIHRoaXMuYXBpS2V5ID0gY29uZmlnLmFwaUtleTtcbiAgICB0aGlzLmFwaVNlY3JldCA9IGNvbmZpZy5hcGlTZWNyZXQ7XG4gICAgdGhpcy5kZWZhdWx0V2FyZWhvdXNlID0gY29uZmlnLndhcmVob3VzZUlkO1xuICAgIHRoaXMuYmFzZVVybCA9ICdodHRwczovL29wZW5hcGkuNHB4LmNvbS9hcGkvc2VydmljZSc7IFxuICB9XG5cbiAgcHJpdmF0ZSBnZW5lcmF0ZVNpZ25hdHVyZShjb250ZW50OiBzdHJpbmcsIHRpbWVzdGFtcDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBjb25zdCByYXcgPSB0aGlzLmFwaUtleSArIGNvbnRlbnQgKyB0aW1lc3RhbXAgKyB0aGlzLmFwaVNlY3JldDtcbiAgICByZXR1cm4gY3J5cHRvLmNyZWF0ZUhhc2goJ21kNScpLnVwZGF0ZShyYXcsICd1dGY4JykuZGlnZXN0KCdoZXgnKS50b1VwcGVyQ2FzZSgpO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyByZXF1ZXN0PFQgPSBhbnk+KHNlcnZpY2VDb2RlOiBzdHJpbmcsIHBhcmFtczogYW55KTogUHJvbWlzZTxUPiB7XG4gICAgY29uc3QgdGltZXN0YW1wID0gRGF0ZS5ub3coKS50b1N0cmluZygpO1xuICAgIGNvbnN0IGNvbnRlbnQgPSBKU09OLnN0cmluZ2lmeShwYXJhbXMpO1xuICAgIGNvbnN0IHNpZ25hdHVyZSA9IHRoaXMuZ2VuZXJhdGVTaWduYXR1cmUoY29udGVudCwgdGltZXN0YW1wKTtcblxuICAgIGNvbnN0IGJvZHkgPSB7XG4gICAgICBzZXJ2aWNlQ29kZSxcbiAgICAgIHJlcXVlc3RCb2R5OiBjb250ZW50LFxuICAgICAgc2lnbjogc2lnbmF0dXJlLFxuICAgICAgYWNjZXNzVG9rZW46ICcnLFxuICAgICAgYXBwS2V5OiB0aGlzLmFwaUtleSxcbiAgICAgIHRpbWVzdGFtcCxcbiAgICAgIHZlcnNpb246ICcxLjAnLFxuICAgICAgZm9ybWF0OiAnanNvbicsXG4gICAgfTtcblxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCh0aGlzLmJhc2VVcmwsIGJvZHksIHtcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlICE9PSAnMCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihyZXNwb25zZS5kYXRhLm1zZyB8fCAnNFBYIEFQSSBFcnJvcicpO1xuICAgIH1cblxuICAgIHJldHVybiBKU09OLnBhcnNlKHJlc3BvbnNlLmRhdGEuZGF0YSk7XG4gIH1cblxuICBhc3luYyBjcmVhdGVPcmRlcihvcmRlcjogYW55KSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdCgnT1JERVJfQ1JFQVRFJywgb3JkZXIpO1xuICB9XG5cbiAgYXN5bmMgZ2V0T3JkZXIob3JkZXJJZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdCgnT1JERVJfVFJBQ0snLCB7IHJlZl9ubzogb3JkZXJJZCB9KTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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