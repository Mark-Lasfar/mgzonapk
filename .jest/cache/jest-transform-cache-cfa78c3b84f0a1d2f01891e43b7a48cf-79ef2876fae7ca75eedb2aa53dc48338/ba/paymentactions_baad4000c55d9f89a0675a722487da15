9dd7477f06adc11572d92334e6184e8a
"use strict";

/* istanbul ignore next */
function cov_oeny05toy() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/payment.actions.ts";
  var hash = "a45189976edce5ac9e8e55b2f55ede75e1b7b531";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/payment.actions.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 31
        }
      },
      "3": {
        start: {
          line: 11,
          column: 18
        },
        end: {
          line: 11,
          column: 46
        }
      },
      "4": {
        start: {
          line: 12,
          column: 31
        },
        end: {
          line: 12,
          column: 84
        }
      },
      "5": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "6": {
        start: {
          line: 14,
          column: 35
        },
        end: {
          line: 14,
          column: 97
        }
      },
      "7": {
        start: {
          line: 15,
          column: 33
        },
        end: {
          line: 15,
          column: 93
        }
      },
      "8": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 54
        }
      },
      "9": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 6
        }
      },
      "10": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 26,
          column: 3
        }
      },
      "11": {
        start: {
          line: 27,
          column: 15
        },
        end: {
          line: 27,
          column: 83
        }
      },
      "12": {
        start: {
          line: 29,
          column: 69
        },
        end: {
          line: 29,
          column: 76
        }
      },
      "13": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "15": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 34,
          column: 17
        }
      },
      "16": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "17": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 48
        }
      },
      "18": {
        start: {
          line: 38,
          column: 21
        },
        end: {
          line: 38,
          column: 88
        }
      },
      "19": {
        start: {
          line: 39,
          column: 25
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "20": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "21": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "22": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 58
        }
      },
      "23": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 75,
          column: 14
        }
      },
      "24": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 44
        }
      },
      "25": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 87,
          column: 15
        }
      },
      "26": {
        start: {
          line: 88,
          column: 15
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "27": {
        start: {
          line: 89,
          column: 38
        },
        end: {
          line: 107,
          column: 13
        }
      },
      "28": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 117,
          column: 15
        }
      },
      "29": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 116,
          column: 19
        }
      },
      "30": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 115,
          column: 21
        }
      },
      "31": {
        start: {
          line: 111,
          column: 24
        },
        end: {
          line: 111,
          column: 38
        }
      },
      "32": {
        start: {
          line: 113,
          column: 44
        },
        end: {
          line: 113,
          column: 106
        }
      },
      "33": {
        start: {
          line: 113,
          column: 72
        },
        end: {
          line: 113,
          column: 99
        }
      },
      "34": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 114,
          column: 51
        }
      },
      "35": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 128,
          column: 15
        }
      },
      "36": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 58
        }
      },
      "37": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 137,
          column: 10
        }
      },
      "38": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 58
        }
      },
      "39": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 143,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 33
          }
        },
        loc: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "initiatePayment",
        decl: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 30
          }
        },
        loc: {
          start: {
            line: 28,
            column: 40
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 108,
            column: 44
          },
          end: {
            line: 108,
            column: 45
          }
        },
        loc: {
          start: {
            line: 108,
            column: 63
          },
          end: {
            line: 117,
            column: 13
          }
        },
        line: 108
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 109,
            column: 67
          },
          end: {
            line: 109,
            column: 68
          }
        },
        loc: {
          start: {
            line: 109,
            column: 85
          },
          end: {
            line: 116,
            column: 17
          }
        },
        line: 109
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 113,
            column: 64
          },
          end: {
            line: 113,
            column: 65
          }
        },
        loc: {
          start: {
            line: 113,
            column: 72
          },
          end: {
            line: 113,
            column: 99
          }
        },
        line: 113
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 18,
            column: 38
          }
        }, {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 20,
            column: 5
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 14
          }
        }, {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 32
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 10
          },
          end: {
            line: 23,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 10
          },
          end: {
            line: 23,
            column: 33
          }
        }, {
          start: {
            line: 23,
            column: 37
          },
          end: {
            line: 23,
            column: 46
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 43
          }
        }, {
          start: {
            line: 24,
            column: 47
          },
          end: {
            line: 24,
            column: 49
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 25,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 25,
            column: 51
          }
        }, {
          start: {
            line: 25,
            column: 55
          },
          end: {
            line: 25,
            column: 57
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 47
          },
          end: {
            line: 27,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 47
          },
          end: {
            line: 27,
            column: 76
          }
        }, {
          start: {
            line: 27,
            column: 80
          },
          end: {
            line: 27,
            column: 82
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 39,
            column: 25
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 42
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 46,
            column: 9
          }
        }],
        line: 39
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: 88,
            column: 15
          },
          end: {
            line: 131,
            column: 9
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "10": {
        loc: {
          start: {
            line: 76,
            column: 26
          },
          end: {
            line: 76,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 26
          },
          end: {
            line: 76,
            column: 37
          }
        }, {
          start: {
            line: 76,
            column: 41
          },
          end: {
            line: 76,
            column: 43
          }
        }],
        line: 76
      },
      "11": {
        loc: {
          start: {
            line: 88,
            column: 15
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 15
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: 129,
            column: 15
          },
          end: {
            line: 131,
            column: 9
          }
        }],
        line: 88
      },
      "12": {
        loc: {
          start: {
            line: 110,
            column: 20
          },
          end: {
            line: 115,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 20
          },
          end: {
            line: 115,
            column: 21
          }
        }, {
          start: {
            line: 112,
            column: 27
          },
          end: {
            line: 115,
            column: 21
          }
        }],
        line: 110
      },
      "13": {
        loc: {
          start: {
            line: 114,
            column: 32
          },
          end: {
            line: 114,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 32
          },
          end: {
            line: 114,
            column: 43
          }
        }, {
          start: {
            line: 114,
            column: 47
          },
          end: {
            line: 114,
            column: 49
          }
        }],
        line: 114
      },
      "14": {
        loc: {
          start: {
            line: 142,
            column: 21
          },
          end: {
            line: 142,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 46
          },
          end: {
            line: 142,
            column: 59
          }
        }, {
          start: {
            line: 142,
            column: 62
          },
          end: {
            line: 142,
            column: 90
          }
        }],
        line: 142
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/payment.actions.ts"],
      sourcesContent: ["import { loadStripe } from '@stripe/stripe-js'\nimport paypal from '@paypal/rest-sdk'\nimport { connectToDatabase } from '@/lib/db'\nimport Seller from '@/lib/db/models/seller.model'\nimport User from '@/lib/db/models/user.model'\nimport { sendNotification } from '@/lib/utils/notification'\n\npaypal.configure({\n  mode: process.env.PAYPAL_MODE || 'sandbox',\n  client_id: process.env.PAYPAL_CLIENT_ID || '',\n  client_secret: process.env.PAYPAL_CLIENT_SECRET || '',\n})\n\nconst stripe = await loadStripe(process.env.STRIPE_SECRET_KEY || '')\n\ninterface PaymentOptions {\n  userId: string\n  amount: number\n  currency: string\n  paymentMethod: 'stripe' | 'paypal'\n  description: string\n}\n\nexport async function initiatePayment(options: PaymentOptions) {\n  const { userId, amount, currency, paymentMethod, description } = options\n\n  try {\n    await connectToDatabase()\n    const seller = await Seller.findOne({ userId }).lean()\n    if (!seller) {\n      throw new Error('Seller not found')\n    }\n\n    const user = await User.findById(userId).select('whatsapp').lean()\n    const channels = user?.whatsapp ? ['email', 'in_app', 'whatsapp'] : ['email', 'in_app']\n\n    let redirectUrl: string\n\n    if (paymentMethod === 'stripe') {\n      if (!stripe) {\n        throw new Error('Stripe not initialized')\n      }\n      const session = await stripe.checkout.sessions.create({\n        payment_method_types: ['card'],\n        line_items: [\n          {\n            price_data: {\n              currency,\n              product_data: { name: description },\n              unit_amount: Math.round(amount * 100),\n            },\n            quantity: 1,\n          },\n        ],\n        mode: 'payment',\n        success_url: `${process.env.NEXT_PUBLIC_BASE_URL}/account/subscriptions?success=true`,\n        cancel_url: `${process.env.NEXT_PUBLIC_BASE_URL}/account/subscriptions?cancelled=true`,\n        metadata: { userId, description },\n      })\n      redirectUrl = session.url || ''\n\n      await sendNotification({\n        userId,\n        type: 'payment_success',\n        title: 'Payment Initiated',\n        message: `Your payment of $${amount} for ${description} has been initiated.`,\n        channels,\n        data: { amount, description },\n      })\n    } else if (paymentMethod === 'paypal') {\n      const createPaymentJson = {\n        intent: 'sale',\n        payer: { payment_method: 'paypal' },\n        redirect_urls: {\n          return_url: `${process.env.NEXT_PUBLIC_BASE_URL}/account/subscriptions?success=true`,\n          cancel_url: `${process.env.NEXT_PUBLIC_BASE_URL}/account/subscriptions?cancelled=true`,\n        },\n        transactions: [\n          {\n            amount: { total: amount.toFixed(2), currency },\n            description,\n          },\n        ],\n      }\n\n      redirectUrl = await new Promise((resolve, reject) => {\n        paypal.payment.create(createPaymentJson, (error, payment) => {\n          if (error) {\n            reject(error)\n          } else {\n            const approvalUrl = payment.links?.find(link => link.rel === 'approval_url')?.href\n            resolve(approvalUrl || '')\n          }\n        })\n      })\n\n      await sendNotification({\n        userId,\n        type: 'payment_success',\n        title: 'Payment Initiated',\n        message: `Your payment of $${amount} for ${description} has been initiated.`,\n        channels,\n        data: { amount, description },\n      })\n    } else {\n      throw new Error('Unsupported payment method')\n    }\n\n    return { success: true, data: { redirectUrl } }\n  } catch (error) {\n    console.error('Payment initiation error:', error)\n    return {\n      success: false,\n      message: error instanceof Error ? error.message : 'Failed to initiate payment',\n    }\n  }\n}"],
      names: ["initiatePayment", "paypal", "configure", "mode", "process", "env", "PAYPAL_MODE", "client_id", "PAYPAL_CLIENT_ID", "client_secret", "PAYPAL_CLIENT_SECRET", "stripe", "loadStripe", "STRIPE_SECRET_KEY", "options", "userId", "amount", "currency", "paymentMethod", "description", "connectToDatabase", "seller", "Seller", "findOne", "lean", "Error", "user", "User", "findById", "select", "channels", "whatsapp", "redirectUrl", "session", "checkout", "sessions", "create", "payment_method_types", "line_items", "price_data", "product_data", "name", "unit_amount", "Math", "round", "quantity", "success_url", "NEXT_PUBLIC_BASE_URL", "cancel_url", "metadata", "url", "sendNotification", "type", "title", "message", "data", "createPaymentJson", "intent", "payer", "payment_method", "redirect_urls", "return_url", "transactions", "total", "toFixed", "Promise", "resolve", "reject", "payment", "error", "approvalUrl", "links", "find", "link", "rel", "href", "success", "console"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a45189976edce5ac9e8e55b2f55ede75e1b7b531"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_oeny05toy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_oeny05toy();
cov_oeny05toy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_oeny05toy().s[1]++;
Object.defineProperty(exports, "initiatePayment", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_oeny05toy().f[0]++;
    cov_oeny05toy().s[2]++;
    return initiatePayment;
  }
});
const _stripejs =
/* istanbul ignore next */
(cov_oeny05toy().s[3]++, require("@stripe/stripe-js"));
const _restsdk =
/* istanbul ignore next */
(/*#__PURE__*/cov_oeny05toy().s[4]++, _interop_require_default(require("@paypal/rest-sdk")));
const _db =
/* istanbul ignore next */
(cov_oeny05toy().s[5]++, require("../db"));
const _sellermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_oeny05toy().s[6]++, _interop_require_default(require("../db/models/seller.model")));
const _usermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_oeny05toy().s[7]++, _interop_require_default(require("../db/models/user.model")));
const _notification =
/* istanbul ignore next */
(cov_oeny05toy().s[8]++, require("../utils/notification"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_oeny05toy().f[1]++;
  cov_oeny05toy().s[9]++;
  return /* istanbul ignore next */(cov_oeny05toy().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_oeny05toy().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_oeny05toy().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_oeny05toy().b[0][1]++, {
    default: obj
  });
}
/* istanbul ignore next */
cov_oeny05toy().s[10]++;
_restsdk.default.configure({
  mode:
  /* istanbul ignore next */
  (cov_oeny05toy().b[2][0]++, process.env.PAYPAL_MODE) ||
  /* istanbul ignore next */
  (cov_oeny05toy().b[2][1]++, 'sandbox'),
  client_id:
  /* istanbul ignore next */
  (cov_oeny05toy().b[3][0]++, process.env.PAYPAL_CLIENT_ID) ||
  /* istanbul ignore next */
  (cov_oeny05toy().b[3][1]++, ''),
  client_secret:
  /* istanbul ignore next */
  (cov_oeny05toy().b[4][0]++, process.env.PAYPAL_CLIENT_SECRET) ||
  /* istanbul ignore next */
  (cov_oeny05toy().b[4][1]++, '')
});
const stripe =
/* istanbul ignore next */
(cov_oeny05toy().s[11]++, await (0, _stripejs.loadStripe)(
/* istanbul ignore next */
(cov_oeny05toy().b[5][0]++, process.env.STRIPE_SECRET_KEY) ||
/* istanbul ignore next */
(cov_oeny05toy().b[5][1]++, '')));
async function initiatePayment(options) {
  /* istanbul ignore next */
  cov_oeny05toy().f[2]++;
  const {
    userId,
    amount,
    currency,
    paymentMethod,
    description
  } =
  /* istanbul ignore next */
  (cov_oeny05toy().s[12]++, options);
  /* istanbul ignore next */
  cov_oeny05toy().s[13]++;
  try {
    /* istanbul ignore next */
    cov_oeny05toy().s[14]++;
    await (0, _db.connectToDatabase)();
    const seller =
    /* istanbul ignore next */
    (cov_oeny05toy().s[15]++, await _sellermodel.default.findOne({
      userId
    }).lean());
    /* istanbul ignore next */
    cov_oeny05toy().s[16]++;
    if (!seller) {
      /* istanbul ignore next */
      cov_oeny05toy().b[6][0]++;
      cov_oeny05toy().s[17]++;
      throw new Error('Seller not found');
    } else
    /* istanbul ignore next */
    {
      cov_oeny05toy().b[6][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_oeny05toy().s[18]++, await _usermodel.default.findById(userId).select('whatsapp').lean());
    const channels =
    /* istanbul ignore next */
    (cov_oeny05toy().s[19]++, user?.whatsapp ?
    /* istanbul ignore next */
    (cov_oeny05toy().b[7][0]++, ['email', 'in_app', 'whatsapp']) :
    /* istanbul ignore next */
    (cov_oeny05toy().b[7][1]++, ['email', 'in_app']));
    let redirectUrl;
    /* istanbul ignore next */
    cov_oeny05toy().s[20]++;
    if (paymentMethod === 'stripe') {
      /* istanbul ignore next */
      cov_oeny05toy().b[8][0]++;
      cov_oeny05toy().s[21]++;
      if (!stripe) {
        /* istanbul ignore next */
        cov_oeny05toy().b[9][0]++;
        cov_oeny05toy().s[22]++;
        throw new Error('Stripe not initialized');
      } else
      /* istanbul ignore next */
      {
        cov_oeny05toy().b[9][1]++;
      }
      const session =
      /* istanbul ignore next */
      (cov_oeny05toy().s[23]++, await stripe.checkout.sessions.create({
        payment_method_types: ['card'],
        line_items: [{
          price_data: {
            currency,
            product_data: {
              name: description
            },
            unit_amount: Math.round(amount * 100)
          },
          quantity: 1
        }],
        mode: 'payment',
        success_url: `${process.env.NEXT_PUBLIC_BASE_URL}/account/subscriptions?success=true`,
        cancel_url: `${process.env.NEXT_PUBLIC_BASE_URL}/account/subscriptions?cancelled=true`,
        metadata: {
          userId,
          description
        }
      }));
      /* istanbul ignore next */
      cov_oeny05toy().s[24]++;
      redirectUrl =
      /* istanbul ignore next */
      (cov_oeny05toy().b[10][0]++, session.url) ||
      /* istanbul ignore next */
      (cov_oeny05toy().b[10][1]++, '');
      /* istanbul ignore next */
      cov_oeny05toy().s[25]++;
      await (0, _notification.sendNotification)({
        userId,
        type: 'payment_success',
        title: 'Payment Initiated',
        message: `Your payment of $${amount} for ${description} has been initiated.`,
        channels,
        data: {
          amount,
          description
        }
      });
    } else {
      /* istanbul ignore next */
      cov_oeny05toy().b[8][1]++;
      cov_oeny05toy().s[26]++;
      if (paymentMethod === 'paypal') {
        /* istanbul ignore next */
        cov_oeny05toy().b[11][0]++;
        const createPaymentJson =
        /* istanbul ignore next */
        (cov_oeny05toy().s[27]++, {
          intent: 'sale',
          payer: {
            payment_method: 'paypal'
          },
          redirect_urls: {
            return_url: `${process.env.NEXT_PUBLIC_BASE_URL}/account/subscriptions?success=true`,
            cancel_url: `${process.env.NEXT_PUBLIC_BASE_URL}/account/subscriptions?cancelled=true`
          },
          transactions: [{
            amount: {
              total: amount.toFixed(2),
              currency
            },
            description
          }]
        });
        /* istanbul ignore next */
        cov_oeny05toy().s[28]++;
        redirectUrl = await new Promise((resolve, reject) => {
          /* istanbul ignore next */
          cov_oeny05toy().f[3]++;
          cov_oeny05toy().s[29]++;
          _restsdk.default.payment.create(createPaymentJson, (error, payment) => {
            /* istanbul ignore next */
            cov_oeny05toy().f[4]++;
            cov_oeny05toy().s[30]++;
            if (error) {
              /* istanbul ignore next */
              cov_oeny05toy().b[12][0]++;
              cov_oeny05toy().s[31]++;
              reject(error);
            } else {
              /* istanbul ignore next */
              cov_oeny05toy().b[12][1]++;
              const approvalUrl =
              /* istanbul ignore next */
              (cov_oeny05toy().s[32]++, payment.links?.find(link => {
                /* istanbul ignore next */
                cov_oeny05toy().f[5]++;
                cov_oeny05toy().s[33]++;
                return link.rel === 'approval_url';
              })?.href);
              /* istanbul ignore next */
              cov_oeny05toy().s[34]++;
              resolve(
              /* istanbul ignore next */
              (cov_oeny05toy().b[13][0]++, approvalUrl) ||
              /* istanbul ignore next */
              (cov_oeny05toy().b[13][1]++, ''));
            }
          });
        });
        /* istanbul ignore next */
        cov_oeny05toy().s[35]++;
        await (0, _notification.sendNotification)({
          userId,
          type: 'payment_success',
          title: 'Payment Initiated',
          message: `Your payment of $${amount} for ${description} has been initiated.`,
          channels,
          data: {
            amount,
            description
          }
        });
      } else {
        /* istanbul ignore next */
        cov_oeny05toy().b[11][1]++;
        cov_oeny05toy().s[36]++;
        throw new Error('Unsupported payment method');
      }
    }
    /* istanbul ignore next */
    cov_oeny05toy().s[37]++;
    return {
      success: true,
      data: {
        redirectUrl
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_oeny05toy().s[38]++;
    console.error('Payment initiation error:', error);
    /* istanbul ignore next */
    cov_oeny05toy().s[39]++;
    return {
      success: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_oeny05toy().b[14][0]++, error.message) :
      /* istanbul ignore next */
      (cov_oeny05toy().b[14][1]++, 'Failed to initiate payment')
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,