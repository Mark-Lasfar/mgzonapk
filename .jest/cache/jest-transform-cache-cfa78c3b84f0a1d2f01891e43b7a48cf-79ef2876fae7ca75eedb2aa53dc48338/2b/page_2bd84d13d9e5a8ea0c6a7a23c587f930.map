{"version":3,"names":["default","cov_1exv5c8z3o","f","s","_default","metadata","title","UpdateProduct","props","params","id","product","_productactions","getProductById","b","_navigation","notFound","_jsxruntime","jsxs","className","jsx","_link","href","_id","_productform","type","productId"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/products/[id]/page.tsx"],"sourcesContent":["import { notFound } from 'next/navigation'\nimport { getProductById } from '@/lib/actions/product.actions'\nimport Link from 'next/link'\n// import ProductForm from '../product-form'\nimport { Metadata } from 'next'\nimport ProductForm from '../create/product-form'\n\nexport const metadata: Metadata = {\n  title: 'Edit Product - Seller Dashboard',\n}\n\ntype UpdateProductProps = {\n  params: Promise<{\n    id: string\n  }>\n}\n\nconst UpdateProduct = async (props: UpdateProductProps) => {\n  const params = await props.params\n  const { id } = params\n\n  const product = await getProductById(id)\n  if (!product) notFound()\n\n  return (\n    <main className=\"max-w-6xl mx-auto p-4\">\n      <div className=\"flex mb-4\">\n        <Link href=\"/seller/dashboard/products\">Products</Link>\n        <span className=\"mx-1\">â€º</span>\n        <Link href={`/seller/dashboard/products/${product._id}`}>\n          {product._id}\n        </Link>\n      </div>\n\n      <div className=\"my-8\">\n        <ProductForm\n          type=\"Update\"\n          product={product}\n          productId={product._id}\n        />\n      </div>\n    </main>\n  )\n}\n\nexport default UpdateProduct"],"mappingscAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAA5BC,QAAA;;EAtCaC,QAAQ,WAAAA,CAAA;IAAA;IAAAJ,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAARE,QAAA;;;;;;;;kCAPY;;;kCACM;;;wEACd;;;yEAGO;;;;;;;;;;;;;;;AAEjB,MAAMA,QAAA;AAAA;AAAA,CAAAJ,cAAA,GAAAE,CAAA,QAAqB;EAChCG,KAAA,EAAO;AACT;AAAA;AAAAL,cAAA,GAAAE,CAAA;AAQA,MAAMI,aAAA,GAAgB,MAAOC,KAAA;EAAA;EAAAP,cAAA,GAAAC,CAAA;EAC3B,MAAMO,MAAA;EAAA;EAAA,CAAAR,cAAA,GAAAE,CAAA,QAAS,MAAMK,KAAA,CAAMC,MAAM;EACjC,MAAM;IAAEC;EAAE,CAAE;EAAA;EAAA,CAAAT,cAAA,GAAAE,CAAA,QAAGM,MAAA;EAEf,MAAME,OAAA;EAAA;EAAA,CAAAV,cAAA,GAAAE,CAAA,QAAU,MAAM,IAAAS,eAAA,CAAAC,cAAc,EAACH,EAAA;EAAA;EAAAT,cAAA,GAAAE,CAAA;EACrC,IAAI,CAACQ,OAAA,EAAS;IAAA;IAAAV,cAAA,GAAAa,CAAA;IAAAb,cAAA,GAAAE,CAAA;IAAA,IAAAY,WAAA,CAAAC,QAAQ;EAAA;EAAA;EAAA;IAAAf,cAAA,GAAAa,CAAA;EAAA;EAAAb,cAAA,GAAAE,CAAA;EAEtB,oBACE,IAAAc,WAAA,CAAAC,IAAA,EAAC;IAAKC,SAAA,EAAU;4BACd,IAAAF,WAAA,CAAAC,IAAA,EAAC;MAAIC,SAAA,EAAU;8BACb,IAAAF,WAAA,CAAAG,GAAA,EAACC,KAAA,CAAArB,OAAI;QAACsB,IAAA,EAAK;kBAA6B;uBACxC,IAAAL,WAAA,CAAAG,GAAA,EAAC;QAAKD,SAAA,EAAU;kBAAO;uBACvB,IAAAF,WAAA,CAAAG,GAAA,EAACC,KAAA,CAAArB,OAAI;QAACsB,IAAA,EAAM,8BAA8BX,OAAA,CAAQY,GAAG,EAAE;kBACpDZ,OAAA,CAAQY;;qBAIb,IAAAN,WAAA,CAAAG,GAAA,EAAC;MAAID,SAAA,EAAU;gBACb,iBAAAF,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAxB,OAAW;QACVyB,IAAA,EAAK;QACLd,OAAA,EAASA,OAAA;QACTe,SAAA,EAAWf,OAAA,CAAQY;;;;AAK7B;MAEAnB,QAAA;AAAA;AAAA,CAAAH,cAAA,GAAAE,CAAA,QAAeI,aAAA","ignoreList":[]}