{"version":3,"names":["cov_6ugyiqopd","actualCoverage","s","FourPXService","constructor","config","f","name","apiKey","apiUrl","fetchApi","endpoint","options","b","response","fetch","headers","ok","Error","statusText","json","createShipment","request","method","body","JSON","stringify","order_number","orderId","consignee","shippingAddress","address","street","city","state","country","postcode","postalCode","phone","items","map","item","sku","quantity","trackingId","tracking_number","getShipmentStatus","status","mapShipmentStatus","estimatedDeliveryDate","estimated_delivery_date","Date","undefined","location","current_location","events","tracking_details","event","date","datetime","getInventory","productId","id","product_name","available_quantity","warehouse_location","updateInventory","toLowerCase"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/warehouse/fourpx.ts"],"sourcesContent":["import { WarehouseProvider, CreateShipmentRequest, ShipmentResponse, ShipmentStatus, WarehouseProduct } from './types';\n\nexport class FourPXService implements WarehouseProvider {\n  private apiKey: string;\n  private apiUrl: string;\n\n  constructor(config: { apiKey: string; apiUrl: string }) {\n    this.apiKey = config.apiKey;\n    this.apiUrl = config.apiUrl;\n  }\n\n  name = '4PX';\n\n  private async fetchApi(endpoint: string, options: RequestInit = {}) {\n    const response = await fetch(`${this.apiUrl}${endpoint}`, {\n      ...options,\n      headers: {\n        'Authorization': `Bearer ${this.apiKey}`,\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`4PX API error: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  async createShipment(request: CreateShipmentRequest): Promise<ShipmentResponse> {\n    const response = await this.fetchApi('/api/fulfillment/create', {\n      method: 'POST',\n      body: JSON.stringify({\n        order_number: request.orderId,\n        consignee: {\n          name: request.shippingAddress.name,\n          address: request.shippingAddress.street,\n          city: request.shippingAddress.city,\n          state: request.shippingAddress.state,\n          country: request.shippingAddress.country,\n          postcode: request.shippingAddress.postalCode,\n          phone: request.shippingAddress.phone,\n        },\n        items: request.items.map(item => ({\n          sku: item.sku,\n          quantity: item.quantity,\n        })),\n      }),\n    });\n\n    return { \n      trackingId: response.tracking_number,\n    };\n  }\n\n  async getShipmentStatus(trackingId: string): Promise<ShipmentStatus> {\n    const response = await this.fetchApi(`/api/tracking/${trackingId}`);\n\n    return {\n      trackingId,\n      status: this.mapShipmentStatus(response.status),\n      estimatedDeliveryDate: response.estimated_delivery_date ? new Date(response.estimated_delivery_date) : undefined,\n      location: response.current_location,\n      events: response.tracking_details.map((event: any) => ({\n        date: new Date(event.datetime),\n        status: event.status,\n        location: event.location,\n      })),\n    };\n  }\n\n  async getInventory(productId: string): Promise<WarehouseProduct> {\n    const response = await this.fetchApi(`/api/inventory/${productId}`);\n\n    return {\n      id: productId,\n      sku: response.sku,\n      name: response.product_name,\n      quantity: response.available_quantity,\n      location: response.warehouse_location,\n    };\n  }\n\n  async updateInventory(productId: string, quantity: number): Promise<void> {\n    await this.fetchApi(`/api/inventory/update`, {\n      method: 'POST',\n      body: JSON.stringify({\n        sku: productId,\n        quantity: quantity,\n      }),\n    });\n  }\n\n  private mapShipmentStatus(status: string): ShipmentStatus['status'] {\n    switch (status.toLowerCase()) {\n      case 'in_transit':\n      case 'shipping':\n        return 'shipped';\n      case 'delivered':\n        return 'delivered';\n      case 'processing':\n        return 'processing';\n      default:\n        return 'pending';\n    }\n  }\n}"],"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","ignoreList":[]}