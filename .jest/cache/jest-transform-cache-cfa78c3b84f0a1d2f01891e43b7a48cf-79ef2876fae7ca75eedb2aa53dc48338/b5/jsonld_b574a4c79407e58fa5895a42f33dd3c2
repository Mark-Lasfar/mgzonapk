b96e3cc9c0a7dfacc6ad126c3fad0ad6
"use strict";

/* istanbul ignore next */
function cov_o2xhuy6nx() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/json-ld.tsx";
  var hash = "18df9da385727e274b711493dd774a2352f4dce4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/json-ld.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 22
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 18,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "JsonLd",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 15
          }
        },
        loc: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/json-ld.tsx"],
      sourcesContent: ["interface JsonLdProps {\n  data: {\n    '@context': string\n    '@type': string\n    [key: string]: unknown\n  }\n}\n\nexport default function JsonLd({ data }: JsonLdProps) {\n  return (\n    <script\n      type=\"application/ld+json\"\n      dangerouslySetInnerHTML={{ __html: JSON.stringify(data) }}\n    />\n  )\n}\n"],
      names: ["JsonLd", "data", "script", "type", "dangerouslySetInnerHTML", "__html", "JSON", "stringify"],
      mappings: ";;;;+BAQA;;;eAAwBA;;;;AAAT,SAASA,OAAO,EAAEC,IAAI,EAAe;IAClD,qBACE,qBAACC;QACCC,MAAK;QACLC,yBAAyB;YAAEC,QAAQC,KAAKC,SAAS,CAACN;QAAM;;AAG9D"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "18df9da385727e274b711493dd774a2352f4dce4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_o2xhuy6nx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_o2xhuy6nx();
cov_o2xhuy6nx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_o2xhuy6nx().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_o2xhuy6nx().f[0]++;
    cov_o2xhuy6nx().s[2]++;
    return JsonLd;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_o2xhuy6nx().s[3]++, require("react/jsx-runtime"));
function JsonLd({
  data
}) {
  /* istanbul ignore next */
  cov_o2xhuy6nx().f[1]++;
  cov_o2xhuy6nx().s[4]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("script", {
    type: "application/ld+json",
    dangerouslySetInnerHTML: {
      __html: JSON.stringify(data)
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfbzJ4aHV5Nm54IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiSnNvbkxkIiwiZGF0YSIsImYiLCJfanN4cnVudGltZSIsImpzeCIsInR5cGUiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsIkpTT04iLCJzdHJpbmdpZnkiXSwic291cmNlcyI6WyIvaG9tZS9oYWdlci9uZXcvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyICgzKS9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIvY29tcG9uZW50cy9qc29uLWxkLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgSnNvbkxkUHJvcHMge1xuICBkYXRhOiB7XG4gICAgJ0Bjb250ZXh0Jzogc3RyaW5nXG4gICAgJ0B0eXBlJzogc3RyaW5nXG4gICAgW2tleTogc3RyaW5nXTogdW5rbm93blxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEpzb25MZCh7IGRhdGEgfTogSnNvbkxkUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8c2NyaXB0XG4gICAgICB0eXBlPVwiYXBwbGljYXRpb24vbGQranNvblwiXG4gICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IEpTT04uc3RyaW5naWZ5KGRhdGEpIH19XG4gICAgLz5cbiAgKVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFZaUM7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQUFBQSxhQUFBLEdBQUFFLENBQUE7Ozs7OzsrQkFKakM7Ozs7OztXQUF3QkMsTUFBQTs7Ozs7O0FBQVQsU0FBU0EsT0FBTztFQUFFQztBQUFJLENBQWU7RUFBQTtFQUFBSixhQUFBLEdBQUFLLENBQUE7RUFBQUwsYUFBQSxHQUFBRSxDQUFBO0VBQ2xELG9CQUNFLElBQUFJLFdBQUEsQ0FBQUMsR0FBQSxFQUFDO0lBQ0NDLElBQUEsRUFBSztJQUNMQyx1QkFBQSxFQUF5QjtNQUFFQyxNQUFBLEVBQVFDLElBQUEsQ0FBS0MsU0FBUyxDQUFDUixJQUFBO0lBQU07O0FBRzlEIiwiaWdub3JlTGlzdCI6W119