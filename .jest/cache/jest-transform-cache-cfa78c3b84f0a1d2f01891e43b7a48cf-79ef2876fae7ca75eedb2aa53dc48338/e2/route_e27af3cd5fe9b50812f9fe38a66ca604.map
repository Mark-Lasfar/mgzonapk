{"version":3,"names":["cov_2nhyc4yiq7","actualCoverage","s","POST","req","f","session","_auth","auth","user","id","b","_server","NextResponse","json","success","message","status","orderId","paymentMethod","paymentId","order","Order","findById","result","_selleractions","updateSellerSubscription","subscriptionPlanId","stripeSessionId","paypalOrderId","error","isPaid","paidAt","Date","save","data","console"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/subscription/confirm/route.ts"],"sourcesContent":["// app/api/subscription/confirm/route.ts\nimport { NextRequest, NextResponse } from 'next/server';\nimport { updateSellerSubscription } from '@/lib/actions/seller.actions';\nimport { auth } from '@/auth';\n\nexport async function POST(req: NextRequest) {\n  const session = await auth();\n  if (!session?.user?.id) {\n    return NextResponse.json({ success: false, message: 'Unauthorized' }, { status: 401 });\n  }\n\n  const { orderId, paymentMethod, paymentId } = await req.json();\n  try {\n    const order = await Order.findById(orderId);\n    if (!order) {\n      return NextResponse.json({ success: false, message: 'Order not found' }, { status: 404 });\n    }\n\n    const result = await updateSellerSubscription(\n      session.user.id,\n      order.subscriptionPlanId,\n      0, // Points to redeem (handled separately)\n      paymentMethod,\n      paymentMethod === 'stripe' ? { stripeSessionId: paymentId } : { paypalOrderId: paymentId }\n    );\n\n    if (!result.success) {\n      return NextResponse.json({ success: false, message: result.error }, { status: 400 });\n    }\n\n    // Mark order as paid\n    order.isPaid = true;\n    order.paidAt = new Date();\n    await order.save();\n\n    return NextResponse.json({ success: true, data: result.data });\n  } catch (error) {\n    console.error('Confirm subscription error:', error);\n    return NextResponse.json({ success: false, message: 'Server error' }, { status: 500 });\n  }\n}"],"mappings":"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","ignoreList":[]}