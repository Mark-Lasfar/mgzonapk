{"version":3,"names":["default","cov_1yw8vf0z2w","f","s","SellerPointsDashboard","metadata","title","session","_auth","auth","user","id","b","_jsxruntime","jsx","metrics","_selleractions","getSellerMetrics","points","jsxs","className","_card","Card","CardHeader","CardTitle","CardContent","balance","totalEarned","totalRedeemed","recentTransactions","length","_table","Table","TableHeader","TableRow","TableHead","TableBody","map","tx","index","TableCell","_utils","formatDateTime","createdAt","dateTime","type","amount","description"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/points/page.tsx"],"sourcesContent":["import { auth } from '@/auth'\nimport { getSellerMetrics } from '@/lib/actions/seller.actions'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'\nimport { formatDateTime } from '@/lib/utils'\nimport { Metadata } from 'next'\n\nexport const metadata: Metadata = {\n  title: 'Seller Points Dashboard',\n}\n\nexport default async function SellerPointsDashboard() {\n  const session = await auth()\n  if (!session?.user?.id) {\n    return <div>Unauthorized</div>\n  }\n\n  const metrics = await getSellerMetrics(session.user.id)\n  const points = metrics.points\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-4\">\n      <h1 className=\"h1-bold py-4\">Points Dashboard</h1>\n      <div className=\"grid md:grid-cols-3 gap-4\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Points Balance</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-2xl font-bold\">{points.balance} points</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader>\n            <CardTitle>Total Earned</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-2xl font-bold\">{points.totalEarned} points</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader>\n            <CardTitle>Total Redeemed</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-2xl font-bold\">{points.totalRedeemed} points</p>\n          </CardContent>\n        </Card>\n      </div>\n      <Card className=\"mt-8\">\n        <CardHeader>\n          <CardTitle>Recent Transactions</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {points.recentTransactions.length > 0 ? (\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Date</TableHead>\n                  <TableHead>Type</TableHead>\n                  <TableHead>Amount</TableHead>\n                  <TableHead>Description</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {points.recentTransactions.map((tx, index) => (\n                  <TableRow key={index}>\n                    <TableCell>{formatDateTime(tx.createdAt).dateTime}</TableCell>\n                    <TableCell>{tx.type === 'earn' ? 'Earned' : 'Redeemed'}</TableCell>\n                    <TableCell>{tx.type === 'earn' ? '+' : '-'}{tx.amount}</TableCell>\n                    <TableCell>{tx.description}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          ) : (\n            <p>No recent transactions.</p>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  )\n}"],"mappingsuEC,WAAAA,CAAA;IAAA;IAAAC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAvE6BC,qBAAA;;EAJjBC,QAAQ,WAAAA,CAAA;IAAA;IAAAJ,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAARE,QAAA;;;;;;;;kCAPQ;;;kCACY;;;kCACwB;;;mCACqB;;;mCAC/C;AAGxB,MAAMA,QAAA;AAAA;AAAA,CAAAJ,cAAA,GAAAE,CAAA,QAAqB;EAChCG,KAAA,EAAO;AACT;AAEe,eAAeF,sBAAA;EAAA;EAAAH,cAAA,GAAAC,CAAA;EAC5B,MAAMK,OAAA;EAAA;EAAA,CAAAN,cAAA,GAAAE,CAAA,QAAU,MAAM,IAAAK,KAAA,CAAAC,IAAI;EAAA;EAAAR,cAAA,GAAAE,CAAA;EAC1B,IAAI,CAACI,OAAA,EAASG,IAAA,EAAMC,EAAA,EAAI;IAAA;IAAAV,cAAA,GAAAW,CAAA;IAAAX,cAAA,GAAAE,CAAA;IACtB,oBAAO,IAAAU,WAAA,CAAAC,GAAA,EAAC;gBAAI;;EACd;EAAA;EAAA;IAAAb,cAAA,GAAAW,CAAA;EAAA;EAEA,MAAMG,OAAA;EAAA;EAAA,CAAAd,cAAA,GAAAE,CAAA,QAAU,MAAM,IAAAa,cAAA,CAAAC,gBAAgB,EAACV,OAAA,CAAQG,IAAI,CAACC,EAAE;EACtD,MAAMO,MAAA;EAAA;EAAA,CAAAjB,cAAA,GAAAE,CAAA,QAASY,OAAA,CAAQG,MAAM;EAAA;EAAAjB,cAAA,GAAAE,CAAA;EAE7B,oBACE,IAAAU,WAAA,CAAAM,IAAA,EAAC;IAAIC,SAAA,EAAU;4BACb,IAAAP,WAAA,CAAAC,GAAA,EAAC;MAAGM,SAAA,EAAU;gBAAe;qBAC7B,IAAAP,WAAA,CAAAM,IAAA,EAAC;MAAIC,SAAA,EAAU;8BACb,IAAAP,WAAA,CAAAM,IAAA,EAACE,KAAA,CAAAC,IAAI;gCACH,IAAAT,WAAA,CAAAC,GAAA,EAACO,KAAA,CAAAE,UAAU;oBACT,iBAAAV,WAAA,CAAAC,GAAA,EAACO,KAAA,CAAAG,SAAS;sBAAC;;yBAEb,IAAAX,WAAA,CAAAC,GAAA,EAACO,KAAA,CAAAI,WAAW;oBACV,iBAAAZ,WAAA,CAAAM,IAAA,EAAC;YAAEC,SAAA,EAAU;uBAAsBF,MAAA,CAAOQ,OAAO,EAAC;;;uBAGtD,IAAAb,WAAA,CAAAM,IAAA,EAACE,KAAA,CAAAC,IAAI;gCACH,IAAAT,WAAA,CAAAC,GAAA,EAACO,KAAA,CAAAE,UAAU;oBACT,iBAAAV,WAAA,CAAAC,GAAA,EAACO,KAAA,CAAAG,SAAS;sBAAC;;yBAEb,IAAAX,WAAA,CAAAC,GAAA,EAACO,KAAA,CAAAI,WAAW;oBACV,iBAAAZ,WAAA,CAAAM,IAAA,EAAC;YAAEC,SAAA,EAAU;uBAAsBF,MAAA,CAAOS,WAAW,EAAC;;;uBAG1D,IAAAd,WAAA,CAAAM,IAAA,EAACE,KAAA,CAAAC,IAAI;gCACH,IAAAT,WAAA,CAAAC,GAAA,EAACO,KAAA,CAAAE,UAAU;oBACT,iBAAAV,WAAA,CAAAC,GAAA,EAACO,KAAA,CAAAG,SAAS;sBAAC;;yBAEb,IAAAX,WAAA,CAAAC,GAAA,EAACO,KAAA,CAAAI,WAAW;oBACV,iBAAAZ,WAAA,CAAAM,IAAA,EAAC;YAAEC,SAAA,EAAU;uBAAsBF,MAAA,CAAOU,aAAa,EAAC;;;;qBAI9D,IAAAf,WAAA,CAAAM,IAAA,EAACE,KAAA,CAAAC,IAAI;MAACF,SAAA,EAAU;8BACd,IAAAP,WAAA,CAAAC,GAAA,EAACO,KAAA,CAAAE,UAAU;kBACT,iBAAAV,WAAA,CAAAC,GAAA,EAACO,KAAA,CAAAG,SAAS;oBAAC;;uBAEb,IAAAX,WAAA,CAAAC,GAAA,EAACO,KAAA,CAAAI,WAAW;kBACTP,MAAA,CAAOW,kBAAkB,CAACC,MAAM,GAAG;QAAA;QAAA,cAAA7B,cAAA,GAAAW,CAAA,UAClC,IAAAC,WAAA,CAAAM,IAAA,EAACY,MAAA,CAAAC,KAAK;kCACJ,IAAAnB,WAAA,CAAAC,GAAA,EAACiB,MAAA,CAAAE,WAAW;sBACV,iBAAApB,WAAA,CAAAM,IAAA,EAACY,MAAA,CAAAG,QAAQ;sCACP,IAAArB,WAAA,CAAAC,GAAA,EAACiB,MAAA,CAAAI,SAAS;0BAAC;+BACX,IAAAtB,WAAA,CAAAC,GAAA,EAACiB,MAAA,CAAAI,SAAS;0BAAC;+BACX,IAAAtB,WAAA,CAAAC,GAAA,EAACiB,MAAA,CAAAI,SAAS;0BAAC;+BACX,IAAAtB,WAAA,CAAAC,GAAA,EAACiB,MAAA,CAAAI,SAAS;0BAAC;;;2BAGf,IAAAtB,WAAA,CAAAC,GAAA,EAACiB,MAAA,CAAAK,SAAS;sBACPlB,MAAA,CAAOW,kBAAkB,CAACQ,GAAG,CAAC,CAACC,EAAA,EAAIC,KAAA,KAClC;cAAA;cAAAtC,cAAA,GAAAC,CAAA;cAAAD,cAAA,GAAAE,CAAA;cAAA,OADkC,aAClC,IAAAU,WAAA,CAAAM,IAAA,EAACY,MAAA,CAAAG,QAAQ;wCACP,IAAArB,WAAA,CAAAC,GAAA,EAACiB,MAAA,CAAAS,SAAS;4BAAE,IAAAC,MAAA,CAAAC,cAAc,EAACJ,EAAA,CAAGK,SAAS,EAAEC;iCACzC,IAAA/B,WAAA,CAAAC,GAAA,EAACiB,MAAA,CAAAS,SAAS;4BAAEF,EAAA,CAAGO,IAAI,KAAK;kBAAA;kBAAA,CAAA5C,cAAA,GAAAW,CAAA,UAAS;kBAAA;kBAAA,CAAAX,cAAA,GAAAW,CAAA,UAAW;iCAC5C,IAAAC,WAAA,CAAAM,IAAA,EAACY,MAAA,CAAAS,SAAS;6BAAEF,EAAA,CAAGO,IAAI,KAAK;kBAAA;kBAAA,CAAA5C,cAAA,GAAAW,CAAA,UAAS;kBAAA;kBAAA,CAAAX,cAAA,GAAAW,CAAA,UAAM,MAAK0B,EAAA,CAAGQ,MAAM;iCACrD,IAAAjC,WAAA,CAAAC,GAAA,EAACiB,MAAA,CAAAS,SAAS;4BAAEF,EAAA,CAAGS;;iBAJFR,KAAA;YAAA;;;;kDAUrB,IAAA1B,WAAA,CAAAC,GAAA,EAAC;oBAAE;;;;;AAMf","ignoreList":[]}