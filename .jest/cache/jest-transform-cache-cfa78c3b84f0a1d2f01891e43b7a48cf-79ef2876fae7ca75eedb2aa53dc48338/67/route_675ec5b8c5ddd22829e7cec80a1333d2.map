{"version":3,"names":["GET","cov_1nsruwy1kx","f","s","POST","request","session","_auth","auth","b","_server","NextResponse","json","success","error","status","body","_db","connectToDatabase","apiKey","_apikeymodel","default","create","userId","user","id","name","permissions","expiresAt","key","secret","data","message","apiKeys","find","select"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/v1/keys/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { connectToDatabase } from '@/lib/db';\nimport ApiKeyModel from '@/lib/db/models/api-key.model';\nimport { auth } from '@/auth';\nimport { ApiKeyRequest } from '@/lib/api/types';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const session = await auth();\n    if (!session) {\n      return NextResponse.json(\n        { success: false, error: 'Unauthorized' },\n        { status: 401 }\n      );\n    }\n\n    const body: ApiKeyRequest = await request.json();\n\n    await connectToDatabase();\n\n    const apiKey = await ApiKeyModel.create({\n      userId: session.user.id,\n      name: body.name,\n      permissions: body.permissions || ['products:read', 'orders:read'],\n      expiresAt: body.expiresAt,\n    });\n\n    // Only return the key and secret once\n    const { key, secret } = apiKey;\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        key,\n        secret,\n        name: apiKey.name,\n        permissions: apiKey.permissions,\n        expiresAt: apiKey.expiresAt,\n      },\n    });\n  } catch (error) {\n    return NextResponse.json(\n      { success: false, error: error.message },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const session = await auth();\n    if (!session) {\n      return NextResponse.json(\n        { success: false, error: 'Unauthorized' },\n        { status: 401 }\n      );\n    }\n\n    await connectToDatabase();\n\n    const apiKeys = await ApiKeyModel.find({\n      userId: session.user.id,\n    }).select('-secret');\n\n    return NextResponse.json({\n      success: true,\n      data: apiKeys,\n    });\n  } catch (error) {\n    return NextResponse.json(\n      { success: false, error: error.message },\n      { status: 500 }\n    );\n  }\n}"],"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","ignoreList":[]}