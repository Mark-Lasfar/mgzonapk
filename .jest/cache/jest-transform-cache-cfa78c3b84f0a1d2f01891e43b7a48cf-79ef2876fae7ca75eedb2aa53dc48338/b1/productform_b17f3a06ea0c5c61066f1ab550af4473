049f0425144fa6b20f03687b9c23fbde
'use client';
"use strict";

/* istanbul ignore next */
function cov_1p3wa9hmek() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/products/create/product-form.tsx";
  var hash = "241fdda5dc587e77709f25264e2cf41006c1c55a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/products/create/product-form.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 27
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 13
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "5": {
        start: {
          line: 14,
          column: 29
        },
        end: {
          line: 14,
          column: 76
        }
      },
      "6": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "7": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 49
        }
      },
      "8": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "9": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 32
        }
      },
      "10": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 68
        }
      },
      "11": {
        start: {
          line: 20,
          column: 14
        },
        end: {
          line: 20,
          column: 64
        }
      },
      "12": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 64
        }
      },
      "13": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 66
        }
      },
      "14": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 72
        }
      },
      "15": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 68
        }
      },
      "16": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 65
        }
      },
      "17": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 26,
          column: 83
        }
      },
      "18": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 68
        }
      },
      "19": {
        start: {
          line: 28,
          column: 18
        },
        end: {
          line: 28,
          column: 72
        }
      },
      "20": {
        start: {
          line: 29,
          column: 15
        },
        end: {
          line: 29,
          column: 56
        }
      },
      "21": {
        start: {
          line: 30,
          column: 14
        },
        end: {
          line: 30,
          column: 28
        }
      },
      "22": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 6
        }
      },
      "23": {
        start: {
          line: 37,
          column: 27
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "24": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 67
        }
      },
      "25": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 45,
          column: 1
        }
      },
      "26": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 44,
          column: 6
        }
      },
      "27": {
        start: {
          line: 46,
          column: 21
        },
        end: {
          line: 53,
          column: 1
        }
      },
      "28": {
        start: {
          line: 47,
          column: 22
        },
        end: {
          line: 47,
          column: 42
        }
      },
      "29": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 52,
          column: 7
        }
      },
      "30": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 57,
          column: 1
        }
      },
      "31": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 55,
          column: 96
        }
      },
      "32": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 82
        }
      },
      "33": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 68,
          column: 2
        }
      },
      "34": {
        start: {
          line: 69,
          column: 22
        },
        end: {
          line: 76,
          column: 2
        }
      },
      "35": {
        start: {
          line: 77,
          column: 24
        },
        end: {
          line: 84,
          column: 2
        }
      },
      "36": {
        start: {
          line: 85,
          column: 22
        },
        end: {
          line: 95,
          column: 2
        }
      },
      "37": {
        start: {
          line: 96,
          column: 27
        },
        end: {
          line: 126,
          column: 2
        }
      },
      "38": {
        start: {
          line: 127,
          column: 28
        },
        end: {
          line: 127,
          column: 56
        }
      },
      "39": {
        start: {
          line: 129,
          column: 27
        },
        end: {
          line: 138,
          column: 1
        }
      },
      "40": {
        start: {
          line: 139,
          column: 25
        },
        end: {
          line: 172,
          column: 1
        }
      },
      "41": {
        start: {
          line: 173,
          column: 22
        },
        end: {
          line: 186,
          column: 1
        }
      },
      "42": {
        start: {
          line: 188,
          column: 22
        },
        end: {
          line: 244,
          column: 1
        }
      },
      "43": {
        start: {
          line: 246,
          column: 19
        },
        end: {
          line: 246,
          column: 47
        }
      },
      "44": {
        start: {
          line: 247,
          column: 22
        },
        end: {
          line: 247,
          column: 47
        }
      },
      "45": {
        start: {
          line: 248,
          column: 30
        },
        end: {
          line: 248,
          column: 54
        }
      },
      "46": {
        start: {
          line: 249,
          column: 34
        },
        end: {
          line: 249,
          column: 62
        }
      },
      "47": {
        start: {
          line: 250,
          column: 17
        },
        end: {
          line: 253,
          column: 6
        }
      },
      "48": {
        start: {
          line: 255,
          column: 29
        },
        end: {
          line: 288,
          column: 5
        }
      },
      "49": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 262,
          column: 11
        }
      },
      "50": {
        start: {
          line: 263,
          column: 23
        },
        end: {
          line: 263,
          column: 41
        }
      },
      "51": {
        start: {
          line: 264,
          column: 27
        },
        end: {
          line: 264,
          column: 28
        }
      },
      "52": {
        start: {
          line: 265,
          column: 29
        },
        end: {
          line: 265,
          column: 55
        }
      },
      "53": {
        start: {
          line: 266,
          column: 33
        },
        end: {
          line: 266,
          column: 63
        }
      },
      "54": {
        start: {
          line: 267,
          column: 25
        },
        end: {
          line: 267,
          column: 49
        }
      },
      "55": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 278,
          column: 9
        }
      },
      "56": {
        start: {
          line: 269,
          column: 24
        },
        end: {
          line: 269,
          column: 34
        }
      },
      "57": {
        start: {
          line: 270,
          column: 32
        },
        end: {
          line: 270,
          column: 152
        }
      },
      "58": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 277,
          column: 13
        }
      },
      "59": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 276,
          column: 17
        }
      },
      "60": {
        start: {
          line: 273,
          column: 20
        },
        end: {
          line: 273,
          column: 73
        }
      },
      "61": {
        start: {
          line: 274,
          column: 23
        },
        end: {
          line: 276,
          column: 17
        }
      },
      "62": {
        start: {
          line: 275,
          column: 20
        },
        end: {
          line: 275,
          column: 74
        }
      },
      "63": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 287,
          column: 10
        }
      },
      "64": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 25
        }
      },
      "65": {
        start: {
          line: 292,
          column: 28
        },
        end: {
          line: 292,
          column: 60
        }
      },
      "66": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 296,
          column: 11
        }
      },
      "67": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 299,
          column: 11
        }
      },
      "68": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 405,
          column: 9
        }
      },
      "69": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 308,
          column: 13
        }
      },
      "70": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 306,
          column: 19
        }
      },
      "71": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 307,
          column: 23
        }
      },
      "72": {
        start: {
          line: 309,
          column: 28
        },
        end: {
          line: 309,
          column: 126
        }
      },
      "73": {
        start: {
          line: 310,
          column: 35
        },
        end: {
          line: 369,
          column: 13
        }
      },
      "74": {
        start: {
          line: 324,
          column: 52
        },
        end: {
          line: 328,
          column: 21
        }
      },
      "75": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 374,
          column: 15
        }
      },
      "76": {
        start: {
          line: 375,
          column: 24
        },
        end: {
          line: 375,
          column: 80
        }
      },
      "77": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 384,
          column: 13
        }
      },
      "78": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 377,
          column: 61
        }
      },
      "79": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 382,
          column: 19
        }
      },
      "80": {
        start: {
          line: 383,
          column: 16
        },
        end: {
          line: 383,
          column: 23
        }
      },
      "81": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 389,
          column: 15
        }
      },
      "82": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 393,
          column: 15
        }
      },
      "83": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 54
        }
      },
      "84": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 395,
          column: 29
        }
      },
      "85": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 397,
          column: 50
        }
      },
      "86": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 402,
          column: 15
        }
      },
      "87": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 404,
          column: 30
        }
      },
      "88": {
        start: {
          line: 408,
          column: 19
        },
        end: {
          line: 408,
          column: 39
        }
      },
      "89": {
        start: {
          line: 409,
          column: 18
        },
        end: {
          line: 409,
          column: 37
        }
      },
      "90": {
        start: {
          line: 410,
          column: 22
        },
        end: {
          line: 410,
          column: 45
        }
      },
      "91": {
        start: {
          line: 411,
          column: 19
        },
        end: {
          line: 411,
          column: 47
        }
      },
      "92": {
        start: {
          line: 412,
          column: 21
        },
        end: {
          line: 412,
          column: 51
        }
      },
      "93": {
        start: {
          line: 413,
          column: 20
        },
        end: {
          line: 413,
          column: 112
        }
      },
      "94": {
        start: {
          line: 414,
          column: 4
        },
        end: {
          line: 1167,
          column: 7
        }
      },
      "95": {
        start: {
          line: 426,
          column: 63
        },
        end: {
          line: 447,
          column: 34
        }
      },
      "96": {
        start: {
          line: 436,
          column: 52
        },
        end: {
          line: 436,
          column: 70
        }
      },
      "97": {
        start: {
          line: 437,
          column: 52
        },
        end: {
          line: 441,
          column: 55
        }
      },
      "98": {
        start: {
          line: 452,
          column: 63
        },
        end: {
          line: 492,
          column: 34
        }
      },
      "99": {
        start: {
          line: 465,
          column: 60
        },
        end: {
          line: 465,
          column: 78
        }
      },
      "100": {
        start: {
          line: 466,
          column: 60
        },
        end: {
          line: 470,
          column: 63
        }
      },
      "101": {
        start: {
          line: 478,
          column: 72
        },
        end: {
          line: 478,
          column: 114
        }
      },
      "102": {
        start: {
          line: 479,
          column: 56
        },
        end: {
          line: 479,
          column: 87
        }
      },
      "103": {
        start: {
          line: 480,
          column: 56
        },
        end: {
          line: 484,
          column: 59
        }
      },
      "104": {
        start: {
          line: 502,
          column: 63
        },
        end: {
          line: 523,
          column: 34
        }
      },
      "105": {
        start: {
          line: 512,
          column: 52
        },
        end: {
          line: 512,
          column: 70
        }
      },
      "106": {
        start: {
          line: 513,
          column: 52
        },
        end: {
          line: 517,
          column: 55
        }
      },
      "107": {
        start: {
          line: 528,
          column: 63
        },
        end: {
          line: 549,
          column: 34
        }
      },
      "108": {
        start: {
          line: 538,
          column: 52
        },
        end: {
          line: 538,
          column: 70
        }
      },
      "109": {
        start: {
          line: 539,
          column: 52
        },
        end: {
          line: 543,
          column: 55
        }
      },
      "110": {
        start: {
          line: 559,
          column: 63
        },
        end: {
          line: 607,
          column: 34
        }
      },
      "111": {
        start: {
          line: 572,
          column: 66
        },
        end: {
          line: 572,
          column: 97
        }
      },
      "112": {
        start: {
          line: 573,
          column: 52
        },
        end: {
          line: 573,
          column: 74
        }
      },
      "113": {
        start: {
          line: 574,
          column: 52
        },
        end: {
          line: 578,
          column: 55
        }
      },
      "114": {
        start: {
          line: 579,
          column: 77
        },
        end: {
          line: 579,
          column: 104
        }
      },
      "115": {
        start: {
          line: 580,
          column: 52
        },
        end: {
          line: 587,
          column: 53
        }
      },
      "116": {
        start: {
          line: 581,
          column: 56
        },
        end: {
          line: 581,
          column: 90
        }
      },
      "117": {
        start: {
          line: 582,
          column: 56
        },
        end: {
          line: 586,
          column: 59
        }
      },
      "118": {
        start: {
          line: 612,
          column: 63
        },
        end: {
          line: 662,
          column: 34
        }
      },
      "119": {
        start: {
          line: 625,
          column: 66
        },
        end: {
          line: 625,
          column: 97
        }
      },
      "120": {
        start: {
          line: 626,
          column: 52
        },
        end: {
          line: 626,
          column: 74
        }
      },
      "121": {
        start: {
          line: 627,
          column: 52
        },
        end: {
          line: 631,
          column: 55
        }
      },
      "122": {
        start: {
          line: 632,
          column: 70
        },
        end: {
          line: 632,
          column: 93
        }
      },
      "123": {
        start: {
          line: 633,
          column: 52
        },
        end: {
          line: 641,
          column: 53
        }
      },
      "124": {
        start: {
          line: 634,
          column: 80
        },
        end: {
          line: 634,
          column: 117
        }
      },
      "125": {
        start: {
          line: 635,
          column: 56
        },
        end: {
          line: 635,
          column: 105
        }
      },
      "126": {
        start: {
          line: 636,
          column: 56
        },
        end: {
          line: 640,
          column: 59
        }
      },
      "127": {
        start: {
          line: 667,
          column: 63
        },
        end: {
          line: 708,
          column: 34
        }
      },
      "128": {
        start: {
          line: 682,
          column: 66
        },
        end: {
          line: 682,
          column: 98
        }
      },
      "129": {
        start: {
          line: 683,
          column: 52
        },
        end: {
          line: 683,
          column: 74
        }
      },
      "130": {
        start: {
          line: 684,
          column: 52
        },
        end: {
          line: 688,
          column: 55
        }
      },
      "131": {
        start: {
          line: 718,
          column: 63
        },
        end: {
          line: 751,
          column: 34
        }
      },
      "132": {
        start: {
          line: 726,
          column: 48
        },
        end: {
          line: 726,
          column: 70
        }
      },
      "133": {
        start: {
          line: 727,
          column: 48
        },
        end: {
          line: 731,
          column: 51
        }
      },
      "134": {
        start: {
          line: 742,
          column: 102
        },
        end: {
          line: 745,
          column: 70
        }
      },
      "135": {
        start: {
          line: 758,
          column: 71
        },
        end: {
          line: 788,
          column: 42
        }
      },
      "136": {
        start: {
          line: 772,
          column: 74
        },
        end: {
          line: 772,
          column: 105
        }
      },
      "137": {
        start: {
          line: 773,
          column: 60
        },
        end: {
          line: 773,
          column: 82
        }
      },
      "138": {
        start: {
          line: 774,
          column: 60
        },
        end: {
          line: 779,
          column: 63
        }
      },
      "139": {
        start: {
          line: 796,
          column: 79
        },
        end: {
          line: 818,
          column: 50
        }
      },
      "140": {
        start: {
          line: 807,
          column: 68
        },
        end: {
          line: 807,
          column: 138
        }
      },
      "141": {
        start: {
          line: 808,
          column: 68
        },
        end: {
          line: 812,
          column: 71
        }
      },
      "142": {
        start: {
          line: 823,
          column: 79
        },
        end: {
          line: 845,
          column: 50
        }
      },
      "143": {
        start: {
          line: 834,
          column: 68
        },
        end: {
          line: 834,
          column: 138
        }
      },
      "144": {
        start: {
          line: 835,
          column: 68
        },
        end: {
          line: 839,
          column: 71
        }
      },
      "145": {
        start: {
          line: 856,
          column: 55
        },
        end: {
          line: 878,
          column: 26
        }
      },
      "146": {
        start: {
          line: 867,
          column: 44
        },
        end: {
          line: 867,
          column: 62
        }
      },
      "147": {
        start: {
          line: 868,
          column: 44
        },
        end: {
          line: 872,
          column: 47
        }
      },
      "148": {
        start: {
          line: 889,
          column: 74
        },
        end: {
          line: 921,
          column: 45
        }
      },
      "149": {
        start: {
          line: 906,
          column: 56
        },
        end: {
          line: 915,
          column: 57
        }
      },
      "150": {
        start: {
          line: 907,
          column: 78
        },
        end: {
          line: 907,
          column: 112
        }
      },
      "151": {
        start: {
          line: 907,
          column: 100
        },
        end: {
          line: 907,
          column: 111
        }
      },
      "152": {
        start: {
          line: 908,
          column: 60
        },
        end: {
          line: 908,
          column: 95
        }
      },
      "153": {
        start: {
          line: 909,
          column: 60
        },
        end: {
          line: 914,
          column: 63
        }
      },
      "154": {
        start: {
          line: 929,
          column: 48
        },
        end: {
          line: 943,
          column: 49
        }
      },
      "155": {
        start: {
          line: 930,
          column: 70
        },
        end: {
          line: 933,
          column: 53
        }
      },
      "156": {
        start: {
          line: 934,
          column: 52
        },
        end: {
          line: 934,
          column: 87
        }
      },
      "157": {
        start: {
          line: 935,
          column: 52
        },
        end: {
          line: 939,
          column: 55
        }
      },
      "158": {
        start: {
          line: 940,
          column: 52
        },
        end: {
          line: 942,
          column: 55
        }
      },
      "159": {
        start: {
          line: 946,
          column: 48
        },
        end: {
          line: 950,
          column: 51
        }
      },
      "160": {
        start: {
          line: 951,
          column: 48
        },
        end: {
          line: 954,
          column: 51
        }
      },
      "161": {
        start: {
          line: 973,
          column: 55
        },
        end: {
          line: 973,
          column: 81
        }
      },
      "162": {
        start: {
          line: 974,
          column: 50
        },
        end: {
          line: 974,
          column: 95
        }
      },
      "163": {
        start: {
          line: 974,
          column: 75
        },
        end: {
          line: 974,
          column: 94
        }
      },
      "164": {
        start: {
          line: 975,
          column: 32
        },
        end: {
          line: 1015,
          column: 46
        }
      },
      "165": {
        start: {
          line: 982,
          column: 48
        },
        end: {
          line: 992,
          column: 49
        }
      },
      "166": {
        start: {
          line: 983,
          column: 52
        },
        end: {
          line: 989,
          column: 54
        }
      },
      "167": {
        start: {
          line: 991,
          column: 52
        },
        end: {
          line: 991,
          column: 112
        }
      },
      "168": {
        start: {
          line: 991,
          column: 91
        },
        end: {
          line: 991,
          column: 110
        }
      },
      "169": {
        start: {
          line: 993,
          column: 48
        },
        end: {
          line: 993,
          column: 83
        }
      },
      "170": {
        start: {
          line: 994,
          column: 48
        },
        end: {
          line: 999,
          column: 51
        }
      },
      "171": {
        start: {
          line: 1025,
          column: 59
        },
        end: {
          line: 1051,
          column: 30
        }
      },
      "172": {
        start: {
          line: 1036,
          column: 62
        },
        end: {
          line: 1036,
          column: 122
        }
      },
      "173": {
        start: {
          line: 1036,
          column: 97
        },
        end: {
          line: 1036,
          column: 105
        }
      },
      "174": {
        start: {
          line: 1037,
          column: 48
        },
        end: {
          line: 1037,
          column: 70
        }
      },
      "175": {
        start: {
          line: 1038,
          column: 48
        },
        end: {
          line: 1042,
          column: 51
        }
      },
      "176": {
        start: {
          line: 1060,
          column: 63
        },
        end: {
          line: 1084,
          column: 34
        }
      },
      "177": {
        start: {
          line: 1072,
          column: 66
        },
        end: {
          line: 1072,
          column: 95
        }
      },
      "178": {
        start: {
          line: 1073,
          column: 52
        },
        end: {
          line: 1073,
          column: 74
        }
      },
      "179": {
        start: {
          line: 1074,
          column: 52
        },
        end: {
          line: 1078,
          column: 55
        }
      },
      "180": {
        start: {
          line: 1089,
          column: 63
        },
        end: {
          line: 1122,
          column: 34
        }
      },
      "181": {
        start: {
          line: 1097,
          column: 48
        },
        end: {
          line: 1097,
          column: 70
        }
      },
      "182": {
        start: {
          line: 1098,
          column: 48
        },
        end: {
          line: 1102,
          column: 51
        }
      },
      "183": {
        start: {
          line: 1113,
          column: 111
        },
        end: {
          line: 1116,
          column: 74
        }
      },
      "184": {
        start: {
          line: 1129,
          column: 55
        },
        end: {
          line: 1157,
          column: 26
        }
      },
      "185": {
        start: {
          line: 1136,
          column: 44
        },
        end: {
          line: 1136,
          column: 68
        }
      },
      "186": {
        start: {
          line: 1137,
          column: 44
        },
        end: {
          line: 1141,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 33
          }
        },
        loc: {
          start: {
            line: 31,
            column: 39
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 31
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 27
          },
          end: {
            line: 37,
            column: 28
          }
        },
        loc: {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 24
          }
        },
        loc: {
          start: {
            line: 40,
            column: 34
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 40
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 46,
            column: 21
          },
          end: {
            line: 46,
            column: 22
          }
        },
        loc: {
          start: {
            line: 46,
            column: 43
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 46
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 54,
            column: 20
          },
          end: {
            line: 54,
            column: 21
          }
        },
        loc: {
          start: {
            line: 54,
            column: 40
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 54
      },
      "6": {
        name: "ProductForm",
        decl: {
          start: {
            line: 245,
            column: 9
          },
          end: {
            line: 245,
            column: 20
          }
        },
        loc: {
          start: {
            line: 245,
            column: 51
          },
          end: {
            line: 1168,
            column: 1
          }
        },
        line: 245
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 255,
            column: 29
          },
          end: {
            line: 255,
            column: 30
          }
        },
        loc: {
          start: {
            line: 255,
            column: 81
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 255
      },
      "8": {
        name: "onSubmit",
        decl: {
          start: {
            line: 290,
            column: 19
          },
          end: {
            line: 290,
            column: 27
          }
        },
        loc: {
          start: {
            line: 290,
            column: 36
          },
          end: {
            line: 406,
            column: 5
          }
        },
        line: 290
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 324,
            column: 42
          },
          end: {
            line: 324,
            column: 43
          }
        },
        loc: {
          start: {
            line: 324,
            column: 52
          },
          end: {
            line: 328,
            column: 21
          }
        },
        line: 324
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 426,
            column: 36
          },
          end: {
            line: 426,
            column: 37
          }
        },
        loc: {
          start: {
            line: 426,
            column: 63
          },
          end: {
            line: 447,
            column: 34
          }
        },
        line: 426
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 435,
            column: 58
          },
          end: {
            line: 435,
            column: 59
          }
        },
        loc: {
          start: {
            line: 435,
            column: 63
          },
          end: {
            line: 442,
            column: 49
          }
        },
        line: 435
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 452,
            column: 36
          },
          end: {
            line: 452,
            column: 37
          }
        },
        loc: {
          start: {
            line: 452,
            column: 63
          },
          end: {
            line: 492,
            column: 34
          }
        },
        line: 452
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 464,
            column: 66
          },
          end: {
            line: 464,
            column: 67
          }
        },
        loc: {
          start: {
            line: 464,
            column: 71
          },
          end: {
            line: 471,
            column: 57
          }
        },
        line: 464
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 477,
            column: 61
          },
          end: {
            line: 477,
            column: 62
          }
        },
        loc: {
          start: {
            line: 477,
            column: 65
          },
          end: {
            line: 485,
            column: 53
          }
        },
        line: 477
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 502,
            column: 36
          },
          end: {
            line: 502,
            column: 37
          }
        },
        loc: {
          start: {
            line: 502,
            column: 63
          },
          end: {
            line: 523,
            column: 34
          }
        },
        line: 502
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 511,
            column: 58
          },
          end: {
            line: 511,
            column: 59
          }
        },
        loc: {
          start: {
            line: 511,
            column: 63
          },
          end: {
            line: 518,
            column: 49
          }
        },
        line: 511
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 528,
            column: 36
          },
          end: {
            line: 528,
            column: 37
          }
        },
        loc: {
          start: {
            line: 528,
            column: 63
          },
          end: {
            line: 549,
            column: 34
          }
        },
        line: 528
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 537,
            column: 58
          },
          end: {
            line: 537,
            column: 59
          }
        },
        loc: {
          start: {
            line: 537,
            column: 63
          },
          end: {
            line: 544,
            column: 49
          }
        },
        line: 537
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 559,
            column: 36
          },
          end: {
            line: 559,
            column: 37
          }
        },
        loc: {
          start: {
            line: 559,
            column: 63
          },
          end: {
            line: 607,
            column: 34
          }
        },
        line: 559
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 571,
            column: 58
          },
          end: {
            line: 571,
            column: 59
          }
        },
        loc: {
          start: {
            line: 571,
            column: 63
          },
          end: {
            line: 588,
            column: 49
          }
        },
        line: 571
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 612,
            column: 36
          },
          end: {
            line: 612,
            column: 37
          }
        },
        loc: {
          start: {
            line: 612,
            column: 63
          },
          end: {
            line: 662,
            column: 34
          }
        },
        line: 612
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 624,
            column: 58
          },
          end: {
            line: 624,
            column: 59
          }
        },
        loc: {
          start: {
            line: 624,
            column: 63
          },
          end: {
            line: 642,
            column: 49
          }
        },
        line: 624
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 667,
            column: 36
          },
          end: {
            line: 667,
            column: 37
          }
        },
        loc: {
          start: {
            line: 667,
            column: 63
          },
          end: {
            line: 708,
            column: 34
          }
        },
        line: 667
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 681,
            column: 58
          },
          end: {
            line: 681,
            column: 59
          }
        },
        loc: {
          start: {
            line: 681,
            column: 63
          },
          end: {
            line: 689,
            column: 49
          }
        },
        line: 681
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 718,
            column: 36
          },
          end: {
            line: 718,
            column: 37
          }
        },
        loc: {
          start: {
            line: 718,
            column: 63
          },
          end: {
            line: 751,
            column: 34
          }
        },
        line: 718
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 725,
            column: 59
          },
          end: {
            line: 725,
            column: 60
          }
        },
        loc: {
          start: {
            line: 725,
            column: 68
          },
          end: {
            line: 732,
            column: 45
          }
        },
        line: 725
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 742,
            column: 80
          },
          end: {
            line: 742,
            column: 81
          }
        },
        loc: {
          start: {
            line: 742,
            column: 102
          },
          end: {
            line: 745,
            column: 70
          }
        },
        line: 742
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 758,
            column: 44
          },
          end: {
            line: 758,
            column: 45
          }
        },
        loc: {
          start: {
            line: 758,
            column: 71
          },
          end: {
            line: 788,
            column: 42
          }
        },
        line: 758
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 771,
            column: 66
          },
          end: {
            line: 771,
            column: 67
          }
        },
        loc: {
          start: {
            line: 771,
            column: 71
          },
          end: {
            line: 780,
            column: 57
          }
        },
        line: 771
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 796,
            column: 52
          },
          end: {
            line: 796,
            column: 53
          }
        },
        loc: {
          start: {
            line: 796,
            column: 79
          },
          end: {
            line: 818,
            column: 50
          }
        },
        line: 796
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 806,
            column: 74
          },
          end: {
            line: 806,
            column: 75
          }
        },
        loc: {
          start: {
            line: 806,
            column: 79
          },
          end: {
            line: 813,
            column: 65
          }
        },
        line: 806
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 823,
            column: 52
          },
          end: {
            line: 823,
            column: 53
          }
        },
        loc: {
          start: {
            line: 823,
            column: 79
          },
          end: {
            line: 845,
            column: 50
          }
        },
        line: 823
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 833,
            column: 74
          },
          end: {
            line: 833,
            column: 75
          }
        },
        loc: {
          start: {
            line: 833,
            column: 79
          },
          end: {
            line: 840,
            column: 65
          }
        },
        line: 833
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 856,
            column: 28
          },
          end: {
            line: 856,
            column: 29
          }
        },
        loc: {
          start: {
            line: 856,
            column: 55
          },
          end: {
            line: 878,
            column: 26
          }
        },
        line: 856
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 866,
            column: 50
          },
          end: {
            line: 866,
            column: 51
          }
        },
        loc: {
          start: {
            line: 866,
            column: 55
          },
          end: {
            line: 873,
            column: 41
          }
        },
        line: 866
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 889,
            column: 44
          },
          end: {
            line: 889,
            column: 45
          }
        },
        loc: {
          start: {
            line: 889,
            column: 74
          },
          end: {
            line: 921,
            column: 45
          }
        },
        line: 889
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 905,
            column: 61
          },
          end: {
            line: 905,
            column: 62
          }
        },
        loc: {
          start: {
            line: 905,
            column: 65
          },
          end: {
            line: 916,
            column: 53
          }
        },
        line: 905
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 907,
            column: 92
          },
          end: {
            line: 907,
            column: 93
          }
        },
        loc: {
          start: {
            line: 907,
            column: 100
          },
          end: {
            line: 907,
            column: 111
          }
        },
        line: 907
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 928,
            column: 68
          },
          end: {
            line: 928,
            column: 69
          }
        },
        loc: {
          start: {
            line: 928,
            column: 75
          },
          end: {
            line: 944,
            column: 45
          }
        },
        line: 928
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 945,
            column: 59
          },
          end: {
            line: 945,
            column: 60
          }
        },
        loc: {
          start: {
            line: 945,
            column: 68
          },
          end: {
            line: 955,
            column: 45
          }
        },
        line: 945
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 972,
            column: 59
          },
          end: {
            line: 972,
            column: 60
          }
        },
        loc: {
          start: {
            line: 972,
            column: 68
          },
          end: {
            line: 1016,
            column: 29
          }
        },
        line: 972
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 974,
            column: 70
          },
          end: {
            line: 974,
            column: 71
          }
        },
        loc: {
          start: {
            line: 974,
            column: 75
          },
          end: {
            line: 974,
            column: 94
          }
        },
        line: 974
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 980,
            column: 61
          },
          end: {
            line: 980,
            column: 62
          }
        },
        loc: {
          start: {
            line: 980,
            column: 72
          },
          end: {
            line: 1000,
            column: 45
          }
        },
        line: 980
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 991,
            column: 86
          },
          end: {
            line: 991,
            column: 87
          }
        },
        loc: {
          start: {
            line: 991,
            column: 91
          },
          end: {
            line: 991,
            column: 110
          }
        },
        line: 991
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 1025,
            column: 32
          },
          end: {
            line: 1025,
            column: 33
          }
        },
        loc: {
          start: {
            line: 1025,
            column: 59
          },
          end: {
            line: 1051,
            column: 30
          }
        },
        line: 1025
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 1035,
            column: 54
          },
          end: {
            line: 1035,
            column: 55
          }
        },
        loc: {
          start: {
            line: 1035,
            column: 59
          },
          end: {
            line: 1043,
            column: 45
          }
        },
        line: 1035
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 1036,
            column: 92
          },
          end: {
            line: 1036,
            column: 93
          }
        },
        loc: {
          start: {
            line: 1036,
            column: 97
          },
          end: {
            line: 1036,
            column: 105
          }
        },
        line: 1036
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 1060,
            column: 36
          },
          end: {
            line: 1060,
            column: 37
          }
        },
        loc: {
          start: {
            line: 1060,
            column: 63
          },
          end: {
            line: 1084,
            column: 34
          }
        },
        line: 1060
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 1071,
            column: 58
          },
          end: {
            line: 1071,
            column: 59
          }
        },
        loc: {
          start: {
            line: 1071,
            column: 63
          },
          end: {
            line: 1079,
            column: 49
          }
        },
        line: 1071
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 1089,
            column: 36
          },
          end: {
            line: 1089,
            column: 37
          }
        },
        loc: {
          start: {
            line: 1089,
            column: 63
          },
          end: {
            line: 1122,
            column: 34
          }
        },
        line: 1089
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 1096,
            column: 59
          },
          end: {
            line: 1096,
            column: 60
          }
        },
        loc: {
          start: {
            line: 1096,
            column: 68
          },
          end: {
            line: 1103,
            column: 45
          }
        },
        line: 1096
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 1113,
            column: 85
          },
          end: {
            line: 1113,
            column: 86
          }
        },
        loc: {
          start: {
            line: 1113,
            column: 111
          },
          end: {
            line: 1116,
            column: 74
          }
        },
        line: 1113
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 1129,
            column: 28
          },
          end: {
            line: 1129,
            column: 29
          }
        },
        loc: {
          start: {
            line: 1129,
            column: 55
          },
          end: {
            line: 1157,
            column: 26
          }
        },
        line: 1129
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 1135,
            column: 57
          },
          end: {
            line: 1135,
            column: 58
          }
        },
        loc: {
          start: {
            line: 1135,
            column: 68
          },
          end: {
            line: 1142,
            column: 41
          }
        },
        line: 1135
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 11
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 35
          },
          end: {
            line: 32,
            column: 38
          }
        }, {
          start: {
            line: 32,
            column: 41
          },
          end: {
            line: 34,
            column: 5
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 11
          },
          end: {
            line: 32,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 11
          },
          end: {
            line: 32,
            column: 14
          }
        }, {
          start: {
            line: 32,
            column: 18
          },
          end: {
            line: 32,
            column: 32
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 14
          },
          end: {
            line: 42,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 14
          },
          end: {
            line: 42,
            column: 33
          }
        }, {
          start: {
            line: 42,
            column: 37
          },
          end: {
            line: 42,
            column: 49
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 21
          },
          end: {
            line: 50,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 21
          },
          end: {
            line: 50,
            column: 41
          }
        }, {
          start: {
            line: 50,
            column: 45
          },
          end: {
            line: 50,
            column: 58
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 51,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 51
          },
          end: {
            line: 51,
            column: 77
          }
        }, {
          start: {
            line: 51,
            column: 80
          },
          end: {
            line: 51,
            column: 88
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 55,
            column: 25
          },
          end: {
            line: 55,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 50
          },
          end: {
            line: 55,
            column: 63
          }
        }, {
          start: {
            line: 55,
            column: 66
          },
          end: {
            line: 55,
            column: 96
          }
        }],
        line: 55
      },
      "6": {
        loc: {
          start: {
            line: 251,
            column: 40
          },
          end: {
            line: 251,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 251,
            column: 60
          },
          end: {
            line: 251,
            column: 79
          }
        }, {
          start: {
            line: 251,
            column: 82
          },
          end: {
            line: 251,
            column: 100
          }
        }],
        line: 251
      },
      "7": {
        loc: {
          start: {
            line: 252,
            column: 23
          },
          end: {
            line: 252,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 252,
            column: 54
          },
          end: {
            line: 252,
            column: 61
          }
        }, {
          start: {
            line: 252,
            column: 64
          },
          end: {
            line: 252,
            column: 77
          }
        }],
        line: 252
      },
      "8": {
        loc: {
          start: {
            line: 252,
            column: 23
          },
          end: {
            line: 252,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 23
          },
          end: {
            line: 252,
            column: 40
          }
        }, {
          start: {
            line: 252,
            column: 44
          },
          end: {
            line: 252,
            column: 51
          }
        }],
        line: 252
      },
      "9": {
        loc: {
          start: {
            line: 255,
            column: 41
          },
          end: {
            line: 255,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 255,
            column: 53
          },
          end: {
            line: 255,
            column: 54
          }
        }],
        line: 255
      },
      "10": {
        loc: {
          start: {
            line: 263,
            column: 23
          },
          end: {
            line: 263,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 263,
            column: 23
          },
          end: {
            line: 263,
            column: 35
          }
        }, {
          start: {
            line: 263,
            column: 39
          },
          end: {
            line: 263,
            column: 41
          }
        }],
        line: 263
      },
      "11": {
        loc: {
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 278,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 8
          },
          end: {
            line: 278,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "12": {
        loc: {
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 268,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 268,
            column: 20
          }
        }, {
          start: {
            line: 268,
            column: 24
          },
          end: {
            line: 268,
            column: 48
          }
        }, {
          start: {
            line: 268,
            column: 52
          },
          end: {
            line: 268,
            column: 70
          }
        }],
        line: 268
      },
      "13": {
        loc: {
          start: {
            line: 270,
            column: 32
          },
          end: {
            line: 270,
            column: 152
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 33
          },
          end: {
            line: 270,
            column: 52
          }
        }, {
          start: {
            line: 270,
            column: 56
          },
          end: {
            line: 270,
            column: 91
          }
        }, {
          start: {
            line: 270,
            column: 97
          },
          end: {
            line: 270,
            column: 114
          }
        }, {
          start: {
            line: 270,
            column: 118
          },
          end: {
            line: 270,
            column: 151
          }
        }],
        line: 270
      },
      "14": {
        loc: {
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "15": {
        loc: {
          start: {
            line: 272,
            column: 16
          },
          end: {
            line: 276,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 16
          },
          end: {
            line: 276,
            column: 17
          }
        }, {
          start: {
            line: 274,
            column: 23
          },
          end: {
            line: 276,
            column: 17
          }
        }],
        line: 272
      },
      "16": {
        loc: {
          start: {
            line: 274,
            column: 23
          },
          end: {
            line: 276,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 23
          },
          end: {
            line: 276,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "17": {
        loc: {
          start: {
            line: 285,
            column: 29
          },
          end: {
            line: 285,
            column: 143
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 285,
            column: 53
          },
          end: {
            line: 285,
            column: 115
          }
        }, {
          start: {
            line: 285,
            column: 118
          },
          end: {
            line: 285,
            column: 143
          }
        }],
        line: 285
      },
      "18": {
        loc: {
          start: {
            line: 292,
            column: 28
          },
          end: {
            line: 292,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 28
          },
          end: {
            line: 292,
            column: 47
          }
        }, {
          start: {
            line: 292,
            column: 51
          },
          end: {
            line: 292,
            column: 60
          }
        }],
        line: 292
      },
      "19": {
        loc: {
          start: {
            line: 301,
            column: 12
          },
          end: {
            line: 308,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 12
          },
          end: {
            line: 308,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "20": {
        loc: {
          start: {
            line: 318,
            column: 27
          },
          end: {
            line: 318,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 318,
            column: 27
          },
          end: {
            line: 318,
            column: 51
          }
        }, {
          start: {
            line: 318,
            column: 55
          },
          end: {
            line: 318,
            column: 75
          }
        }],
        line: 318
      },
      "21": {
        loc: {
          start: {
            line: 319,
            column: 30
          },
          end: {
            line: 319,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 319,
            column: 30
          },
          end: {
            line: 319,
            column: 57
          }
        }, {
          start: {
            line: 319,
            column: 61
          },
          end: {
            line: 319,
            column: 62
          }
        }],
        line: 319
      },
      "22": {
        loc: {
          start: {
            line: 320,
            column: 22
          },
          end: {
            line: 322,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 22
          },
          end: {
            line: 320,
            column: 33
          }
        }, {
          start: {
            line: 320,
            column: 37
          },
          end: {
            line: 322,
            column: 17
          }
        }],
        line: 320
      },
      "23": {
        loc: {
          start: {
            line: 323,
            column: 23
          },
          end: {
            line: 323,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 323,
            column: 23
          },
          end: {
            line: 323,
            column: 35
          }
        }, {
          start: {
            line: 323,
            column: 39
          },
          end: {
            line: 323,
            column: 41
          }
        }],
        line: 323
      },
      "24": {
        loc: {
          start: {
            line: 327,
            column: 33
          },
          end: {
            line: 327,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 327,
            column: 33
          },
          end: {
            line: 327,
            column: 46
          }
        }, {
          start: {
            line: 327,
            column: 50
          },
          end: {
            line: 327,
            column: 54
          }
        }],
        line: 327
      },
      "25": {
        loc: {
          start: {
            line: 329,
            column: 29
          },
          end: {
            line: 329,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 29
          },
          end: {
            line: 329,
            column: 47
          }
        }, {
          start: {
            line: 329,
            column: 51
          },
          end: {
            line: 329,
            column: 56
          }
        }],
        line: 329
      },
      "26": {
        loc: {
          start: {
            line: 338,
            column: 35
          },
          end: {
            line: 338,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 338,
            column: 73
          },
          end: {
            line: 338,
            column: 116
          }
        }, {
          start: {
            line: 338,
            column: 119
          },
          end: {
            line: 338,
            column: 128
          }
        }],
        line: 338
      },
      "27": {
        loc: {
          start: {
            line: 339,
            column: 33
          },
          end: {
            line: 339,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 339,
            column: 69
          },
          end: {
            line: 339,
            column: 110
          }
        }, {
          start: {
            line: 339,
            column: 113
          },
          end: {
            line: 339,
            column: 122
          }
        }],
        line: 339
      },
      "28": {
        loc: {
          start: {
            line: 343,
            column: 30
          },
          end: {
            line: 343,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 343,
            column: 30
          },
          end: {
            line: 343,
            column: 55
          }
        }, {
          start: {
            line: 343,
            column: 59
          },
          end: {
            line: 343,
            column: 68
          }
        }],
        line: 343
      },
      "29": {
        loc: {
          start: {
            line: 344,
            column: 25
          },
          end: {
            line: 344,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 344,
            column: 25
          },
          end: {
            line: 344,
            column: 45
          }
        }, {
          start: {
            line: 344,
            column: 49
          },
          end: {
            line: 344,
            column: 68
          }
        }],
        line: 344
      },
      "30": {
        loc: {
          start: {
            line: 345,
            column: 39
          },
          end: {
            line: 345,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 39
          },
          end: {
            line: 345,
            column: 81
          }
        }, {
          start: {
            line: 345,
            column: 85
          },
          end: {
            line: 345,
            column: 86
          }
        }],
        line: 345
      },
      "31": {
        loc: {
          start: {
            line: 364,
            column: 24
          },
          end: {
            line: 364,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 364,
            column: 45
          },
          end: {
            line: 364,
            column: 54
          }
        }, {
          start: {
            line: 364,
            column: 57
          },
          end: {
            line: 364,
            column: 64
          }
        }],
        line: 364
      },
      "32": {
        loc: {
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 384,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 384,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 376
      },
      "33": {
        loc: {
          start: {
            line: 401,
            column: 29
          },
          end: {
            line: 401,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 401,
            column: 54
          },
          end: {
            line: 401,
            column: 67
          }
        }, {
          start: {
            line: 401,
            column: 70
          },
          end: {
            line: 401,
            column: 100
          }
        }],
        line: 401
      },
      "34": {
        loc: {
          start: {
            line: 413,
            column: 37
          },
          end: {
            line: 413,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 37
          },
          end: {
            line: 413,
            column: 50
          }
        }, {
          start: {
            line: 413,
            column: 54
          },
          end: {
            line: 413,
            column: 55
          }
        }],
        line: 413
      },
      "35": {
        loc: {
          start: {
            line: 413,
            column: 57
          },
          end: {
            line: 413,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 57
          },
          end: {
            line: 413,
            column: 74
          }
        }, {
          start: {
            line: 413,
            column: 78
          },
          end: {
            line: 413,
            column: 79
          }
        }],
        line: 413
      },
      "36": {
        loc: {
          start: {
            line: 413,
            column: 81
          },
          end: {
            line: 413,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 81
          },
          end: {
            line: 413,
            column: 95
          }
        }, {
          start: {
            line: 413,
            column: 99
          },
          end: {
            line: 413,
            column: 101
          }
        }],
        line: 413
      },
      "37": {
        loc: {
          start: {
            line: 572,
            column: 66
          },
          end: {
            line: 572,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 572,
            column: 66
          },
          end: {
            line: 572,
            column: 92
          }
        }, {
          start: {
            line: 572,
            column: 96
          },
          end: {
            line: 572,
            column: 97
          }
        }],
        line: 572
      },
      "38": {
        loc: {
          start: {
            line: 580,
            column: 52
          },
          end: {
            line: 587,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 580,
            column: 52
          },
          end: {
            line: 587,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 580
      },
      "39": {
        loc: {
          start: {
            line: 580,
            column: 56
          },
          end: {
            line: 580,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 580,
            column: 56
          },
          end: {
            line: 580,
            column: 73
          }
        }, {
          start: {
            line: 580,
            column: 77
          },
          end: {
            line: 580,
            column: 101
          }
        }],
        line: 580
      },
      "40": {
        loc: {
          start: {
            line: 625,
            column: 66
          },
          end: {
            line: 625,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 625,
            column: 66
          },
          end: {
            line: 625,
            column: 92
          }
        }, {
          start: {
            line: 625,
            column: 96
          },
          end: {
            line: 625,
            column: 97
          }
        }],
        line: 625
      },
      "41": {
        loc: {
          start: {
            line: 633,
            column: 52
          },
          end: {
            line: 641,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 633,
            column: 52
          },
          end: {
            line: 641,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 633
      },
      "42": {
        loc: {
          start: {
            line: 633,
            column: 56
          },
          end: {
            line: 633,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 633,
            column: 56
          },
          end: {
            line: 633,
            column: 65
          }
        }, {
          start: {
            line: 633,
            column: 69
          },
          end: {
            line: 633,
            column: 86
          }
        }],
        line: 633
      },
      "43": {
        loc: {
          start: {
            line: 682,
            column: 66
          },
          end: {
            line: 682,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 682,
            column: 66
          },
          end: {
            line: 682,
            column: 92
          }
        }, {
          start: {
            line: 682,
            column: 96
          },
          end: {
            line: 682,
            column: 98
          }
        }],
        line: 682
      },
      "44": {
        loc: {
          start: {
            line: 753,
            column: 24
          },
          end: {
            line: 850,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 753,
            column: 24
          },
          end: {
            line: 753,
            column: 70
          }
        }, {
          start: {
            line: 753,
            column: 88
          },
          end: {
            line: 850,
            column: 26
          }
        }],
        line: 753
      },
      "45": {
        loc: {
          start: {
            line: 766,
            column: 62
          },
          end: {
            line: 766,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 766,
            column: 117
          },
          end: {
            line: 766,
            column: 120
          }
        }, {
          start: {
            line: 766,
            column: 123
          },
          end: {
            line: 766,
            column: 129
          }
        }],
        line: 766
      },
      "46": {
        loc: {
          start: {
            line: 768,
            column: 61
          },
          end: {
            line: 768,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 768,
            column: 116
          },
          end: {
            line: 768,
            column: 121
          }
        }, {
          start: {
            line: 768,
            column: 124
          },
          end: {
            line: 768,
            column: 133
          }
        }],
        line: 768
      },
      "47": {
        loc: {
          start: {
            line: 769,
            column: 69
          },
          end: {
            line: 769,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 769,
            column: 124
          },
          end: {
            line: 769,
            column: 128
          }
        }, {
          start: {
            line: 769,
            column: 131
          },
          end: {
            line: 769,
            column: 137
          }
        }],
        line: 769
      },
      "48": {
        loc: {
          start: {
            line: 772,
            column: 74
          },
          end: {
            line: 772,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 772,
            column: 74
          },
          end: {
            line: 772,
            column: 100
          }
        }, {
          start: {
            line: 772,
            column: 104
          },
          end: {
            line: 772,
            column: 105
          }
        }],
        line: 772
      },
      "49": {
        loc: {
          start: {
            line: 784,
            column: 62
          },
          end: {
            line: 784,
            column: 166
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 784,
            column: 117
          },
          end: {
            line: 784,
            column: 143
          }
        }, {
          start: {
            line: 784,
            column: 146
          },
          end: {
            line: 784,
            column: 166
          }
        }],
        line: 784
      },
      "50": {
        loc: {
          start: {
            line: 805,
            column: 71
          },
          end: {
            line: 805,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 805,
            column: 85
          },
          end: {
            line: 805,
            column: 133
          }
        }, {
          start: {
            line: 805,
            column: 136
          },
          end: {
            line: 805,
            column: 138
          }
        }],
        line: 805
      },
      "51": {
        loc: {
          start: {
            line: 807,
            column: 83
          },
          end: {
            line: 807,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 807,
            column: 100
          },
          end: {
            line: 807,
            column: 124
          }
        }, {
          start: {
            line: 807,
            column: 127
          },
          end: {
            line: 807,
            column: 136
          }
        }],
        line: 807
      },
      "52": {
        loc: {
          start: {
            line: 832,
            column: 71
          },
          end: {
            line: 832,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 832,
            column: 85
          },
          end: {
            line: 832,
            column: 133
          }
        }, {
          start: {
            line: 832,
            column: 136
          },
          end: {
            line: 832,
            column: 138
          }
        }],
        line: 832
      },
      "53": {
        loc: {
          start: {
            line: 834,
            column: 83
          },
          end: {
            line: 834,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 834,
            column: 100
          },
          end: {
            line: 834,
            column: 124
          }
        }, {
          start: {
            line: 834,
            column: 127
          },
          end: {
            line: 834,
            column: 136
          }
        }],
        line: 834
      },
      "54": {
        loc: {
          start: {
            line: 906,
            column: 56
          },
          end: {
            line: 915,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 906,
            column: 56
          },
          end: {
            line: 915,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 906
      },
      "55": {
        loc: {
          start: {
            line: 929,
            column: 48
          },
          end: {
            line: 943,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 929,
            column: 48
          },
          end: {
            line: 943,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 929
      },
      "56": {
        loc: {
          start: {
            line: 929,
            column: 52
          },
          end: {
            line: 929,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 929,
            column: 52
          },
          end: {
            line: 929,
            column: 55
          }
        }, {
          start: {
            line: 929,
            column: 59
          },
          end: {
            line: 929,
            column: 65
          }
        }, {
          start: {
            line: 929,
            column: 70
          },
          end: {
            line: 929,
            column: 83
          }
        }, {
          start: {
            line: 929,
            column: 87
          },
          end: {
            line: 929,
            column: 97
          }
        }],
        line: 929
      },
      "57": {
        loc: {
          start: {
            line: 932,
            column: 56
          },
          end: {
            line: 932,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 932,
            column: 56
          },
          end: {
            line: 932,
            column: 69
          }
        }, {
          start: {
            line: 932,
            column: 73
          },
          end: {
            line: 932,
            column: 83
          }
        }],
        line: 932
      },
      "58": {
        loc: {
          start: {
            line: 936,
            column: 61
          },
          end: {
            line: 936,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 936,
            column: 61
          },
          end: {
            line: 936,
            column: 74
          }
        }, {
          start: {
            line: 936,
            column: 78
          },
          end: {
            line: 936,
            column: 88
          }
        }],
        line: 936
      },
      "59": {
        loc: {
          start: {
            line: 973,
            column: 55
          },
          end: {
            line: 973,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 973,
            column: 55
          },
          end: {
            line: 973,
            column: 75
          }
        }, {
          start: {
            line: 973,
            column: 79
          },
          end: {
            line: 973,
            column: 81
          }
        }],
        line: 973
      },
      "60": {
        loc: {
          start: {
            line: 982,
            column: 48
          },
          end: {
            line: 992,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 982,
            column: 48
          },
          end: {
            line: 992,
            column: 49
          }
        }, {
          start: {
            line: 990,
            column: 55
          },
          end: {
            line: 992,
            column: 49
          }
        }],
        line: 982
      },
      "61": {
        loc: {
          start: {
            line: 996,
            column: 60
          },
          end: {
            line: 996,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 996,
            column: 70
          },
          end: {
            line: 996,
            column: 77
          }
        }, {
          start: {
            line: 996,
            column: 80
          },
          end: {
            line: 996,
            column: 89
          }
        }],
        line: 996
      },
      "62": {
        loc: {
          start: {
            line: 1072,
            column: 66
          },
          end: {
            line: 1072,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1072,
            column: 66
          },
          end: {
            line: 1072,
            column: 90
          }
        }, {
          start: {
            line: 1072,
            column: 94
          },
          end: {
            line: 1072,
            column: 95
          }
        }],
        line: 1072
      },
      "63": {
        loc: {
          start: {
            line: 1163,
            column: 30
          },
          end: {
            line: 1163,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1163,
            column: 40
          },
          end: {
            line: 1163,
            column: 55
          }
        }, {
          start: {
            line: 1163,
            column: 58
          },
          end: {
            line: 1163,
            column: 113
          }
        }],
        line: 1163
      },
      "64": {
        loc: {
          start: {
            line: 1163,
            column: 58
          },
          end: {
            line: 1163,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1163,
            column: 78
          },
          end: {
            line: 1163,
            column: 94
          }
        }, {
          start: {
            line: 1163,
            column: 97
          },
          end: {
            line: 1163,
            column: 113
          }
        }],
        line: 1163
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0, 0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/products/create/product-form.tsx"],
      sourcesContent: ["'use client'\n\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport Image from 'next/image'\nimport { useRouter } from 'next/navigation'\nimport { useForm } from 'react-hook-form'\nimport { useSession } from 'next-auth/react'\nimport { useState } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent } from '@/components/ui/card'\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { useToast } from '@/hooks/use-toast'\nimport { createProduct } from '@/lib/actions/product.actions'\nimport { UploadButton } from '@/lib/uploadthing'\nimport { Checkbox } from '@/components/ui/checkbox'\nimport { toSlug } from '@/lib/utils'\nimport { IProductInput } from '@/types'\nimport { z } from 'zod'\n\n// Utility Functions\nconst getCurrentDateTime = () => {\n  return new Date().toISOString().slice(0, 19).replace('T', ' ')\n}\n\nconst getCurrentUser = (session: any) => {\n  return {\n    name: session?.user?.name || 'Guest User',\n    timestamp: getCurrentDateTime(),\n  }\n}\n\nconst logOperation = (operation: string, details?: any) => {\n  const timestamp = getCurrentDateTime()\n  console.log(`[${timestamp}] ${operation}`, {\n    ...details,\n    environment: process.env.NODE_ENV || 'development',\n    userAgent: typeof window !== 'undefined' ? window.navigator.userAgent : 'server',\n  })\n}\n\nconst handleError = (error: any, operation: string) => {\n  const errorMessage = error instanceof Error ? error.message : 'An unexpected error occurred'\n  console.error(`[${getCurrentDateTime()}] ${operation} failed:`, errorMessage)\n}\n\n// Zod Schemas\nconst DiscountSchema = z.object({\n  type: z.enum(['none', 'percentage', 'fixed']),\n  value: z.number().min(0).optional(),\n  startDate: z.date().optional(),\n  endDate: z.date().optional(),\n})\n\nconst PricingSchema = z.object({\n  basePrice: z.number().min(0),\n  markup: z.number().min(0).max(100),\n  profit: z.number().min(0),\n  commission: z.number().min(0),\n  finalPrice: z.number().min(0),\n  discount: DiscountSchema,\n})\n\nconst WarehouseSchema = z.object({\n  provider: z.enum(['ShipBob', '4PX']),\n  sku: z.string().min(1),\n  availableQuantity: z.number().min(0),\n})\n\nconst MetricsSchema = z.object({\n  views: z.number().min(0),\n  sales: z.number().min(0),\n  revenue: z.number().min(0),\n  returns: z.number().min(0),\n  rating: z.number().min(0).max(5),\n  avgRating: z.number().min(0).max(5),\n  numReviews: z.number().min(0),\n  numSales: z.number().min(0),\n  ratingDistribution: z.array(z.number()).length(5),\n})\n\nconst ProductInputSchema = z.object({\n  name: z.string().min(1, 'Product name is required'),\n  slug: z.string().min(1, 'Slug is required'),\n  category: z.string().min(1, 'Category is required'),\n  images: z.array(z.string()).min(1, 'At least one image is required'),\n  brand: z.string().min(1, 'Brand is required'),\n  description: z.string().min(1, 'Description is required'),\n  price: z.number().min(0, 'Price must be non-negative'),\n  listPrice: z.number().min(0, 'List price must be non-negative'),\n  countInStock: z.number().min(0, 'Stock must be non-negative'),\n  tags: z.array(z.string()).optional(),\n  sizes: z.array(z.string()).optional(),\n  colors: z.array(z.object({\n    name: z.string(),\n    hex: z.string(),\n    inStock: z.boolean(),\n  })).optional(),\n  isPublished: z.boolean(),\n  warehouse: WarehouseSchema,\n  metrics: MetricsSchema,\n  pricing: PricingSchema,\n  status: z.enum(['draft', 'pending', 'published']),\n  createdAt: z.date(),\n  updatedAt: z.date(),\n  createdBy: z.string(),\n  updatedBy: z.string(),\n})\n\nconst ProductUpdateSchema = ProductInputSchema.partial()\n\n// Constants\nconst warehouseProviders = [\n  { value: 'ShipBob', label: 'ShipBob' },\n  { value: '4PX', label: '4PX' },\n]\n\nconst predefinedColors = [\n  { name: 'Black', hex: '#000000' },\n  { name: 'White', hex: '#FFFFFF' },\n  { name: 'Red', hex: '#FF0000' },\n  { name: 'Blue', hex: '#0000FF' },\n  { name: 'Green', hex: '#00FF00' },\n  { name: 'Yellow', hex: '#FFFF00' },\n  { name: 'Gray', hex: '#808080' },\n  { name: 'Purple', hex: '#800080' },\n]\n\nconst discountTypes = [\n  { value: 'none', label: 'No Discount' },\n  { value: 'percentage', label: 'Percentage (%)' },\n  { value: 'fixed', label: 'Fixed Amount ($)' },\n]\n\ninterface DiscountInfo {\n  type: 'none' | 'percentage' | 'fixed'\n  value: number\n  startDate?: Date\n  endDate?: Date\n}\n\n// Default Values\nconst defaultValues: IProductInput = {\n  name: '',\n  slug: '',\n  category: '',\n  images: [],\n  brand: '',\n  description: '',\n  price: 0,\n  listPrice: 0,\n  countInStock: 0,\n  tags: ['new-arrival'],\n  sizes: [],\n  colors: [],\n  isPublished: false,\n  warehouse: {\n    provider: 'ShipBob',\n    sku: '',\n    availableQuantity: 0,\n  },\n  metrics: {\n    views: 0,\n    sales: 0,\n    revenue: 0,\n    returns: 0,\n    rating: 0,\n    avgRating: 0,\n    numReviews: 0,\n    numSales: 0,\n    ratingDistribution: [0, 0, 0, 0, 0],\n  },\n  pricing: {\n    basePrice: 0,\n    markup: 30,\n    profit: 0,\n    commission: 3,\n    finalPrice: 0,\n    discount: {\n      type: 'none',\n      value: 0,\n      startDate: undefined,\n      endDate: undefined,\n    },\n  },\n  status: 'draft',\n  createdAt: new Date(),\n  updatedAt: new Date(),\n  createdBy: '',\n  updatedBy: '',\n}\n\ninterface ProductFormProps {\n  type: 'Create' | 'Update'\n  product?: z.infer<typeof ProductInputSchema>\n  productId?: string\n}\n\nexport default function ProductForm({ type, product, productId }: ProductFormProps) {\n  const router = useRouter()\n  const { toast } = useToast()\n  const { data: session } = useSession()\n  const [loading, setLoading] = useState(false)\n\n  const form = useForm<z.infer<typeof ProductInputSchema>>({\n    resolver: zodResolver(type === 'Update' ? ProductUpdateSchema : ProductInputSchema),\n    defaultValues: type === 'Update' && product ? product : defaultValues,\n  })\n\n  // Price calculation function\n  const calculatePricing = (\n    basePrice: number,\n    listPrice: number = 0,\n    customMarkup?: number,\n    discount?: DiscountInfo\n  ) => {\n    logOperation('Calculating pricing', {\n      basePrice,\n      listPrice,\n      customMarkup,\n      user: session?.user?.name,\n      timestamp: getCurrentDateTime(),\n    })\n\n    const markup = customMarkup || 30\n    const commission = 3\n    const markupAmount = basePrice * (markup / 100)\n    const commissionAmount = basePrice * (commission / 100)\n    let finalPrice = basePrice + markupAmount\n\n    if (discount && discount.type !== 'none' && discount.value > 0) {\n      const now = new Date()\n      const isValidDate = (!discount.startDate || now >= new Date(discount.startDate)) &&\n        (!discount.endDate || now <= new Date(discount.endDate))\n\n      if (isValidDate) {\n        if (discount.type === 'percentage') {\n          finalPrice = finalPrice * (1 - (discount.value / 100))\n        } else if (discount.type === 'fixed') {\n          finalPrice = Math.max(0, finalPrice - discount.value)\n        }\n      }\n    }\n\n    return {\n      basePrice,\n      markup,\n      profit: Number((markupAmount - commissionAmount).toFixed(2)),\n      commission: Number(commissionAmount.toFixed(2)),\n      finalPrice: Number(finalPrice.toFixed(2)),\n      suggestedMarkup: listPrice > basePrice\n        ? Number(((listPrice - basePrice) / basePrice * 100).toFixed(1))\n        : Number(markup.toFixed(1)),\n      originalPrice: Number((basePrice + markupAmount).toFixed(2)),\n    }\n  }\n\n  // Form submission handler\n  async function onSubmit(values: z.infer<typeof ProductInputSchema>) {\n    setLoading(true)\n    const currentUser = session?.user?.name || 'unknown'\n\n    logOperation('Form submission started', {\n      user: currentUser,\n      timestamp: getCurrentDateTime(),\n    })\n\n    toast({ description: 'Creating product...' })\n\n    try {\n      if (!values.images?.length) {\n        toast({\n          variant: 'destructive',\n          title: 'Error',\n          description: 'Please add at least one product image',\n        })\n        return\n      }\n\n      const pricing = calculatePricing(\n        values.price,\n        values.listPrice,\n        values.pricing?.markup,\n        values.pricing?.discount\n      )\n\n      const submissionData = {\n        ...values,\n        name: values.name.trim(),\n        slug: values.slug.trim(),\n        category: values.category.trim(),\n        brand: values.brand.trim(),\n        description: values.description.trim(),\n        price: Number(values.price),\n        listPrice: Number(values.listPrice) || Number(values.price),\n        countInStock: Number(values.countInStock) || 0,\n        tags: values.tags || ['new-arrival'],\n        sizes: values.sizes || [],\n        colors: values.colors.map((color) => ({\n          name: color.name,\n          hex: color.hex,\n          inStock: color.inStock ?? true,\n        })),\n        isPublished: values.isPublished || false,\n        pricing: {\n          basePrice: Number(pricing.basePrice),\n          markup: Number(pricing.suggestedMarkup),\n          profit: Number(pricing.profit),\n          commission: Number(pricing.commission),\n          finalPrice: Number(pricing.finalPrice),\n          discount: {\n            ...values.pricing?.discount,\n            startDate: values.pricing?.discount?.startDate\n              ? new Date(values.pricing.discount.startDate)\n              : undefined,\n            endDate: values.pricing?.discount?.endDate\n              ? new Date(values.pricing.discount.endDate)\n              : undefined,\n          },\n        },\n        warehouse: {\n          provider: values.warehouse.provider || 'ShipBob',\n          sku: values.warehouse.sku || `SKU-${Date.now()}`,\n          availableQuantity: Number(values.warehouse.availableQuantity) || 0,\n        },\n        metrics: {\n          views: 0,\n          sales: 0,\n          revenue: 0,\n          returns: 0,\n          rating: 0,\n          avgRating: 0,\n          numReviews: 0,\n          numSales: 0,\n          ratingDistribution: [0, 0, 0, 0, 0],\n        },\n        status: values.isPublished ? 'pending' : 'draft',\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        createdBy: currentUser,\n        updatedBy: currentUser,\n      }\n\n      logOperation('Submitting product data', {\n        product: submissionData.name,\n        user: currentUser,\n        timestamp: getCurrentDateTime(),\n      })\n\n      const res = await createProduct(submissionData)\n\n      if (!res.success) {\n        handleError(res.message, 'Product creation')\n        toast({\n          variant: 'destructive',\n          title: 'Error',\n          description: res.message,\n        })\n        return\n      }\n\n      logOperation('Product created successfully', {\n        product: submissionData.name,\n        user: currentUser,\n        timestamp: getCurrentDateTime(),\n      })\n\n      toast({\n        title: 'Success',\n        description: 'Product created successfully. Awaiting admin review.',\n      })\n\n      router.push('/seller/dashboard/products')\n      router.refresh()\n    } catch (error) {\n      handleError(error, 'Form submission')\n      toast({\n        variant: 'destructive',\n        title: 'Error',\n        description: error instanceof Error ? error.message : 'An unexpected error occurred',\n      })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Form watchers\n  const images = form.watch('images')\n  const price = form.watch('price')\n  const listPrice = form.watch('listPrice')\n  const markup = form.watch('pricing.markup')\n  const discount = form.watch('pricing.discount')\n\n  const pricing = calculatePricing(\n    Number(price) || 0,\n    Number(listPrice) || 0,\n    Number(markup) || 30,\n    discount\n  )\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        {/* Basic Information */}\n        <div className=\"grid gap-6 md:grid-cols-2\">\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Product Name</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"Enter product name\"\n                    {...field}\n                    onChange={(e) => {\n                      field.onChange(e)\n                      logOperation('Product name changed', {\n                        value: e.target.value,\n                        user: session?.user?.name,\n                        timestamp: getCurrentDateTime(),\n                      })\n                    }}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"slug\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Slug</FormLabel>\n                <div className=\"flex gap-2\">\n                  <FormControl>\n                    <Input\n                      placeholder=\"product-url-slug\"\n                      {...field}\n                      onChange={(e) => {\n                        field.onChange(e)\n                        logOperation('Slug changed', {\n                          value: e.target.value,\n                          user: session?.user?.name,\n                          timestamp: getCurrentDateTime(),\n                        })\n                      }}\n                    />\n                  </FormControl>\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    onClick={() => {\n                      const newSlug = toSlug(form.getValues('name'))\n                      form.setValue('slug', newSlug)\n                      logOperation('Slug generated', {\n                        value: newSlug,\n                        user: session?.user?.name,\n                        timestamp: getCurrentDateTime(),\n                      })\n                    }}\n                  >\n                    Generate\n                  </Button>\n                </div>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        {/* Categories and Brand */}\n        <div className=\"grid gap-6 md:grid-cols-2\">\n          <FormField\n            control={form.control}\n            name=\"category\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Category</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"Product category\"\n                    {...field}\n                    onChange={(e) => {\n                      field.onChange(e)\n                      logOperation('Category changed', {\n                        value: e.target.value,\n                        user: session?.user?.name,\n                        timestamp: getCurrentDateTime(),\n                      })\n                    }}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"brand\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Brand</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"Product brand\"\n                    {...field}\n                    onChange={(e) => {\n                      field.onChange(e)\n                      logOperation('Brand changed', {\n                        value: e.target.value,\n                        user: session?.user?.name,\n                        timestamp: getCurrentDateTime(),\n                      })\n                    }}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        {/* Pricing Section */}\n        <div className=\"grid gap-6 md:grid-cols-3\">\n          <FormField\n            control={form.control}\n            name=\"price\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Base Price</FormLabel>\n                <FormControl>\n                  <Input\n                    type=\"number\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    placeholder=\"0.00\"\n                    {...field}\n                    onChange={(e) => {\n                      const value = parseFloat(e.target.value) || 0\n                      field.onChange(value)\n                      logOperation('Base price changed', {\n                        value,\n                        user: session?.user?.name,\n                        timestamp: getCurrentDateTime(),\n                      })\n                      const currentListPrice = form.getValues('listPrice')\n                      if (!currentListPrice || currentListPrice < value) {\n                        form.setValue('listPrice', value)\n                        logOperation('List price auto-updated', {\n                          value,\n                          user: session?.user?.name,\n                          timestamp: getCurrentDateTime(),\n                        })\n                      }\n                    }}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Your cost: ${Number(field.value).toFixed(2)}\n                  <br />\n                  <small className=\"text-muted-foreground\">\n                    Commission (3%): ${pricing.commission}\n                  </small>\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"listPrice\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>List Price</FormLabel>\n                <FormControl>\n                  <Input\n                    type=\"number\"\n                    step=\"0.01\"\n                    min=\"0\"\n                    placeholder=\"0.00\"\n                    {...field}\n                    onChange={(e) => {\n                      const value = parseFloat(e.target.value) || 0\n                      field.onChange(value)\n                      logOperation('List price changed', {\n                        value,\n                        user: session?.user?.name,\n                        timestamp: getCurrentDateTime(),\n                      })\n                      const basePrice = form.getValues('price')\n                      if (basePrice && value > basePrice) {\n                        const suggestedMarkup = ((value - basePrice) / basePrice * 100)\n                        form.setValue('pricing.markup', suggestedMarkup)\n                        logOperation('Markup auto-updated', {\n                          value: suggestedMarkup,\n                          user: session?.user?.name,\n                          timestamp: getCurrentDateTime(),\n                        })\n                      }\n                    }}\n                  />\n                </FormControl>\n                <FormDescription>\n                  MSRP: ${Number(field.value).toFixed(2)}\n                  <br />\n                  <small className=\"text-muted-foreground\">\n                    Suggested Markup: {pricing.suggestedMarkup}%\n                  </small>\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"pricing.markup\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Markup (%)</FormLabel>\n                <FormControl>\n                  <Input\n                    type=\"number\"\n                    step=\"0.1\"\n                    min=\"0\"\n                    max=\"100\"\n                    placeholder=\"30\"\n                    {...field}\n                    value={pricing.suggestedMarkup}\n                    onChange={(e) => {\n                      const value = parseFloat(e.target.value) || 30\n                      field.onChange(value)\n                      logOperation('Markup changed', {\n                        value,\n                        user: session?.user?.name,\n                        timestamp: getCurrentDateTime(),\n                      })\n                    }}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Final Price: ${pricing.finalPrice}\n                  <br />\n                  <small className=\"text-muted-foreground\">\n                    Est. Profit: ${pricing.profit}\n                  </small>\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        {/* Discount Section */}\n        <div className=\"space-y-4\">\n          <FormField\n            control={form.control}\n            name=\"pricing.discount.type\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Discount Type</FormLabel>\n                <Select\n                  value={field.value}\n                  onValueChange={(value) => {\n                    field.onChange(value)\n                    logOperation('Discount type changed', {\n                      value,\n                      user: session?.user?.name,\n                      timestamp: getCurrentDateTime(),\n                    })\n                  }}\n                >\n                  <FormControl>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select discount type\" />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    {discountTypes.map((type) => (\n                      <SelectItem key={type.value} value={type.value}>\n                        {type.label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          {form.watch('pricing.discount.type') !== 'none' && (\n            <>\n              <FormField\n                control={form.control}\n                name=\"pricing.discount.value\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Discount Value</FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"number\"\n                        step={form.watch('pricing.discount.type') === 'percentage' ? '1' : '0.01'}\n                        min=\"0\"\n                        max={form.watch('pricing.discount.type') === 'percentage' ? '100' : undefined}\n                        placeholder={form.watch('pricing.discount.type') === 'percentage' ? '10' : '5.00'}\n                        {...field}\n                        onChange={(e) => {\n                          const value = parseFloat(e.target.value) || 0\n                          field.onChange(value)\n                          logOperation('Discount value changed', {\n                            value,\n                            type: form.watch('pricing.discount.type'),\n                            user: session?.user?.name,\n                            timestamp: getCurrentDateTime(),\n                          })\n                        }}\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      {form.watch('pricing.discount.type') === 'percentage'\n                        ? 'Enter percentage (0-100)'\n                        : 'Enter fixed amount'}\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <div className=\"grid gap-4 md:grid-cols-2\">\n                <FormField\n                  control={form.control}\n                  name=\"pricing.discount.startDate\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Start Date</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"datetime-local\"\n                          {...field}\n                          value={field.value ? new Date(field.value).toISOString().slice(0, 16) : ''}\n                          onChange={(e) => {\n                            field.onChange(e.target.value ? new Date(e.target.value) : undefined)\n                            logOperation('Discount start date changed', {\n                              value: e.target.value,\n                              user: session?.user?.name,\n                              timestamp: getCurrentDateTime(),\n                            })\n                          }}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"pricing.discount.endDate\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>End Date</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"datetime-local\"\n                          {...field}\n                          value={field.value ? new Date(field.value).toISOString().slice(0, 16) : ''}\n                          onChange={(e) => {\n                            field.onChange(e.target.value ? new Date(e.target.value) : undefined)\n                            logOperation('Discount end date changed', {\n                              value: e.target.value,\n                              user: session?.user?.name,\n                              timestamp: getCurrentDateTime(),\n                            })\n                          }}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n            </>\n          )}\n        </div>\n\n        {/* Description */}\n        <FormField\n          control={form.control}\n          name=\"description\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Description</FormLabel>\n              <FormControl>\n                <Textarea\n                  placeholder=\"Product description\"\n                  className=\"min-h-[100px]\"\n                  {...field}\n                  onChange={(e) => {\n                    field.onChange(e)\n                    logOperation('Description updated', {\n                      length: e.target.value.length,\n                      user: session?.user?.name,\n                      timestamp: getCurrentDateTime(),\n                    })\n                  }}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Images Section */}\n        <div className=\"space-y-4\">\n          <FormLabel>Product Images</FormLabel>\n          <div className=\"flex flex-wrap gap-4\">\n            {images?.map((image, index) => (\n              <Card key={index} className=\"relative w-[150px] h-[150px]\">\n                <CardContent className=\"p-0\">\n                  <Image\n                    src={image}\n                    alt={`Product image ${index + 1}`}\n                    width={150}\n                    height={150}\n                    className=\"object-cover rounded-lg\"\n                  />\n                  <Button\n                    variant=\"destructive\"\n                    size=\"icon\"\n                    className=\"absolute top-2 right-2\"\n                    onClick={() => {\n                      if (confirm('Are you sure you want to delete this image?')) {\n                        const newImages = images.filter((_, i) => i !== index)\n                        form.setValue('images', newImages)\n                        logOperation('Image removed', {\n                          imageIndex: index,\n                          user: session?.user?.name,\n                          was: image,\n                          timestamp: getCurrentDateTime(),\n                        })\n                      }\n                    }}\n                  >\n                    \xD7\n                  </Button>\n                </CardContent>\n              </Card>\n            ))}\n            <Card className=\"w-[150px] h-[150px] flex items-center justify-center\">\n              <CardContent className=\"p-0\">\n                <UploadButton\n                  endpoint=\"imageUploader\"\n                  onClientUploadComplete={(res) => {\n                    if (res && res[0] && (res[0].ufsUrl || res[0].url)) {\n                      const newImages = [...images, res[0].ufsUrl || res[0].url]\n                      form.setValue('images', newImages)\n                      logOperation('Image uploaded', {\n                        url: res[0].ufsUrl || res[0].url,\n                        user: session?.user?.name,\n                        timestamp: getCurrentDateTime(),\n                      })\n                      toast({\n                        description: 'Image uploaded successfully',\n                      })\n                    }\n                  }}\n                  onUploadError={(error: Error) => {\n                    logOperation('Image upload error', {\n                      error: error.message,\n                      user: session?.user?.name,\n                      timestamp: getCurrentDateTime(),\n                    })\n                    toast({\n                      variant: 'destructive',\n                      description: error.message,\n                    })\n                  }}\n                />\n              </CardContent>\n            </Card>\n          </div>\n          <FormMessage />\n        </div>\n\n        {/* Colors */}\n        <div className=\"space-y-4\">\n          <FormLabel>Available Colors</FormLabel>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            {predefinedColors.map((color) => {\n              const selectedColors = form.watch('colors') || []\n              const isChecked = selectedColors.some((c) => c.hex === color.hex)\n\n              return (\n                <div key={color.hex} className=\"flex items-center space-x-2\">\n                  <Checkbox\n                    checked={isChecked}\n                    onCheckedChange={(checked) => {\n                      let newColors\n                      if (checked) {\n                        newColors = [...selectedColors, { ...color, inStock: true }]\n                      } else {\n                        newColors = selectedColors.filter((c) => c.hex !== color.hex)\n                      }\n                      form.setValue('colors', newColors)\n                      logOperation('Colors updated', {\n                        color: color.name,\n                        action: checked ? 'added' : 'removed',\n                        user: session?.user?.name,\n                        timestamp: getCurrentDateTime(),\n                      })\n                    }}\n                  />\n                  <label className=\"flex items-center gap-2\">\n                    <div\n                      className=\"w-4 h-4 rounded-full border\"\n                      style={{ backgroundColor: color.hex }}\n                    />\n                    {color.name}\n                  </label>\n                </div>\n              )\n            })}\n          </div>\n        </div>\n\n        {/* Sizes */}\n        <div className=\"space-y-4\">\n          <FormField\n            control={form.control}\n            name=\"sizes\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Available Sizes</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"XS,S,M,L,XL\"\n                    {...field}\n                    value={field.value?.join(',')}\n                    onChange={(e) => {\n                      const sizes = e.target.value.split(',').map(s => s.trim()).filter(Boolean)\n                      field.onChange(sizes)\n                      logOperation('Sizes updated', {\n                        sizes,\n                        user: session?.user?.name,\n                        timestamp: getCurrentDateTime(),\n                      })\n                    }}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Enter sizes separated by commas\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        {/* Inventory Section */}\n        <div className=\"grid gap-6 md:grid-cols-2\">\n          <FormField\n            control={form.control}\n            name=\"countInStock\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Stock Quantity</FormLabel>\n                <FormControl>\n                  <Input\n                    type=\"number\"\n                    min=\"0\"\n                    placeholder=\"0\"\n                    {...field}\n                    onChange={(e) => {\n                      const value = parseInt(e.target.value) || 0\n                      field.onChange(value)\n                      logOperation('Stock quantity changed', {\n                        value,\n                        user: session?.user?.name,\n                        timestamp: getCurrentDateTime(),\n                      })\n                    }}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"warehouse.provider\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Warehouse Provider</FormLabel>\n                <Select\n                  value={field.value}\n                  onValueChange={(value) => {\n                    field.onChange(value)\n                    logOperation('Warehouse provider changed', {\n                      value,\n                      user: session?.user?.name,\n                      timestamp: getCurrentDateTime(),\n                    })\n                  }}\n                >\n                  <FormControl>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select provider\" />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    {warehouseProviders.map((provider) => (\n                      <SelectItem key={provider.value} value={provider.value}>\n                        {provider.label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        {/* Publication Status */}\n        <FormField\n          control={form.control}\n          name=\"isPublished\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\n              <FormControl>\n                <Checkbox\n                  checked={field.value}\n                  onCheckedChange={(checked) => {\n                    field.onChange(checked)\n                    logOperation('Publication status changed', {\n                      published: checked,\n                      user: session?.user?.name,\n                      timestamp: getCurrentDateTime(),\n                    })\n                  }}\n                />\n              </FormControl>\n              <div className=\"space-y-1 leading-none\">\n                <FormLabel>Ready to Publish</FormLabel>\n                <FormDescription>\n                  This will submit the product for review before publication.\n                </FormDescription>\n              </div>\n            </FormItem>\n          )}\n        />\n\n        {/* Submit Button */}\n        <Button type=\"submit\" disabled={loading} className=\"w-full\">\n          {loading ? 'Submitting...' : type === 'Create' ? 'Create Product' : 'Update Product'}\n        </Button>\n      </form>\n    </Form>\n  )\n}"],
      names: ["ProductForm", "getCurrentDateTime", "Date", "toISOString", "slice", "replace", "getCurrentUser", "session", "name", "user", "timestamp", "logOperation", "operation", "details", "console", "log", "environment", "process", "env", "NODE_ENV", "userAgent", "window", "navigator", "handleError", "error", "errorMessage", "Error", "message", "DiscountSchema", "z", "object", "type", "enum", "value", "number", "min", "optional", "startDate", "date", "endDate", "PricingSchema", "basePrice", "markup", "max", "profit", "commission", "finalPrice", "discount", "WarehouseSchema", "provider", "sku", "string", "availableQuantity", "MetricsSchema", "views", "sales", "revenue", "returns", "rating", "avgRating", "numReviews", "numSales", "ratingDistribution", "array", "length", "ProductInputSchema", "slug", "category", "images", "brand", "description", "price", "listPrice", "countInStock", "tags", "sizes", "colors", "hex", "inStock", "boolean", "isPublished", "warehouse", "metrics", "pricing", "status", "createdAt", "updatedAt", "createdBy", "updatedBy", "ProductUpdateSchema", "partial", "warehouseProviders", "label", "predefinedColors", "discountTypes", "defaultValues", "undefined", "product", "productId", "router", "useRouter", "toast", "useToast", "data", "useSession", "loading", "setLoading", "useState", "form", "useForm", "resolver", "zodResolver", "calculatePricing", "customMarkup", "markupAmount", "commissionAmount", "now", "isValidDate", "Math", "Number", "toFixed", "suggestedMarkup", "originalPrice", "onSubmit", "values", "currentUser", "variant", "title", "submissionData", "trim", "map", "color", "res", "createProduct", "success", "push", "refresh", "watch", "Form", "handleSubmit", "className", "div", "FormField", "control", "render", "field", "FormItem", "FormLabel", "FormControl", "Input", "placeholder", "onChange", "e", "target", "FormMessage", "Button", "onClick", "newSlug", "toSlug", "getValues", "setValue", "step", "parseFloat", "currentListPrice", "FormDescription", "br", "small", "Select", "onValueChange", "SelectTrigger", "SelectValue", "SelectContent", "SelectItem", "Textarea", "image", "index", "Card", "CardContent", "Image", "src", "alt", "width", "height", "size", "confirm", "newImages", "filter", "_", "i", "imageIndex", "was", "UploadButton", "endpoint", "onClientUploadComplete", "ufsUrl", "url", "onUploadError", "selectedColors", "isChecked", "some", "c", "Checkbox", "checked", "onCheckedChange", "newColors", "action", "style", "backgroundColor", "join", "split", "s", "Boolean", "parseInt", "published", "disabled"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "241fdda5dc587e77709f25264e2cf41006c1c55a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1p3wa9hmek = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1p3wa9hmek();
cov_1p3wa9hmek().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1p3wa9hmek().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1p3wa9hmek().f[0]++;
    cov_1p3wa9hmek().s[2]++;
    return ProductForm;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[3]++, require("react/jsx-runtime"));
const _zod =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[4]++, require("@hookform/resolvers/zod"));
const _image =
/* istanbul ignore next */
(/*#__PURE__*/cov_1p3wa9hmek().s[5]++, _interop_require_default(require("next/image")));
const _navigation =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[6]++, require("next/navigation"));
const _reacthookform =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[7]++, require("react-hook-form"));
const _react =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[8]++, require("next-auth/react"));
const _react1 =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[9]++, require("react"));
const _button =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[10]++, require("../../../../../../../components/ui/button"));
const _card =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[11]++, require("../../../../../../../components/ui/card"));
const _form =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[12]++, require("../../../../../../../components/ui/form"));
const _input =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[13]++, require("../../../../../../../components/ui/input"));
const _textarea =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[14]++, require("../../../../../../../components/ui/textarea"));
const _select =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[15]++, require("../../../../../../../components/ui/select"));
const _usetoast =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[16]++, require("../../../../../../../hooks/use-toast"));
const _productactions =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[17]++, require("../../../../../../../lib/actions/product.actions"));
const _uploadthing =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[18]++, require("../../../../../../../lib/uploadthing"));
const _checkbox =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[19]++, require("../../../../../../../components/ui/checkbox"));
const _utils =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[20]++, require("../../../../../../../lib/utils"));
const _zod1 =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[21]++, require("zod"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1p3wa9hmek().f[1]++;
  cov_1p3wa9hmek().s[22]++;
  return /* istanbul ignore next */(cov_1p3wa9hmek().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1p3wa9hmek().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1p3wa9hmek().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1p3wa9hmek().b[0][1]++, {
    default: obj
  });
}
// Utility Functions
/* istanbul ignore next */
cov_1p3wa9hmek().s[23]++;
const getCurrentDateTime = () => {
  /* istanbul ignore next */
  cov_1p3wa9hmek().f[2]++;
  cov_1p3wa9hmek().s[24]++;
  return new Date().toISOString().slice(0, 19).replace('T', ' ');
};
/* istanbul ignore next */
cov_1p3wa9hmek().s[25]++;
const getCurrentUser = session => {
  /* istanbul ignore next */
  cov_1p3wa9hmek().f[3]++;
  cov_1p3wa9hmek().s[26]++;
  return {
    name:
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[2][0]++, session?.user?.name) ||
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[2][1]++, 'Guest User'),
    timestamp: getCurrentDateTime()
  };
};
/* istanbul ignore next */
cov_1p3wa9hmek().s[27]++;
const logOperation = (operation, details) => {
  /* istanbul ignore next */
  cov_1p3wa9hmek().f[4]++;
  const timestamp =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().s[28]++, getCurrentDateTime());
  /* istanbul ignore next */
  cov_1p3wa9hmek().s[29]++;
  console.log(`[${timestamp}] ${operation}`, {
    ...details,
    environment:
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[3][0]++, process.env.NODE_ENV) ||
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[3][1]++, 'development'),
    userAgent: typeof window !== 'undefined' ?
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[4][0]++, window.navigator.userAgent) :
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[4][1]++, 'server')
  });
};
/* istanbul ignore next */
cov_1p3wa9hmek().s[30]++;
const handleError = (error, operation) => {
  /* istanbul ignore next */
  cov_1p3wa9hmek().f[5]++;
  const errorMessage =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().s[31]++, error instanceof Error ?
  /* istanbul ignore next */
  (cov_1p3wa9hmek().b[5][0]++, error.message) :
  /* istanbul ignore next */
  (cov_1p3wa9hmek().b[5][1]++, 'An unexpected error occurred'));
  /* istanbul ignore next */
  cov_1p3wa9hmek().s[32]++;
  console.error(`[${getCurrentDateTime()}] ${operation} failed:`, errorMessage);
};
// Zod Schemas
const DiscountSchema =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[33]++, _zod1.z.object({
  type: _zod1.z.enum(['none', 'percentage', 'fixed']),
  value: _zod1.z.number().min(0).optional(),
  startDate: _zod1.z.date().optional(),
  endDate: _zod1.z.date().optional()
}));
const PricingSchema =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[34]++, _zod1.z.object({
  basePrice: _zod1.z.number().min(0),
  markup: _zod1.z.number().min(0).max(100),
  profit: _zod1.z.number().min(0),
  commission: _zod1.z.number().min(0),
  finalPrice: _zod1.z.number().min(0),
  discount: DiscountSchema
}));
const WarehouseSchema =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[35]++, _zod1.z.object({
  provider: _zod1.z.enum(['ShipBob', '4PX']),
  sku: _zod1.z.string().min(1),
  availableQuantity: _zod1.z.number().min(0)
}));
const MetricsSchema =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[36]++, _zod1.z.object({
  views: _zod1.z.number().min(0),
  sales: _zod1.z.number().min(0),
  revenue: _zod1.z.number().min(0),
  returns: _zod1.z.number().min(0),
  rating: _zod1.z.number().min(0).max(5),
  avgRating: _zod1.z.number().min(0).max(5),
  numReviews: _zod1.z.number().min(0),
  numSales: _zod1.z.number().min(0),
  ratingDistribution: _zod1.z.array(_zod1.z.number()).length(5)
}));
const ProductInputSchema =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[37]++, _zod1.z.object({
  name: _zod1.z.string().min(1, 'Product name is required'),
  slug: _zod1.z.string().min(1, 'Slug is required'),
  category: _zod1.z.string().min(1, 'Category is required'),
  images: _zod1.z.array(_zod1.z.string()).min(1, 'At least one image is required'),
  brand: _zod1.z.string().min(1, 'Brand is required'),
  description: _zod1.z.string().min(1, 'Description is required'),
  price: _zod1.z.number().min(0, 'Price must be non-negative'),
  listPrice: _zod1.z.number().min(0, 'List price must be non-negative'),
  countInStock: _zod1.z.number().min(0, 'Stock must be non-negative'),
  tags: _zod1.z.array(_zod1.z.string()).optional(),
  sizes: _zod1.z.array(_zod1.z.string()).optional(),
  colors: _zod1.z.array(_zod1.z.object({
    name: _zod1.z.string(),
    hex: _zod1.z.string(),
    inStock: _zod1.z.boolean()
  })).optional(),
  isPublished: _zod1.z.boolean(),
  warehouse: WarehouseSchema,
  metrics: MetricsSchema,
  pricing: PricingSchema,
  status: _zod1.z.enum(['draft', 'pending', 'published']),
  createdAt: _zod1.z.date(),
  updatedAt: _zod1.z.date(),
  createdBy: _zod1.z.string(),
  updatedBy: _zod1.z.string()
}));
const ProductUpdateSchema =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[38]++, ProductInputSchema.partial());
// Constants
const warehouseProviders =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[39]++, [{
  value: 'ShipBob',
  label: 'ShipBob'
}, {
  value: '4PX',
  label: '4PX'
}]);
const predefinedColors =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[40]++, [{
  name: 'Black',
  hex: '#000000'
}, {
  name: 'White',
  hex: '#FFFFFF'
}, {
  name: 'Red',
  hex: '#FF0000'
}, {
  name: 'Blue',
  hex: '#0000FF'
}, {
  name: 'Green',
  hex: '#00FF00'
}, {
  name: 'Yellow',
  hex: '#FFFF00'
}, {
  name: 'Gray',
  hex: '#808080'
}, {
  name: 'Purple',
  hex: '#800080'
}]);
const discountTypes =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[41]++, [{
  value: 'none',
  label: 'No Discount'
}, {
  value: 'percentage',
  label: 'Percentage (%)'
}, {
  value: 'fixed',
  label: 'Fixed Amount ($)'
}]);
// Default Values
const defaultValues =
/* istanbul ignore next */
(cov_1p3wa9hmek().s[42]++, {
  name: '',
  slug: '',
  category: '',
  images: [],
  brand: '',
  description: '',
  price: 0,
  listPrice: 0,
  countInStock: 0,
  tags: ['new-arrival'],
  sizes: [],
  colors: [],
  isPublished: false,
  warehouse: {
    provider: 'ShipBob',
    sku: '',
    availableQuantity: 0
  },
  metrics: {
    views: 0,
    sales: 0,
    revenue: 0,
    returns: 0,
    rating: 0,
    avgRating: 0,
    numReviews: 0,
    numSales: 0,
    ratingDistribution: [0, 0, 0, 0, 0]
  },
  pricing: {
    basePrice: 0,
    markup: 30,
    profit: 0,
    commission: 3,
    finalPrice: 0,
    discount: {
      type: 'none',
      value: 0,
      startDate: undefined,
      endDate: undefined
    }
  },
  status: 'draft',
  createdAt: new Date(),
  updatedAt: new Date(),
  createdBy: '',
  updatedBy: ''
});
function ProductForm({
  type,
  product,
  productId
}) {
  /* istanbul ignore next */
  cov_1p3wa9hmek().f[6]++;
  const router =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().s[43]++, (0, _navigation.useRouter)());
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().s[44]++, (0, _usetoast.useToast)());
  const {
    data: session
  } =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().s[45]++, (0, _react.useSession)());
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().s[46]++, (0, _react1.useState)(false));
  const form =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().s[47]++, (0, _reacthookform.useForm)({
    resolver: (0, _zod.zodResolver)(type === 'Update' ?
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[6][0]++, ProductUpdateSchema) :
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[6][1]++, ProductInputSchema)),
    defaultValues:
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[8][0]++, type === 'Update') &&
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[8][1]++, product) ?
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[7][0]++, product) :
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[7][1]++, defaultValues)
  }));
  // Price calculation function
  /* istanbul ignore next */
  cov_1p3wa9hmek().s[48]++;
  const calculatePricing = (basePrice, listPrice =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().b[9][0]++, 0), customMarkup, discount) => {
    /* istanbul ignore next */
    cov_1p3wa9hmek().f[7]++;
    cov_1p3wa9hmek().s[49]++;
    logOperation('Calculating pricing', {
      basePrice,
      listPrice,
      customMarkup,
      user: session?.user?.name,
      timestamp: getCurrentDateTime()
    });
    const markup =
    /* istanbul ignore next */
    (cov_1p3wa9hmek().s[50]++,
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[10][0]++, customMarkup) ||
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[10][1]++, 30));
    const commission =
    /* istanbul ignore next */
    (cov_1p3wa9hmek().s[51]++, 3);
    const markupAmount =
    /* istanbul ignore next */
    (cov_1p3wa9hmek().s[52]++, basePrice * (markup / 100));
    const commissionAmount =
    /* istanbul ignore next */
    (cov_1p3wa9hmek().s[53]++, basePrice * (commission / 100));
    let finalPrice =
    /* istanbul ignore next */
    (cov_1p3wa9hmek().s[54]++, basePrice + markupAmount);
    /* istanbul ignore next */
    cov_1p3wa9hmek().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[12][0]++, discount) &&
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[12][1]++, discount.type !== 'none') &&
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[12][2]++, discount.value > 0)) {
      /* istanbul ignore next */
      cov_1p3wa9hmek().b[11][0]++;
      const now =
      /* istanbul ignore next */
      (cov_1p3wa9hmek().s[56]++, new Date());
      const isValidDate =
      /* istanbul ignore next */
      (cov_1p3wa9hmek().s[57]++, (
      /* istanbul ignore next */
      (cov_1p3wa9hmek().b[13][0]++, !discount.startDate) ||
      /* istanbul ignore next */
      (cov_1p3wa9hmek().b[13][1]++, now >= new Date(discount.startDate))) && (
      /* istanbul ignore next */
      (cov_1p3wa9hmek().b[13][2]++, !discount.endDate) ||
      /* istanbul ignore next */
      (cov_1p3wa9hmek().b[13][3]++, now <= new Date(discount.endDate))));
      /* istanbul ignore next */
      cov_1p3wa9hmek().s[58]++;
      if (isValidDate) {
        /* istanbul ignore next */
        cov_1p3wa9hmek().b[14][0]++;
        cov_1p3wa9hmek().s[59]++;
        if (discount.type === 'percentage') {
          /* istanbul ignore next */
          cov_1p3wa9hmek().b[15][0]++;
          cov_1p3wa9hmek().s[60]++;
          finalPrice = finalPrice * (1 - discount.value / 100);
        } else {
          /* istanbul ignore next */
          cov_1p3wa9hmek().b[15][1]++;
          cov_1p3wa9hmek().s[61]++;
          if (discount.type === 'fixed') {
            /* istanbul ignore next */
            cov_1p3wa9hmek().b[16][0]++;
            cov_1p3wa9hmek().s[62]++;
            finalPrice = Math.max(0, finalPrice - discount.value);
          } else
          /* istanbul ignore next */
          {
            cov_1p3wa9hmek().b[16][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_1p3wa9hmek().b[14][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1p3wa9hmek().b[11][1]++;
    }
    cov_1p3wa9hmek().s[63]++;
    return {
      basePrice,
      markup,
      profit: Number((markupAmount - commissionAmount).toFixed(2)),
      commission: Number(commissionAmount.toFixed(2)),
      finalPrice: Number(finalPrice.toFixed(2)),
      suggestedMarkup: listPrice > basePrice ?
      /* istanbul ignore next */
      (cov_1p3wa9hmek().b[17][0]++, Number(((listPrice - basePrice) / basePrice * 100).toFixed(1))) :
      /* istanbul ignore next */
      (cov_1p3wa9hmek().b[17][1]++, Number(markup.toFixed(1))),
      originalPrice: Number((basePrice + markupAmount).toFixed(2))
    };
  };
  // Form submission handler
  async function onSubmit(values) {
    /* istanbul ignore next */
    cov_1p3wa9hmek().f[8]++;
    cov_1p3wa9hmek().s[64]++;
    setLoading(true);
    const currentUser =
    /* istanbul ignore next */
    (cov_1p3wa9hmek().s[65]++,
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[18][0]++, session?.user?.name) ||
    /* istanbul ignore next */
    (cov_1p3wa9hmek().b[18][1]++, 'unknown'));
    /* istanbul ignore next */
    cov_1p3wa9hmek().s[66]++;
    logOperation('Form submission started', {
      user: currentUser,
      timestamp: getCurrentDateTime()
    });
    /* istanbul ignore next */
    cov_1p3wa9hmek().s[67]++;
    toast({
      description: 'Creating product...'
    });
    /* istanbul ignore next */
    cov_1p3wa9hmek().s[68]++;
    try {
      /* istanbul ignore next */
      cov_1p3wa9hmek().s[69]++;
      if (!values.images?.length) {
        /* istanbul ignore next */
        cov_1p3wa9hmek().b[19][0]++;
        cov_1p3wa9hmek().s[70]++;
        toast({
          variant: 'destructive',
          title: 'Error',
          description: 'Please add at least one product image'
        });
        /* istanbul ignore next */
        cov_1p3wa9hmek().s[71]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1p3wa9hmek().b[19][1]++;
      }
      const pricing =
      /* istanbul ignore next */
      (cov_1p3wa9hmek().s[72]++, calculatePricing(values.price, values.listPrice, values.pricing?.markup, values.pricing?.discount));
      const submissionData =
      /* istanbul ignore next */
      (cov_1p3wa9hmek().s[73]++, {
        ...values,
        name: values.name.trim(),
        slug: values.slug.trim(),
        category: values.category.trim(),
        brand: values.brand.trim(),
        description: values.description.trim(),
        price: Number(values.price),
        listPrice:
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[20][0]++, Number(values.listPrice)) ||
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[20][1]++, Number(values.price)),
        countInStock:
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[21][0]++, Number(values.countInStock)) ||
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[21][1]++, 0),
        tags:
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[22][0]++, values.tags) ||
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[22][1]++, ['new-arrival']),
        sizes:
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[23][0]++, values.sizes) ||
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[23][1]++, []),
        colors: values.colors.map(color => {
          /* istanbul ignore next */
          cov_1p3wa9hmek().f[9]++;
          cov_1p3wa9hmek().s[74]++;
          return {
            name: color.name,
            hex: color.hex,
            inStock:
            /* istanbul ignore next */
            (cov_1p3wa9hmek().b[24][0]++, color.inStock) ??
            /* istanbul ignore next */
            (cov_1p3wa9hmek().b[24][1]++, true)
          };
        }),
        isPublished:
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[25][0]++, values.isPublished) ||
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[25][1]++, false),
        pricing: {
          basePrice: Number(pricing.basePrice),
          markup: Number(pricing.suggestedMarkup),
          profit: Number(pricing.profit),
          commission: Number(pricing.commission),
          finalPrice: Number(pricing.finalPrice),
          discount: {
            ...values.pricing?.discount,
            startDate: values.pricing?.discount?.startDate ?
            /* istanbul ignore next */
            (cov_1p3wa9hmek().b[26][0]++, new Date(values.pricing.discount.startDate)) :
            /* istanbul ignore next */
            (cov_1p3wa9hmek().b[26][1]++, undefined),
            endDate: values.pricing?.discount?.endDate ?
            /* istanbul ignore next */
            (cov_1p3wa9hmek().b[27][0]++, new Date(values.pricing.discount.endDate)) :
            /* istanbul ignore next */
            (cov_1p3wa9hmek().b[27][1]++, undefined)
          }
        },
        warehouse: {
          provider:
          /* istanbul ignore next */
          (cov_1p3wa9hmek().b[28][0]++, values.warehouse.provider) ||
          /* istanbul ignore next */
          (cov_1p3wa9hmek().b[28][1]++, 'ShipBob'),
          sku:
          /* istanbul ignore next */
          (cov_1p3wa9hmek().b[29][0]++, values.warehouse.sku) ||
          /* istanbul ignore next */
          (cov_1p3wa9hmek().b[29][1]++, `SKU-${Date.now()}`),
          availableQuantity:
          /* istanbul ignore next */
          (cov_1p3wa9hmek().b[30][0]++, Number(values.warehouse.availableQuantity)) ||
          /* istanbul ignore next */
          (cov_1p3wa9hmek().b[30][1]++, 0)
        },
        metrics: {
          views: 0,
          sales: 0,
          revenue: 0,
          returns: 0,
          rating: 0,
          avgRating: 0,
          numReviews: 0,
          numSales: 0,
          ratingDistribution: [0, 0, 0, 0, 0]
        },
        status: values.isPublished ?
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[31][0]++, 'pending') :
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[31][1]++, 'draft'),
        createdAt: new Date(),
        updatedAt: new Date(),
        createdBy: currentUser,
        updatedBy: currentUser
      });
      /* istanbul ignore next */
      cov_1p3wa9hmek().s[75]++;
      logOperation('Submitting product data', {
        product: submissionData.name,
        user: currentUser,
        timestamp: getCurrentDateTime()
      });
      const res =
      /* istanbul ignore next */
      (cov_1p3wa9hmek().s[76]++, await (0, _productactions.createProduct)(submissionData));
      /* istanbul ignore next */
      cov_1p3wa9hmek().s[77]++;
      if (!res.success) {
        /* istanbul ignore next */
        cov_1p3wa9hmek().b[32][0]++;
        cov_1p3wa9hmek().s[78]++;
        handleError(res.message, 'Product creation');
        /* istanbul ignore next */
        cov_1p3wa9hmek().s[79]++;
        toast({
          variant: 'destructive',
          title: 'Error',
          description: res.message
        });
        /* istanbul ignore next */
        cov_1p3wa9hmek().s[80]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1p3wa9hmek().b[32][1]++;
      }
      cov_1p3wa9hmek().s[81]++;
      logOperation('Product created successfully', {
        product: submissionData.name,
        user: currentUser,
        timestamp: getCurrentDateTime()
      });
      /* istanbul ignore next */
      cov_1p3wa9hmek().s[82]++;
      toast({
        title: 'Success',
        description: 'Product created successfully. Awaiting admin review.'
      });
      /* istanbul ignore next */
      cov_1p3wa9hmek().s[83]++;
      router.push('/seller/dashboard/products');
      /* istanbul ignore next */
      cov_1p3wa9hmek().s[84]++;
      router.refresh();
    } catch (error) {
      /* istanbul ignore next */
      cov_1p3wa9hmek().s[85]++;
      handleError(error, 'Form submission');
      /* istanbul ignore next */
      cov_1p3wa9hmek().s[86]++;
      toast({
        variant: 'destructive',
        title: 'Error',
        description: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[33][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[33][1]++, 'An unexpected error occurred')
      });
    } finally {
      /* istanbul ignore next */
      cov_1p3wa9hmek().s[87]++;
      setLoading(false);
    }
  }
  // Form watchers
  const images =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().s[88]++, form.watch('images'));
  const price =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().s[89]++, form.watch('price'));
  const listPrice =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().s[90]++, form.watch('listPrice'));
  const markup =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().s[91]++, form.watch('pricing.markup'));
  const discount =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().s[92]++, form.watch('pricing.discount'));
  const pricing =
  /* istanbul ignore next */
  (cov_1p3wa9hmek().s[93]++, calculatePricing(
  /* istanbul ignore next */
  (cov_1p3wa9hmek().b[34][0]++, Number(price)) ||
  /* istanbul ignore next */
  (cov_1p3wa9hmek().b[34][1]++, 0),
  /* istanbul ignore next */
  (cov_1p3wa9hmek().b[35][0]++, Number(listPrice)) ||
  /* istanbul ignore next */
  (cov_1p3wa9hmek().b[35][1]++, 0),
  /* istanbul ignore next */
  (cov_1p3wa9hmek().b[36][0]++, Number(markup)) ||
  /* istanbul ignore next */
  (cov_1p3wa9hmek().b[36][1]++, 30), discount));
  /* istanbul ignore next */
  cov_1p3wa9hmek().s[94]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_form.Form, {
    ...form,
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("form", {
      onSubmit: form.handleSubmit(onSubmit),
      className: "space-y-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid gap-6 md:grid-cols-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
          control: form.control,
          name: "name",
          render: ({
            field
          }) => {
            /* istanbul ignore next */
            cov_1p3wa9hmek().f[10]++;
            cov_1p3wa9hmek().s[95]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                children: "Product Name"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                  placeholder: "Enter product name",
                  ...field,
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().f[11]++;
                    cov_1p3wa9hmek().s[96]++;
                    field.onChange(e);
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[97]++;
                    logOperation('Product name changed', {
                      value: e.target.value,
                      user: session?.user?.name,
                      timestamp: getCurrentDateTime()
                    });
                  }
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
            });
          }
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
          control: form.control,
          name: "slug",
          render: ({
            field
          }) => {
            /* istanbul ignore next */
            cov_1p3wa9hmek().f[12]++;
            cov_1p3wa9hmek().s[98]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                children: "Slug"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex gap-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                    placeholder: "product-url-slug",
                    ...field,
                    onChange: e => {
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().f[13]++;
                      cov_1p3wa9hmek().s[99]++;
                      field.onChange(e);
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().s[100]++;
                      logOperation('Slug changed', {
                        value: e.target.value,
                        user: session?.user?.name,
                        timestamp: getCurrentDateTime()
                      });
                    }
                  })
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                  type: "button",
                  variant: "outline",
                  onClick: () => {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().f[14]++;
                    const newSlug =
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().s[101]++, (0, _utils.toSlug)(form.getValues('name')));
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[102]++;
                    form.setValue('slug', newSlug);
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[103]++;
                    logOperation('Slug generated', {
                      value: newSlug,
                      user: session?.user?.name,
                      timestamp: getCurrentDateTime()
                    });
                  },
                  children: "Generate"
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
            });
          }
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid gap-6 md:grid-cols-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
          control: form.control,
          name: "category",
          render: ({
            field
          }) => {
            /* istanbul ignore next */
            cov_1p3wa9hmek().f[15]++;
            cov_1p3wa9hmek().s[104]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                children: "Category"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                  placeholder: "Product category",
                  ...field,
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().f[16]++;
                    cov_1p3wa9hmek().s[105]++;
                    field.onChange(e);
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[106]++;
                    logOperation('Category changed', {
                      value: e.target.value,
                      user: session?.user?.name,
                      timestamp: getCurrentDateTime()
                    });
                  }
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
            });
          }
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
          control: form.control,
          name: "brand",
          render: ({
            field
          }) => {
            /* istanbul ignore next */
            cov_1p3wa9hmek().f[17]++;
            cov_1p3wa9hmek().s[107]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                children: "Brand"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                  placeholder: "Product brand",
                  ...field,
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().f[18]++;
                    cov_1p3wa9hmek().s[108]++;
                    field.onChange(e);
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[109]++;
                    logOperation('Brand changed', {
                      value: e.target.value,
                      user: session?.user?.name,
                      timestamp: getCurrentDateTime()
                    });
                  }
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
            });
          }
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid gap-6 md:grid-cols-3",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
          control: form.control,
          name: "price",
          render: ({
            field
          }) => {
            /* istanbul ignore next */
            cov_1p3wa9hmek().f[19]++;
            cov_1p3wa9hmek().s[110]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                children: "Base Price"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                  type: "number",
                  step: "0.01",
                  min: "0",
                  placeholder: "0.00",
                  ...field,
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().f[20]++;
                    const value =
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().s[111]++,
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[37][0]++, parseFloat(e.target.value)) ||
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[37][1]++, 0));
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[112]++;
                    field.onChange(value);
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[113]++;
                    logOperation('Base price changed', {
                      value,
                      user: session?.user?.name,
                      timestamp: getCurrentDateTime()
                    });
                    const currentListPrice =
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().s[114]++, form.getValues('listPrice'));
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[115]++;
                    if (
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[39][0]++, !currentListPrice) ||
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[39][1]++, currentListPrice < value)) {
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().b[38][0]++;
                      cov_1p3wa9hmek().s[116]++;
                      form.setValue('listPrice', value);
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().s[117]++;
                      logOperation('List price auto-updated', {
                        value,
                        user: session?.user?.name,
                        timestamp: getCurrentDateTime()
                      });
                    } else
                    /* istanbul ignore next */
                    {
                      cov_1p3wa9hmek().b[38][1]++;
                    }
                  }
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormDescription, {
                children: ["Your cost: $", Number(field.value).toFixed(2), /*#__PURE__*/(0, _jsxruntime.jsx)("br", {}), /*#__PURE__*/(0, _jsxruntime.jsxs)("small", {
                  className: "text-muted-foreground",
                  children: ["Commission (3%): $", pricing.commission]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
            });
          }
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
          control: form.control,
          name: "listPrice",
          render: ({
            field
          }) => {
            /* istanbul ignore next */
            cov_1p3wa9hmek().f[21]++;
            cov_1p3wa9hmek().s[118]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                children: "List Price"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                  type: "number",
                  step: "0.01",
                  min: "0",
                  placeholder: "0.00",
                  ...field,
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().f[22]++;
                    const value =
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().s[119]++,
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[40][0]++, parseFloat(e.target.value)) ||
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[40][1]++, 0));
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[120]++;
                    field.onChange(value);
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[121]++;
                    logOperation('List price changed', {
                      value,
                      user: session?.user?.name,
                      timestamp: getCurrentDateTime()
                    });
                    const basePrice =
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().s[122]++, form.getValues('price'));
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[123]++;
                    if (
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[42][0]++, basePrice) &&
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[42][1]++, value > basePrice)) {
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().b[41][0]++;
                      const suggestedMarkup =
                      /* istanbul ignore next */
                      (cov_1p3wa9hmek().s[124]++, (value - basePrice) / basePrice * 100);
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().s[125]++;
                      form.setValue('pricing.markup', suggestedMarkup);
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().s[126]++;
                      logOperation('Markup auto-updated', {
                        value: suggestedMarkup,
                        user: session?.user?.name,
                        timestamp: getCurrentDateTime()
                      });
                    } else
                    /* istanbul ignore next */
                    {
                      cov_1p3wa9hmek().b[41][1]++;
                    }
                  }
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormDescription, {
                children: ["MSRP: $", Number(field.value).toFixed(2), /*#__PURE__*/(0, _jsxruntime.jsx)("br", {}), /*#__PURE__*/(0, _jsxruntime.jsxs)("small", {
                  className: "text-muted-foreground",
                  children: ["Suggested Markup: ", pricing.suggestedMarkup, "%"]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
            });
          }
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
          control: form.control,
          name: "pricing.markup",
          render: ({
            field
          }) => {
            /* istanbul ignore next */
            cov_1p3wa9hmek().f[23]++;
            cov_1p3wa9hmek().s[127]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                children: "Markup (%)"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                  type: "number",
                  step: "0.1",
                  min: "0",
                  max: "100",
                  placeholder: "30",
                  ...field,
                  value: pricing.suggestedMarkup,
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().f[24]++;
                    const value =
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().s[128]++,
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[43][0]++, parseFloat(e.target.value)) ||
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[43][1]++, 30));
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[129]++;
                    field.onChange(value);
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[130]++;
                    logOperation('Markup changed', {
                      value,
                      user: session?.user?.name,
                      timestamp: getCurrentDateTime()
                    });
                  }
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormDescription, {
                children: ["Final Price: $", pricing.finalPrice, /*#__PURE__*/(0, _jsxruntime.jsx)("br", {}), /*#__PURE__*/(0, _jsxruntime.jsxs)("small", {
                  className: "text-muted-foreground",
                  children: ["Est. Profit: $", pricing.profit]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
            });
          }
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
          control: form.control,
          name: "pricing.discount.type",
          render: ({
            field
          }) => {
            /* istanbul ignore next */
            cov_1p3wa9hmek().f[25]++;
            cov_1p3wa9hmek().s[131]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                children: "Discount Type"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                value: field.value,
                onValueChange: value => {
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().f[26]++;
                  cov_1p3wa9hmek().s[132]++;
                  field.onChange(value);
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().s[133]++;
                  logOperation('Discount type changed', {
                    value,
                    user: session?.user?.name,
                    timestamp: getCurrentDateTime()
                  });
                },
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
                      placeholder: "Select discount type"
                    })
                  })
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectContent, {
                  children: discountTypes.map(type => {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().f[27]++;
                    cov_1p3wa9hmek().s[134]++;
                    return /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: type.value,
                      children: type.label
                    }, type.value);
                  })
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
            });
          }
        }),
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[44][0]++, form.watch('pricing.discount.type') !== 'none') &&
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[44][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
            control: form.control,
            name: "pricing.discount.value",
            render: ({
              field
            }) => {
              /* istanbul ignore next */
              cov_1p3wa9hmek().f[28]++;
              cov_1p3wa9hmek().s[135]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                  children: "Discount Value"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                    type: "number",
                    step: form.watch('pricing.discount.type') === 'percentage' ?
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[45][0]++, '1') :
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[45][1]++, '0.01'),
                    min: "0",
                    max: form.watch('pricing.discount.type') === 'percentage' ?
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[46][0]++, '100') :
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[46][1]++, undefined),
                    placeholder: form.watch('pricing.discount.type') === 'percentage' ?
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[47][0]++, '10') :
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[47][1]++, '5.00'),
                    ...field,
                    onChange: e => {
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().f[29]++;
                      const value =
                      /* istanbul ignore next */
                      (cov_1p3wa9hmek().s[136]++,
                      /* istanbul ignore next */
                      (cov_1p3wa9hmek().b[48][0]++, parseFloat(e.target.value)) ||
                      /* istanbul ignore next */
                      (cov_1p3wa9hmek().b[48][1]++, 0));
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().s[137]++;
                      field.onChange(value);
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().s[138]++;
                      logOperation('Discount value changed', {
                        value,
                        type: form.watch('pricing.discount.type'),
                        user: session?.user?.name,
                        timestamp: getCurrentDateTime()
                      });
                    }
                  })
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormDescription, {
                  children: form.watch('pricing.discount.type') === 'percentage' ?
                  /* istanbul ignore next */
                  (cov_1p3wa9hmek().b[49][0]++, 'Enter percentage (0-100)') :
                  /* istanbul ignore next */
                  (cov_1p3wa9hmek().b[49][1]++, 'Enter fixed amount')
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
              });
            }
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "grid gap-4 md:grid-cols-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
              control: form.control,
              name: "pricing.discount.startDate",
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_1p3wa9hmek().f[30]++;
                cov_1p3wa9hmek().s[139]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                    children: "Start Date"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                      type: "datetime-local",
                      ...field,
                      value: field.value ?
                      /* istanbul ignore next */
                      (cov_1p3wa9hmek().b[50][0]++, new Date(field.value).toISOString().slice(0, 16)) :
                      /* istanbul ignore next */
                      (cov_1p3wa9hmek().b[50][1]++, ''),
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1p3wa9hmek().f[31]++;
                        cov_1p3wa9hmek().s[140]++;
                        field.onChange(e.target.value ?
                        /* istanbul ignore next */
                        (cov_1p3wa9hmek().b[51][0]++, new Date(e.target.value)) :
                        /* istanbul ignore next */
                        (cov_1p3wa9hmek().b[51][1]++, undefined));
                        /* istanbul ignore next */
                        cov_1p3wa9hmek().s[141]++;
                        logOperation('Discount start date changed', {
                          value: e.target.value,
                          user: session?.user?.name,
                          timestamp: getCurrentDateTime()
                        });
                      }
                    })
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
                });
              }
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
              control: form.control,
              name: "pricing.discount.endDate",
              render: ({
                field
              }) => {
                /* istanbul ignore next */
                cov_1p3wa9hmek().f[32]++;
                cov_1p3wa9hmek().s[142]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                    children: "End Date"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                      type: "datetime-local",
                      ...field,
                      value: field.value ?
                      /* istanbul ignore next */
                      (cov_1p3wa9hmek().b[52][0]++, new Date(field.value).toISOString().slice(0, 16)) :
                      /* istanbul ignore next */
                      (cov_1p3wa9hmek().b[52][1]++, ''),
                      onChange: e => {
                        /* istanbul ignore next */
                        cov_1p3wa9hmek().f[33]++;
                        cov_1p3wa9hmek().s[143]++;
                        field.onChange(e.target.value ?
                        /* istanbul ignore next */
                        (cov_1p3wa9hmek().b[53][0]++, new Date(e.target.value)) :
                        /* istanbul ignore next */
                        (cov_1p3wa9hmek().b[53][1]++, undefined));
                        /* istanbul ignore next */
                        cov_1p3wa9hmek().s[144]++;
                        logOperation('Discount end date changed', {
                          value: e.target.value,
                          user: session?.user?.name,
                          timestamp: getCurrentDateTime()
                        });
                      }
                    })
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
                });
              }
            })]
          })]
        }))]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
        control: form.control,
        name: "description",
        render: ({
          field
        }) => {
          /* istanbul ignore next */
          cov_1p3wa9hmek().f[34]++;
          cov_1p3wa9hmek().s[145]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
              children: "Description"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_textarea.Textarea, {
                placeholder: "Product description",
                className: "min-h-[100px]",
                ...field,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().f[35]++;
                  cov_1p3wa9hmek().s[146]++;
                  field.onChange(e);
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().s[147]++;
                  logOperation('Description updated', {
                    length: e.target.value.length,
                    user: session?.user?.name,
                    timestamp: getCurrentDateTime()
                  });
                }
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
          });
        }
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
          children: "Product Images"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex flex-wrap gap-4",
          children: [images?.map((image, index) => {
            /* istanbul ignore next */
            cov_1p3wa9hmek().f[36]++;
            cov_1p3wa9hmek().s[148]++;
            return /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
              className: "relative w-[150px] h-[150px]",
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
                className: "p-0",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_image.default, {
                  src: image,
                  alt: `Product image ${index + 1}`,
                  width: 150,
                  height: 150,
                  className: "object-cover rounded-lg"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
                  variant: "destructive",
                  size: "icon",
                  className: "absolute top-2 right-2",
                  onClick: () => {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().f[37]++;
                    cov_1p3wa9hmek().s[149]++;
                    if (confirm('Are you sure you want to delete this image?')) {
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().b[54][0]++;
                      const newImages =
                      /* istanbul ignore next */
                      (cov_1p3wa9hmek().s[150]++, images.filter((_, i) => {
                        /* istanbul ignore next */
                        cov_1p3wa9hmek().f[38]++;
                        cov_1p3wa9hmek().s[151]++;
                        return i !== index;
                      }));
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().s[152]++;
                      form.setValue('images', newImages);
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().s[153]++;
                      logOperation('Image removed', {
                        imageIndex: index,
                        user: session?.user?.name,
                        was: image,
                        timestamp: getCurrentDateTime()
                      });
                    } else
                    /* istanbul ignore next */
                    {
                      cov_1p3wa9hmek().b[54][1]++;
                    }
                  },
                  children: "\xd7"
                })]
              })
            }, index);
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
            className: "w-[150px] h-[150px] flex items-center justify-center",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
              className: "p-0",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_uploadthing.UploadButton, {
                endpoint: "imageUploader",
                onClientUploadComplete: res => {
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().f[39]++;
                  cov_1p3wa9hmek().s[154]++;
                  if (
                  /* istanbul ignore next */
                  (cov_1p3wa9hmek().b[56][0]++, res) &&
                  /* istanbul ignore next */
                  (cov_1p3wa9hmek().b[56][1]++, res[0]) && (
                  /* istanbul ignore next */
                  (cov_1p3wa9hmek().b[56][2]++, res[0].ufsUrl) ||
                  /* istanbul ignore next */
                  (cov_1p3wa9hmek().b[56][3]++, res[0].url))) {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().b[55][0]++;
                    const newImages =
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().s[155]++, [...images,
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[57][0]++, res[0].ufsUrl) ||
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[57][1]++, res[0].url)]);
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[156]++;
                    form.setValue('images', newImages);
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[157]++;
                    logOperation('Image uploaded', {
                      url:
                      /* istanbul ignore next */
                      (cov_1p3wa9hmek().b[58][0]++, res[0].ufsUrl) ||
                      /* istanbul ignore next */
                      (cov_1p3wa9hmek().b[58][1]++, res[0].url),
                      user: session?.user?.name,
                      timestamp: getCurrentDateTime()
                    });
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[158]++;
                    toast({
                      description: 'Image uploaded successfully'
                    });
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1p3wa9hmek().b[55][1]++;
                  }
                },
                onUploadError: error => {
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().f[40]++;
                  cov_1p3wa9hmek().s[159]++;
                  logOperation('Image upload error', {
                    error: error.message,
                    user: session?.user?.name,
                    timestamp: getCurrentDateTime()
                  });
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().s[160]++;
                  toast({
                    variant: 'destructive',
                    description: error.message
                  });
                }
              })
            })
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
          children: "Available Colors"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "grid grid-cols-2 md:grid-cols-4 gap-4",
          children: predefinedColors.map(color => {
            /* istanbul ignore next */
            cov_1p3wa9hmek().f[41]++;
            const selectedColors =
            /* istanbul ignore next */
            (cov_1p3wa9hmek().s[161]++,
            /* istanbul ignore next */
            (cov_1p3wa9hmek().b[59][0]++, form.watch('colors')) ||
            /* istanbul ignore next */
            (cov_1p3wa9hmek().b[59][1]++, []));
            const isChecked =
            /* istanbul ignore next */
            (cov_1p3wa9hmek().s[162]++, selectedColors.some(c => {
              /* istanbul ignore next */
              cov_1p3wa9hmek().f[42]++;
              cov_1p3wa9hmek().s[163]++;
              return c.hex === color.hex;
            }));
            /* istanbul ignore next */
            cov_1p3wa9hmek().s[164]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                checked: isChecked,
                onCheckedChange: checked => {
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().f[43]++;
                  let newColors;
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().s[165]++;
                  if (checked) {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().b[60][0]++;
                    cov_1p3wa9hmek().s[166]++;
                    newColors = [...selectedColors, {
                      ...color,
                      inStock: true
                    }];
                  } else {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().b[60][1]++;
                    cov_1p3wa9hmek().s[167]++;
                    newColors = selectedColors.filter(c => {
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().f[44]++;
                      cov_1p3wa9hmek().s[168]++;
                      return c.hex !== color.hex;
                    });
                  }
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().s[169]++;
                  form.setValue('colors', newColors);
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().s[170]++;
                  logOperation('Colors updated', {
                    color: color.name,
                    action: checked ?
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[61][0]++, 'added') :
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[61][1]++, 'removed'),
                    user: session?.user?.name,
                    timestamp: getCurrentDateTime()
                  });
                }
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
                className: "flex items-center gap-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "w-4 h-4 rounded-full border",
                  style: {
                    backgroundColor: color.hex
                  }
                }), color.name]
              })]
            }, color.hex);
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "space-y-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
          control: form.control,
          name: "sizes",
          render: ({
            field
          }) => {
            /* istanbul ignore next */
            cov_1p3wa9hmek().f[45]++;
            cov_1p3wa9hmek().s[171]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                children: "Available Sizes"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                  placeholder: "XS,S,M,L,XL",
                  ...field,
                  value: field.value?.join(','),
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().f[46]++;
                    const sizes =
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().s[172]++, e.target.value.split(',').map(s => {
                      /* istanbul ignore next */
                      cov_1p3wa9hmek().f[47]++;
                      cov_1p3wa9hmek().s[173]++;
                      return s.trim();
                    }).filter(Boolean));
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[174]++;
                    field.onChange(sizes);
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[175]++;
                    logOperation('Sizes updated', {
                      sizes,
                      user: session?.user?.name,
                      timestamp: getCurrentDateTime()
                    });
                  }
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormDescription, {
                children: "Enter sizes separated by commas"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
            });
          }
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid gap-6 md:grid-cols-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
          control: form.control,
          name: "countInStock",
          render: ({
            field
          }) => {
            /* istanbul ignore next */
            cov_1p3wa9hmek().f[48]++;
            cov_1p3wa9hmek().s[176]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                children: "Stock Quantity"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
                  type: "number",
                  min: "0",
                  placeholder: "0",
                  ...field,
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().f[49]++;
                    const value =
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().s[177]++,
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[62][0]++, parseInt(e.target.value)) ||
                    /* istanbul ignore next */
                    (cov_1p3wa9hmek().b[62][1]++, 0));
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[178]++;
                    field.onChange(value);
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().s[179]++;
                    logOperation('Stock quantity changed', {
                      value,
                      user: session?.user?.name,
                      timestamp: getCurrentDateTime()
                    });
                  }
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
            });
          }
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
          control: form.control,
          name: "warehouse.provider",
          render: ({
            field
          }) => {
            /* istanbul ignore next */
            cov_1p3wa9hmek().f[50]++;
            cov_1p3wa9hmek().s[180]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                children: "Warehouse Provider"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
                value: field.value,
                onValueChange: value => {
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().f[51]++;
                  cov_1p3wa9hmek().s[181]++;
                  field.onChange(value);
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().s[182]++;
                  logOperation('Warehouse provider changed', {
                    value,
                    user: session?.user?.name,
                    timestamp: getCurrentDateTime()
                  });
                },
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
                      placeholder: "Select provider"
                    })
                  })
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectContent, {
                  children: warehouseProviders.map(provider => {
                    /* istanbul ignore next */
                    cov_1p3wa9hmek().f[52]++;
                    cov_1p3wa9hmek().s[183]++;
                    return /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                      value: provider.value,
                      children: provider.label
                    }, provider.value);
                  })
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormMessage, {})]
            });
          }
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormField, {
        control: form.control,
        name: "isPublished",
        render: ({
          field
        }) => {
          /* istanbul ignore next */
          cov_1p3wa9hmek().f[53]++;
          cov_1p3wa9hmek().s[184]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)(_form.FormItem, {
            className: "flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormControl, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_checkbox.Checkbox, {
                checked: field.value,
                onCheckedChange: checked => {
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().f[54]++;
                  cov_1p3wa9hmek().s[185]++;
                  field.onChange(checked);
                  /* istanbul ignore next */
                  cov_1p3wa9hmek().s[186]++;
                  logOperation('Publication status changed', {
                    published: checked,
                    user: session?.user?.name,
                    timestamp: getCurrentDateTime()
                  });
                }
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-1 leading-none",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormLabel, {
                children: "Ready to Publish"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_form.FormDescription, {
                children: "This will submit the product for review before publication."
              })]
            })]
          });
        }
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
        type: "submit",
        disabled: loading,
        className: "w-full",
        children: loading ?
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[63][0]++, 'Submitting...') :
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[63][1]++, type === 'Create' ?
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[64][0]++, 'Create Product') :
        /* istanbul ignore next */
        (cov_1p3wa9hmek().b[64][1]++, 'Update Product'))
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,