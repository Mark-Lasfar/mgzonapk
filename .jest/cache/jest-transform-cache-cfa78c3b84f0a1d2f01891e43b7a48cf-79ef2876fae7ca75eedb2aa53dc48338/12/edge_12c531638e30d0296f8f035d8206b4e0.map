{"version":3,"names":["checkDatabaseConnection","cov_2f6kdm0le4","f","s","closeConnection","getCollection","getCurrentContext","getMongoClient","MONGODB_URI","process","env","options","b","Error","clientPromise","cachedClient","NODE_ENV","globalWithMongo","global","_mongoClientPromise","client","_mongodb","MongoClient","connect","then","_mongoClient","error","console","collectionName","db","MONGODB_DB_NAME","collection","command","ping","timestamp","Date","toISOString","user","CURRENT_USER","close"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/edge.ts"],"sourcesContent":["import { MongoClient } from 'mongodb';\n\nconst MONGODB_URI = process.env.MONGODB_URI!;\nconst options = {};\n\nif (!MONGODB_URI) {\n  throw new Error('Please define the MONGODB_URI environment variable in your .env file');\n}\n\n// إنشاء كاش عالمي للاتصال\nlet clientPromise: Promise<MongoClient>;\nlet cachedClient: MongoClient | null = null;\n\nif (process.env.NODE_ENV === 'development') {\n  // في وضع التطوير، استخدم متغير عالمي للحفاظ على الاتصال بين إعادة التحميل\n  let globalWithMongo = global as typeof globalThis & {\n    _mongoClientPromise?: Promise<MongoClient>;\n    _mongoClient?: MongoClient;\n  };\n\n  if (!globalWithMongo._mongoClientPromise) {\n    const client = new MongoClient(MONGODB_URI, options);\n    globalWithMongo._mongoClientPromise = client.connect()\n      .then((client) => {\n        globalWithMongo._mongoClient = client;\n        return client;\n      });\n  }\n  clientPromise = globalWithMongo._mongoClientPromise;\n  cachedClient = globalWithMongo._mongoClient || null;\n} else {\n  // في الإنتاج، دع كل edge function تدير اتصالها الخاص\n  const client = new MongoClient(MONGODB_URI, options);\n  clientPromise = client.connect();\n}\n\nexport async function getMongoClient() {\n  if (cachedClient) {\n    return cachedClient;\n  }\n\n  try {\n    const client = await clientPromise;\n    if (process.env.NODE_ENV === 'development') {\n      cachedClient = client;\n    }\n    return client;\n  } catch (error) {\n    console.error('Error connecting to MongoDB:', error);\n    throw error;\n  }\n}\n\nexport async function getCollection(collectionName: string) {\n  const client = await getMongoClient();\n  const db = client.db(process.env.MONGODB_DB_NAME);\n  return db.collection(collectionName);\n}\n\n// دالة مساعدة للتحقق من حالة الاتصال\nexport async function checkDatabaseConnection() {\n  try {\n    const client = await getMongoClient();\n    await client.db().command({ ping: 1 });\n    return true;\n  } catch (error) {\n    console.error('Database connection error:', error);\n    return false;\n  }\n}\n\n// دالة مساعدة للحصول على معلومات السياق الحالي\nexport function getCurrentContext() {\n  return {\n    timestamp: new Date().toISOString(),\n    user: process.env.CURRENT_USER || 'system',\n  };\n}\n\n// إغلاق الاتصال بشكل آمن عند الحاجة\nexport async function closeConnection() {\n  if (cachedClient) {\n    await cachedClient.close();\n    cachedClient = null;\n  }\n}\n\n// تصدير أنواع TypeScript\nexport type { MongoClient };\n\n// للاستخدام في التطوير فقط\ndeclare global {\n  var _mongoClientPromise: Promise<MongoClient>;\n  var _mongoClient: MongoClient;\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4DsBA,uBAAuB,WAAAA,CAAA;IAAA;IAA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","ignoreList":[]}