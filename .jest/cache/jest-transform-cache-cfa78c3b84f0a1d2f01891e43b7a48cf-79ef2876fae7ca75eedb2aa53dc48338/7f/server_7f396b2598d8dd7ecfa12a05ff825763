93f170e411c7522e0dda880f8a0c4fda
"use strict";

/* istanbul ignore next */
function cov_4qwonq4qo() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/websocket/server.ts";
  var hash = "16a1e8099f33a62a2284fee8d2872c3945f124f5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/websocket/server.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "3": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 11,
          column: 25
        }
      },
      "4": {
        start: {
          line: 12,
          column: 13
        },
        end: {
          line: 12,
          column: 27
        }
      },
      "5": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 43
        }
      },
      "6": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 47
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 20,
          column: 11
        }
      },
      "9": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "10": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "11": {
        start: {
          line: 23,
          column: 44
        },
        end: {
          line: 23,
          column: 78
        }
      },
      "12": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 39,
          column: 17
        }
      },
      "13": {
        start: {
          line: 26,
          column: 38
        },
        end: {
          line: 30,
          column: 22
        }
      },
      "14": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 35,
          column: 21
        }
      },
      "15": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 74
        }
      },
      "16": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 41
        }
      },
      "17": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 34,
          column: 31
        }
      },
      "18": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 38,
          column: 23
        }
      },
      "19": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 37,
          column: 65
        }
      },
      "20": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 73
        }
      },
      "21": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 33
        }
      },
      "22": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "23": {
        start: {
          line: 46,
          column: 30
        },
        end: {
          line: 46,
          column: 64
        }
      },
      "24": {
        start: {
          line: 47,
          column: 27
        },
        end: {
          line: 47,
          column: 39
        }
      },
      "25": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "26": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 52
        }
      },
      "27": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 45
        }
      },
      "28": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 57,
          column: 15
        }
      },
      "29": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 53
        }
      },
      "30": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 56,
          column: 17
        }
      },
      "31": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 55,
          column: 48
        }
      },
      "32": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 63,
          column: 16
        }
      },
      "33": {
        start: {
          line: 67,
          column: 28
        },
        end: {
          line: 67,
          column: 52
        }
      },
      "34": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "35": {
        start: {
          line: 69,
          column: 28
        },
        end: {
          line: 69,
          column: 48
        }
      },
      "36": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 74,
          column: 15
        }
      },
      "37": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 73,
          column: 17
        }
      },
      "38": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 21,
            column: 30
          }
        },
        loc: {
          start: {
            line: 21,
            column: 60
          },
          end: {
            line: 44,
            column: 9
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 66
          },
          end: {
            line: 36,
            column: 67
          }
        },
        loc: {
          start: {
            line: 36,
            column: 72
          },
          end: {
            line: 38,
            column: 21
          }
        },
        line: 36
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 45,
            column: 34
          },
          end: {
            line: 45,
            column: 35
          }
        },
        loc: {
          start: {
            line: 45,
            column: 49
          },
          end: {
            line: 64,
            column: 9
          }
        },
        line: 45
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 52,
            column: 27
          },
          end: {
            line: 52,
            column: 28
          }
        },
        loc: {
          start: {
            line: 52,
            column: 31
          },
          end: {
            line: 57,
            column: 13
          }
        },
        line: 52
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 34
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 66
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 70,
            column: 32
          },
          end: {
            line: 70,
            column: 33
          }
        },
        loc: {
          start: {
            line: 70,
            column: 42
          },
          end: {
            line: 74,
            column: 13
          }
        },
        line: 70
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 39,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 39,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 35,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 35,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 56,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 56,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/websocket/server.ts"],
      sourcesContent: ["import { Server as WebSocketServer } from 'ws';\nimport { Server as HTTPServer } from 'http';\nimport { parse } from 'url';\nimport { validateApiKey } from '../middleware/auth';\nimport { logger } from '../services/logging';\n\nexport class TrackingWebSocketServer {\n  private wss: WebSocketServer;\n  private clients: Map<string, Set<WebSocket>> = new Map();\n\n  constructor(server: HTTPServer) {\n    this.wss = new WebSocketServer({ noServer: true });\n    \n    server.on('upgrade', async (request, socket, head) => {\n      try {\n        const { pathname, query } = parse(request.url!, true);\n        \n        if (pathname === '/api/v1/tracking') {\n          // Validate API key from query\n          const authError = await validateApiKey({\n            headers: new Headers({ 'x-api-key': query.apiKey as string })\n          });\n\n          if (authError) {\n            socket.write('HTTP/1.1 401 Unauthorized\\r\\n\\r\\n');\n            socket.destroy();\n            return;\n          }\n\n          this.wss.handleUpgrade(request, socket, head, (ws) => {\n            this.wss.emit('connection', ws, request);\n          });\n        }\n      } catch (error) {\n        logger.error('WebSocket upgrade error:', error);\n        socket.destroy();\n      }\n    });\n\n    this.wss.on('connection', (ws, request) => {\n      const { query } = parse(request.url!, true);\n      const userId = query.userId as string;\n\n      if (!this.clients.has(userId)) {\n        this.clients.set(userId, new Set());\n      }\n      this.clients.get(userId)!.add(ws);\n\n      ws.on('close', () => {\n        this.clients.get(userId)?.delete(ws);\n        if (this.clients.get(userId)?.size === 0) {\n          this.clients.delete(userId);\n        }\n      });\n\n      // Send initial connection success message\n      ws.send(JSON.stringify({\n        type: 'connection',\n        status: 'connected',\n        timestamp: new Date().toISOString()\n      }));\n    });\n  }\n\n  public broadcastToUser(userId: string, data: any) {\n    const userClients = this.clients.get(userId);\n    if (userClients) {\n      const message = JSON.stringify(data);\n      userClients.forEach(client => {\n        if (client.readyState === WebSocket.OPEN) {\n          client.send(message);\n        }\n      });\n    }\n  }\n}"],
      names: ["TrackingWebSocketServer", "constructor", "server", "clients", "Map", "wss", "WebSocketServer", "noServer", "on", "request", "socket", "head", "pathname", "query", "parse", "url", "authError", "validateApiKey", "headers", "Headers", "apiKey", "write", "destroy", "handleUpgrade", "ws", "emit", "error", "logger", "userId", "has", "set", "Set", "get", "add", "delete", "size", "send", "JSON", "stringify", "type", "status", "timestamp", "Date", "toISOString", "broadcastToUser", "data", "userClients", "message", "forEach", "client", "readyState", "WebSocket", "OPEN"],
      mappings: ";;;;+BAMaA;;;eAAAA;;;oBAN6B;qBAEpB;sBACS;yBACR;AAEhB,MAAMA;IAIXC,YAAYC,MAAkB,CAAE;aAFxBC,UAAuC,IAAIC;QAGjD,IAAI,CAACC,GAAG,GAAG,IAAIC,UAAe,CAAC;YAAEC,UAAU;QAAK;QAEhDL,OAAOM,EAAE,CAAC,WAAW,OAAOC,SAASC,QAAQC;YAC3C,IAAI;gBACF,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAE,GAAGC,IAAAA,UAAK,EAACL,QAAQM,GAAG,EAAG;gBAEhD,IAAIH,aAAa,oBAAoB;oBACnC,8BAA8B;oBAC9B,MAAMI,YAAY,MAAMC,IAAAA,oBAAc,EAAC;wBACrCC,SAAS,IAAIC,QAAQ;4BAAE,aAAaN,MAAMO,MAAM;wBAAW;oBAC7D;oBAEA,IAAIJ,WAAW;wBACbN,OAAOW,KAAK,CAAC;wBACbX,OAAOY,OAAO;wBACd;oBACF;oBAEA,IAAI,CAACjB,GAAG,CAACkB,aAAa,CAACd,SAASC,QAAQC,MAAM,CAACa;wBAC7C,IAAI,CAACnB,GAAG,CAACoB,IAAI,CAAC,cAAcD,IAAIf;oBAClC;gBACF;YACF,EAAE,OAAOiB,OAAO;gBACdC,eAAM,CAACD,KAAK,CAAC,4BAA4BA;gBACzChB,OAAOY,OAAO;YAChB;QACF;QAEA,IAAI,CAACjB,GAAG,CAACG,EAAE,CAAC,cAAc,CAACgB,IAAIf;YAC7B,MAAM,EAAEI,KAAK,EAAE,GAAGC,IAAAA,UAAK,EAACL,QAAQM,GAAG,EAAG;YACtC,MAAMa,SAASf,MAAMe,MAAM;YAE3B,IAAI,CAAC,IAAI,CAACzB,OAAO,CAAC0B,GAAG,CAACD,SAAS;gBAC7B,IAAI,CAACzB,OAAO,CAAC2B,GAAG,CAACF,QAAQ,IAAIG;YAC/B;YACA,IAAI,CAAC5B,OAAO,CAAC6B,GAAG,CAACJ,QAASK,GAAG,CAACT;YAE9BA,GAAGhB,EAAE,CAAC,SAAS;gBACb,IAAI,CAACL,OAAO,CAAC6B,GAAG,CAACJ,SAASM,OAAOV;gBACjC,IAAI,IAAI,CAACrB,OAAO,CAAC6B,GAAG,CAACJ,SAASO,SAAS,GAAG;oBACxC,IAAI,CAAChC,OAAO,CAAC+B,MAAM,CAACN;gBACtB;YACF;YAEA,0CAA0C;YAC1CJ,GAAGY,IAAI,CAACC,KAAKC,SAAS,CAAC;gBACrBC,MAAM;gBACNC,QAAQ;gBACRC,WAAW,IAAIC,OAAOC,WAAW;YACnC;QACF;IACF;IAEOC,gBAAgBhB,MAAc,EAAEiB,IAAS,EAAE;QAChD,MAAMC,cAAc,IAAI,CAAC3C,OAAO,CAAC6B,GAAG,CAACJ;QACrC,IAAIkB,aAAa;YACf,MAAMC,UAAUV,KAAKC,SAAS,CAACO;YAC/BC,YAAYE,OAAO,CAACC,CAAAA;gBAClB,IAAIA,OAAOC,UAAU,KAAKC,UAAUC,IAAI,EAAE;oBACxCH,OAAOb,IAAI,CAACW;gBACd;YACF;QACF;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "16a1e8099f33a62a2284fee8d2872c3945f124f5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4qwonq4qo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4qwonq4qo();
cov_4qwonq4qo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_4qwonq4qo().s[1]++;
Object.defineProperty(exports, "TrackingWebSocketServer", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_4qwonq4qo().f[0]++;
    cov_4qwonq4qo().s[2]++;
    return TrackingWebSocketServer;
  }
});
const _ws =
/* istanbul ignore next */
(cov_4qwonq4qo().s[3]++, require("ws"));
const _url =
/* istanbul ignore next */
(cov_4qwonq4qo().s[4]++, require("url"));
const _auth =
/* istanbul ignore next */
(cov_4qwonq4qo().s[5]++, require("../middleware/auth"));
const _logging =
/* istanbul ignore next */
(cov_4qwonq4qo().s[6]++, require("../services/logging"));
class TrackingWebSocketServer {
  constructor(server) {
    /* istanbul ignore next */
    cov_4qwonq4qo().f[1]++;
    cov_4qwonq4qo().s[7]++;
    this.clients = new Map();
    /* istanbul ignore next */
    cov_4qwonq4qo().s[8]++;
    this.wss = new _ws.Server({
      noServer: true
    });
    /* istanbul ignore next */
    cov_4qwonq4qo().s[9]++;
    server.on('upgrade', async (request, socket, head) => {
      /* istanbul ignore next */
      cov_4qwonq4qo().f[2]++;
      cov_4qwonq4qo().s[10]++;
      try {
        const {
          pathname,
          query
        } =
        /* istanbul ignore next */
        (cov_4qwonq4qo().s[11]++, (0, _url.parse)(request.url, true));
        /* istanbul ignore next */
        cov_4qwonq4qo().s[12]++;
        if (pathname === '/api/v1/tracking') {
          /* istanbul ignore next */
          cov_4qwonq4qo().b[0][0]++;
          // Validate API key from query
          const authError =
          /* istanbul ignore next */
          (cov_4qwonq4qo().s[13]++, await (0, _auth.validateApiKey)({
            headers: new Headers({
              'x-api-key': query.apiKey
            })
          }));
          /* istanbul ignore next */
          cov_4qwonq4qo().s[14]++;
          if (authError) {
            /* istanbul ignore next */
            cov_4qwonq4qo().b[1][0]++;
            cov_4qwonq4qo().s[15]++;
            socket.write('HTTP/1.1 401 Unauthorized\r\n\r\n');
            /* istanbul ignore next */
            cov_4qwonq4qo().s[16]++;
            socket.destroy();
            /* istanbul ignore next */
            cov_4qwonq4qo().s[17]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_4qwonq4qo().b[1][1]++;
          }
          cov_4qwonq4qo().s[18]++;
          this.wss.handleUpgrade(request, socket, head, ws => {
            /* istanbul ignore next */
            cov_4qwonq4qo().f[3]++;
            cov_4qwonq4qo().s[19]++;
            this.wss.emit('connection', ws, request);
          });
        } else
        /* istanbul ignore next */
        {
          cov_4qwonq4qo().b[0][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_4qwonq4qo().s[20]++;
        _logging.logger.error('WebSocket upgrade error:', error);
        /* istanbul ignore next */
        cov_4qwonq4qo().s[21]++;
        socket.destroy();
      }
    });
    /* istanbul ignore next */
    cov_4qwonq4qo().s[22]++;
    this.wss.on('connection', (ws, request) => {
      /* istanbul ignore next */
      cov_4qwonq4qo().f[4]++;
      const {
        query
      } =
      /* istanbul ignore next */
      (cov_4qwonq4qo().s[23]++, (0, _url.parse)(request.url, true));
      const userId =
      /* istanbul ignore next */
      (cov_4qwonq4qo().s[24]++, query.userId);
      /* istanbul ignore next */
      cov_4qwonq4qo().s[25]++;
      if (!this.clients.has(userId)) {
        /* istanbul ignore next */
        cov_4qwonq4qo().b[2][0]++;
        cov_4qwonq4qo().s[26]++;
        this.clients.set(userId, new Set());
      } else
      /* istanbul ignore next */
      {
        cov_4qwonq4qo().b[2][1]++;
      }
      cov_4qwonq4qo().s[27]++;
      this.clients.get(userId).add(ws);
      /* istanbul ignore next */
      cov_4qwonq4qo().s[28]++;
      ws.on('close', () => {
        /* istanbul ignore next */
        cov_4qwonq4qo().f[5]++;
        cov_4qwonq4qo().s[29]++;
        this.clients.get(userId)?.delete(ws);
        /* istanbul ignore next */
        cov_4qwonq4qo().s[30]++;
        if (this.clients.get(userId)?.size === 0) {
          /* istanbul ignore next */
          cov_4qwonq4qo().b[3][0]++;
          cov_4qwonq4qo().s[31]++;
          this.clients.delete(userId);
        } else
        /* istanbul ignore next */
        {
          cov_4qwonq4qo().b[3][1]++;
        }
      });
      // Send initial connection success message
      /* istanbul ignore next */
      cov_4qwonq4qo().s[32]++;
      ws.send(JSON.stringify({
        type: 'connection',
        status: 'connected',
        timestamp: new Date().toISOString()
      }));
    });
  }
  broadcastToUser(userId, data) {
    /* istanbul ignore next */
    cov_4qwonq4qo().f[6]++;
    const userClients =
    /* istanbul ignore next */
    (cov_4qwonq4qo().s[33]++, this.clients.get(userId));
    /* istanbul ignore next */
    cov_4qwonq4qo().s[34]++;
    if (userClients) {
      /* istanbul ignore next */
      cov_4qwonq4qo().b[4][0]++;
      const message =
      /* istanbul ignore next */
      (cov_4qwonq4qo().s[35]++, JSON.stringify(data));
      /* istanbul ignore next */
      cov_4qwonq4qo().s[36]++;
      userClients.forEach(client => {
        /* istanbul ignore next */
        cov_4qwonq4qo().f[7]++;
        cov_4qwonq4qo().s[37]++;
        if (client.readyState === WebSocket.OPEN) {
          /* istanbul ignore next */
          cov_4qwonq4qo().b[5][0]++;
          cov_4qwonq4qo().s[38]++;
          client.send(message);
        } else
        /* istanbul ignore next */
        {
          cov_4qwonq4qo().b[5][1]++;
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_4qwonq4qo().b[4][1]++;
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,