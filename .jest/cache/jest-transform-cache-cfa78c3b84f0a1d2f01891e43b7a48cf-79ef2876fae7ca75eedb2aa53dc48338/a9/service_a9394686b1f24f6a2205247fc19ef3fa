00469ba76bdd8b787338d9000864492f
'use server';
"use strict";

/* istanbul ignore next */
function cov_v8cd4345w() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/integrations/amazon/service.ts";
  var hash = "314d2e5b50d67b1e3f674f59f3c9a12f41f48a73";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/integrations/amazon/service.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 64,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 32
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 26
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 33
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 32
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 36
        }
      },
      "14": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 32
        }
      },
      "15": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 34
        }
      },
      "16": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 34
        }
      },
      "17": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 44
        }
      },
      "18": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 33
        }
      },
      "19": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 29
        }
      },
      "20": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 29
        }
      },
      "21": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 34
        }
      },
      "22": {
        start: {
          line: 66,
          column: 36
        },
        end: {
          line: 66,
          column: 105
        }
      },
      "23": {
        start: {
          line: 67,
          column: 15
        },
        end: {
          line: 67,
          column: 36
        }
      },
      "24": {
        start: {
          line: 68,
          column: 15
        },
        end: {
          line: 68,
          column: 34
        }
      },
      "25": {
        start: {
          line: 69,
          column: 14
        },
        end: {
          line: 69,
          column: 41
        }
      },
      "26": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 70,
          column: 52
        }
      },
      "27": {
        start: {
          line: 71,
          column: 32
        },
        end: {
          line: 71,
          column: 77
        }
      },
      "28": {
        start: {
          line: 72,
          column: 23
        },
        end: {
          line: 72,
          column: 50
        }
      },
      "29": {
        start: {
          line: 73,
          column: 26
        },
        end: {
          line: 73,
          column: 56
        }
      },
      "30": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 74,
          column: 67
        }
      },
      "31": {
        start: {
          line: 75,
          column: 17
        },
        end: {
          line: 75,
          column: 57
        }
      },
      "32": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 55
        }
      },
      "33": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 6
        }
      },
      "34": {
        start: {
          line: 96,
          column: 27
        },
        end: {
          line: 105,
          column: 1
        }
      },
      "35": {
        start: {
          line: 108,
          column: 20
        },
        end: {
          line: 108,
          column: 43
        }
      },
      "36": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "37": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 40
        }
      },
      "38": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 116,
          column: 6
        }
      },
      "39": {
        start: {
          line: 119,
          column: 25
        },
        end: {
          line: 119,
          column: 51
        }
      },
      "40": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "41": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 218,
          column: 5
        }
      },
      "42": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 43
        }
      },
      "43": {
        start: {
          line: 128,
          column: 41
        },
        end: {
          line: 128,
          column: 80
        }
      },
      "44": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 34
        }
      },
      "45": {
        start: {
          line: 130,
          column: 28
        },
        end: {
          line: 130,
          column: 30
        }
      },
      "46": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "47": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 157,
          column: 14
        }
      },
      "48": {
        start: {
          line: 159,
          column: 28
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "49": {
        start: {
          line: 171,
          column: 21
        },
        end: {
          line: 171,
          column: 39
        }
      },
      "50": {
        start: {
          line: 172,
          column: 42
        },
        end: {
          line: 188,
          column: 10
        }
      },
      "51": {
        start: {
          line: 189,
          column: 34
        },
        end: {
          line: 195,
          column: 15
        }
      },
      "52": {
        start: {
          line: 189,
          column: 59
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "53": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 201,
          column: 11
        }
      },
      "54": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 208,
          column: 10
        }
      },
      "55": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 65
        }
      },
      "56": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 217,
          column: 10
        }
      },
      "57": {
        start: {
          line: 223,
          column: 27
        },
        end: {
          line: 223,
          column: 78
        }
      },
      "58": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "59": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 51
        }
      },
      "60": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 227,
          column: 31
        }
      },
      "61": {
        start: {
          line: 230,
          column: 20
        },
        end: {
          line: 230,
          column: 58
        }
      },
      "62": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 231,
          column: 31
        }
      },
      "63": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 425,
          column: 5
        }
      },
      "64": {
        start: {
          line: 234,
          column: 29
        },
        end: {
          line: 234,
          column: 52
        }
      },
      "65": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "66": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 44
        }
      },
      "67": {
        start: {
          line: 238,
          column: 28
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "68": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "69": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 75
        }
      },
      "70": {
        start: {
          line: 246,
          column: 29
        },
        end: {
          line: 246,
          column: 39
        }
      },
      "71": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 43
        }
      },
      "72": {
        start: {
          line: 249,
          column: 23
        },
        end: {
          line: 249,
          column: 59
        }
      },
      "73": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 253,
          column: 11
        }
      },
      "74": {
        start: {
          line: 255,
          column: 30
        },
        end: {
          line: 255,
          column: 78
        }
      },
      "75": {
        start: {
          line: 257,
          column: 32
        },
        end: {
          line: 259,
          column: 27
        }
      },
      "76": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "77": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 88
        }
      },
      "78": {
        start: {
          line: 264,
          column: 39
        },
        end: {
          line: 277,
          column: 16
        }
      },
      "79": {
        start: {
          line: 265,
          column: 34
        },
        end: {
          line: 270,
          column: 17
        }
      },
      "80": {
        start: {
          line: 266,
          column: 35
        },
        end: {
          line: 266,
          column: 90
        }
      },
      "81": {
        start: {
          line: 266,
          column: 67
        },
        end: {
          line: 266,
          column: 86
        }
      },
      "82": {
        start: {
          line: 267,
          column: 16
        },
        end: {
          line: 267,
          column: 44
        }
      },
      "83": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 268,
          column: 47
        }
      },
      "84": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 42
        }
      },
      "85": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 276,
          column: 14
        }
      },
      "86": {
        start: {
          line: 278,
          column: 27
        },
        end: {
          line: 278,
          column: 103
        }
      },
      "87": {
        start: {
          line: 278,
          column: 75
        },
        end: {
          line: 278,
          column: 99
        }
      },
      "88": {
        start: {
          line: 280,
          column: 31
        },
        end: {
          line: 307,
          column: 14
        }
      },
      "89": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 305,
          column: 15
        }
      },
      "90": {
        start: {
          line: 282,
          column: 38
        },
        end: {
          line: 282,
          column: 89
        }
      },
      "91": {
        start: {
          line: 282,
          column: 58
        },
        end: {
          line: 282,
          column: 88
        }
      },
      "92": {
        start: {
          line: 283,
          column: 16
        },
        end: {
          line: 304,
          column: 17
        }
      },
      "93": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 284,
          column: 70
        }
      },
      "94": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 285,
          column: 71
        }
      },
      "95": {
        start: {
          line: 286,
          column: 20
        },
        end: {
          line: 296,
          column: 23
        }
      },
      "96": {
        start: {
          line: 287,
          column: 45
        },
        end: {
          line: 287,
          column: 105
        }
      },
      "97": {
        start: {
          line: 287,
          column: 75
        },
        end: {
          line: 287,
          column: 104
        }
      },
      "98": {
        start: {
          line: 288,
          column: 24
        },
        end: {
          line: 295,
          column: 25
        }
      },
      "99": {
        start: {
          line: 289,
          column: 28
        },
        end: {
          line: 289,
          column: 76
        }
      },
      "100": {
        start: {
          line: 290,
          column: 28
        },
        end: {
          line: 290,
          column: 77
        }
      },
      "101": {
        start: {
          line: 292,
          column: 28
        },
        end: {
          line: 294,
          column: 31
        }
      },
      "102": {
        start: {
          line: 298,
          column: 20
        },
        end: {
          line: 303,
          column: 23
        }
      },
      "103": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 29
        }
      },
      "104": {
        start: {
          line: 309,
          column: 26
        },
        end: {
          line: 309,
          column: 53
        }
      },
      "105": {
        start: {
          line: 310,
          column: 23
        },
        end: {
          line: 310,
          column: 66
        }
      },
      "106": {
        start: {
          line: 311,
          column: 27
        },
        end: {
          line: 311,
          column: 72
        }
      },
      "107": {
        start: {
          line: 312,
          column: 29
        },
        end: {
          line: 312,
          column: 55
        }
      },
      "108": {
        start: {
          line: 313,
          column: 33
        },
        end: {
          line: 313,
          column: 63
        }
      },
      "109": {
        start: {
          line: 315,
          column: 28
        },
        end: {
          line: 361,
          column: 9
        }
      },
      "110": {
        start: {
          line: 363,
          column: 24
        },
        end: {
          line: 367,
          column: 10
        }
      },
      "111": {
        start: {
          line: 368,
          column: 31
        },
        end: {
          line: 368,
          column: 41
        }
      },
      "112": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 380,
          column: 17
        }
      },
      "113": {
        start: {
          line: 370,
          column: 66
        },
        end: {
          line: 380,
          column: 14
        }
      },
      "114": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 385,
          column: 11
        }
      },
      "115": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 42
        }
      },
      "116": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 65
        }
      },
      "117": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 54
        }
      },
      "118": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 70
        }
      },
      "119": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 396,
          column: 11
        }
      },
      "120": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 401,
          column: 10
        }
      },
      "121": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 41
        }
      },
      "122": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 56
        }
      },
      "123": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 418,
          column: 9
        }
      },
      "124": {
        start: {
          line: 406,
          column: 12
        },
        end: {
          line: 411,
          column: 13
        }
      },
      "125": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 410,
          column: 18
        }
      },
      "126": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 417,
          column: 13
        }
      },
      "127": {
        start: {
          line: 413,
          column: 16
        },
        end: {
          line: 416,
          column: 18
        }
      },
      "128": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 422,
          column: 10
        }
      },
      "129": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 29
        }
      },
      "130": {
        start: {
          line: 428,
          column: 20
        },
        end: {
          line: 428,
          column: 58
        }
      },
      "131": {
        start: {
          line: 429,
          column: 4
        },
        end: {
          line: 429,
          column: 31
        }
      },
      "132": {
        start: {
          line: 430,
          column: 4
        },
        end: {
          line: 519,
          column: 5
        }
      },
      "133": {
        start: {
          line: 432,
          column: 31
        },
        end: {
          line: 432,
          column: 80
        }
      },
      "134": {
        start: {
          line: 434,
          column: 29
        },
        end: {
          line: 434,
          column: 52
        }
      },
      "135": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 437,
          column: 9
        }
      },
      "136": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 44
        }
      },
      "137": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 43
        }
      },
      "138": {
        start: {
          line: 440,
          column: 32
        },
        end: {
          line: 440,
          column: 105
        }
      },
      "139": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 443,
          column: 9
        }
      },
      "140": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 49
        }
      },
      "141": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 447,
          column: 9
        }
      },
      "142": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 446,
          column: 44
        }
      },
      "143": {
        start: {
          line: 449,
          column: 31
        },
        end: {
          line: 449,
          column: 171
        }
      },
      "144": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 452,
          column: 9
        }
      },
      "145": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 451,
          column: 48
        }
      },
      "146": {
        start: {
          line: 453,
          column: 23
        },
        end: {
          line: 453,
          column: 42
        }
      },
      "147": {
        start: {
          line: 455,
          column: 22
        },
        end: {
          line: 455,
          column: 45
        }
      },
      "148": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 469,
          column: 9
        }
      },
      "149": {
        start: {
          line: 457,
          column: 30
        },
        end: {
          line: 457,
          column: 50
        }
      },
      "150": {
        start: {
          line: 458,
          column: 27
        },
        end: {
          line: 458,
          column: 91
        }
      },
      "151": {
        start: {
          line: 459,
          column: 31
        },
        end: {
          line: 459,
          column: 75
        }
      },
      "152": {
        start: {
          line: 460,
          column: 33
        },
        end: {
          line: 460,
          column: 59
        }
      },
      "153": {
        start: {
          line: 461,
          column: 37
        },
        end: {
          line: 461,
          column: 67
        }
      },
      "154": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 468,
          column: 14
        }
      },
      "155": {
        start: {
          line: 471,
          column: 37
        },
        end: {
          line: 471,
          column: 151
        }
      },
      "156": {
        start: {
          line: 473,
          column: 27
        },
        end: {
          line: 479,
          column: 9
        }
      },
      "157": {
        start: {
          line: 481,
          column: 31
        },
        end: {
          line: 484,
          column: 10
        }
      },
      "158": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 490,
          column: 9
        }
      },
      "159": {
        start: {
          line: 487,
          column: 12
        },
        end: {
          line: 489,
          column: 15
        }
      },
      "160": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 492,
          column: 42
        }
      },
      "161": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 494,
          column: 65
        }
      },
      "162": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 495,
          column: 54
        }
      },
      "163": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 496,
          column: 71
        }
      },
      "164": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 502,
          column: 11
        }
      },
      "165": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 507,
          column: 10
        }
      },
      "166": {
        start: {
          line: 510,
          column: 8
        },
        end: {
          line: 510,
          column: 41
        }
      },
      "167": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 511,
          column: 54
        }
      },
      "168": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 515,
          column: 10
        }
      },
      "169": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 518,
          column: 29
        }
      },
      "170": {
        start: {
          line: 522,
          column: 20
        },
        end: {
          line: 522,
          column: 58
        }
      },
      "171": {
        start: {
          line: 523,
          column: 4
        },
        end: {
          line: 523,
          column: 31
        }
      },
      "172": {
        start: {
          line: 524,
          column: 4
        },
        end: {
          line: 605,
          column: 5
        }
      },
      "173": {
        start: {
          line: 526,
          column: 29
        },
        end: {
          line: 526,
          column: 52
        }
      },
      "174": {
        start: {
          line: 527,
          column: 8
        },
        end: {
          line: 529,
          column: 9
        }
      },
      "175": {
        start: {
          line: 528,
          column: 12
        },
        end: {
          line: 528,
          column: 44
        }
      },
      "176": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 530,
          column: 43
        }
      },
      "177": {
        start: {
          line: 532,
          column: 24
        },
        end: {
          line: 532,
          column: 81
        }
      },
      "178": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 535,
          column: 9
        }
      },
      "179": {
        start: {
          line: 534,
          column: 12
        },
        end: {
          line: 534,
          column: 49
        }
      },
      "180": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 539,
          column: 9
        }
      },
      "181": {
        start: {
          line: 538,
          column: 12
        },
        end: {
          line: 538,
          column: 44
        }
      },
      "182": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 541,
          column: 75
        }
      },
      "183": {
        start: {
          line: 543,
          column: 8
        },
        end: {
          line: 548,
          column: 9
        }
      },
      "184": {
        start: {
          line: 544,
          column: 12
        },
        end: {
          line: 547,
          column: 15
        }
      },
      "185": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 555,
          column: 11
        }
      },
      "186": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 557,
          column: 42
        }
      },
      "187": {
        start: {
          line: 559,
          column: 8
        },
        end: {
          line: 559,
          column: 65
        }
      },
      "188": {
        start: {
          line: 560,
          column: 8
        },
        end: {
          line: 560,
          column: 54
        }
      },
      "189": {
        start: {
          line: 561,
          column: 8
        },
        end: {
          line: 561,
          column: 63
        }
      },
      "190": {
        start: {
          line: 562,
          column: 8
        },
        end: {
          line: 570,
          column: 10
        }
      },
      "191": {
        start: {
          line: 573,
          column: 8
        },
        end: {
          line: 573,
          column: 41
        }
      },
      "192": {
        start: {
          line: 574,
          column: 8
        },
        end: {
          line: 579,
          column: 11
        }
      },
      "193": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 596,
          column: 9
        }
      },
      "194": {
        start: {
          line: 582,
          column: 12
        },
        end: {
          line: 588,
          column: 13
        }
      },
      "195": {
        start: {
          line: 583,
          column: 16
        },
        end: {
          line: 587,
          column: 18
        }
      },
      "196": {
        start: {
          line: 589,
          column: 12
        },
        end: {
          line: 595,
          column: 13
        }
      },
      "197": {
        start: {
          line: 590,
          column: 16
        },
        end: {
          line: 594,
          column: 18
        }
      },
      "198": {
        start: {
          line: 597,
          column: 8
        },
        end: {
          line: 601,
          column: 10
        }
      },
      "199": {
        start: {
          line: 604,
          column: 8
        },
        end: {
          line: 604,
          column: 29
        }
      },
      "200": {
        start: {
          line: 608,
          column: 20
        },
        end: {
          line: 608,
          column: 58
        }
      },
      "201": {
        start: {
          line: 609,
          column: 4
        },
        end: {
          line: 609,
          column: 31
        }
      },
      "202": {
        start: {
          line: 610,
          column: 4
        },
        end: {
          line: 653,
          column: 5
        }
      },
      "203": {
        start: {
          line: 611,
          column: 29
        },
        end: {
          line: 611,
          column: 52
        }
      },
      "204": {
        start: {
          line: 612,
          column: 8
        },
        end: {
          line: 614,
          column: 9
        }
      },
      "205": {
        start: {
          line: 613,
          column: 12
        },
        end: {
          line: 613,
          column: 44
        }
      },
      "206": {
        start: {
          line: 615,
          column: 8
        },
        end: {
          line: 615,
          column: 43
        }
      },
      "207": {
        start: {
          line: 616,
          column: 24
        },
        end: {
          line: 616,
          column: 88
        }
      },
      "208": {
        start: {
          line: 617,
          column: 8
        },
        end: {
          line: 619,
          column: 9
        }
      },
      "209": {
        start: {
          line: 618,
          column: 12
        },
        end: {
          line: 618,
          column: 49
        }
      },
      "210": {
        start: {
          line: 621,
          column: 27
        },
        end: {
          line: 629,
          column: 9
        }
      },
      "211": {
        start: {
          line: 630,
          column: 31
        },
        end: {
          line: 633,
          column: 10
        }
      },
      "212": {
        start: {
          line: 634,
          column: 8
        },
        end: {
          line: 634,
          column: 42
        }
      },
      "213": {
        start: {
          line: 635,
          column: 8
        },
        end: {
          line: 635,
          column: 54
        }
      },
      "214": {
        start: {
          line: 636,
          column: 8
        },
        end: {
          line: 636,
          column: 65
        }
      },
      "215": {
        start: {
          line: 637,
          column: 8
        },
        end: {
          line: 639,
          column: 9
        }
      },
      "216": {
        start: {
          line: 638,
          column: 12
        },
        end: {
          line: 638,
          column: 67
        }
      },
      "217": {
        start: {
          line: 640,
          column: 8
        },
        end: {
          line: 644,
          column: 10
        }
      },
      "218": {
        start: {
          line: 646,
          column: 8
        },
        end: {
          line: 646,
          column: 41
        }
      },
      "219": {
        start: {
          line: 647,
          column: 8
        },
        end: {
          line: 650,
          column: 10
        }
      },
      "220": {
        start: {
          line: 652,
          column: 8
        },
        end: {
          line: 652,
          column: 29
        }
      },
      "221": {
        start: {
          line: 656,
          column: 4
        },
        end: {
          line: 713,
          column: 5
        }
      },
      "222": {
        start: {
          line: 657,
          column: 8
        },
        end: {
          line: 657,
          column: 43
        }
      },
      "223": {
        start: {
          line: 658,
          column: 27
        },
        end: {
          line: 708,
          column: 10
        }
      },
      "224": {
        start: {
          line: 709,
          column: 8
        },
        end: {
          line: 709,
          column: 54
        }
      },
      "225": {
        start: {
          line: 711,
          column: 8
        },
        end: {
          line: 711,
          column: 59
        }
      },
      "226": {
        start: {
          line: 712,
          column: 8
        },
        end: {
          line: 712,
          column: 18
        }
      },
      "227": {
        start: {
          line: 716,
          column: 4
        },
        end: {
          line: 774,
          column: 5
        }
      },
      "228": {
        start: {
          line: 717,
          column: 8
        },
        end: {
          line: 717,
          column: 43
        }
      },
      "229": {
        start: {
          line: 718,
          column: 25
        },
        end: {
          line: 769,
          column: 10
        }
      },
      "230": {
        start: {
          line: 770,
          column: 8
        },
        end: {
          line: 770,
          column: 52
        }
      },
      "231": {
        start: {
          line: 772,
          column: 8
        },
        end: {
          line: 772,
          column: 66
        }
      },
      "232": {
        start: {
          line: 773,
          column: 8
        },
        end: {
          line: 773,
          column: 18
        }
      },
      "233": {
        start: {
          line: 777,
          column: 4
        },
        end: {
          line: 804,
          column: 5
        }
      },
      "234": {
        start: {
          line: 778,
          column: 8
        },
        end: {
          line: 778,
          column: 43
        }
      },
      "235": {
        start: {
          line: 779,
          column: 22
        },
        end: {
          line: 786,
          column: 9
        }
      },
      "236": {
        start: {
          line: 788,
          column: 8
        },
        end: {
          line: 793,
          column: 9
        }
      },
      "237": {
        start: {
          line: 789,
          column: 12
        },
        end: {
          line: 789,
          column: 36
        }
      },
      "238": {
        start: {
          line: 790,
          column: 12
        },
        end: {
          line: 792,
          column: 14
        }
      },
      "239": {
        start: {
          line: 794,
          column: 27
        },
        end: {
          line: 798,
          column: 9
        }
      },
      "240": {
        start: {
          line: 799,
          column: 25
        },
        end: {
          line: 799,
          column: 101
        }
      },
      "241": {
        start: {
          line: 800,
          column: 8
        },
        end: {
          line: 800,
          column: 52
        }
      },
      "242": {
        start: {
          line: 802,
          column: 8
        },
        end: {
          line: 802,
          column: 64
        }
      },
      "243": {
        start: {
          line: 803,
          column: 8
        },
        end: {
          line: 803,
          column: 18
        }
      },
      "244": {
        start: {
          line: 807,
          column: 4
        },
        end: {
          line: 822,
          column: 5
        }
      },
      "245": {
        start: {
          line: 808,
          column: 8
        },
        end: {
          line: 808,
          column: 43
        }
      },
      "246": {
        start: {
          line: 809,
          column: 25
        },
        end: {
          line: 817,
          column: 63
        }
      },
      "247": {
        start: {
          line: 818,
          column: 8
        },
        end: {
          line: 818,
          column: 52
        }
      },
      "248": {
        start: {
          line: 820,
          column: 8
        },
        end: {
          line: 820,
          column: 64
        }
      },
      "249": {
        start: {
          line: 821,
          column: 8
        },
        end: {
          line: 821,
          column: 18
        }
      },
      "250": {
        start: {
          line: 825,
          column: 4
        },
        end: {
          line: 896,
          column: 5
        }
      },
      "251": {
        start: {
          line: 826,
          column: 8
        },
        end: {
          line: 826,
          column: 43
        }
      },
      "252": {
        start: {
          line: 827,
          column: 41
        },
        end: {
          line: 827,
          column: 80
        }
      },
      "253": {
        start: {
          line: 828,
          column: 8
        },
        end: {
          line: 828,
          column: 34
        }
      },
      "254": {
        start: {
          line: 830,
          column: 28
        },
        end: {
          line: 836,
          column: 9
        }
      },
      "255": {
        start: {
          line: 837,
          column: 8
        },
        end: {
          line: 842,
          column: 9
        }
      },
      "256": {
        start: {
          line: 838,
          column: 12
        },
        end: {
          line: 841,
          column: 14
        }
      },
      "257": {
        start: {
          line: 843,
          column: 8
        },
        end: {
          line: 845,
          column: 9
        }
      },
      "258": {
        start: {
          line: 844,
          column: 12
        },
        end: {
          line: 844,
          column: 44
        }
      },
      "259": {
        start: {
          line: 846,
          column: 8
        },
        end: {
          line: 848,
          column: 9
        }
      },
      "260": {
        start: {
          line: 847,
          column: 12
        },
        end: {
          line: 847,
          column: 35
        }
      },
      "261": {
        start: {
          line: 849,
          column: 8
        },
        end: {
          line: 853,
          column: 9
        }
      },
      "262": {
        start: {
          line: 850,
          column: 12
        },
        end: {
          line: 852,
          column: 14
        }
      },
      "263": {
        start: {
          line: 854,
          column: 8
        },
        end: {
          line: 860,
          column: 9
        }
      },
      "264": {
        start: {
          line: 855,
          column: 31
        },
        end: {
          line: 855,
          column: 59
        }
      },
      "265": {
        start: {
          line: 856,
          column: 12
        },
        end: {
          line: 859,
          column: 14
        }
      },
      "266": {
        start: {
          line: 862,
          column: 22
        },
        end: {
          line: 872,
          column: 9
        }
      },
      "267": {
        start: {
          line: 874,
          column: 21
        },
        end: {
          line: 874,
          column: 47
        }
      },
      "268": {
        start: {
          line: 876,
          column: 42
        },
        end: {
          line: 879,
          column: 10
        }
      },
      "269": {
        start: {
          line: 880,
          column: 8
        },
        end: {
          line: 886,
          column: 10
        }
      },
      "270": {
        start: {
          line: 888,
          column: 8
        },
        end: {
          line: 888,
          column: 57
        }
      },
      "271": {
        start: {
          line: 889,
          column: 8
        },
        end: {
          line: 895,
          column: 10
        }
      },
      "272": {
        start: {
          line: 899,
          column: 4
        },
        end: {
          line: 965,
          column: 5
        }
      },
      "273": {
        start: {
          line: 901,
          column: 8
        },
        end: {
          line: 903,
          column: 9
        }
      },
      "274": {
        start: {
          line: 902,
          column: 12
        },
        end: {
          line: 902,
          column: 50
        }
      },
      "275": {
        start: {
          line: 905,
          column: 8
        },
        end: {
          line: 905,
          column: 43
        }
      },
      "276": {
        start: {
          line: 907,
          column: 24
        },
        end: {
          line: 908,
          column: 15
        }
      },
      "277": {
        start: {
          line: 909,
          column: 8
        },
        end: {
          line: 911,
          column: 9
        }
      },
      "278": {
        start: {
          line: 910,
          column: 12
        },
        end: {
          line: 910,
          column: 49
        }
      },
      "279": {
        start: {
          line: 913,
          column: 33
        },
        end: {
          line: 917,
          column: 9
        }
      },
      "280": {
        start: {
          line: 919,
          column: 8
        },
        end: {
          line: 923,
          column: 11
        }
      },
      "281": {
        start: {
          line: 925,
          column: 8
        },
        end: {
          line: 932,
          column: 10
        }
      },
      "282": {
        start: {
          line: 935,
          column: 8
        },
        end: {
          line: 939,
          column: 11
        }
      },
      "283": {
        start: {
          line: 940,
          column: 8
        },
        end: {
          line: 955,
          column: 9
        }
      },
      "284": {
        start: {
          line: 941,
          column: 12
        },
        end: {
          line: 947,
          column: 13
        }
      },
      "285": {
        start: {
          line: 942,
          column: 16
        },
        end: {
          line: 946,
          column: 18
        }
      },
      "286": {
        start: {
          line: 948,
          column: 12
        },
        end: {
          line: 954,
          column: 13
        }
      },
      "287": {
        start: {
          line: 949,
          column: 16
        },
        end: {
          line: 953,
          column: 18
        }
      },
      "288": {
        start: {
          line: 956,
          column: 8
        },
        end: {
          line: 964,
          column: 10
        }
      },
      "289": {
        start: {
          line: 968,
          column: 4
        },
        end: {
          line: 979,
          column: 5
        }
      },
      "290": {
        start: {
          line: 969,
          column: 8
        },
        end: {
          line: 969,
          column: 43
        }
      },
      "291": {
        start: {
          line: 970,
          column: 24
        },
        end: {
          line: 974,
          column: 17
        }
      },
      "292": {
        start: {
          line: 975,
          column: 8
        },
        end: {
          line: 975,
          column: 59
        }
      },
      "293": {
        start: {
          line: 975,
          column: 22
        },
        end: {
          line: 975,
          column: 59
        }
      },
      "294": {
        start: {
          line: 976,
          column: 8
        },
        end: {
          line: 976,
          column: 51
        }
      },
      "295": {
        start: {
          line: 978,
          column: 8
        },
        end: {
          line: 978,
          column: 56
        }
      },
      "296": {
        start: {
          line: 982,
          column: 4
        },
        end: {
          line: 1001,
          column: 5
        }
      },
      "297": {
        start: {
          line: 983,
          column: 8
        },
        end: {
          line: 983,
          column: 43
        }
      },
      "298": {
        start: {
          line: 984,
          column: 25
        },
        end: {
          line: 996,
          column: 63
        }
      },
      "299": {
        start: {
          line: 997,
          column: 8
        },
        end: {
          line: 997,
          column: 52
        }
      },
      "300": {
        start: {
          line: 999,
          column: 8
        },
        end: {
          line: 999,
          column: 65
        }
      },
      "301": {
        start: {
          line: 1000,
          column: 8
        },
        end: {
          line: 1000,
          column: 18
        }
      },
      "302": {
        start: {
          line: 1004,
          column: 4
        },
        end: {
          line: 1035,
          column: 5
        }
      },
      "303": {
        start: {
          line: 1005,
          column: 8
        },
        end: {
          line: 1005,
          column: 43
        }
      },
      "304": {
        start: {
          line: 1006,
          column: 21
        },
        end: {
          line: 1030,
          column: 10
        }
      },
      "305": {
        start: {
          line: 1031,
          column: 8
        },
        end: {
          line: 1031,
          column: 169
        }
      },
      "306": {
        start: {
          line: 1031,
          column: 48
        },
        end: {
          line: 1031,
          column: 66
        }
      },
      "307": {
        start: {
          line: 1031,
          column: 79
        },
        end: {
          line: 1031,
          column: 161
        }
      },
      "308": {
        start: {
          line: 1031,
          column: 106
        },
        end: {
          line: 1031,
          column: 150
        }
      },
      "309": {
        start: {
          line: 1033,
          column: 8
        },
        end: {
          line: 1033,
          column: 53
        }
      },
      "310": {
        start: {
          line: 1034,
          column: 8
        },
        end: {
          line: 1034,
          column: 18
        }
      },
      "311": {
        start: {
          line: 1038,
          column: 4
        },
        end: {
          line: 1065,
          column: 5
        }
      },
      "312": {
        start: {
          line: 1039,
          column: 41
        },
        end: {
          line: 1039,
          column: 80
        }
      },
      "313": {
        start: {
          line: 1040,
          column: 8
        },
        end: {
          line: 1040,
          column: 34
        }
      },
      "314": {
        start: {
          line: 1041,
          column: 8
        },
        end: {
          line: 1041,
          column: 43
        }
      },
      "315": {
        start: {
          line: 1042,
          column: 27
        },
        end: {
          line: 1042,
          column: 53
        }
      },
      "316": {
        start: {
          line: 1043,
          column: 27
        },
        end: {
          line: 1049,
          column: 9
        }
      },
      "317": {
        start: {
          line: 1050,
          column: 25
        },
        end: {
          line: 1053,
          column: 45
        }
      },
      "318": {
        start: {
          line: 1054,
          column: 30
        },
        end: {
          line: 1054,
          column: 84
        }
      },
      "319": {
        start: {
          line: 1055,
          column: 8
        },
        end: {
          line: 1058,
          column: 10
        }
      },
      "320": {
        start: {
          line: 1060,
          column: 8
        },
        end: {
          line: 1060,
          column: 65
        }
      },
      "321": {
        start: {
          line: 1061,
          column: 8
        },
        end: {
          line: 1064,
          column: 10
        }
      },
      "322": {
        start: {
          line: 1068,
          column: 4
        },
        end: {
          line: 1080,
          column: 5
        }
      },
      "323": {
        start: {
          line: 1070,
          column: 8
        },
        end: {
          line: 1070,
          column: 43
        }
      },
      "324": {
        start: {
          line: 1072,
          column: 27
        },
        end: {
          line: 1075,
          column: 31
        }
      },
      "325": {
        start: {
          line: 1076,
          column: 8
        },
        end: {
          line: 1076,
          column: 26
        }
      },
      "326": {
        start: {
          line: 1078,
          column: 8
        },
        end: {
          line: 1078,
          column: 59
        }
      },
      "327": {
        start: {
          line: 1079,
          column: 8
        },
        end: {
          line: 1079,
          column: 18
        }
      },
      "328": {
        start: {
          line: 1083,
          column: 4
        },
        end: {
          line: 1165,
          column: 5
        }
      },
      "329": {
        start: {
          line: 1084,
          column: 8
        },
        end: {
          line: 1084,
          column: 43
        }
      },
      "330": {
        start: {
          line: 1085,
          column: 28
        },
        end: {
          line: 1087,
          column: 9
        }
      },
      "331": {
        start: {
          line: 1088,
          column: 8
        },
        end: {
          line: 1115,
          column: 9
        }
      },
      "332": {
        start: {
          line: 1089,
          column: 12
        },
        end: {
          line: 1114,
          column: 14
        }
      },
      "333": {
        start: {
          line: 1116,
          column: 21
        },
        end: {
          line: 1116,
          column: 39
        }
      },
      "334": {
        start: {
          line: 1117,
          column: 42
        },
        end: {
          line: 1135,
          column: 10
        }
      },
      "335": {
        start: {
          line: 1136,
          column: 34
        },
        end: {
          line: 1142,
          column: 15
        }
      },
      "336": {
        start: {
          line: 1136,
          column: 59
        },
        end: {
          line: 1142,
          column: 13
        }
      },
      "337": {
        start: {
          line: 1143,
          column: 8
        },
        end: {
          line: 1148,
          column: 11
        }
      },
      "338": {
        start: {
          line: 1149,
          column: 8
        },
        end: {
          line: 1155,
          column: 10
        }
      },
      "339": {
        start: {
          line: 1157,
          column: 8
        },
        end: {
          line: 1157,
          column: 60
        }
      },
      "340": {
        start: {
          line: 1158,
          column: 8
        },
        end: {
          line: 1164,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 16,
            column: 20
          }
        },
        loc: {
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 23
          }
        },
        loc: {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 22,
            column: 21
          }
        },
        loc: {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 25,
            column: 29
          }
        },
        loc: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 17
          }
        },
        loc: {
          start: {
            line: 28,
            column: 27
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 24
          }
        },
        loc: {
          start: {
            line: 31,
            column: 34
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 34,
            column: 21
          }
        },
        loc: {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 37,
            column: 23
          }
        },
        loc: {
          start: {
            line: 37,
            column: 33
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 26
          },
          end: {
            line: 40,
            column: 27
          }
        },
        loc: {
          start: {
            line: 40,
            column: 37
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 43,
            column: 22
          },
          end: {
            line: 43,
            column: 23
          }
        },
        loc: {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 46,
            column: 24
          },
          end: {
            line: 46,
            column: 25
          }
        },
        loc: {
          start: {
            line: 46,
            column: 35
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 25
          }
        },
        loc: {
          start: {
            line: 49,
            column: 35
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 49
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 52,
            column: 34
          },
          end: {
            line: 52,
            column: 35
          }
        },
        loc: {
          start: {
            line: 52,
            column: 45
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 52
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 55,
            column: 23
          },
          end: {
            line: 55,
            column: 24
          }
        },
        loc: {
          start: {
            line: 55,
            column: 34
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 55
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 58,
            column: 19
          },
          end: {
            line: 58,
            column: 20
          }
        },
        loc: {
          start: {
            line: 58,
            column: 30
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 58
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 61,
            column: 19
          },
          end: {
            line: 61,
            column: 20
          }
        },
        loc: {
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 61
      },
      "18": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 77,
            column: 33
          }
        },
        loc: {
          start: {
            line: 77,
            column: 39
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 77
      },
      "19": {
        name: "getCurrentUserInfo",
        decl: {
          start: {
            line: 107,
            column: 15
          },
          end: {
            line: 107,
            column: 33
          }
        },
        loc: {
          start: {
            line: 107,
            column: 36
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 107
      },
      "20": {
        name: "logOperation",
        decl: {
          start: {
            line: 118,
            column: 15
          },
          end: {
            line: 118,
            column: 27
          }
        },
        loc: {
          start: {
            line: 118,
            column: 48
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 118
      },
      "21": {
        name: "getAllProductsForAdmin",
        decl: {
          start: {
            line: 125,
            column: 15
          },
          end: {
            line: 125,
            column: 37
          }
        },
        loc: {
          start: {
            line: 125,
            column: 88
          },
          end: {
            line: 219,
            column: 1
          }
        },
        line: 125
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 189,
            column: 47
          },
          end: {
            line: 189,
            column: 48
          }
        },
        loc: {
          start: {
            line: 189,
            column: 59
          },
          end: {
            line: 195,
            column: 13
          }
        },
        line: 189
      },
      "23": {
        name: "validateSeller",
        decl: {
          start: {
            line: 222,
            column: 15
          },
          end: {
            line: 222,
            column: 29
          }
        },
        loc: {
          start: {
            line: 222,
            column: 38
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 222
      },
      "24": {
        name: "createProduct",
        decl: {
          start: {
            line: 229,
            column: 15
          },
          end: {
            line: 229,
            column: 28
          }
        },
        loc: {
          start: {
            line: 229,
            column: 35
          },
          end: {
            line: 426,
            column: 1
          }
        },
        line: 229
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 264,
            column: 72
          },
          end: {
            line: 264,
            column: 73
          }
        },
        loc: {
          start: {
            line: 264,
            column: 85
          },
          end: {
            line: 277,
            column: 9
          }
        },
        line: 264
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 265,
            column: 58
          },
          end: {
            line: 265,
            column: 59
          }
        },
        loc: {
          start: {
            line: 265,
            column: 74
          },
          end: {
            line: 270,
            column: 13
          }
        },
        line: 265
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 266,
            column: 54
          },
          end: {
            line: 266,
            column: 55
          }
        },
        loc: {
          start: {
            line: 266,
            column: 67
          },
          end: {
            line: 266,
            column: 86
          }
        },
        line: 266
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 278,
            column: 57
          },
          end: {
            line: 278,
            column: 58
          }
        },
        loc: {
          start: {
            line: 278,
            column: 75
          },
          end: {
            line: 278,
            column: 99
          }
        },
        line: 278
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 280,
            column: 61
          },
          end: {
            line: 280,
            column: 62
          }
        },
        loc: {
          start: {
            line: 280,
            column: 85
          },
          end: {
            line: 307,
            column: 9
          }
        },
        line: 280
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 281,
            column: 37
          },
          end: {
            line: 281,
            column: 38
          }
        },
        loc: {
          start: {
            line: 281,
            column: 55
          },
          end: {
            line: 305,
            column: 13
          }
        },
        line: 281
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 282,
            column: 53
          },
          end: {
            line: 282,
            column: 54
          }
        },
        loc: {
          start: {
            line: 282,
            column: 58
          },
          end: {
            line: 282,
            column: 88
          }
        },
        line: 282
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 286,
            column: 49
          },
          end: {
            line: 286,
            column: 50
          }
        },
        loc: {
          start: {
            line: 286,
            column: 66
          },
          end: {
            line: 296,
            column: 21
          }
        },
        line: 286
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 287,
            column: 70
          },
          end: {
            line: 287,
            column: 71
          }
        },
        loc: {
          start: {
            line: 287,
            column: 75
          },
          end: {
            line: 287,
            column: 104
          }
        },
        line: 287
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 370,
            column: 53
          },
          end: {
            line: 370,
            column: 54
          }
        },
        loc: {
          start: {
            line: 370,
            column: 66
          },
          end: {
            line: 380,
            column: 14
          }
        },
        line: 370
      },
      "35": {
        name: "updateProduct",
        decl: {
          start: {
            line: 427,
            column: 15
          },
          end: {
            line: 427,
            column: 28
          }
        },
        loc: {
          start: {
            line: 427,
            column: 35
          },
          end: {
            line: 520,
            column: 1
          }
        },
        line: 427
      },
      "36": {
        name: "deleteProduct",
        decl: {
          start: {
            line: 521,
            column: 15
          },
          end: {
            line: 521,
            column: 28
          }
        },
        loc: {
          start: {
            line: 521,
            column: 33
          },
          end: {
            line: 606,
            column: 1
          }
        },
        line: 521
      },
      "37": {
        name: "reviewProduct",
        decl: {
          start: {
            line: 607,
            column: 15
          },
          end: {
            line: 607,
            column: 28
          }
        },
        loc: {
          start: {
            line: 607,
            column: 57
          },
          end: {
            line: 654,
            column: 1
          }
        },
        line: 607
      },
      "38": {
        name: "getProductCategories",
        decl: {
          start: {
            line: 655,
            column: 15
          },
          end: {
            line: 655,
            column: 35
          }
        },
        loc: {
          start: {
            line: 655,
            column: 47
          },
          end: {
            line: 714,
            column: 1
          }
        },
        line: 655
      },
      "39": {
        name: "getProductsForCard",
        decl: {
          start: {
            line: 715,
            column: 15
          },
          end: {
            line: 715,
            column: 33
          }
        },
        loc: {
          start: {
            line: 715,
            column: 54
          },
          end: {
            line: 775,
            column: 1
          }
        },
        line: 715
      },
      "40": {
        name: "getProductsByTag",
        decl: {
          start: {
            line: 776,
            column: 15
          },
          end: {
            line: 776,
            column: 31
          }
        },
        loc: {
          start: {
            line: 776,
            column: 71
          },
          end: {
            line: 805,
            column: 1
          }
        },
        line: 776
      },
      "41": {
        name: "getLatestProducts",
        decl: {
          start: {
            line: 806,
            column: 15
          },
          end: {
            line: 806,
            column: 32
          }
        },
        loc: {
          start: {
            line: 806,
            column: 53
          },
          end: {
            line: 823,
            column: 1
          }
        },
        line: 806
      },
      "42": {
        name: "getAllProducts",
        decl: {
          start: {
            line: 824,
            column: 15
          },
          end: {
            line: 824,
            column: 29
          }
        },
        loc: {
          start: {
            line: 824,
            column: 126
          },
          end: {
            line: 897,
            column: 1
          }
        },
        line: 824
      },
      "43": {
        name: "getProductById",
        decl: {
          start: {
            line: 898,
            column: 15
          },
          end: {
            line: 898,
            column: 29
          }
        },
        loc: {
          start: {
            line: 898,
            column: 41
          },
          end: {
            line: 966,
            column: 1
          }
        },
        line: 898
      },
      "44": {
        name: "getProductBySlug",
        decl: {
          start: {
            line: 967,
            column: 15
          },
          end: {
            line: 967,
            column: 31
          }
        },
        loc: {
          start: {
            line: 967,
            column: 38
          },
          end: {
            line: 980,
            column: 1
          }
        },
        line: 967
      },
      "45": {
        name: "getRelatedProducts",
        decl: {
          start: {
            line: 981,
            column: 15
          },
          end: {
            line: 981,
            column: 33
          }
        },
        loc: {
          start: {
            line: 981,
            column: 70
          },
          end: {
            line: 1002,
            column: 1
          }
        },
        line: 981
      },
      "46": {
        name: "getAllTags",
        decl: {
          start: {
            line: 1003,
            column: 15
          },
          end: {
            line: 1003,
            column: 25
          }
        },
        loc: {
          start: {
            line: 1003,
            column: 28
          },
          end: {
            line: 1036,
            column: 1
          }
        },
        line: 1003
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 1031,
            column: 40
          },
          end: {
            line: 1031,
            column: 41
          }
        },
        loc: {
          start: {
            line: 1031,
            column: 48
          },
          end: {
            line: 1031,
            column: 66
          }
        },
        line: 1031
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 1031,
            column: 72
          },
          end: {
            line: 1031,
            column: 73
          }
        },
        loc: {
          start: {
            line: 1031,
            column: 79
          },
          end: {
            line: 1031,
            column: 161
          }
        },
        line: 1031
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 1031,
            column: 98
          },
          end: {
            line: 1031,
            column: 99
          }
        },
        loc: {
          start: {
            line: 1031,
            column: 106
          },
          end: {
            line: 1031,
            column: 150
          }
        },
        line: 1031
      },
      "50": {
        name: "getRelatedProductsByCategory",
        decl: {
          start: {
            line: 1037,
            column: 15
          },
          end: {
            line: 1037,
            column: 43
          }
        },
        loc: {
          start: {
            line: 1037,
            column: 90
          },
          end: {
            line: 1066,
            column: 1
          }
        },
        line: 1037
      },
      "51": {
        name: "getAllCategories",
        decl: {
          start: {
            line: 1067,
            column: 15
          },
          end: {
            line: 1067,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1067,
            column: 34
          },
          end: {
            line: 1081,
            column: 1
          }
        },
        line: 1067
      },
      "52": {
        name: "getSellerProducts",
        decl: {
          start: {
            line: 1082,
            column: 15
          },
          end: {
            line: 1082,
            column: 32
          }
        },
        loc: {
          start: {
            line: 1082,
            column: 81
          },
          end: {
            line: 1166,
            column: 1
          }
        },
        line: 1082
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 1136,
            column: 47
          },
          end: {
            line: 1136,
            column: 48
          }
        },
        loc: {
          start: {
            line: 1136,
            column: 59
          },
          end: {
            line: 1142,
            column: 13
          }
        },
        line: 1136
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 78,
            column: 11
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 35
          },
          end: {
            line: 78,
            column: 38
          }
        }, {
          start: {
            line: 78,
            column: 41
          },
          end: {
            line: 80,
            column: 5
          }
        }],
        line: 78
      },
      "1": {
        loc: {
          start: {
            line: 78,
            column: 11
          },
          end: {
            line: 78,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 11
          },
          end: {
            line: 78,
            column: 14
          }
        }, {
          start: {
            line: 78,
            column: 18
          },
          end: {
            line: 78,
            column: 32
          }
        }],
        line: 78
      },
      "2": {
        loc: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "3": {
        loc: {
          start: {
            line: 114,
            column: 18
          },
          end: {
            line: 114,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 18
          },
          end: {
            line: 114,
            column: 35
          }
        }, {
          start: {
            line: 114,
            column: 39
          },
          end: {
            line: 114,
            column: 54
          }
        }],
        line: 114
      },
      "4": {
        loc: {
          start: {
            line: 115,
            column: 18
          },
          end: {
            line: 115,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 18
          },
          end: {
            line: 115,
            column: 35
          }
        }, {
          start: {
            line: 115,
            column: 39
          },
          end: {
            line: 115,
            column: 45
          }
        }],
        line: 115
      },
      "5": {
        loc: {
          start: {
            line: 125,
            column: 40
          },
          end: {
            line: 125,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 125,
            column: 48
          },
          end: {
            line: 125,
            column: 50
          }
        }],
        line: 125
      },
      "6": {
        loc: {
          start: {
            line: 125,
            column: 52
          },
          end: {
            line: 125,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 125,
            column: 59
          },
          end: {
            line: 125,
            column: 60
          }
        }],
        line: 125
      },
      "7": {
        loc: {
          start: {
            line: 125,
            column: 62
          },
          end: {
            line: 125,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 125,
            column: 69
          },
          end: {
            line: 125,
            column: 77
          }
        }],
        line: 125
      },
      "8": {
        loc: {
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 129,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 129,
            column: 21
          }
        }, {
          start: {
            line: 129,
            column: 25
          },
          end: {
            line: 129,
            column: 33
          }
        }],
        line: 129
      },
      "9": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "10": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 131,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 131,
            column: 17
          }
        }, {
          start: {
            line: 131,
            column: 21
          },
          end: {
            line: 131,
            column: 36
          }
        }],
        line: 131
      },
      "11": {
        loc: {
          start: {
            line: 159,
            column: 28
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 54
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        }],
        line: 159
      },
      "12": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 43
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        }],
        line: 161
      },
      "13": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 43
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        }],
        line: 163
      },
      "14": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 45
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        }],
        line: 165
      },
      "15": {
        loc: {
          start: {
            line: 193,
            column: 28
          },
          end: {
            line: 193,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 28
          },
          end: {
            line: 193,
            column: 51
          }
        }, {
          start: {
            line: 193,
            column: 55
          },
          end: {
            line: 193,
            column: 56
          }
        }],
        line: 193
      },
      "16": {
        loc: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "17": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 224,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 224,
            column: 31
          }
        }, {
          start: {
            line: 224,
            column: 35
          },
          end: {
            line: 224,
            column: 55
          }
        }],
        line: 224
      },
      "18": {
        loc: {
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "19": {
        loc: {
          start: {
            line: 240,
            column: 18
          },
          end: {
            line: 240,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 18
          },
          end: {
            line: 240,
            column: 40
          }
        }, {
          start: {
            line: 240,
            column: 44
          },
          end: {
            line: 240,
            column: 67
          }
        }],
        line: 240
      },
      "20": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "21": {
        loc: {
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 243,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 243,
            column: 41
          }
        }, {
          start: {
            line: 243,
            column: 45
          },
          end: {
            line: 243,
            column: 73
          }
        }],
        line: 243
      },
      "22": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 262,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "23": {
        loc: {
          start: {
            line: 264,
            column: 39
          },
          end: {
            line: 277,
            column: 16
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 39
          },
          end: {
            line: 277,
            column: 10
          }
        }, {
          start: {
            line: 277,
            column: 14
          },
          end: {
            line: 277,
            column: 16
          }
        }],
        line: 264
      },
      "24": {
        loc: {
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 304,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 16
          },
          end: {
            line: 304,
            column: 17
          }
        }, {
          start: {
            line: 297,
            column: 23
          },
          end: {
            line: 304,
            column: 17
          }
        }],
        line: 283
      },
      "25": {
        loc: {
          start: {
            line: 288,
            column: 24
          },
          end: {
            line: 295,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 24
          },
          end: {
            line: 295,
            column: 25
          }
        }, {
          start: {
            line: 291,
            column: 31
          },
          end: {
            line: 295,
            column: 25
          }
        }],
        line: 288
      },
      "26": {
        loc: {
          start: {
            line: 310,
            column: 30
          },
          end: {
            line: 310,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 30
          },
          end: {
            line: 310,
            column: 59
          }
        }, {
          start: {
            line: 310,
            column: 63
          },
          end: {
            line: 310,
            column: 65
          }
        }],
        line: 310
      },
      "27": {
        loc: {
          start: {
            line: 311,
            column: 27
          },
          end: {
            line: 311,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 27
          },
          end: {
            line: 311,
            column: 67
          }
        }, {
          start: {
            line: 311,
            column: 71
          },
          end: {
            line: 311,
            column: 72
          }
        }],
        line: 311
      },
      "28": {
        loc: {
          start: {
            line: 323,
            column: 23
          },
          end: {
            line: 323,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 323,
            column: 23
          },
          end: {
            line: 323,
            column: 54
          }
        }, {
          start: {
            line: 323,
            column: 58
          },
          end: {
            line: 323,
            column: 67
          }
        }],
        line: 323
      },
      "29": {
        loc: {
          start: {
            line: 334,
            column: 25
          },
          end: {
            line: 334,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 25
          },
          end: {
            line: 334,
            column: 50
          }
        }, {
          start: {
            line: 334,
            column: 54
          },
          end: {
            line: 334,
            column: 59
          }
        }],
        line: 334
      },
      "30": {
        loc: {
          start: {
            line: 356,
            column: 20
          },
          end: {
            line: 356,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 356,
            column: 48
          },
          end: {
            line: 356,
            column: 57
          }
        }, {
          start: {
            line: 356,
            column: 60
          },
          end: {
            line: 356,
            column: 67
          }
        }],
        line: 356
      },
      "31": {
        loc: {
          start: {
            line: 405,
            column: 8
          },
          end: {
            line: 418,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 8
          },
          end: {
            line: 418,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 405
      },
      "32": {
        loc: {
          start: {
            line: 406,
            column: 12
          },
          end: {
            line: 411,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 12
          },
          end: {
            line: 411,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "33": {
        loc: {
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 417,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 12
          },
          end: {
            line: 417,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "34": {
        loc: {
          start: {
            line: 421,
            column: 21
          },
          end: {
            line: 421,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 421,
            column: 46
          },
          end: {
            line: 421,
            column: 59
          }
        }, {
          start: {
            line: 421,
            column: 62
          },
          end: {
            line: 421,
            column: 88
          }
        }],
        line: 421
      },
      "35": {
        loc: {
          start: {
            line: 435,
            column: 8
          },
          end: {
            line: 437,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 435,
            column: 8
          },
          end: {
            line: 437,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 435
      },
      "36": {
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      },
      "37": {
        loc: {
          start: {
            line: 445,
            column: 8
          },
          end: {
            line: 447,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 8
          },
          end: {
            line: 447,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "38": {
        loc: {
          start: {
            line: 445,
            column: 12
          },
          end: {
            line: 445,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 445,
            column: 12
          },
          end: {
            line: 445,
            column: 46
          }
        }, {
          start: {
            line: 445,
            column: 50
          },
          end: {
            line: 445,
            column: 110
          }
        }],
        line: 445
      },
      "39": {
        loc: {
          start: {
            line: 449,
            column: 75
          },
          end: {
            line: 449,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 449,
            column: 112
          },
          end: {
            line: 449,
            column: 147
          }
        }, {
          start: {
            line: 449,
            column: 150
          },
          end: {
            line: 449,
            column: 170
          }
        }],
        line: 449
      },
      "40": {
        loc: {
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 452,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 450,
            column: 8
          },
          end: {
            line: 452,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 450
      },
      "41": {
        loc: {
          start: {
            line: 450,
            column: 12
          },
          end: {
            line: 450,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 450,
            column: 12
          },
          end: {
            line: 450,
            column: 35
          }
        }, {
          start: {
            line: 450,
            column: 39
          },
          end: {
            line: 450,
            column: 59
          }
        }],
        line: 450
      },
      "42": {
        loc: {
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 469,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 469,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 456
      },
      "43": {
        loc: {
          start: {
            line: 456,
            column: 12
          },
          end: {
            line: 456,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 456,
            column: 12
          },
          end: {
            line: 456,
            column: 58
          }
        }, {
          start: {
            line: 456,
            column: 62
          },
          end: {
            line: 456,
            column: 127
          }
        }],
        line: 456
      },
      "44": {
        loc: {
          start: {
            line: 458,
            column: 27
          },
          end: {
            line: 458,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 458,
            column: 27
          },
          end: {
            line: 458,
            column: 57
          }
        }, {
          start: {
            line: 458,
            column: 61
          },
          end: {
            line: 458,
            column: 91
          }
        }],
        line: 458
      },
      "45": {
        loc: {
          start: {
            line: 459,
            column: 31
          },
          end: {
            line: 459,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 459,
            column: 31
          },
          end: {
            line: 459,
            column: 70
          }
        }, {
          start: {
            line: 459,
            column: 74
          },
          end: {
            line: 459,
            column: 75
          }
        }],
        line: 459
      },
      "46": {
        loc: {
          start: {
            line: 471,
            column: 37
          },
          end: {
            line: 471,
            column: 151
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 471,
            column: 37
          },
          end: {
            line: 471,
            column: 62
          }
        }, {
          start: {
            line: 471,
            column: 66
          },
          end: {
            line: 471,
            column: 92
          }
        }, {
          start: {
            line: 471,
            column: 96
          },
          end: {
            line: 471,
            column: 123
          }
        }, {
          start: {
            line: 471,
            column: 127
          },
          end: {
            line: 471,
            column: 151
          }
        }],
        line: 471
      },
      "47": {
        loc: {
          start: {
            line: 476,
            column: 20
          },
          end: {
            line: 476,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 476,
            column: 49
          },
          end: {
            line: 476,
            column: 107
          }
        }, {
          start: {
            line: 476,
            column: 110
          },
          end: {
            line: 476,
            column: 117
          }
        }],
        line: 476
      },
      "48": {
        loc: {
          start: {
            line: 476,
            column: 49
          },
          end: {
            line: 476,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 476,
            column: 87
          },
          end: {
            line: 476,
            column: 95
          }
        }, {
          start: {
            line: 476,
            column: 98
          },
          end: {
            line: 476,
            column: 107
          }
        }],
        line: 476
      },
      "49": {
        loc: {
          start: {
            line: 478,
            column: 23
          },
          end: {
            line: 478,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 478,
            column: 23
          },
          end: {
            line: 478,
            column: 45
          }
        }, {
          start: {
            line: 478,
            column: 49
          },
          end: {
            line: 478,
            column: 72
          }
        }],
        line: 478
      },
      "50": {
        loc: {
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 490,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 490,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 486
      },
      "51": {
        loc: {
          start: {
            line: 488,
            column: 24
          },
          end: {
            line: 488,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 488,
            column: 53
          },
          end: {
            line: 488,
            column: 75
          }
        }, {
          start: {
            line: 488,
            column: 78
          },
          end: {
            line: 488,
            column: 101
          }
        }],
        line: 488
      },
      "52": {
        loc: {
          start: {
            line: 527,
            column: 8
          },
          end: {
            line: 529,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 527,
            column: 8
          },
          end: {
            line: 529,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 527
      },
      "53": {
        loc: {
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 535,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 533,
            column: 8
          },
          end: {
            line: 535,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 533
      },
      "54": {
        loc: {
          start: {
            line: 537,
            column: 8
          },
          end: {
            line: 539,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 537,
            column: 8
          },
          end: {
            line: 539,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 537
      },
      "55": {
        loc: {
          start: {
            line: 537,
            column: 12
          },
          end: {
            line: 537,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 537,
            column: 12
          },
          end: {
            line: 537,
            column: 46
          }
        }, {
          start: {
            line: 537,
            column: 50
          },
          end: {
            line: 537,
            column: 102
          }
        }],
        line: 537
      },
      "56": {
        loc: {
          start: {
            line: 543,
            column: 8
          },
          end: {
            line: 548,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 543,
            column: 8
          },
          end: {
            line: 548,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 543
      },
      "57": {
        loc: {
          start: {
            line: 553,
            column: 23
          },
          end: {
            line: 553,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 553,
            column: 23
          },
          end: {
            line: 553,
            column: 45
          }
        }, {
          start: {
            line: 553,
            column: 49
          },
          end: {
            line: 553,
            column: 72
          }
        }],
        line: 553
      },
      "58": {
        loc: {
          start: {
            line: 567,
            column: 27
          },
          end: {
            line: 567,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 567,
            column: 27
          },
          end: {
            line: 567,
            column: 49
          }
        }, {
          start: {
            line: 567,
            column: 53
          },
          end: {
            line: 567,
            column: 76
          }
        }],
        line: 567
      },
      "59": {
        loc: {
          start: {
            line: 581,
            column: 8
          },
          end: {
            line: 596,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 581,
            column: 8
          },
          end: {
            line: 596,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 581
      },
      "60": {
        loc: {
          start: {
            line: 582,
            column: 12
          },
          end: {
            line: 588,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 582,
            column: 12
          },
          end: {
            line: 588,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 582
      },
      "61": {
        loc: {
          start: {
            line: 589,
            column: 12
          },
          end: {
            line: 595,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 589,
            column: 12
          },
          end: {
            line: 595,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 589
      },
      "62": {
        loc: {
          start: {
            line: 612,
            column: 8
          },
          end: {
            line: 614,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 612,
            column: 8
          },
          end: {
            line: 614,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 612
      },
      "63": {
        loc: {
          start: {
            line: 617,
            column: 8
          },
          end: {
            line: 619,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 617,
            column: 8
          },
          end: {
            line: 619,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 617
      },
      "64": {
        loc: {
          start: {
            line: 622,
            column: 20
          },
          end: {
            line: 622,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 622,
            column: 31
          },
          end: {
            line: 622,
            column: 39
          }
        }, {
          start: {
            line: 622,
            column: 42
          },
          end: {
            line: 622,
            column: 52
          }
        }],
        line: 622
      },
      "65": {
        loc: {
          start: {
            line: 627,
            column: 23
          },
          end: {
            line: 627,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 627,
            column: 23
          },
          end: {
            line: 627,
            column: 28
          }
        }, {
          start: {
            line: 627,
            column: 32
          },
          end: {
            line: 627,
            column: 34
          }
        }],
        line: 627
      },
      "66": {
        loc: {
          start: {
            line: 637,
            column: 8
          },
          end: {
            line: 639,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 637,
            column: 8
          },
          end: {
            line: 639,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 637
      },
      "67": {
        loc: {
          start: {
            line: 642,
            column: 32
          },
          end: {
            line: 642,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 642,
            column: 43
          },
          end: {
            line: 642,
            column: 53
          }
        }, {
          start: {
            line: 642,
            column: 56
          },
          end: {
            line: 642,
            column: 66
          }
        }],
        line: 642
      },
      "68": {
        loc: {
          start: {
            line: 655,
            column: 36
          },
          end: {
            line: 655,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 655,
            column: 44
          },
          end: {
            line: 655,
            column: 45
          }
        }],
        line: 655
      },
      "69": {
        loc: {
          start: {
            line: 715,
            column: 41
          },
          end: {
            line: 715,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 715,
            column: 49
          },
          end: {
            line: 715,
            column: 50
          }
        }],
        line: 715
      },
      "70": {
        loc: {
          start: {
            line: 776,
            column: 39
          },
          end: {
            line: 776,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 776,
            column: 47
          },
          end: {
            line: 776,
            column: 49
          }
        }],
        line: 776
      },
      "71": {
        loc: {
          start: {
            line: 776,
            column: 51
          },
          end: {
            line: 776,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 776,
            column: 60
          },
          end: {
            line: 776,
            column: 67
          }
        }],
        line: 776
      },
      "72": {
        loc: {
          start: {
            line: 788,
            column: 8
          },
          end: {
            line: 793,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 788,
            column: 8
          },
          end: {
            line: 793,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 788
      },
      "73": {
        loc: {
          start: {
            line: 794,
            column: 27
          },
          end: {
            line: 798,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 794,
            column: 48
          },
          end: {
            line: 796,
            column: 9
          }
        }, {
          start: {
            line: 796,
            column: 12
          },
          end: {
            line: 798,
            column: 9
          }
        }],
        line: 794
      },
      "74": {
        loc: {
          start: {
            line: 806,
            column: 33
          },
          end: {
            line: 806,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 806,
            column: 49
          },
          end: {
            line: 806,
            column: 51
          }
        }],
        line: 806
      },
      "75": {
        loc: {
          start: {
            line: 806,
            column: 35
          },
          end: {
            line: 806,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 806,
            column: 43
          },
          end: {
            line: 806,
            column: 44
          }
        }],
        line: 806
      },
      "76": {
        loc: {
          start: {
            line: 824,
            column: 32
          },
          end: {
            line: 824,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 824,
            column: 40
          },
          end: {
            line: 824,
            column: 42
          }
        }],
        line: 824
      },
      "77": {
        loc: {
          start: {
            line: 824,
            column: 44
          },
          end: {
            line: 824,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 824,
            column: 55
          },
          end: {
            line: 824,
            column: 60
          }
        }],
        line: 824
      },
      "78": {
        loc: {
          start: {
            line: 824,
            column: 62
          },
          end: {
            line: 824,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 824,
            column: 68
          },
          end: {
            line: 824,
            column: 73
          }
        }],
        line: 824
      },
      "79": {
        loc: {
          start: {
            line: 824,
            column: 75
          },
          end: {
            line: 824,
            column: 90
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 824,
            column: 82
          },
          end: {
            line: 824,
            column: 90
          }
        }],
        line: 824
      },
      "80": {
        loc: {
          start: {
            line: 824,
            column: 92
          },
          end: {
            line: 824,
            column: 100
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 824,
            column: 99
          },
          end: {
            line: 824,
            column: 100
          }
        }],
        line: 824
      },
      "81": {
        loc: {
          start: {
            line: 828,
            column: 16
          },
          end: {
            line: 828,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 828,
            column: 16
          },
          end: {
            line: 828,
            column: 21
          }
        }, {
          start: {
            line: 828,
            column: 25
          },
          end: {
            line: 828,
            column: 33
          }
        }],
        line: 828
      },
      "82": {
        loc: {
          start: {
            line: 837,
            column: 8
          },
          end: {
            line: 842,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 837,
            column: 8
          },
          end: {
            line: 842,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 837
      },
      "83": {
        loc: {
          start: {
            line: 837,
            column: 12
          },
          end: {
            line: 837,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 837,
            column: 12
          },
          end: {
            line: 837,
            column: 17
          }
        }, {
          start: {
            line: 837,
            column: 21
          },
          end: {
            line: 837,
            column: 36
          }
        }],
        line: 837
      },
      "84": {
        loc: {
          start: {
            line: 843,
            column: 8
          },
          end: {
            line: 845,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 843,
            column: 8
          },
          end: {
            line: 845,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 843
      },
      "85": {
        loc: {
          start: {
            line: 843,
            column: 12
          },
          end: {
            line: 843,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 843,
            column: 12
          },
          end: {
            line: 843,
            column: 20
          }
        }, {
          start: {
            line: 843,
            column: 24
          },
          end: {
            line: 843,
            column: 42
          }
        }],
        line: 843
      },
      "86": {
        loc: {
          start: {
            line: 846,
            column: 8
          },
          end: {
            line: 848,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 846,
            column: 8
          },
          end: {
            line: 848,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 846
      },
      "87": {
        loc: {
          start: {
            line: 846,
            column: 12
          },
          end: {
            line: 846,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 846,
            column: 12
          },
          end: {
            line: 846,
            column: 15
          }
        }, {
          start: {
            line: 846,
            column: 19
          },
          end: {
            line: 846,
            column: 32
          }
        }],
        line: 846
      },
      "88": {
        loc: {
          start: {
            line: 849,
            column: 8
          },
          end: {
            line: 853,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 849,
            column: 8
          },
          end: {
            line: 853,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 849
      },
      "89": {
        loc: {
          start: {
            line: 849,
            column: 12
          },
          end: {
            line: 849,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 849,
            column: 12
          },
          end: {
            line: 849,
            column: 18
          }
        }, {
          start: {
            line: 849,
            column: 22
          },
          end: {
            line: 849,
            column: 38
          }
        }],
        line: 849
      },
      "90": {
        loc: {
          start: {
            line: 854,
            column: 8
          },
          end: {
            line: 860,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 854,
            column: 8
          },
          end: {
            line: 860,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 854
      },
      "91": {
        loc: {
          start: {
            line: 854,
            column: 12
          },
          end: {
            line: 854,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 854,
            column: 12
          },
          end: {
            line: 854,
            column: 17
          }
        }, {
          start: {
            line: 854,
            column: 21
          },
          end: {
            line: 854,
            column: 36
          }
        }],
        line: 854
      },
      "92": {
        loc: {
          start: {
            line: 862,
            column: 22
          },
          end: {
            line: 872,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 862,
            column: 48
          },
          end: {
            line: 864,
            column: 9
          }
        }, {
          start: {
            line: 864,
            column: 12
          },
          end: {
            line: 872,
            column: 9
          }
        }],
        line: 862
      },
      "93": {
        loc: {
          start: {
            line: 864,
            column: 12
          },
          end: {
            line: 872,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 864,
            column: 43
          },
          end: {
            line: 866,
            column: 9
          }
        }, {
          start: {
            line: 866,
            column: 12
          },
          end: {
            line: 872,
            column: 9
          }
        }],
        line: 864
      },
      "94": {
        loc: {
          start: {
            line: 866,
            column: 12
          },
          end: {
            line: 872,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 866,
            column: 43
          },
          end: {
            line: 868,
            column: 9
          }
        }, {
          start: {
            line: 868,
            column: 12
          },
          end: {
            line: 872,
            column: 9
          }
        }],
        line: 866
      },
      "95": {
        loc: {
          start: {
            line: 868,
            column: 12
          },
          end: {
            line: 872,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 868,
            column: 45
          },
          end: {
            line: 870,
            column: 9
          }
        }, {
          start: {
            line: 870,
            column: 12
          },
          end: {
            line: 872,
            column: 9
          }
        }],
        line: 868
      },
      "96": {
        loc: {
          start: {
            line: 901,
            column: 8
          },
          end: {
            line: 903,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 901,
            column: 8
          },
          end: {
            line: 903,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 901
      },
      "97": {
        loc: {
          start: {
            line: 901,
            column: 12
          },
          end: {
            line: 901,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 901,
            column: 12
          },
          end: {
            line: 901,
            column: 22
          }
        }, {
          start: {
            line: 901,
            column: 26
          },
          end: {
            line: 901,
            column: 78
          }
        }],
        line: 901
      },
      "98": {
        loc: {
          start: {
            line: 909,
            column: 8
          },
          end: {
            line: 911,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 909,
            column: 8
          },
          end: {
            line: 911,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 909
      },
      "99": {
        loc: {
          start: {
            line: 915,
            column: 23
          },
          end: {
            line: 915,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 915,
            column: 43
          },
          end: {
            line: 915,
            column: 84
          }
        }, {
          start: {
            line: 915,
            column: 87
          },
          end: {
            line: 915,
            column: 96
          }
        }],
        line: 915
      },
      "100": {
        loc: {
          start: {
            line: 916,
            column: 23
          },
          end: {
            line: 916,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 916,
            column: 43
          },
          end: {
            line: 916,
            column: 84
          }
        }, {
          start: {
            line: 916,
            column: 87
          },
          end: {
            line: 916,
            column: 96
          }
        }],
        line: 916
      },
      "101": {
        loc: {
          start: {
            line: 940,
            column: 8
          },
          end: {
            line: 955,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 940,
            column: 8
          },
          end: {
            line: 955,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 940
      },
      "102": {
        loc: {
          start: {
            line: 941,
            column: 12
          },
          end: {
            line: 947,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 941,
            column: 12
          },
          end: {
            line: 947,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 941
      },
      "103": {
        loc: {
          start: {
            line: 948,
            column: 12
          },
          end: {
            line: 954,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 948,
            column: 12
          },
          end: {
            line: 954,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 948
      },
      "104": {
        loc: {
          start: {
            line: 975,
            column: 8
          },
          end: {
            line: 975,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 975,
            column: 8
          },
          end: {
            line: 975,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 975
      },
      "105": {
        loc: {
          start: {
            line: 981,
            column: 57
          },
          end: {
            line: 981,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 981,
            column: 65
          },
          end: {
            line: 981,
            column: 66
          }
        }],
        line: 981
      },
      "106": {
        loc: {
          start: {
            line: 1031,
            column: 15
          },
          end: {
            line: 1031,
            column: 168
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1031,
            column: 15
          },
          end: {
            line: 1031,
            column: 162
          }
        }, {
          start: {
            line: 1031,
            column: 166
          },
          end: {
            line: 1031,
            column: 168
          }
        }],
        line: 1031
      },
      "107": {
        loc: {
          start: {
            line: 1037,
            column: 67
          },
          end: {
            line: 1037,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1037,
            column: 75
          },
          end: {
            line: 1037,
            column: 76
          }
        }],
        line: 1037
      },
      "108": {
        loc: {
          start: {
            line: 1037,
            column: 78
          },
          end: {
            line: 1037,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1037,
            column: 85
          },
          end: {
            line: 1037,
            column: 86
          }
        }],
        line: 1037
      },
      "109": {
        loc: {
          start: {
            line: 1040,
            column: 16
          },
          end: {
            line: 1040,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1040,
            column: 16
          },
          end: {
            line: 1040,
            column: 21
          }
        }, {
          start: {
            line: 1040,
            column: 25
          },
          end: {
            line: 1040,
            column: 33
          }
        }],
        line: 1040
      },
      "110": {
        loc: {
          start: {
            line: 1082,
            column: 45
          },
          end: {
            line: 1082,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1082,
            column: 53
          },
          end: {
            line: 1082,
            column: 55
          }
        }],
        line: 1082
      },
      "111": {
        loc: {
          start: {
            line: 1082,
            column: 57
          },
          end: {
            line: 1082,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1082,
            column: 64
          },
          end: {
            line: 1082,
            column: 65
          }
        }],
        line: 1082
      },
      "112": {
        loc: {
          start: {
            line: 1082,
            column: 67
          },
          end: {
            line: 1082,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1082,
            column: 75
          },
          end: {
            line: 1082,
            column: 77
          }
        }],
        line: 1082
      },
      "113": {
        loc: {
          start: {
            line: 1088,
            column: 8
          },
          end: {
            line: 1115,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1088,
            column: 8
          },
          end: {
            line: 1115,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1088
      },
      "114": {
        loc: {
          start: {
            line: 1140,
            column: 28
          },
          end: {
            line: 1140,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1140,
            column: 28
          },
          end: {
            line: 1140,
            column: 51
          }
        }, {
          start: {
            line: 1140,
            column: 55
          },
          end: {
            line: 1140,
            column: 56
          }
        }],
        line: 1140
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0, 0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0],
      "69": [0],
      "70": [0],
      "71": [0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0],
      "75": [0],
      "76": [0],
      "77": [0],
      "78": [0],
      "79": [0],
      "80": [0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0],
      "106": [0, 0],
      "107": [0],
      "108": [0],
      "109": [0, 0],
      "110": [0],
      "111": [0],
      "112": [0],
      "113": [0, 0],
      "114": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/integrations/amazon/service.ts"],
      sourcesContent: ["'use server'\n\nimport { connectToDatabase } from '@/lib/db'\nimport Product, { IProduct } from '@/lib/db/models/product.model'\nimport { revalidatePath } from 'next/cache'\nimport { formatError } from '../utils'\n// import { ProductUpdateSchema } from '../validator'\nimport { IProductInput } from '@/types'\nimport { auth } from '@/auth'\nimport { getSetting } from './setting.actions'\nimport mongoose from 'mongoose'\nimport { updateSellerMetrics,getSellerByUserId } from './seller.actions'\nimport { updateWarehouseStock } from './warehouse.actions'\nimport { z } from 'zod'\n// import { ProductInputSchema } from '../validator/product.validator'\n// import { ShipBobService } from '../api/integrations/shipbob/service'\n// import { ShipBobSehrvice } from '../services/warehouse/shipbob'\n\n\n\nimport { ProductInputSchema, ProductUpdateSchema } from '../validator/product.validator'\nimport { WarehouseProvider } from '../services/warehouse/types'\nimport { ShipBobService } from '../services/warehouse/shipbob'\nimport { FourPXService } from '../services/warehouse/fourpx'\n// import { AmazonFulfillmentService } from '../api/integrations/amazon/service'\n// import { AliExpressFulfillmentService } from '../api/integrations/aliexpress/service'\n// import { AmazonFulfillmentService } from '../api/integrations/amazon/service'\n\n// // Warehouse providers configuration\n// const warehouseProviders: { [key: string]: WarehouseProvider } = {\n//   ShipBob: new ShipBobService({\n//     apiKey: process.env.SHIPBOB_API_KEY!,\n//     apiUrl: process.env.SHIPBOB_API_URL!,\n//   }),\n//   '4PX': new FourPXService({\n//     apiKey: process.env.FOURPX_API_KEY!,\n//     apiUrl: process.env.FOURPX_API_URL!,\n//   }),\n// }\n\n\n\n\n\nconst warehouseProviders = {\n  ShipBob: new ShipBobService({\n    apiKey: process.env.SHIPBOB_API_KEY!,\n    apiUrl: process.env.SHIPBOB_API_URL!,\n  }),\n  '4PX': new FourPXService({\n    apiKey: process.env.FOURPX_API_KEY!,\n    apiUrl: process.env.FOURPX_API_URL!,\n  }),\n\n}\n\n\n// Types\ntype ProductSortOption =\n  | 'latest'\n  | 'best-selling'\n  | 'price-low-to-high'\n  | 'price-high-to-low'\n  | 'avg-customer-review'\n\ninterface ProductQueryFilters {\n  search?: string\n  category?: string\n  tag?: string\n  minPrice?: number\n  maxPrice?: number\n  rating?: number\n  status?: 'active' | 'draft' | 'pending' | 'rejected'\n  stock?: number\n}\n\ninterface ProductListResponse {\n  products: IProduct[]\n  totalPages: number\n  totalProducts: number\n  from: number\n  to: number\n}\n\n// Helper Functions\nasync function getCurrentUserInfo() {\n  const session = await auth()\n  if (!session?.user?.id) {\n    throw new Error('Unauthorized')\n  }\n  return {\n    userId: session.user.id,\n    userName: session.user.name || session.user.id,\n    userRole: session.user.role || 'USER'\n  }\n}\n\nasync function logOperation(operation: string, details: any) {\n  const { userName } = await getCurrentUserInfo()\n  console.log(`[${new Date().toISOString()}] \uD83D\uDCDD ${operation}:`, {\n    user: userName,\n    ...details\n  })\n}\n// import { updateWarehouseStock, updateSellerMetrics } from '@/lib/operations'\n\n// async function validateSeller(userId: string) {\n//   const sellerResponse = await getSellerByUserId(userId)\n//   if (!sellerResponse.success || !sellerResponse.data) {\n//     throw new Error('Seller account required')\n//   }\n//   return sellerResponse.data\n// }\n\n// -------------------------\n// First version of createProduct (example snippet fixing static values)\n// -------------------------\n// export async function createProduct_v1(data: IProductInput) {\n//   const session = await mongoose.startSession()\n//   session.startTransaction()\n\n//   try {\n//     // Use current time and current user info dynamically\n//     const creationTime = new Date()\n//     const { userId, userName } = await getCurrentUserInfo()\n\n//     await connectToDatabase()\n\n//     const seller = await validateSeller(userId)\n    \n//     console.log(`[${creationTime.toISOString()}] Creating product:`, {\n//       name: data.name,\n//       seller: seller.businessName\n//     })\n\n//     // Validate and process colors and sizes\n//     const processedWarehouseData = data.warehouseData.map(warehouse => {\n//       const totalQuantity = warehouse.colors.reduce((total, color) => {\n//         const colorTotal = color.sizes.reduce((sum, size) => sum + size.quantity, 0)\n//         color.quantity = colorTotal // Update color total\n//         color.inStock = colorTotal > 0 // Update color stock status\n//         return total + colorTotal\n//       }, 0)\n\n//       return {\n//         ...warehouse,\n//         quantity: totalQuantity // Update warehouse total\n//       }\n//     })\n\n//     // Calculate total stock across all warehouses\n//     const totalStock = processedWarehouseData.reduce(\n//       (sum, warehouse) => sum + warehouse.quantity,\n//       0\n//     )\n\n//     // Prepare product data\n//     const productData = {\n//       ...data,\n//       name: data.name.trim(),\n//       slug: data.slug.trim(),\n//       category: data.category.trim(),\n//       brand: data.brand.trim(),\n//       description: data.description.trim(),\n//       price: Number(data.price),\n//       listPrice: Number(data.listPrice) || Number(data.price),\n//       countInStock: totalStock,\n//       warehouseData: processedWarehouseData,\n//       colors: processedWarehouseData.reduce((allColors: any[], warehouse) => {\n//         warehouse.colors.forEach(warehouseColor => {\n//           const existingColor = allColors.find(c => c.name === warehouseColor.name)\n//           if (existingColor) {\n//             // Combine quantities for same color across warehouses\n//             existingColor.quantity += warehouseColor.quantity\n//             existingColor.inStock = existingColor.quantity > 0\n//             // Combine sizes\n//             warehouseColor.sizes.forEach(warehouseSize => {\n//               const existingSize = existingColor.sizes.find(s => s.name === warehouseSize.name)\n//               if (existingSize) {\n//                 existingSize.quantity += warehouseSize.quantity\n//                 existingSize.inStock = existingSize.quantity > 0\n//               } else {\n//                 existingColor.sizes.push({ ...warehouseSize })\n//               }\n//             })\n//           } else {\n//             // Add new color with its sizes\n//             allColors.push({\n//               ...warehouseColor,\n//               sizes: [...warehouseColor.sizes]\n//             })\n//           }\n//         })\n//         return allColors\n//       }, []),\n//       sizes: ['S', 'M', 'L', 'XL', 'XXL'],\n//       isPublished: data.isPublished || false,\n//       sellerId: seller._id,\n//       seller: {\n//         name: seller.businessName,\n//         email: seller.email,\n//         subscription: seller.subscription.plan\n//       },\n//       status: data.isPublished ? 'pending' : 'draft',\n//       createdAt: creationTime,\n//       updatedAt: creationTime,\n//       createdBy: userName,\n//       updatedBy: userName\n//     }\n\n//     // Create product\n//     const product = await Product.create([productData], { session })\n//     const createdProduct = product[0]\n\n//     // Update warehouse stock\n//     await Promise.all(processedWarehouseData.map(warehouse =>\n//       updateWarehouseStock({\n//         productId: createdProduct._id,\n//         warehouseId: warehouse.warehouseId,\n//         quantity: warehouse.quantity,\n//         sku: warehouse.sku,\n//         location: warehouse.location,\n//         minimumStock: warehouse.minimumStock,\n//         reorderPoint: warehouse.reorderPoint,\n//         colors: warehouse.colors,\n//         updatedBy: userName\n//       })\n//     ))\n\n//     // Update seller metrics\n//     await updateSellerMetrics(seller._id, {\n//       productsCount: '+1',\n//       lastProductCreated: creationTime\n//     })\n\n//     await session.commitTransaction()\n\n//     // Revalidate paths\n//     revalidatePath('/seller/dashboard/products')\n//     revalidatePath('/admin/products')\n\n//     console.log(`[${creationTime.toISOString()}] Product created successfully:`, {\n//       productId: createdProduct._id,\n//       name: createdProduct.name,\n//       totalStock,\n//       colorsCount: createdProduct.colors.length\n//     })\n\n//     return {\n//       success: true,\n//       message: 'Product created successfully',\n//       data: createdProduct\n//     }\n//   } catch (error) {\n//     await session.abortTransaction()\n//     console.error('Product creation error:', error)\n//     // Additional error handling can be added here\n//     return { \n//       success: false, \n//       message: error instanceof Error ? error.message : 'Failed to create product' \n//     }\n//   } finally {\n//     session.endSession()\n//   }\n// }\n\n// -------------------------\n// Second version with all functions below\n// -------------------------\n\n// GET ALL PRODUCTS FOR ADMIN\nexport async function getAllProductsForAdmin({\n  query = '',\n  page = 1,\n  sort = 'latest',\n  limit,\n}: {\n  query?: string\n  page?: number\n  sort?: string\n  limit?: number\n}): Promise<ProductListResponse> {\n  try {\n    await connectToDatabase()\n\n    const {\n      common: { pageSize },\n    } = await getSetting()\n    limit = limit || pageSize\n\n    const queryFilter: any = {}\n    if (query && query !== 'all') {\n      queryFilter.$or = [\n        { name: { $regex: query, $options: 'i' } },\n        { category: { $regex: query, $options: 'i' } },\n        { brand: { $regex: query, $options: 'i' } },\n        { slug: { $regex: query, $options: 'i' } },\n      ]\n    }\n\n    const sortOptions: Record<string, 1 | -1> =\n      sort === 'best-selling'\n        ? { numSales: -1 }\n        : sort === 'price-low-to-high'\n        ? { price: 1 }\n        : sort === 'price-high-to-low'\n        ? { price: -1 }\n        : sort === 'avg-customer-review'\n        ? { avgRating: -1 }\n        : { updatedAt: -1 } // Default: latest\n\n    const skip = (page - 1) * limit\n\n    const [products, totalProducts] = await Promise.all([\n      Product.find(queryFilter)\n        .sort(sortOptions)\n        .skip(skip)\n        .limit(limit)\n        .select({\n          name: 1,\n          slug: 1,\n          price: 1,\n          category: 1,\n          countInStock: 1,\n          isPublished: 1,\n          avgRating: 1,\n          updatedAt: 1,\n          pricing: 1,\n          metrics: 1,\n          status: 1,\n          warehouseData: 1\n        })\n        .lean(),\n      Product.countDocuments(queryFilter),\n    ])\n\n    const formattedProducts = products.map(product => ({\n      ...product,\n      metrics: {\n        ...product.metrics,\n        rating: product.metrics?.rating || 0,\n      },\n    }))\n\n    await logOperation('Admin Products List Retrieved', {\n      total: totalProducts,\n      page,\n      limit,\n      sort,\n    })\n\n    return {\n      products: JSON.parse(JSON.stringify(formattedProducts)),\n      totalPages: Math.ceil(totalProducts / limit),\n      totalProducts,\n      from: skip + 1,\n      to: skip + products.length,\n    }\n  } catch (error) {\n    console.error('Error in getAllProductsForAdmin:', error)\n    return {\n      products: [],\n      totalPages: 0,\n      totalProducts: 0,\n      from: 0,\n      to: 0,\n    }\n  }\n}\n\n// CREATE PRODUCT (Second version)\n// CREATE PRODUCT\nasync function validateSeller(userId: string) {\n  const sellerResponse = await getSellerByUserId(userId)\n  if (!sellerResponse.success || !sellerResponse.data) {\n    throw new Error('Seller account required')\n  }\n  return sellerResponse.data\n}\n\nexport async function createProduct(data: IProductInput) {\n  const session = await mongoose.startSession()\n  session.startTransaction()\n\n  try {\n    // Get current user info and validate authorization\n    const authSession = await auth()\n    if (!authSession?.user) {\n      throw new Error('Unauthorized')\n    }\n\n    const currentUser = {\n      id: authSession.user.id,\n      name: authSession.user.name || authSession.user.email,\n      role: authSession.user.role\n    }\n\n    if (currentUser.role !== 'seller' && currentUser.role !== 'Admin') {\n      throw new Error('Only sellers and admins can create products')\n    }\n\n    const creationTime = new Date()\n    await connectToDatabase()\n\n    // Validate seller and get seller info\n    const seller = await validateSeller(currentUser.id)\n    \n    console.log(`[${creationTime.toISOString()}] Creating product:`, {\n      name: data.name,\n      seller: seller.businessName\n    })\n\n    // Validate input data\n    const validatedData = ProductInputSchema.parse(data)\n\n    // Check for duplicate slug\n    const existingProduct = await Product.findOne({ slug: validatedData.slug }).session(session)\n    if (existingProduct) {\n      throw new Error('This slug already exists. Please choose a different one.')\n    }\n\n    // Process warehouse data and calculate total stock\n    const processedWarehouseData = validatedData.warehouseData?.map(warehouse => {\n      const totalQuantity = warehouse.colors.reduce((total, color) => {\n        const colorTotal = color.sizes.reduce((sum, size) => sum + size.quantity, 0)\n        color.quantity = colorTotal\n        color.inStock = colorTotal > 0\n        return total + colorTotal\n      }, 0)\n\n      return {\n        ...warehouse,\n        quantity: totalQuantity,\n        lastUpdated: creationTime,\n        updatedBy: currentUser.name\n      }\n    }) || []\n\n    const totalStock = processedWarehouseData.reduce((sum, warehouse) => sum + warehouse.quantity, 0)\n\n    // Combine colors from all warehouses\n    const combinedColors = processedWarehouseData.reduce((allColors: any[], warehouse) => {\n      warehouse.colors.forEach(warehouseColor => {\n        const existingColor = allColors.find(c => c.name === warehouseColor.name)\n        if (existingColor) {\n          existingColor.quantity += warehouseColor.quantity\n          existingColor.inStock = existingColor.quantity > 0\n\n          warehouseColor.sizes.forEach(warehouseSize => {\n            const existingSize = existingColor.sizes.find(s => s.name === warehouseSize.name)\n            if (existingSize) {\n              existingSize.quantity += warehouseSize.quantity\n              existingSize.inStock = existingSize.quantity > 0\n            } else {\n              existingColor.sizes.push({ ...warehouseSize })\n            }\n          })\n        } else {\n          allColors.push({\n            ...warehouseColor,\n            sizes: [...warehouseColor.sizes]\n          })\n        }\n      })\n      return allColors\n    }, [])\n\n    // Calculate pricing\n    const basePrice = Number(validatedData.price)\n    const markup = Number(validatedData.pricing?.markup || 30)\n    const commission = seller.subscription.features?.commission || 3\n    const markupAmount = basePrice * (markup / 100)\n    const commissionAmount = basePrice * (commission / 100)\n\n    // Prepare product data\n    const productData = {\n      ...validatedData,\n      name: validatedData.name.trim(),\n      slug: validatedData.slug.trim(),\n      category: validatedData.category.trim(),\n      brand: validatedData.brand.trim(),\n      description: validatedData.description.trim(),\n      price: basePrice,\n      listPrice: Number(validatedData.listPrice) || basePrice,\n      countInStock: totalStock,\n      warehouseData: processedWarehouseData,\n      colors: combinedColors,\n      sizes: ['S', 'M', 'L', 'XL', 'XXL'],\n      isPublished: validatedData.isPublished || false,\n      sellerId: seller._id,\n      seller: {\n        name: seller.businessName,\n        email: seller.email,\n        subscription: seller.subscription.plan\n      },\n      pricing: {\n        basePrice,\n        markup,\n        profit: markupAmount - commissionAmount,\n        commission: commissionAmount,\n        finalPrice: basePrice + markupAmount,\n        discount: validatedData.pricing?.discount\n      },\n      metrics: {\n        views: 0,\n        sales: 0,\n        revenue: 0,\n        returns: 0,\n        rating: 0\n      },\n      status: validatedData.isPublished ? 'pending' : 'draft',\n      createdBy: currentUser.name,\n      updatedBy: currentUser.name,\n      createdAt: creationTime,\n      updatedAt: creationTime\n    }\n\n    // Create product\n    const product = await Product.create([productData], { session })\n    const createdProduct = product[0]\n\n    // Update warehouse stock\n    await Promise.all(processedWarehouseData.map(warehouse =>\n      updateWarehouseStock({\n        productId: createdProduct._id,\n        warehouseId: warehouse.warehouseId,\n        quantity: warehouse.quantity,\n        sku: warehouse.sku,\n        location: warehouse.location,\n        minimumStock: warehouse.minimumStock,\n        reorderPoint: warehouse.reorderPoint,\n        colors: warehouse.colors,\n        updatedBy: currentUser.name\n      })\n    ))\n\n    // Update seller metrics\n    await updateSellerMetrics(seller._id, {\n      productsCount: '+1',\n      lastProductCreated: creationTime\n    })\n\n    await session.commitTransaction()\n\n    // Revalidate paths\n    revalidatePath('/seller/dashboard/products')\n    revalidatePath('/admin/products')\n    revalidatePath(`/product/${createdProduct.slug}`)\n\n    console.log(`[${creationTime.toISOString()}] Product created successfully:`, {\n      productId: createdProduct._id,\n      name: createdProduct.name,\n      totalStock,\n      colorsCount: createdProduct.colors.length\n    })\n\n    return {\n      success: true,\n      message: 'Product created successfully',\n      data: createdProduct\n    }\n\n  } catch (error) {\n    await session.abortTransaction()\n    console.error('Product creation error:', error)\n\n    if (error instanceof Error) {\n      if (error.message.includes('duplicate')) {\n        return { \n          success: false, \n          message: 'This slug already exists. Please choose a different one.' \n        }\n      }\n      if (error.message.includes('validation failed')) {\n        return { \n          success: false, \n          message: 'Please check that all required fields are filled correctly.' \n        }\n      }\n    }\n\n    return {\n      success: false,\n      message: error instanceof Error ? error.message : 'Failed to create product'\n    }\n\n  } finally {\n    session.endSession()\n  }\n}\n\n// UPDATE PRODUCT\nexport async function updateProduct(data: z.infer<typeof ProductUpdateSchema>) {\n  const session = await mongoose.startSession()\n  session.startTransaction()\n\n  try {\n    // Validate input data first\n    const validatedInput = ProductUpdateSchema.parse(data)\n\n    // Check authentication\n    const authSession = await auth()\n    if (!authSession?.user) {\n      throw new Error('Unauthorized')\n    }\n\n    await connectToDatabase()\n\n    // Verify product existence and ownership\n    const existingProduct = await Product.findById(validatedInput._id).session(session)\n    if (!existingProduct) {\n      throw new Error('Product not found')\n    }\n\n    // Check authorization\n    if (\n      authSession.user.role !== 'Admin' &&\n      existingProduct.sellerId.toString() !== authSession.user.id\n    ) {\n      throw new Error('Unauthorized')\n    }\n\n    // Get seller information\n    const sellerResponse = await getSellerByUserId(\n      authSession.user.role === 'Admin'\n        ? existingProduct.sellerId.toString()\n        : authSession.user.id\n    )\n\n    if (!sellerResponse.success || !sellerResponse.data) {\n      throw new Error('Seller not found')\n    }\n\n    const seller = sellerResponse.data\n\n    // Calculate pricing if price or markup changed\n    let pricing = existingProduct.pricing\n    if (\n      validatedInput.price !== existingProduct.price || \n      validatedInput.pricing?.markup !== existingProduct.pricing.markup\n    ) {\n      const basePrice = validatedInput.price\n      const markup = validatedInput.pricing?.markup || existingProduct.pricing.markup\n      const commission = seller.subscription.features.commission || 3\n      const markupAmount = basePrice * (markup / 100)\n      const commissionAmount = basePrice * (commission / 100)\n\n      pricing = {\n        basePrice,\n        markup,\n        profit: markupAmount - commissionAmount,\n        commission: commissionAmount,\n        finalPrice: basePrice + markupAmount\n      }\n    }\n\n    // Check if stock status has changed\n    const isStockStatusChanged =\n      (existingProduct.stock > 0 && validatedInput.stock === 0) ||\n      (existingProduct.stock === 0 && validatedInput.stock > 0)\n\n    // Prepare update data\n    const updateData = {\n      ...validatedInput,\n      pricing,\n      status: validatedInput.isPublished\n        ? existingProduct.status === 'active'\n          ? 'active'\n          : 'pending'\n        : 'draft',\n      updatedAt: new Date(),\n      updatedBy: authSession.user.name || authSession.user.email\n    }\n\n    // Update the product\n    const updatedProduct = await Product.findByIdAndUpdate(\n      validatedInput._id,\n      updateData,\n      { new: true, session }\n    )\n\n    // Update seller metrics if stock status changed\n    if (isStockStatusChanged) {\n      await updateSellerMetrics(seller._id, {\n        action: validatedInput.stock === 0 \n          ? 'product_out_of_stock' \n          : 'product_back_in_stock'\n      })\n    }\n\n    // Commit transaction\n    await session.commitTransaction()\n\n    // Revalidate cache paths\n    revalidatePath('/seller/dashboard/products')\n    revalidatePath('/admin/products')\n    revalidatePath(`/product/${updatedProduct?.slug}`)\n\n    // Log the update operation\n    await logOperation('Product Updated', {\n      productId: updatedProduct?._id,\n      name: updatedProduct?.name,\n      seller: seller.businessName\n    })\n\n    return {\n      success: true,\n      message: 'Product updated successfully',\n      data: updatedProduct\n    }\n\n  } catch (error) {\n    // Rollback transaction on error\n    await session.abortTransaction()\n    \n    console.error('Product update error:', error)\n    return { \n      success: false, \n      message: formatError(error)\n    }\n\n  } finally {\n    // Always end the session\n    session.endSession()\n  }\n}\n\n// DELETE PRODUCT\nexport async function deleteProduct(id: string) {\n  const session = await mongoose.startSession()\n  session.startTransaction()\n\n  try {\n    // \u0627\u0644\u062A\u062D\u0642\u0642 \u0645\u0646 \u0627\u0644\u0645\u0635\u0627\u062F\u0642\u0629\n    const authSession = await auth()\n    if (!authSession?.user) {\n      throw new Error('Unauthorized')\n    }\n\n    await connectToDatabase()\n\n    // \u0627\u0644\u0628\u062D\u062B \u0639\u0646 \u0627\u0644\u0645\u0646\u062A\u062C \u0645\u0639 \u0627\u0633\u062A\u062E\u062F\u0627\u0645 \u0627\u0644\u062C\u0644\u0633\u0629\n    const product = await Product.findById(id).session(session)\n    if (!product) {\n      throw new Error('Product not found')\n    }\n\n    // \u0627\u0644\u062A\u062D\u0642\u0642 \u0645\u0646 \u0627\u0644\u0635\u0644\u0627\u062D\u064A\u0627\u062A\n    if (\n      authSession.user.role !== 'Admin' &&\n      product.sellerId.toString() !== authSession.user.id\n    ) {\n      throw new Error('Unauthorized')\n    }\n\n    // \u062D\u0630\u0641 \u0627\u0644\u0645\u0646\u062A\u062C\n    await Product.findByIdAndDelete(id).session(session)\n\n    // \u062A\u062D\u062F\u064A\u062B \u0625\u062D\u0635\u0627\u0626\u064A\u0627\u062A \u0627\u0644\u0628\u0627\u0626\u0639\n    if (product.sellerId) {\n      await updateSellerMetrics(product.sellerId, {\n        productsCount: '-1',\n        lastUpdated: new Date()\n      })\n    }\n\n    // \u062A\u0633\u062C\u064A\u0644 \u0639\u0645\u0644\u064A\u0629 \u0627\u0644\u062D\u0630\u0641\n    await logOperation('Product Deleted', {\n      productId: id,\n      name: product.name,\n      deletedBy: authSession.user.name || authSession.user.email,\n      timestamp: new Date()\n    })\n\n    // \u062A\u0623\u0643\u064A\u062F \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629\n    await session.commitTransaction()\n\n    // \u062A\u062D\u062F\u064A\u062B \u0627\u0644\u0635\u0641\u062D\u0627\u062A \u0630\u0627\u062A \u0627\u0644\u0635\u0644\u0629\n    revalidatePath('/seller/dashboard/products')\n    revalidatePath('/admin/products')\n    revalidatePath(`/product/${product.slug}`)\n\n    return {\n      success: true,\n      message: 'Product deleted successfully',\n      metadata: {\n        deletedAt: new Date(),\n        deletedBy: authSession.user.name || authSession.user.email,\n        productId: id\n      }\n    }\n\n  } catch (error) {\n    // \u0627\u0644\u062A\u0631\u0627\u062C\u0639 \u0639\u0646 \u0627\u0644\u0645\u0639\u0627\u0645\u0644\u0629 \u0641\u064A \u062D\u0627\u0644\u0629 \u062D\u062F\u0648\u062B \u062E\u0637\u0623\n    await session.abortTransaction()\n    \n    console.error('Delete product error:', {\n      error,\n      productId: id,\n      userId: authSession?.user?.id,\n      timestamp: new Date()\n    })\n\n    // \u0625\u0631\u062C\u0627\u0639 \u0631\u0633\u0627\u0644\u0629 \u062E\u0637\u0623 \u0645\u0646\u0627\u0633\u0628\u0629\n    if (error instanceof Error) {\n      if (error.message.includes('Unauthorized')) {\n        return {\n          success: false,\n          message: 'You do not have permission to delete this product',\n          code: 'UNAUTHORIZED'\n        }\n      }\n      if (error.message.includes('Product not found')) {\n        return {\n          success: false,\n          message: 'The product you are trying to delete does not exist',\n          code: 'NOT_FOUND'\n        }\n      }\n    }\n\n    return { \n      success: false, \n      message: formatError(error),\n      code: 'INTERNAL_ERROR'\n    }\n\n  } finally {\n    // \u0625\u0646\u0647\u0627\u0621 \u0627\u0644\u062C\u0644\u0633\u0629 \u062F\u0627\u0626\u0645\u0627\u064B\n    session.endSession()\n  }\n}\n\n// REVIEW PRODUCT (Admin only)\nexport async function reviewProduct(\n  productId: string,\n  approved: boolean,\n  notes?: string\n) {\n  const session = await mongoose.startSession()\n  session.startTransaction()\n\n  try {\n    const authSession = await auth()\n    if (!authSession?.user?.role === 'Admin') {\n      throw new Error('Unauthorized')\n    }\n\n    await connectToDatabase()\n\n    const product = await Product.findById(productId).session(session)\n    if (!product) {\n      throw new Error('Product not found')\n    }\n\n    // Update product status\n    const updateData = {\n      status: approved ? 'active' : 'rejected',\n      adminReview: {\n        approved,\n        reviewedAt: new Date(),\n        reviewedBy: authSession.user.id,\n        notes: notes || ''\n      }\n    }\n\n    const updatedProduct = await Product.findByIdAndUpdate(\n      productId,\n      updateData,\n      { new: true, session }\n    )\n\n    await session.commitTransaction()\n\n    revalidatePath('/admin/products')\n    revalidatePath('/seller/dashboard/products')\n    if (approved) {\n      revalidatePath(`/product/${product.slug}`)\n    }\n\n    return {\n      success: true,\n      message: `Product ${approved ? 'approved' : 'rejected'} successfully`,\n      data: updatedProduct\n    }\n  } catch (error) {\n    await session.abortTransaction()\n    return { success: false, message: formatError(error) }\n  } finally {\n    session.endSession()\n  }\n}\n\n// GET PRODUCT CATEGORIES\nexport async function getProductCategories(limit = 4) {\n  try {\n    await connectToDatabase()\n\n    const categories = await Product.aggregate([\n      {\n        $match: {\n          isPublished: true,\n          status: 'active',\n          stock: { $gt: 0 }\n        }\n      },\n      {\n        $group: {\n          _id: '$category',\n          productCount: { $sum: 1 },\n          totalSales: { $sum: '$metrics.sales' },\n          image: { $first: '$images' },\n          latestProduct: {\n            $first: {\n              name: '$name',\n              slug: '$slug',\n              images: '$images'\n            }\n          }\n        }\n      },\n      {\n        $sort: {\n          productCount: -1,\n          totalSales: -1\n        }\n      },\n      {\n        $limit: limit\n      },\n      {\n        $project: {\n          name: '$_id',\n          image: { $first: '$latestProduct.images' },\n          slug: '$latestProduct.slug',\n          productCount: 1\n        }\n      }\n    ])\n\n    return JSON.parse(JSON.stringify(categories))\n  } catch (error) {\n    console.error('Error fetching categories:', error)\n    return []\n  }\n}\n\n// GET PRODUCTS FOR CARD\nexport async function getProductsForCard({\n  tag,\n  limit = 4,\n}: {\n  tag: string\n  limit?: number\n}): Promise<{\n  name: string\n  slug: string\n  images: string[]\n  price: number\n  metrics: any\n  href?: string\n  image?: string\n}[]> {\n  try {\n    await connectToDatabase()\n\n    const products = await Product.aggregate([\n      {\n        $match: {\n          tags: { $in: [tag] },\n          isPublished: true,\n          status: 'active',\n          stock: { $gt: 0 },\n        },\n      },\n      {\n        $addFields: {\n          href: { $concat: ['/product/', '$slug'] },\n          image: { $arrayElemAt: ['$images', 0] },\n        },\n      },\n      {\n        $project: {\n          name: 1,\n          slug: 1,\n          images: 1,\n          price: 1,\n          metrics: 1,\n          href: 1,\n          image: 1,\n        },\n      },\n      { $sort: { 'metrics.sales': -1, createdAt: -1 } },\n      { $limit: limit },\n    ])\n\n    return JSON.parse(JSON.stringify(products))\n  } catch (error) {\n    console.error('Error fetching products for card:', error)\n    return []\n  }\n}\n\n\n// GET PRODUCTS BY TAG\nexport async function getProductsByTag({\n  tag,\n  limit = 10,\n  sortBy = 'sales', // sales or createdAt\n}: {\n  tag: string\n  limit?: number\n  sortBy?: 'sales' | 'createdAt'\n}) {\n  try {\n    await connectToDatabase()\n\n    const query: any = {\n      tags: { $in: [tag] },\n      isPublished: true,\n    }\n\n    // \u0625\u0630\u0627 \u0627\u062E\u062A\u0631\u0646\u0627 \u0627\u0644\u0641\u0631\u0632 \u062D\u0633\u0628 \u0627\u0644\u0645\u0628\u064A\u0639\u0627\u062A\u060C \u0646\u0636\u064A\u0641 \u0634\u0631\u0648\u0637 \u0625\u0636\u0627\u0641\u064A\u0629\n    if (sortBy === 'sales') {\n      query.status = 'active'\n      query.stock = { $gt: 0 }\n    }\n\n    const sortOption =\n      sortBy === 'sales' ? { 'metrics.sales': -1 } : { createdAt: -1 }\n\n    const products = await Product.find(query)\n      .sort(sortOption)\n      .limit(limit)\n      .lean()\n\n    return JSON.parse(JSON.stringify(products))\n  } catch (error) {\n    console.error('Error fetching products by tag:', error)\n    return []\n  }\n}\n\n\n// GET LATEST PRODUCTS\nexport async function getLatestProducts({\n  limit = 4,\n}: { limit?: number } = {}) {\n  try {\n    await connectToDatabase()\n\n    const products = await Product.find({\n      isPublished: true,\n      status: 'active',\n      stock: { $gt: 0 }\n    })\n      .sort({ createdAt: -1 })\n      .limit(limit)\n      .select('name images slug price')\n      .lean()\n\n    return JSON.parse(JSON.stringify(products))\n  } catch (error) {\n    console.error('Error fetching latest products:', error)\n    return []\n  }\n}\n\n// GET ALL PRODUCTS\nexport async function getAllProducts({\n  query = '',\n  category = 'all',\n  tag = 'all',\n  sort = 'latest',\n  page = 1,\n  limit,\n  price,\n  rating,\n}: {\n  query?: string\n  category?: string\n  tag?: string\n  sort?: ProductSortOption | string\n  page?: number\n  limit?: number\n  price?: string\n  rating?: string\n}): Promise<ProductListResponse> {\n  try {\n    await connectToDatabase()\n\n    const {\n      common: { pageSize },\n    } = await getSetting()\n    limit = limit || pageSize\n\n    // \u0627\u0644\u0628\u0646\u0627\u0621 \u0627\u0644\u0630\u0643\u064A \u0644\u0644\u0641\u0644\u062A\u0631\u0627\u062A \u0645\u0639 \u062F\u0645\u062C \u0627\u0644\u0634\u0631\u0648\u0637\n    const queryFilter: any = {\n      isPublished: true,\n      status: 'active',\n      stock: { $gt: 0 },\n    }\n\n    if (query && query !== 'all') {\n      queryFilter.name = { $regex: query, $options: 'i' }\n    }\n\n    if (category && category !== 'all') {\n      queryFilter.category = category\n    }\n\n    if (tag && tag !== 'all') {\n      queryFilter.tags = tag\n    }\n\n    if (rating && rating !== 'all') {\n      queryFilter['metrics.rating'] = { $gte: Number(rating) }\n    }\n\n    if (price && price !== 'all') {\n      const [min, max] = price.split('-').map(Number)\n      queryFilter['pricing.finalPrice'] = {\n        $gte: min,\n        $lte: max,\n      }\n    }\n\n    // \u062A\u0631\u062A\u064A\u0628 \u0627\u0644\u0646\u062A\u0627\u0626\u062C \u062D\u0633\u0628 \u0627\u0644\u062E\u064A\u0627\u0631\n    const order: Record<string, 1 | -1> =\n      sort === 'best-selling'\n        ? { 'metrics.sales': -1 }\n        : sort === 'price-low-to-high'\n        ? { 'pricing.finalPrice': 1 }\n        : sort === 'price-high-to-low'\n        ? { 'pricing.finalPrice': -1 }\n        : sort === 'avg-customer-review'\n        ? { 'metrics.rating': -1 }\n        : { createdAt: -1 }\n\n    // \u062D\u0633\u0627\u0628 \u0627\u0644\u062A\u062E\u0637\u064A \u0648\u0627\u0644\u062D\u062F \u0644\u0644\u0635\u0641\u062D\u0629\n    const skip = limit * (Number(page) - 1)\n\n    // \u062A\u0646\u0641\u064A\u0630 \u0627\u0644\u0627\u0633\u062A\u0639\u0644\u0627\u0645 \u0648\u0627\u0644\u0639\u062F \u0628\u0627\u0644\u062A\u0648\u0627\u0632\u064A\n    const [products, totalProducts] = await Promise.all([\n      Product.find(queryFilter)\n        .sort(order)\n        .skip(skip)\n        .limit(limit)\n        .lean(),\n      Product.countDocuments(queryFilter),\n    ])\n\n    return {\n      products: JSON.parse(JSON.stringify(products)) as IProduct[],\n      totalPages: Math.ceil(totalProducts / limit),\n      totalProducts,\n      from: skip + 1,\n      to: skip + products.length,\n    }\n  } catch (error) {\n    console.error('Error fetching products:', error)\n    return {\n      products: [],\n      totalPages: 0,\n      totalProducts: 0,\n      from: 0,\n      to: 0,\n    }\n  }\n}\n\n\n\n\n// GET PRODUCT BY ID\nexport async function getProductById(productId: string) {\n  try {\n    // \u0627\u0644\u062A\u062D\u0642\u0642 \u0645\u0646 \u0635\u062D\u0629 \u0645\u0639\u0631\u0641 \u0627\u0644\u0645\u0646\u062A\u062C\n    if (!productId || !mongoose.Types.ObjectId.isValid(productId)) {\n      throw new Error('Invalid product ID')\n    }\n\n    // \u0627\u0644\u0627\u062A\u0635\u0627\u0644 \u0628\u0642\u0627\u0639\u062F\u0629 \u0627\u0644\u0628\u064A\u0627\u0646\u0627\u062A\n    await connectToDatabase()\n\n    // \u0627\u0644\u0628\u062D\u062B \u0639\u0646 \u0627\u0644\u0645\u0646\u062A\u062C \u0645\u0639 \u0627\u0633\u062A\u062E\u062F\u0627\u0645 lean() \u0644\u0644\u0623\u062F\u0627\u0621 \u0627\u0644\u0623\u0641\u0636\u0644\n    const product = await Product.findById(productId)\n      .lean()\n      .select('-__v') // \u0627\u0633\u062A\u0628\u0639\u0627\u062F \u062D\u0642\u0644 __v\n      .exec()\n\n    if (!product) {\n      throw new Error('Product not found')\n    }\n\n    // \u062A\u062D\u0648\u064A\u0644 \u0627\u0644\u062A\u0627\u0631\u064A\u062E \u0625\u0644\u0649 \u0627\u0644\u062A\u0646\u0633\u064A\u0642 \u0627\u0644\u0645\u0637\u0644\u0648\u0628\n    const formattedProduct = {\n      ...product,\n      createdAt: product.createdAt \n        ? new Date(product.createdAt).toISOString()\n        : undefined,\n      updatedAt: product.updatedAt\n        ? new Date(product.updatedAt).toISOString()\n        : undefined\n    }\n\n    // \u062A\u0633\u062C\u064A\u0644 \u0627\u0644\u0648\u0635\u0648\u0644 \u0644\u0644\u0645\u0646\u062A\u062C (\u064A\u0645\u0643\u0646 \u0627\u0633\u062A\u062E\u062F\u0627\u0645\u0647 \u0644\u0644\u062A\u062D\u0644\u064A\u0644\u0627\u062A)\n    console.info('Product accessed:', {\n      productId,\n      timestamp: new Date().toISOString(),\n      accessedBy: 'Nigel-Henry' // using the current user\n    })\n\n    // \u062A\u062D\u0648\u064A\u0644 \u0627\u0644\u0628\u064A\u0627\u0646\u0627\u062A \u0625\u0644\u0649 JSON \u0648\u0625\u0631\u062C\u0627\u0639\u0647\u0627\n    return {\n      success: true,\n      data: JSON.parse(JSON.stringify(formattedProduct)) as IProduct,\n      metadata: {\n        accessed: new Date().toISOString(),\n        by: 'Nigel-Henry'\n      }\n    }\n\n  } catch (error) {\n    // \u0645\u0639\u0627\u0644\u062C\u0629 \u0627\u0644\u0623\u062E\u0637\u0627\u0621 \u0628\u0634\u0643\u0644 \u0645\u0646\u0627\u0633\u0628\n    console.error('Error fetching product:', {\n      productId,\n      error,\n      timestamp: new Date().toISOString()\n    })\n\n    if (error instanceof Error) {\n      if (error.message.includes('Invalid product ID')) {\n        return {\n          success: false,\n          message: 'Please provide a valid product ID',\n          code: 'INVALID_ID'\n        }\n      }\n      if (error.message.includes('Product not found')) {\n        return {\n          success: false,\n          message: 'The requested product does not exist',\n          code: 'NOT_FOUND'\n        }\n      }\n    }\n\n    return {\n      success: false,\n      message: formatError(error),\n      code: 'INTERNAL_ERROR',\n      metadata: {\n        timestamp: new Date().toISOString(),\n        requestedId: productId\n      }\n    }\n  }\n}\n\n// GET PRODUCT BY SLUG\nexport async function getProductBySlug(slug: string) {\n  try {\n    await connectToDatabase()\n    const product = await Product.findOne({\n      slug,\n      isPublished: true,\n      status: 'active',\n    }).lean()\n\n    if (!product) throw new Error('Product not found')\n\n    return JSON.parse(JSON.stringify(product)) as IProduct\n  } catch (error) {\n    throw new Error(formatError(error))\n  }\n}\n\n\n\n// GET RELATED PRODUCTS\nexport async function getRelatedProducts({\n  category,\n  productId,\n  limit = 4,\n}: {\n  category: string\n  productId: string\n  limit?: number\n}) {\n  try {\n    await connectToDatabase()\n\n    const products = await Product.find({\n      _id: { $ne: productId },\n      category,\n      isPublished: true,\n      status: 'active',\n      stock: { $gt: 0 }\n    })\n      .sort({ 'metrics.sales': -1 })\n      .limit(limit)\n      .select('name images slug price')\n      .lean()\n\n    return JSON.parse(JSON.stringify(products))\n  } catch (error) {\n    console.error('Error fetching related products:', error)\n    return []\n  }\n}\n\n// GET ALL TAGS\nexport async function getAllTags() {\n  try {\n    await connectToDatabase()\n\n    const tags = await Product.aggregate([\n      {\n        $match: {\n          isPublished: true,\n          status: 'active',\n        },\n      },\n      { $unwind: '$tags' },\n      { $group: { _id: null, uniqueTags: { $addToSet: '$tags' } } },\n      { $project: { _id: 0, uniqueTags: 1 } },\n    ])\n\n    return (\n      tags[0]?.uniqueTags\n        .sort((a: string, b: string) => a.localeCompare(b))\n        .map((tag: string) =>\n          tag\n            .split('-')\n            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ')\n        ) || []\n    )\n  } catch (error) {\n    console.error('Error fetching tags:', error)\n    return []\n  }\n}\n\n\nexport async function getRelatedProductsByCategory({\n  category,\n  productId,\n  limit = 4,\n  page = 1,\n}: {\n  category: string\n  productId: string\n  limit?: number\n  page: number\n}): Promise<{ data: IProduct[]; totalPages: number }> {\n  try {\n    const {\n      common: { pageSize },\n    } = await getSetting()\n\n    limit = limit || pageSize\n    await connectToDatabase()\n\n    const skipAmount = (Number(page) - 1) * limit\n    const conditions = {\n      isPublished: true,\n      category,\n      _id: { $ne: productId },\n    }\n\n    const products = await Product.find(conditions)\n      .sort({ numSales: -1 }) // \u062A\u0631\u062A\u064A\u0628 \u062A\u0646\u0627\u0632\u0644\u064A \u062D\u0633\u0628 \u0627\u0644\u0645\u0628\u064A\u0639\u0627\u062A\n      .skip(skipAmount)\n      .limit(limit)\n      .lean()\n\n    const productsCount = await Product.countDocuments(conditions)\n\n    return {\n      data: JSON.parse(JSON.stringify(products)) as IProduct[],\n      totalPages: Math.ceil(productsCount / limit),\n    }\n  } catch (error) {\n    console.error('Error fetching related products:', error)\n    return { data: [], totalPages: 0 }\n  }\n}\n\n\n// GET ALL CATEGORIES\nexport async function getAllCategories(): Promise<string[]> {\n  try {\n    // Connect to the database\n    await connectToDatabase()\n\n    // Fetch distinct categories for active, published products\n    const categories = await Product.find({\n      isPublished: true,\n      status: 'active',\n    }).distinct('category')\n\n    return categories\n  } catch (error) {\n    console.error('Error fetching categories:', error)\n    return []\n  }\n}\n\n\n\n// GET ALL PRODUCTS FOR A SPECIFIC SELLER\nexport async function getSellerProducts({\n  sellerId,\n  query = '',\n  page = 1,\n  limit = 10,\n}: {\n  sellerId: string\n  query?: string\n  page?: number\n  limit?: number\n}): Promise<ProductListResponse> {\n  try {\n    await connectToDatabase()\n\n    const queryFilter: any = { sellerId }\n    if (query) {\n      queryFilter.$or = [\n        { name: { $regex: query, $options: 'i' } },\n        { category: { $regex: query, $options: 'i' } },\n        { brand: { $regex: query, $options: 'i' } },\n        { slug: { $regex: query, $options: 'i' } }\n      ]\n    }\n\n    const skip = (page - 1) * limit\n\n    const [products, totalProducts] = await Promise.all([\n      Product.find(queryFilter)\n        .sort({ updatedAt: -1 })\n        .skip(skip)\n        .limit(limit)\n        .select({\n          name: 1,\n          slug: 1,\n          price: 1,\n          category: 1,\n          countInStock: 1,\n          isPublished: 1,\n          avgRating: 1,\n          updatedAt: 1,\n          pricing: 1,\n          metrics: 1,\n          status: 1,\n          warehouseData: 1\n        })\n        .lean(),\n      Product.countDocuments(queryFilter)\n    ])\n\n    const formattedProducts = products.map(product => ({\n      ...product,\n      metrics: {\n        ...product.metrics,\n        rating: product.metrics?.rating || 0\n      }\n    }))\n\n    await logOperation('Seller Products List Retrieved', {\n      sellerId,\n      total: totalProducts,\n      page,\n      limit\n    })\n\n    return {\n      products: JSON.parse(JSON.stringify(formattedProducts)),\n      totalPages: Math.ceil(totalProducts / limit),\n      totalProducts,\n      from: skip + 1,\n      to: skip + products.length,\n    }\n  } catch (error) {\n    console.error('Error in getSellerProducts:', error)\n    return {\n      products: [],\n      totalPages: 0,\n      totalProducts: 0,\n      from: 0,\n      to: 0,\n    }\n  }\n}\n"],
      names: ["createProduct", "deleteProduct", "getAllCategories", "getAllProducts", "getAllProductsForAdmin", "getAllTags", "getLatestProducts", "getProductById", "getProductBySlug", "getProductCategories", "getProductsByTag", "getProductsForCard", "getRelatedProducts", "getRelatedProductsByCategory", "getSellerProducts", "reviewProduct", "updateProduct", "warehouseProviders", "ShipBob", "ShipBobService", "apiKey", "process", "env", "SHIPBOB_API_KEY", "apiUrl", "SHIPBOB_API_URL", "FourPXService", "FOURPX_API_KEY", "FOURPX_API_URL", "getCurrentUserInfo", "session", "auth", "user", "id", "Error", "userId", "userName", "name", "userRole", "role", "logOperation", "operation", "details", "console", "log", "Date", "toISOString", "query", "page", "sort", "limit", "connectToDatabase", "common", "pageSize", "getSetting", "queryFilter", "$or", "$regex", "$options", "category", "brand", "slug", "sortOptions", "numSales", "price", "avgRating", "updatedAt", "skip", "products", "totalProducts", "Promise", "all", "Product", "find", "select", "countInStock", "isPublished", "pricing", "metrics", "status", "warehouseData", "lean", "countDocuments", "formattedProducts", "map", "product", "rating", "total", "JSON", "parse", "stringify", "totalPages", "Math", "ceil", "from", "to", "length", "error", "validateSeller", "sellerResponse", "getSellerByUserId", "success", "data", "mongoose", "startSession", "startTransaction", "authSession", "currentUser", "email", "creationTime", "seller", "businessName", "validatedData", "ProductInputSchema", "existingProduct", "findOne", "processedWarehouseData", "warehouse", "totalQuantity", "colors", "reduce", "color", "colorTotal", "sizes", "sum", "size", "quantity", "inStock", "lastUpdated", "updatedBy", "totalStock", "combinedColors", "allColors", "forEach", "warehouseColor", "existingColor", "c", "warehouseSize", "existingSize", "s", "push", "basePrice", "Number", "markup", "commission", "subscription", "features", "markupAmount", "commissionAmount", "productData", "trim", "description", "listPrice", "sellerId", "_id", "plan", "profit", "finalPrice", "discount", "views", "sales", "revenue", "returns", "createdBy", "createdAt", "create", "createdProduct", "updateWarehouseStock", "productId", "warehouseId", "sku", "location", "minimumStock", "reorderPoint", "updateSellerMetrics", "productsCount", "lastProductCreated", "commitTransaction", "revalidatePath", "colorsCount", "message", "abortTransaction", "includes", "endSession", "validatedInput", "ProductUpdateSchema", "findById", "toString", "isStockStatusChanged", "stock", "updateData", "updatedProduct", "findByIdAndUpdate", "new", "action", "formatError", "findByIdAndDelete", "deletedBy", "timestamp", "metadata", "deletedAt", "code", "approved", "notes", "adminReview", "reviewedAt", "reviewedBy", "categories", "aggregate", "$match", "$gt", "$group", "productCount", "$sum", "totalSales", "image", "$first", "latestProduct", "images", "$sort", "$limit", "$project", "tag", "tags", "$in", "$addFields", "href", "$concat", "$arrayElemAt", "sortBy", "sortOption", "$gte", "min", "max", "split", "$lte", "order", "Types", "ObjectId", "isValid", "exec", "formattedProduct", "undefined", "info", "accessedBy", "accessed", "by", "requestedId", "$ne", "$unwind", "uniqueTags", "$addToSet", "a", "b", "localeCompare", "word", "charAt", "toUpperCase", "slice", "join", "skipAmount", "conditions", "distinct"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "314d2e5b50d67b1e3f674f59f3c9a12f41f48a73"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_v8cd4345w = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_v8cd4345w();
cov_v8cd4345w().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[0]++;
  cov_v8cd4345w().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_v8cd4345w().s[3]++;
_export(exports, {
  createProduct: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[1]++;
    cov_v8cd4345w().s[4]++;
    return createProduct;
  },
  deleteProduct: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[2]++;
    cov_v8cd4345w().s[5]++;
    return deleteProduct;
  },
  getAllCategories: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[3]++;
    cov_v8cd4345w().s[6]++;
    return getAllCategories;
  },
  getAllProducts: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[4]++;
    cov_v8cd4345w().s[7]++;
    return getAllProducts;
  },
  getAllProductsForAdmin: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[5]++;
    cov_v8cd4345w().s[8]++;
    return getAllProductsForAdmin;
  },
  getAllTags: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[6]++;
    cov_v8cd4345w().s[9]++;
    return getAllTags;
  },
  getLatestProducts: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[7]++;
    cov_v8cd4345w().s[10]++;
    return getLatestProducts;
  },
  getProductById: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[8]++;
    cov_v8cd4345w().s[11]++;
    return getProductById;
  },
  getProductBySlug: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[9]++;
    cov_v8cd4345w().s[12]++;
    return getProductBySlug;
  },
  getProductCategories: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[10]++;
    cov_v8cd4345w().s[13]++;
    return getProductCategories;
  },
  getProductsByTag: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[11]++;
    cov_v8cd4345w().s[14]++;
    return getProductsByTag;
  },
  getProductsForCard: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[12]++;
    cov_v8cd4345w().s[15]++;
    return getProductsForCard;
  },
  getRelatedProducts: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[13]++;
    cov_v8cd4345w().s[16]++;
    return getRelatedProducts;
  },
  getRelatedProductsByCategory: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[14]++;
    cov_v8cd4345w().s[17]++;
    return getRelatedProductsByCategory;
  },
  getSellerProducts: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[15]++;
    cov_v8cd4345w().s[18]++;
    return getSellerProducts;
  },
  reviewProduct: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[16]++;
    cov_v8cd4345w().s[19]++;
    return reviewProduct;
  },
  updateProduct: function () {
    /* istanbul ignore next */
    cov_v8cd4345w().f[17]++;
    cov_v8cd4345w().s[20]++;
    return updateProduct;
  }
});
const _db =
/* istanbul ignore next */
(cov_v8cd4345w().s[21]++, require("../../../db"));
const _productmodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_v8cd4345w().s[22]++, _interop_require_default(require("../../../db/models/product.model")));
const _cache =
/* istanbul ignore next */
(cov_v8cd4345w().s[23]++, require("next/cache"));
const _utils =
/* istanbul ignore next */
(cov_v8cd4345w().s[24]++, require("../utils"));
const _auth =
/* istanbul ignore next */
(cov_v8cd4345w().s[25]++, require("../../../../auth"));
const _settingactions =
/* istanbul ignore next */
(cov_v8cd4345w().s[26]++, require("./setting.actions"));
const _mongoose =
/* istanbul ignore next */
(/*#__PURE__*/cov_v8cd4345w().s[27]++, _interop_require_default(require("mongoose")));
const _selleractions =
/* istanbul ignore next */
(cov_v8cd4345w().s[28]++, require("./seller.actions"));
const _warehouseactions =
/* istanbul ignore next */
(cov_v8cd4345w().s[29]++, require("./warehouse.actions"));
const _productvalidator =
/* istanbul ignore next */
(cov_v8cd4345w().s[30]++, require("../validator/product.validator"));
const _shipbob =
/* istanbul ignore next */
(cov_v8cd4345w().s[31]++, require("../services/warehouse/shipbob"));
const _fourpx =
/* istanbul ignore next */
(cov_v8cd4345w().s[32]++, require("../services/warehouse/fourpx"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[18]++;
  cov_v8cd4345w().s[33]++;
  return /* istanbul ignore next */(cov_v8cd4345w().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_v8cd4345w().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_v8cd4345w().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_v8cd4345w().b[0][1]++, {
    default: obj
  });
}
// import { AmazonFulfillmentService } from '../api/integrations/amazon/service'
// import { AliExpressFulfillmentService } from '../api/integrations/aliexpress/service'
// import { AmazonFulfillmentService } from '../api/integrations/amazon/service'
// // Warehouse providers configuration
// const warehouseProviders: { [key: string]: WarehouseProvider } = {
//   ShipBob: new ShipBobService({
//     apiKey: process.env.SHIPBOB_API_KEY!,
//     apiUrl: process.env.SHIPBOB_API_URL!,
//   }),
//   '4PX': new FourPXService({
//     apiKey: process.env.FOURPX_API_KEY!,
//     apiUrl: process.env.FOURPX_API_URL!,
//   }),
// }
const warehouseProviders =
/* istanbul ignore next */
(cov_v8cd4345w().s[34]++, {
  ShipBob: new _shipbob.ShipBobService({
    apiKey: process.env.SHIPBOB_API_KEY,
    apiUrl: process.env.SHIPBOB_API_URL
  }),
  '4PX': new _fourpx.FourPXService({
    apiKey: process.env.FOURPX_API_KEY,
    apiUrl: process.env.FOURPX_API_URL
  })
});
// Helper Functions
async function getCurrentUserInfo() {
  /* istanbul ignore next */
  cov_v8cd4345w().f[19]++;
  const session =
  /* istanbul ignore next */
  (cov_v8cd4345w().s[35]++, await (0, _auth.auth)());
  /* istanbul ignore next */
  cov_v8cd4345w().s[36]++;
  if (!session?.user?.id) {
    /* istanbul ignore next */
    cov_v8cd4345w().b[2][0]++;
    cov_v8cd4345w().s[37]++;
    throw new Error('Unauthorized');
  } else
  /* istanbul ignore next */
  {
    cov_v8cd4345w().b[2][1]++;
  }
  cov_v8cd4345w().s[38]++;
  return {
    userId: session.user.id,
    userName:
    /* istanbul ignore next */
    (cov_v8cd4345w().b[3][0]++, session.user.name) ||
    /* istanbul ignore next */
    (cov_v8cd4345w().b[3][1]++, session.user.id),
    userRole:
    /* istanbul ignore next */
    (cov_v8cd4345w().b[4][0]++, session.user.role) ||
    /* istanbul ignore next */
    (cov_v8cd4345w().b[4][1]++, 'USER')
  };
}
async function logOperation(operation, details) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[20]++;
  const {
    userName
  } =
  /* istanbul ignore next */
  (cov_v8cd4345w().s[39]++, await getCurrentUserInfo());
  /* istanbul ignore next */
  cov_v8cd4345w().s[40]++;
  console.log(`[${new Date().toISOString()}] 📝 ${operation}:`, {
    user: userName,
    ...details
  });
}
async function getAllProductsForAdmin({
  query =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[5][0]++, ''),
  page =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[6][0]++, 1),
  sort =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[7][0]++, 'latest'),
  limit
}) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[21]++;
  cov_v8cd4345w().s[41]++;
  try {
    /* istanbul ignore next */
    cov_v8cd4345w().s[42]++;
    await (0, _db.connectToDatabase)();
    const {
      common: {
        pageSize
      }
    } =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[43]++, await (0, _settingactions.getSetting)());
    /* istanbul ignore next */
    cov_v8cd4345w().s[44]++;
    limit =
    /* istanbul ignore next */
    (cov_v8cd4345w().b[8][0]++, limit) ||
    /* istanbul ignore next */
    (cov_v8cd4345w().b[8][1]++, pageSize);
    const queryFilter =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[45]++, {});
    /* istanbul ignore next */
    cov_v8cd4345w().s[46]++;
    if (
    /* istanbul ignore next */
    (cov_v8cd4345w().b[10][0]++, query) &&
    /* istanbul ignore next */
    (cov_v8cd4345w().b[10][1]++, query !== 'all')) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[9][0]++;
      cov_v8cd4345w().s[47]++;
      queryFilter.$or = [{
        name: {
          $regex: query,
          $options: 'i'
        }
      }, {
        category: {
          $regex: query,
          $options: 'i'
        }
      }, {
        brand: {
          $regex: query,
          $options: 'i'
        }
      }, {
        slug: {
          $regex: query,
          $options: 'i'
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[9][1]++;
    }
    const sortOptions =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[48]++, sort === 'best-selling' ?
    /* istanbul ignore next */
    (cov_v8cd4345w().b[11][0]++, {
      numSales: -1
    }) :
    /* istanbul ignore next */
    (cov_v8cd4345w().b[11][1]++, sort === 'price-low-to-high' ?
    /* istanbul ignore next */
    (cov_v8cd4345w().b[12][0]++, {
      price: 1
    }) :
    /* istanbul ignore next */
    (cov_v8cd4345w().b[12][1]++, sort === 'price-high-to-low' ?
    /* istanbul ignore next */
    (cov_v8cd4345w().b[13][0]++, {
      price: -1
    }) :
    /* istanbul ignore next */
    (cov_v8cd4345w().b[13][1]++, sort === 'avg-customer-review' ?
    /* istanbul ignore next */
    (cov_v8cd4345w().b[14][0]++, {
      avgRating: -1
    }) :
    /* istanbul ignore next */
    (cov_v8cd4345w().b[14][1]++, {
      updatedAt: -1
    }))))) // Default: latest
    ;
    const skip =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[49]++, (page - 1) * limit);
    const [products, totalProducts] =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[50]++, await Promise.all([_productmodel.default.find(queryFilter).sort(sortOptions).skip(skip).limit(limit).select({
      name: 1,
      slug: 1,
      price: 1,
      category: 1,
      countInStock: 1,
      isPublished: 1,
      avgRating: 1,
      updatedAt: 1,
      pricing: 1,
      metrics: 1,
      status: 1,
      warehouseData: 1
    }).lean(), _productmodel.default.countDocuments(queryFilter)]));
    const formattedProducts =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[51]++, products.map(product => {
      /* istanbul ignore next */
      cov_v8cd4345w().f[22]++;
      cov_v8cd4345w().s[52]++;
      return {
        ...product,
        metrics: {
          ...product.metrics,
          rating:
          /* istanbul ignore next */
          (cov_v8cd4345w().b[15][0]++, product.metrics?.rating) ||
          /* istanbul ignore next */
          (cov_v8cd4345w().b[15][1]++, 0)
        }
      };
    }));
    /* istanbul ignore next */
    cov_v8cd4345w().s[53]++;
    await logOperation('Admin Products List Retrieved', {
      total: totalProducts,
      page,
      limit,
      sort
    });
    /* istanbul ignore next */
    cov_v8cd4345w().s[54]++;
    return {
      products: JSON.parse(JSON.stringify(formattedProducts)),
      totalPages: Math.ceil(totalProducts / limit),
      totalProducts,
      from: skip + 1,
      to: skip + products.length
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[55]++;
    console.error('Error in getAllProductsForAdmin:', error);
    /* istanbul ignore next */
    cov_v8cd4345w().s[56]++;
    return {
      products: [],
      totalPages: 0,
      totalProducts: 0,
      from: 0,
      to: 0
    };
  }
}
// CREATE PRODUCT (Second version)
// CREATE PRODUCT
async function validateSeller(userId) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[23]++;
  const sellerResponse =
  /* istanbul ignore next */
  (cov_v8cd4345w().s[57]++, await (0, _selleractions.getSellerByUserId)(userId));
  /* istanbul ignore next */
  cov_v8cd4345w().s[58]++;
  if (
  /* istanbul ignore next */
  (cov_v8cd4345w().b[17][0]++, !sellerResponse.success) ||
  /* istanbul ignore next */
  (cov_v8cd4345w().b[17][1]++, !sellerResponse.data)) {
    /* istanbul ignore next */
    cov_v8cd4345w().b[16][0]++;
    cov_v8cd4345w().s[59]++;
    throw new Error('Seller account required');
  } else
  /* istanbul ignore next */
  {
    cov_v8cd4345w().b[16][1]++;
  }
  cov_v8cd4345w().s[60]++;
  return sellerResponse.data;
}
async function createProduct(data) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[24]++;
  const session =
  /* istanbul ignore next */
  (cov_v8cd4345w().s[61]++, await _mongoose.default.startSession());
  /* istanbul ignore next */
  cov_v8cd4345w().s[62]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_v8cd4345w().s[63]++;
  try {
    // Get current user info and validate authorization
    const authSession1 =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[64]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_v8cd4345w().s[65]++;
    if (!authSession1?.user) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[18][0]++;
      cov_v8cd4345w().s[66]++;
      throw new Error('Unauthorized');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[18][1]++;
    }
    const currentUser =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[67]++, {
      id: authSession1.user.id,
      name:
      /* istanbul ignore next */
      (cov_v8cd4345w().b[19][0]++, authSession1.user.name) ||
      /* istanbul ignore next */
      (cov_v8cd4345w().b[19][1]++, authSession1.user.email),
      role: authSession1.user.role
    });
    /* istanbul ignore next */
    cov_v8cd4345w().s[68]++;
    if (
    /* istanbul ignore next */
    (cov_v8cd4345w().b[21][0]++, currentUser.role !== 'seller') &&
    /* istanbul ignore next */
    (cov_v8cd4345w().b[21][1]++, currentUser.role !== 'Admin')) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[20][0]++;
      cov_v8cd4345w().s[69]++;
      throw new Error('Only sellers and admins can create products');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[20][1]++;
    }
    const creationTime =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[70]++, new Date());
    /* istanbul ignore next */
    cov_v8cd4345w().s[71]++;
    await (0, _db.connectToDatabase)();
    // Validate seller and get seller info
    const seller =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[72]++, await validateSeller(currentUser.id));
    /* istanbul ignore next */
    cov_v8cd4345w().s[73]++;
    console.log(`[${creationTime.toISOString()}] Creating product:`, {
      name: data.name,
      seller: seller.businessName
    });
    // Validate input data
    const validatedData =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[74]++, _productvalidator.ProductInputSchema.parse(data));
    // Check for duplicate slug
    const existingProduct =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[75]++, await _productmodel.default.findOne({
      slug: validatedData.slug
    }).session(session));
    /* istanbul ignore next */
    cov_v8cd4345w().s[76]++;
    if (existingProduct) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[22][0]++;
      cov_v8cd4345w().s[77]++;
      throw new Error('This slug already exists. Please choose a different one.');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[22][1]++;
    }
    // Process warehouse data and calculate total stock
    const processedWarehouseData =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[78]++,
    /* istanbul ignore next */
    (cov_v8cd4345w().b[23][0]++, validatedData.warehouseData?.map(warehouse => {
      /* istanbul ignore next */
      cov_v8cd4345w().f[25]++;
      const totalQuantity =
      /* istanbul ignore next */
      (cov_v8cd4345w().s[79]++, warehouse.colors.reduce((total, color) => {
        /* istanbul ignore next */
        cov_v8cd4345w().f[26]++;
        const colorTotal =
        /* istanbul ignore next */
        (cov_v8cd4345w().s[80]++, color.sizes.reduce((sum, size) => {
          /* istanbul ignore next */
          cov_v8cd4345w().f[27]++;
          cov_v8cd4345w().s[81]++;
          return sum + size.quantity;
        }, 0));
        /* istanbul ignore next */
        cov_v8cd4345w().s[82]++;
        color.quantity = colorTotal;
        /* istanbul ignore next */
        cov_v8cd4345w().s[83]++;
        color.inStock = colorTotal > 0;
        /* istanbul ignore next */
        cov_v8cd4345w().s[84]++;
        return total + colorTotal;
      }, 0));
      /* istanbul ignore next */
      cov_v8cd4345w().s[85]++;
      return {
        ...warehouse,
        quantity: totalQuantity,
        lastUpdated: creationTime,
        updatedBy: currentUser.name
      };
    })) ||
    /* istanbul ignore next */
    (cov_v8cd4345w().b[23][1]++, []));
    const totalStock =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[86]++, processedWarehouseData.reduce((sum, warehouse) => {
      /* istanbul ignore next */
      cov_v8cd4345w().f[28]++;
      cov_v8cd4345w().s[87]++;
      return sum + warehouse.quantity;
    }, 0));
    // Combine colors from all warehouses
    const combinedColors =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[88]++, processedWarehouseData.reduce((allColors, warehouse) => {
      /* istanbul ignore next */
      cov_v8cd4345w().f[29]++;
      cov_v8cd4345w().s[89]++;
      warehouse.colors.forEach(warehouseColor => {
        /* istanbul ignore next */
        cov_v8cd4345w().f[30]++;
        const existingColor =
        /* istanbul ignore next */
        (cov_v8cd4345w().s[90]++, allColors.find(c => {
          /* istanbul ignore next */
          cov_v8cd4345w().f[31]++;
          cov_v8cd4345w().s[91]++;
          return c.name === warehouseColor.name;
        }));
        /* istanbul ignore next */
        cov_v8cd4345w().s[92]++;
        if (existingColor) {
          /* istanbul ignore next */
          cov_v8cd4345w().b[24][0]++;
          cov_v8cd4345w().s[93]++;
          existingColor.quantity += warehouseColor.quantity;
          /* istanbul ignore next */
          cov_v8cd4345w().s[94]++;
          existingColor.inStock = existingColor.quantity > 0;
          /* istanbul ignore next */
          cov_v8cd4345w().s[95]++;
          warehouseColor.sizes.forEach(warehouseSize => {
            /* istanbul ignore next */
            cov_v8cd4345w().f[32]++;
            const existingSize =
            /* istanbul ignore next */
            (cov_v8cd4345w().s[96]++, existingColor.sizes.find(s => {
              /* istanbul ignore next */
              cov_v8cd4345w().f[33]++;
              cov_v8cd4345w().s[97]++;
              return s.name === warehouseSize.name;
            }));
            /* istanbul ignore next */
            cov_v8cd4345w().s[98]++;
            if (existingSize) {
              /* istanbul ignore next */
              cov_v8cd4345w().b[25][0]++;
              cov_v8cd4345w().s[99]++;
              existingSize.quantity += warehouseSize.quantity;
              /* istanbul ignore next */
              cov_v8cd4345w().s[100]++;
              existingSize.inStock = existingSize.quantity > 0;
            } else {
              /* istanbul ignore next */
              cov_v8cd4345w().b[25][1]++;
              cov_v8cd4345w().s[101]++;
              existingColor.sizes.push({
                ...warehouseSize
              });
            }
          });
        } else {
          /* istanbul ignore next */
          cov_v8cd4345w().b[24][1]++;
          cov_v8cd4345w().s[102]++;
          allColors.push({
            ...warehouseColor,
            sizes: [...warehouseColor.sizes]
          });
        }
      });
      /* istanbul ignore next */
      cov_v8cd4345w().s[103]++;
      return allColors;
    }, []));
    // Calculate pricing
    const basePrice =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[104]++, Number(validatedData.price));
    const markup =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[105]++, Number(
    /* istanbul ignore next */
    (cov_v8cd4345w().b[26][0]++, validatedData.pricing?.markup) ||
    /* istanbul ignore next */
    (cov_v8cd4345w().b[26][1]++, 30)));
    const commission =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[106]++,
    /* istanbul ignore next */
    (cov_v8cd4345w().b[27][0]++, seller.subscription.features?.commission) ||
    /* istanbul ignore next */
    (cov_v8cd4345w().b[27][1]++, 3));
    const markupAmount =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[107]++, basePrice * (markup / 100));
    const commissionAmount =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[108]++, basePrice * (commission / 100));
    // Prepare product data
    const productData =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[109]++, {
      ...validatedData,
      name: validatedData.name.trim(),
      slug: validatedData.slug.trim(),
      category: validatedData.category.trim(),
      brand: validatedData.brand.trim(),
      description: validatedData.description.trim(),
      price: basePrice,
      listPrice:
      /* istanbul ignore next */
      (cov_v8cd4345w().b[28][0]++, Number(validatedData.listPrice)) ||
      /* istanbul ignore next */
      (cov_v8cd4345w().b[28][1]++, basePrice),
      countInStock: totalStock,
      warehouseData: processedWarehouseData,
      colors: combinedColors,
      sizes: ['S', 'M', 'L', 'XL', 'XXL'],
      isPublished:
      /* istanbul ignore next */
      (cov_v8cd4345w().b[29][0]++, validatedData.isPublished) ||
      /* istanbul ignore next */
      (cov_v8cd4345w().b[29][1]++, false),
      sellerId: seller._id,
      seller: {
        name: seller.businessName,
        email: seller.email,
        subscription: seller.subscription.plan
      },
      pricing: {
        basePrice,
        markup,
        profit: markupAmount - commissionAmount,
        commission: commissionAmount,
        finalPrice: basePrice + markupAmount,
        discount: validatedData.pricing?.discount
      },
      metrics: {
        views: 0,
        sales: 0,
        revenue: 0,
        returns: 0,
        rating: 0
      },
      status: validatedData.isPublished ?
      /* istanbul ignore next */
      (cov_v8cd4345w().b[30][0]++, 'pending') :
      /* istanbul ignore next */
      (cov_v8cd4345w().b[30][1]++, 'draft'),
      createdBy: currentUser.name,
      updatedBy: currentUser.name,
      createdAt: creationTime,
      updatedAt: creationTime
    });
    // Create product
    const product =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[110]++, await _productmodel.default.create([productData], {
      session
    }));
    const createdProduct =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[111]++, product[0]);
    // Update warehouse stock
    /* istanbul ignore next */
    cov_v8cd4345w().s[112]++;
    await Promise.all(processedWarehouseData.map(warehouse => {
      /* istanbul ignore next */
      cov_v8cd4345w().f[34]++;
      cov_v8cd4345w().s[113]++;
      return (0, _warehouseactions.updateWarehouseStock)({
        productId: createdProduct._id,
        warehouseId: warehouse.warehouseId,
        quantity: warehouse.quantity,
        sku: warehouse.sku,
        location: warehouse.location,
        minimumStock: warehouse.minimumStock,
        reorderPoint: warehouse.reorderPoint,
        colors: warehouse.colors,
        updatedBy: currentUser.name
      });
    }));
    // Update seller metrics
    /* istanbul ignore next */
    cov_v8cd4345w().s[114]++;
    await (0, _selleractions.updateSellerMetrics)(seller._id, {
      productsCount: '+1',
      lastProductCreated: creationTime
    });
    /* istanbul ignore next */
    cov_v8cd4345w().s[115]++;
    await session.commitTransaction();
    // Revalidate paths
    /* istanbul ignore next */
    cov_v8cd4345w().s[116]++;
    (0, _cache.revalidatePath)('/seller/dashboard/products');
    /* istanbul ignore next */
    cov_v8cd4345w().s[117]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_v8cd4345w().s[118]++;
    (0, _cache.revalidatePath)(`/product/${createdProduct.slug}`);
    /* istanbul ignore next */
    cov_v8cd4345w().s[119]++;
    console.log(`[${creationTime.toISOString()}] Product created successfully:`, {
      productId: createdProduct._id,
      name: createdProduct.name,
      totalStock,
      colorsCount: createdProduct.colors.length
    });
    /* istanbul ignore next */
    cov_v8cd4345w().s[120]++;
    return {
      success: true,
      message: 'Product created successfully',
      data: createdProduct
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[121]++;
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_v8cd4345w().s[122]++;
    console.error('Product creation error:', error);
    /* istanbul ignore next */
    cov_v8cd4345w().s[123]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[31][0]++;
      cov_v8cd4345w().s[124]++;
      if (error.message.includes('duplicate')) {
        /* istanbul ignore next */
        cov_v8cd4345w().b[32][0]++;
        cov_v8cd4345w().s[125]++;
        return {
          success: false,
          message: 'This slug already exists. Please choose a different one.'
        };
      } else
      /* istanbul ignore next */
      {
        cov_v8cd4345w().b[32][1]++;
      }
      cov_v8cd4345w().s[126]++;
      if (error.message.includes('validation failed')) {
        /* istanbul ignore next */
        cov_v8cd4345w().b[33][0]++;
        cov_v8cd4345w().s[127]++;
        return {
          success: false,
          message: 'Please check that all required fields are filled correctly.'
        };
      } else
      /* istanbul ignore next */
      {
        cov_v8cd4345w().b[33][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[31][1]++;
    }
    cov_v8cd4345w().s[128]++;
    return {
      success: false,
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_v8cd4345w().b[34][0]++, error.message) :
      /* istanbul ignore next */
      (cov_v8cd4345w().b[34][1]++, 'Failed to create product')
    };
  } finally {
    /* istanbul ignore next */
    cov_v8cd4345w().s[129]++;
    session.endSession();
  }
}
async function updateProduct(data) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[35]++;
  const session =
  /* istanbul ignore next */
  (cov_v8cd4345w().s[130]++, await _mongoose.default.startSession());
  /* istanbul ignore next */
  cov_v8cd4345w().s[131]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_v8cd4345w().s[132]++;
  try {
    // Validate input data first
    const validatedInput =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[133]++, _productvalidator.ProductUpdateSchema.parse(data));
    // Check authentication
    const authSession1 =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[134]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_v8cd4345w().s[135]++;
    if (!authSession1?.user) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[35][0]++;
      cov_v8cd4345w().s[136]++;
      throw new Error('Unauthorized');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[35][1]++;
    }
    cov_v8cd4345w().s[137]++;
    await (0, _db.connectToDatabase)();
    // Verify product existence and ownership
    const existingProduct =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[138]++, await _productmodel.default.findById(validatedInput._id).session(session));
    /* istanbul ignore next */
    cov_v8cd4345w().s[139]++;
    if (!existingProduct) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[36][0]++;
      cov_v8cd4345w().s[140]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[36][1]++;
    }
    // Check authorization
    cov_v8cd4345w().s[141]++;
    if (
    /* istanbul ignore next */
    (cov_v8cd4345w().b[38][0]++, authSession1.user.role !== 'Admin') &&
    /* istanbul ignore next */
    (cov_v8cd4345w().b[38][1]++, existingProduct.sellerId.toString() !== authSession1.user.id)) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[37][0]++;
      cov_v8cd4345w().s[142]++;
      throw new Error('Unauthorized');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[37][1]++;
    }
    // Get seller information
    const sellerResponse =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[143]++, await (0, _selleractions.getSellerByUserId)(authSession1.user.role === 'Admin' ?
    /* istanbul ignore next */
    (cov_v8cd4345w().b[39][0]++, existingProduct.sellerId.toString()) :
    /* istanbul ignore next */
    (cov_v8cd4345w().b[39][1]++, authSession1.user.id)));
    /* istanbul ignore next */
    cov_v8cd4345w().s[144]++;
    if (
    /* istanbul ignore next */
    (cov_v8cd4345w().b[41][0]++, !sellerResponse.success) ||
    /* istanbul ignore next */
    (cov_v8cd4345w().b[41][1]++, !sellerResponse.data)) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[40][0]++;
      cov_v8cd4345w().s[145]++;
      throw new Error('Seller not found');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[40][1]++;
    }
    const seller =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[146]++, sellerResponse.data);
    // Calculate pricing if price or markup changed
    let pricing =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[147]++, existingProduct.pricing);
    /* istanbul ignore next */
    cov_v8cd4345w().s[148]++;
    if (
    /* istanbul ignore next */
    (cov_v8cd4345w().b[43][0]++, validatedInput.price !== existingProduct.price) ||
    /* istanbul ignore next */
    (cov_v8cd4345w().b[43][1]++, validatedInput.pricing?.markup !== existingProduct.pricing.markup)) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[42][0]++;
      const basePrice =
      /* istanbul ignore next */
      (cov_v8cd4345w().s[149]++, validatedInput.price);
      const markup =
      /* istanbul ignore next */
      (cov_v8cd4345w().s[150]++,
      /* istanbul ignore next */
      (cov_v8cd4345w().b[44][0]++, validatedInput.pricing?.markup) ||
      /* istanbul ignore next */
      (cov_v8cd4345w().b[44][1]++, existingProduct.pricing.markup));
      const commission =
      /* istanbul ignore next */
      (cov_v8cd4345w().s[151]++,
      /* istanbul ignore next */
      (cov_v8cd4345w().b[45][0]++, seller.subscription.features.commission) ||
      /* istanbul ignore next */
      (cov_v8cd4345w().b[45][1]++, 3));
      const markupAmount =
      /* istanbul ignore next */
      (cov_v8cd4345w().s[152]++, basePrice * (markup / 100));
      const commissionAmount =
      /* istanbul ignore next */
      (cov_v8cd4345w().s[153]++, basePrice * (commission / 100));
      /* istanbul ignore next */
      cov_v8cd4345w().s[154]++;
      pricing = {
        basePrice,
        markup,
        profit: markupAmount - commissionAmount,
        commission: commissionAmount,
        finalPrice: basePrice + markupAmount
      };
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[42][1]++;
    }
    // Check if stock status has changed
    const isStockStatusChanged =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[155]++,
    /* istanbul ignore next */
    (cov_v8cd4345w().b[46][0]++, existingProduct.stock > 0) &&
    /* istanbul ignore next */
    (cov_v8cd4345w().b[46][1]++, validatedInput.stock === 0) ||
    /* istanbul ignore next */
    (cov_v8cd4345w().b[46][2]++, existingProduct.stock === 0) &&
    /* istanbul ignore next */
    (cov_v8cd4345w().b[46][3]++, validatedInput.stock > 0));
    // Prepare update data
    const updateData =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[156]++, {
      ...validatedInput,
      pricing,
      status: validatedInput.isPublished ?
      /* istanbul ignore next */
      (cov_v8cd4345w().b[47][0]++, existingProduct.status === 'active' ?
      /* istanbul ignore next */
      (cov_v8cd4345w().b[48][0]++, 'active') :
      /* istanbul ignore next */
      (cov_v8cd4345w().b[48][1]++, 'pending')) :
      /* istanbul ignore next */
      (cov_v8cd4345w().b[47][1]++, 'draft'),
      updatedAt: new Date(),
      updatedBy:
      /* istanbul ignore next */
      (cov_v8cd4345w().b[49][0]++, authSession1.user.name) ||
      /* istanbul ignore next */
      (cov_v8cd4345w().b[49][1]++, authSession1.user.email)
    });
    // Update the product
    const updatedProduct =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[157]++, await _productmodel.default.findByIdAndUpdate(validatedInput._id, updateData, {
      new: true,
      session
    }));
    // Update seller metrics if stock status changed
    /* istanbul ignore next */
    cov_v8cd4345w().s[158]++;
    if (isStockStatusChanged) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[50][0]++;
      cov_v8cd4345w().s[159]++;
      await (0, _selleractions.updateSellerMetrics)(seller._id, {
        action: validatedInput.stock === 0 ?
        /* istanbul ignore next */
        (cov_v8cd4345w().b[51][0]++, 'product_out_of_stock') :
        /* istanbul ignore next */
        (cov_v8cd4345w().b[51][1]++, 'product_back_in_stock')
      });
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[50][1]++;
    }
    // Commit transaction
    cov_v8cd4345w().s[160]++;
    await session.commitTransaction();
    // Revalidate cache paths
    /* istanbul ignore next */
    cov_v8cd4345w().s[161]++;
    (0, _cache.revalidatePath)('/seller/dashboard/products');
    /* istanbul ignore next */
    cov_v8cd4345w().s[162]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_v8cd4345w().s[163]++;
    (0, _cache.revalidatePath)(`/product/${updatedProduct?.slug}`);
    // Log the update operation
    /* istanbul ignore next */
    cov_v8cd4345w().s[164]++;
    await logOperation('Product Updated', {
      productId: updatedProduct?._id,
      name: updatedProduct?.name,
      seller: seller.businessName
    });
    /* istanbul ignore next */
    cov_v8cd4345w().s[165]++;
    return {
      success: true,
      message: 'Product updated successfully',
      data: updatedProduct
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[166]++;
    // Rollback transaction on error
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_v8cd4345w().s[167]++;
    console.error('Product update error:', error);
    /* istanbul ignore next */
    cov_v8cd4345w().s[168]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  } finally {
    /* istanbul ignore next */
    cov_v8cd4345w().s[169]++;
    // Always end the session
    session.endSession();
  }
}
async function deleteProduct(id) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[36]++;
  const session =
  /* istanbul ignore next */
  (cov_v8cd4345w().s[170]++, await _mongoose.default.startSession());
  /* istanbul ignore next */
  cov_v8cd4345w().s[171]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_v8cd4345w().s[172]++;
  try {
    // التحقق من المصادقة
    const authSession1 =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[173]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_v8cd4345w().s[174]++;
    if (!authSession1?.user) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[52][0]++;
      cov_v8cd4345w().s[175]++;
      throw new Error('Unauthorized');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[52][1]++;
    }
    cov_v8cd4345w().s[176]++;
    await (0, _db.connectToDatabase)();
    // البحث عن المنتج مع استخدام الجلسة
    const product =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[177]++, await _productmodel.default.findById(id).session(session));
    /* istanbul ignore next */
    cov_v8cd4345w().s[178]++;
    if (!product) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[53][0]++;
      cov_v8cd4345w().s[179]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[53][1]++;
    }
    // التحقق من الصلاحيات
    cov_v8cd4345w().s[180]++;
    if (
    /* istanbul ignore next */
    (cov_v8cd4345w().b[55][0]++, authSession1.user.role !== 'Admin') &&
    /* istanbul ignore next */
    (cov_v8cd4345w().b[55][1]++, product.sellerId.toString() !== authSession1.user.id)) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[54][0]++;
      cov_v8cd4345w().s[181]++;
      throw new Error('Unauthorized');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[54][1]++;
    }
    // حذف المنتج
    cov_v8cd4345w().s[182]++;
    await _productmodel.default.findByIdAndDelete(id).session(session);
    // تحديث إحصائيات البائع
    /* istanbul ignore next */
    cov_v8cd4345w().s[183]++;
    if (product.sellerId) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[56][0]++;
      cov_v8cd4345w().s[184]++;
      await (0, _selleractions.updateSellerMetrics)(product.sellerId, {
        productsCount: '-1',
        lastUpdated: new Date()
      });
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[56][1]++;
    }
    // تسجيل عملية الحذف
    cov_v8cd4345w().s[185]++;
    await logOperation('Product Deleted', {
      productId: id,
      name: product.name,
      deletedBy:
      /* istanbul ignore next */
      (cov_v8cd4345w().b[57][0]++, authSession1.user.name) ||
      /* istanbul ignore next */
      (cov_v8cd4345w().b[57][1]++, authSession1.user.email),
      timestamp: new Date()
    });
    // تأكيد المعاملة
    /* istanbul ignore next */
    cov_v8cd4345w().s[186]++;
    await session.commitTransaction();
    // تحديث الصفحات ذات الصلة
    /* istanbul ignore next */
    cov_v8cd4345w().s[187]++;
    (0, _cache.revalidatePath)('/seller/dashboard/products');
    /* istanbul ignore next */
    cov_v8cd4345w().s[188]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_v8cd4345w().s[189]++;
    (0, _cache.revalidatePath)(`/product/${product.slug}`);
    /* istanbul ignore next */
    cov_v8cd4345w().s[190]++;
    return {
      success: true,
      message: 'Product deleted successfully',
      metadata: {
        deletedAt: new Date(),
        deletedBy:
        /* istanbul ignore next */
        (cov_v8cd4345w().b[58][0]++, authSession1.user.name) ||
        /* istanbul ignore next */
        (cov_v8cd4345w().b[58][1]++, authSession1.user.email),
        productId: id
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[191]++;
    // التراجع عن المعاملة في حالة حدوث خطأ
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_v8cd4345w().s[192]++;
    console.error('Delete product error:', {
      error,
      productId: id,
      userId: authSession?.user?.id,
      timestamp: new Date()
    });
    // إرجاع رسالة خطأ مناسبة
    /* istanbul ignore next */
    cov_v8cd4345w().s[193]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[59][0]++;
      cov_v8cd4345w().s[194]++;
      if (error.message.includes('Unauthorized')) {
        /* istanbul ignore next */
        cov_v8cd4345w().b[60][0]++;
        cov_v8cd4345w().s[195]++;
        return {
          success: false,
          message: 'You do not have permission to delete this product',
          code: 'UNAUTHORIZED'
        };
      } else
      /* istanbul ignore next */
      {
        cov_v8cd4345w().b[60][1]++;
      }
      cov_v8cd4345w().s[196]++;
      if (error.message.includes('Product not found')) {
        /* istanbul ignore next */
        cov_v8cd4345w().b[61][0]++;
        cov_v8cd4345w().s[197]++;
        return {
          success: false,
          message: 'The product you are trying to delete does not exist',
          code: 'NOT_FOUND'
        };
      } else
      /* istanbul ignore next */
      {
        cov_v8cd4345w().b[61][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[59][1]++;
    }
    cov_v8cd4345w().s[198]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error),
      code: 'INTERNAL_ERROR'
    };
  } finally {
    /* istanbul ignore next */
    cov_v8cd4345w().s[199]++;
    // إنهاء الجلسة دائماً
    session.endSession();
  }
}
async function reviewProduct(productId, approved, notes) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[37]++;
  const session =
  /* istanbul ignore next */
  (cov_v8cd4345w().s[200]++, await _mongoose.default.startSession());
  /* istanbul ignore next */
  cov_v8cd4345w().s[201]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_v8cd4345w().s[202]++;
  try {
    const authSession1 =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[203]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_v8cd4345w().s[204]++;
    if (!authSession1?.user?.role === 'Admin') {
      /* istanbul ignore next */
      cov_v8cd4345w().b[62][0]++;
      cov_v8cd4345w().s[205]++;
      throw new Error('Unauthorized');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[62][1]++;
    }
    cov_v8cd4345w().s[206]++;
    await (0, _db.connectToDatabase)();
    const product =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[207]++, await _productmodel.default.findById(productId).session(session));
    /* istanbul ignore next */
    cov_v8cd4345w().s[208]++;
    if (!product) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[63][0]++;
      cov_v8cd4345w().s[209]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[63][1]++;
    }
    // Update product status
    const updateData =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[210]++, {
      status: approved ?
      /* istanbul ignore next */
      (cov_v8cd4345w().b[64][0]++, 'active') :
      /* istanbul ignore next */
      (cov_v8cd4345w().b[64][1]++, 'rejected'),
      adminReview: {
        approved,
        reviewedAt: new Date(),
        reviewedBy: authSession1.user.id,
        notes:
        /* istanbul ignore next */
        (cov_v8cd4345w().b[65][0]++, notes) ||
        /* istanbul ignore next */
        (cov_v8cd4345w().b[65][1]++, '')
      }
    });
    const updatedProduct =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[211]++, await _productmodel.default.findByIdAndUpdate(productId, updateData, {
      new: true,
      session
    }));
    /* istanbul ignore next */
    cov_v8cd4345w().s[212]++;
    await session.commitTransaction();
    /* istanbul ignore next */
    cov_v8cd4345w().s[213]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_v8cd4345w().s[214]++;
    (0, _cache.revalidatePath)('/seller/dashboard/products');
    /* istanbul ignore next */
    cov_v8cd4345w().s[215]++;
    if (approved) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[66][0]++;
      cov_v8cd4345w().s[216]++;
      (0, _cache.revalidatePath)(`/product/${product.slug}`);
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[66][1]++;
    }
    cov_v8cd4345w().s[217]++;
    return {
      success: true,
      message: `Product ${approved ?
      /* istanbul ignore next */
      (cov_v8cd4345w().b[67][0]++, 'approved') :
      /* istanbul ignore next */
      (cov_v8cd4345w().b[67][1]++, 'rejected')} successfully`,
      data: updatedProduct
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[218]++;
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_v8cd4345w().s[219]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  } finally {
    /* istanbul ignore next */
    cov_v8cd4345w().s[220]++;
    session.endSession();
  }
}
async function getProductCategories(limit =
/* istanbul ignore next */
(cov_v8cd4345w().b[68][0]++, 4)) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[38]++;
  cov_v8cd4345w().s[221]++;
  try {
    /* istanbul ignore next */
    cov_v8cd4345w().s[222]++;
    await (0, _db.connectToDatabase)();
    const categories =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[223]++, await _productmodel.default.aggregate([{
      $match: {
        isPublished: true,
        status: 'active',
        stock: {
          $gt: 0
        }
      }
    }, {
      $group: {
        _id: '$category',
        productCount: {
          $sum: 1
        },
        totalSales: {
          $sum: '$metrics.sales'
        },
        image: {
          $first: '$images'
        },
        latestProduct: {
          $first: {
            name: '$name',
            slug: '$slug',
            images: '$images'
          }
        }
      }
    }, {
      $sort: {
        productCount: -1,
        totalSales: -1
      }
    }, {
      $limit: limit
    }, {
      $project: {
        name: '$_id',
        image: {
          $first: '$latestProduct.images'
        },
        slug: '$latestProduct.slug',
        productCount: 1
      }
    }]));
    /* istanbul ignore next */
    cov_v8cd4345w().s[224]++;
    return JSON.parse(JSON.stringify(categories));
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[225]++;
    console.error('Error fetching categories:', error);
    /* istanbul ignore next */
    cov_v8cd4345w().s[226]++;
    return [];
  }
}
async function getProductsForCard({
  tag,
  limit =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[69][0]++, 4)
}) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[39]++;
  cov_v8cd4345w().s[227]++;
  try {
    /* istanbul ignore next */
    cov_v8cd4345w().s[228]++;
    await (0, _db.connectToDatabase)();
    const products =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[229]++, await _productmodel.default.aggregate([{
      $match: {
        tags: {
          $in: [tag]
        },
        isPublished: true,
        status: 'active',
        stock: {
          $gt: 0
        }
      }
    }, {
      $addFields: {
        href: {
          $concat: ['/product/', '$slug']
        },
        image: {
          $arrayElemAt: ['$images', 0]
        }
      }
    }, {
      $project: {
        name: 1,
        slug: 1,
        images: 1,
        price: 1,
        metrics: 1,
        href: 1,
        image: 1
      }
    }, {
      $sort: {
        'metrics.sales': -1,
        createdAt: -1
      }
    }, {
      $limit: limit
    }]));
    /* istanbul ignore next */
    cov_v8cd4345w().s[230]++;
    return JSON.parse(JSON.stringify(products));
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[231]++;
    console.error('Error fetching products for card:', error);
    /* istanbul ignore next */
    cov_v8cd4345w().s[232]++;
    return [];
  }
}
async function getProductsByTag({
  tag,
  limit =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[70][0]++, 10),
  sortBy =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[71][0]++, 'sales')
}) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[40]++;
  cov_v8cd4345w().s[233]++;
  try {
    /* istanbul ignore next */
    cov_v8cd4345w().s[234]++;
    await (0, _db.connectToDatabase)();
    const query =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[235]++, {
      tags: {
        $in: [tag]
      },
      isPublished: true
    });
    // إذا اخترنا الفرز حسب المبيعات، نضيف شروط إضافية
    /* istanbul ignore next */
    cov_v8cd4345w().s[236]++;
    if (sortBy === 'sales') {
      /* istanbul ignore next */
      cov_v8cd4345w().b[72][0]++;
      cov_v8cd4345w().s[237]++;
      query.status = 'active';
      /* istanbul ignore next */
      cov_v8cd4345w().s[238]++;
      query.stock = {
        $gt: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[72][1]++;
    }
    const sortOption =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[239]++, sortBy === 'sales' ?
    /* istanbul ignore next */
    (cov_v8cd4345w().b[73][0]++, {
      'metrics.sales': -1
    }) :
    /* istanbul ignore next */
    (cov_v8cd4345w().b[73][1]++, {
      createdAt: -1
    }));
    const products =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[240]++, await _productmodel.default.find(query).sort(sortOption).limit(limit).lean());
    /* istanbul ignore next */
    cov_v8cd4345w().s[241]++;
    return JSON.parse(JSON.stringify(products));
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[242]++;
    console.error('Error fetching products by tag:', error);
    /* istanbul ignore next */
    cov_v8cd4345w().s[243]++;
    return [];
  }
}
async function getLatestProducts({
  limit =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[75][0]++, 4)
} =
/* istanbul ignore next */
(cov_v8cd4345w().b[74][0]++, {})) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[41]++;
  cov_v8cd4345w().s[244]++;
  try {
    /* istanbul ignore next */
    cov_v8cd4345w().s[245]++;
    await (0, _db.connectToDatabase)();
    const products =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[246]++, await _productmodel.default.find({
      isPublished: true,
      status: 'active',
      stock: {
        $gt: 0
      }
    }).sort({
      createdAt: -1
    }).limit(limit).select('name images slug price').lean());
    /* istanbul ignore next */
    cov_v8cd4345w().s[247]++;
    return JSON.parse(JSON.stringify(products));
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[248]++;
    console.error('Error fetching latest products:', error);
    /* istanbul ignore next */
    cov_v8cd4345w().s[249]++;
    return [];
  }
}
async function getAllProducts({
  query =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[76][0]++, ''),
  category =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[77][0]++, 'all'),
  tag =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[78][0]++, 'all'),
  sort =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[79][0]++, 'latest'),
  page =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[80][0]++, 1),
  limit,
  price,
  rating
}) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[42]++;
  cov_v8cd4345w().s[250]++;
  try {
    /* istanbul ignore next */
    cov_v8cd4345w().s[251]++;
    await (0, _db.connectToDatabase)();
    const {
      common: {
        pageSize
      }
    } =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[252]++, await (0, _settingactions.getSetting)());
    /* istanbul ignore next */
    cov_v8cd4345w().s[253]++;
    limit =
    /* istanbul ignore next */
    (cov_v8cd4345w().b[81][0]++, limit) ||
    /* istanbul ignore next */
    (cov_v8cd4345w().b[81][1]++, pageSize);
    // البناء الذكي للفلترات مع دمج الشروط
    const queryFilter =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[254]++, {
      isPublished: true,
      status: 'active',
      stock: {
        $gt: 0
      }
    });
    /* istanbul ignore next */
    cov_v8cd4345w().s[255]++;
    if (
    /* istanbul ignore next */
    (cov_v8cd4345w().b[83][0]++, query) &&
    /* istanbul ignore next */
    (cov_v8cd4345w().b[83][1]++, query !== 'all')) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[82][0]++;
      cov_v8cd4345w().s[256]++;
      queryFilter.name = {
        $regex: query,
        $options: 'i'
      };
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[82][1]++;
    }
    cov_v8cd4345w().s[257]++;
    if (
    /* istanbul ignore next */
    (cov_v8cd4345w().b[85][0]++, category) &&
    /* istanbul ignore next */
    (cov_v8cd4345w().b[85][1]++, category !== 'all')) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[84][0]++;
      cov_v8cd4345w().s[258]++;
      queryFilter.category = category;
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[84][1]++;
    }
    cov_v8cd4345w().s[259]++;
    if (
    /* istanbul ignore next */
    (cov_v8cd4345w().b[87][0]++, tag) &&
    /* istanbul ignore next */
    (cov_v8cd4345w().b[87][1]++, tag !== 'all')) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[86][0]++;
      cov_v8cd4345w().s[260]++;
      queryFilter.tags = tag;
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[86][1]++;
    }
    cov_v8cd4345w().s[261]++;
    if (
    /* istanbul ignore next */
    (cov_v8cd4345w().b[89][0]++, rating) &&
    /* istanbul ignore next */
    (cov_v8cd4345w().b[89][1]++, rating !== 'all')) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[88][0]++;
      cov_v8cd4345w().s[262]++;
      queryFilter['metrics.rating'] = {
        $gte: Number(rating)
      };
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[88][1]++;
    }
    cov_v8cd4345w().s[263]++;
    if (
    /* istanbul ignore next */
    (cov_v8cd4345w().b[91][0]++, price) &&
    /* istanbul ignore next */
    (cov_v8cd4345w().b[91][1]++, price !== 'all')) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[90][0]++;
      const [min, max] =
      /* istanbul ignore next */
      (cov_v8cd4345w().s[264]++, price.split('-').map(Number));
      /* istanbul ignore next */
      cov_v8cd4345w().s[265]++;
      queryFilter['pricing.finalPrice'] = {
        $gte: min,
        $lte: max
      };
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[90][1]++;
    }
    // ترتيب النتائج حسب الخيار
    const order =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[266]++, sort === 'best-selling' ?
    /* istanbul ignore next */
    (cov_v8cd4345w().b[92][0]++, {
      'metrics.sales': -1
    }) :
    /* istanbul ignore next */
    (cov_v8cd4345w().b[92][1]++, sort === 'price-low-to-high' ?
    /* istanbul ignore next */
    (cov_v8cd4345w().b[93][0]++, {
      'pricing.finalPrice': 1
    }) :
    /* istanbul ignore next */
    (cov_v8cd4345w().b[93][1]++, sort === 'price-high-to-low' ?
    /* istanbul ignore next */
    (cov_v8cd4345w().b[94][0]++, {
      'pricing.finalPrice': -1
    }) :
    /* istanbul ignore next */
    (cov_v8cd4345w().b[94][1]++, sort === 'avg-customer-review' ?
    /* istanbul ignore next */
    (cov_v8cd4345w().b[95][0]++, {
      'metrics.rating': -1
    }) :
    /* istanbul ignore next */
    (cov_v8cd4345w().b[95][1]++, {
      createdAt: -1
    })))));
    // حساب التخطي والحد للصفحة
    const skip =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[267]++, limit * (Number(page) - 1));
    // تنفيذ الاستعلام والعد بالتوازي
    const [products, totalProducts] =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[268]++, await Promise.all([_productmodel.default.find(queryFilter).sort(order).skip(skip).limit(limit).lean(), _productmodel.default.countDocuments(queryFilter)]));
    /* istanbul ignore next */
    cov_v8cd4345w().s[269]++;
    return {
      products: JSON.parse(JSON.stringify(products)),
      totalPages: Math.ceil(totalProducts / limit),
      totalProducts,
      from: skip + 1,
      to: skip + products.length
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[270]++;
    console.error('Error fetching products:', error);
    /* istanbul ignore next */
    cov_v8cd4345w().s[271]++;
    return {
      products: [],
      totalPages: 0,
      totalProducts: 0,
      from: 0,
      to: 0
    };
  }
}
async function getProductById(productId) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[43]++;
  cov_v8cd4345w().s[272]++;
  try {
    /* istanbul ignore next */
    cov_v8cd4345w().s[273]++;
    // التحقق من صحة معرف المنتج
    if (
    /* istanbul ignore next */
    (cov_v8cd4345w().b[97][0]++, !productId) ||
    /* istanbul ignore next */
    (cov_v8cd4345w().b[97][1]++, !_mongoose.default.Types.ObjectId.isValid(productId))) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[96][0]++;
      cov_v8cd4345w().s[274]++;
      throw new Error('Invalid product ID');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[96][1]++;
    }
    // الاتصال بقاعدة البيانات
    cov_v8cd4345w().s[275]++;
    await (0, _db.connectToDatabase)();
    // البحث عن المنتج مع استخدام lean() للأداء الأفضل
    const product =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[276]++, await _productmodel.default.findById(productId).lean().select('-__v') // استبعاد حقل __v
    .exec());
    /* istanbul ignore next */
    cov_v8cd4345w().s[277]++;
    if (!product) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[98][0]++;
      cov_v8cd4345w().s[278]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[98][1]++;
    }
    // تحويل التاريخ إلى التنسيق المطلوب
    const formattedProduct =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[279]++, {
      ...product,
      createdAt: product.createdAt ?
      /* istanbul ignore next */
      (cov_v8cd4345w().b[99][0]++, new Date(product.createdAt).toISOString()) :
      /* istanbul ignore next */
      (cov_v8cd4345w().b[99][1]++, undefined),
      updatedAt: product.updatedAt ?
      /* istanbul ignore next */
      (cov_v8cd4345w().b[100][0]++, new Date(product.updatedAt).toISOString()) :
      /* istanbul ignore next */
      (cov_v8cd4345w().b[100][1]++, undefined)
    });
    // تسجيل الوصول للمنتج (يمكن استخدامه للتحليلات)
    /* istanbul ignore next */
    cov_v8cd4345w().s[280]++;
    console.info('Product accessed:', {
      productId,
      timestamp: new Date().toISOString(),
      accessedBy: 'Nigel-Henry' // using the current user
    });
    // تحويل البيانات إلى JSON وإرجاعها
    /* istanbul ignore next */
    cov_v8cd4345w().s[281]++;
    return {
      success: true,
      data: JSON.parse(JSON.stringify(formattedProduct)),
      metadata: {
        accessed: new Date().toISOString(),
        by: 'Nigel-Henry'
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[282]++;
    // معالجة الأخطاء بشكل مناسب
    console.error('Error fetching product:', {
      productId,
      error,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_v8cd4345w().s[283]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[101][0]++;
      cov_v8cd4345w().s[284]++;
      if (error.message.includes('Invalid product ID')) {
        /* istanbul ignore next */
        cov_v8cd4345w().b[102][0]++;
        cov_v8cd4345w().s[285]++;
        return {
          success: false,
          message: 'Please provide a valid product ID',
          code: 'INVALID_ID'
        };
      } else
      /* istanbul ignore next */
      {
        cov_v8cd4345w().b[102][1]++;
      }
      cov_v8cd4345w().s[286]++;
      if (error.message.includes('Product not found')) {
        /* istanbul ignore next */
        cov_v8cd4345w().b[103][0]++;
        cov_v8cd4345w().s[287]++;
        return {
          success: false,
          message: 'The requested product does not exist',
          code: 'NOT_FOUND'
        };
      } else
      /* istanbul ignore next */
      {
        cov_v8cd4345w().b[103][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[101][1]++;
    }
    cov_v8cd4345w().s[288]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error),
      code: 'INTERNAL_ERROR',
      metadata: {
        timestamp: new Date().toISOString(),
        requestedId: productId
      }
    };
  }
}
async function getProductBySlug(slug) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[44]++;
  cov_v8cd4345w().s[289]++;
  try {
    /* istanbul ignore next */
    cov_v8cd4345w().s[290]++;
    await (0, _db.connectToDatabase)();
    const product =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[291]++, await _productmodel.default.findOne({
      slug,
      isPublished: true,
      status: 'active'
    }).lean());
    /* istanbul ignore next */
    cov_v8cd4345w().s[292]++;
    if (!product) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[104][0]++;
      cov_v8cd4345w().s[293]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[104][1]++;
    }
    cov_v8cd4345w().s[294]++;
    return JSON.parse(JSON.stringify(product));
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[295]++;
    throw new Error((0, _utils.formatError)(error));
  }
}
async function getRelatedProducts({
  category,
  productId,
  limit =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[105][0]++, 4)
}) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[45]++;
  cov_v8cd4345w().s[296]++;
  try {
    /* istanbul ignore next */
    cov_v8cd4345w().s[297]++;
    await (0, _db.connectToDatabase)();
    const products =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[298]++, await _productmodel.default.find({
      _id: {
        $ne: productId
      },
      category,
      isPublished: true,
      status: 'active',
      stock: {
        $gt: 0
      }
    }).sort({
      'metrics.sales': -1
    }).limit(limit).select('name images slug price').lean());
    /* istanbul ignore next */
    cov_v8cd4345w().s[299]++;
    return JSON.parse(JSON.stringify(products));
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[300]++;
    console.error('Error fetching related products:', error);
    /* istanbul ignore next */
    cov_v8cd4345w().s[301]++;
    return [];
  }
}
async function getAllTags() {
  /* istanbul ignore next */
  cov_v8cd4345w().f[46]++;
  cov_v8cd4345w().s[302]++;
  try {
    /* istanbul ignore next */
    cov_v8cd4345w().s[303]++;
    await (0, _db.connectToDatabase)();
    const tags =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[304]++, await _productmodel.default.aggregate([{
      $match: {
        isPublished: true,
        status: 'active'
      }
    }, {
      $unwind: '$tags'
    }, {
      $group: {
        _id: null,
        uniqueTags: {
          $addToSet: '$tags'
        }
      }
    }, {
      $project: {
        _id: 0,
        uniqueTags: 1
      }
    }]));
    /* istanbul ignore next */
    cov_v8cd4345w().s[305]++;
    return /* istanbul ignore next */(cov_v8cd4345w().b[106][0]++, tags[0]?.uniqueTags.sort((a, b) => {
      /* istanbul ignore next */
      cov_v8cd4345w().f[47]++;
      cov_v8cd4345w().s[306]++;
      return a.localeCompare(b);
    }).map(tag => {
      /* istanbul ignore next */
      cov_v8cd4345w().f[48]++;
      cov_v8cd4345w().s[307]++;
      return tag.split('-').map(word => {
        /* istanbul ignore next */
        cov_v8cd4345w().f[49]++;
        cov_v8cd4345w().s[308]++;
        return word.charAt(0).toUpperCase() + word.slice(1);
      }).join(' ');
    })) ||
    /* istanbul ignore next */
    (cov_v8cd4345w().b[106][1]++, []);
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[309]++;
    console.error('Error fetching tags:', error);
    /* istanbul ignore next */
    cov_v8cd4345w().s[310]++;
    return [];
  }
}
async function getRelatedProductsByCategory({
  category,
  productId,
  limit =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[107][0]++, 4),
  page =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[108][0]++, 1)
}) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[50]++;
  cov_v8cd4345w().s[311]++;
  try {
    const {
      common: {
        pageSize
      }
    } =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[312]++, await (0, _settingactions.getSetting)());
    /* istanbul ignore next */
    cov_v8cd4345w().s[313]++;
    limit =
    /* istanbul ignore next */
    (cov_v8cd4345w().b[109][0]++, limit) ||
    /* istanbul ignore next */
    (cov_v8cd4345w().b[109][1]++, pageSize);
    /* istanbul ignore next */
    cov_v8cd4345w().s[314]++;
    await (0, _db.connectToDatabase)();
    const skipAmount =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[315]++, (Number(page) - 1) * limit);
    const conditions =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[316]++, {
      isPublished: true,
      category,
      _id: {
        $ne: productId
      }
    });
    const products =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[317]++, await _productmodel.default.find(conditions).sort({
      numSales: -1
    }) // ترتيب تنازلي حسب المبيعات
    .skip(skipAmount).limit(limit).lean());
    const productsCount =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[318]++, await _productmodel.default.countDocuments(conditions));
    /* istanbul ignore next */
    cov_v8cd4345w().s[319]++;
    return {
      data: JSON.parse(JSON.stringify(products)),
      totalPages: Math.ceil(productsCount / limit)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[320]++;
    console.error('Error fetching related products:', error);
    /* istanbul ignore next */
    cov_v8cd4345w().s[321]++;
    return {
      data: [],
      totalPages: 0
    };
  }
}
async function getAllCategories() {
  /* istanbul ignore next */
  cov_v8cd4345w().f[51]++;
  cov_v8cd4345w().s[322]++;
  try {
    /* istanbul ignore next */
    cov_v8cd4345w().s[323]++;
    // Connect to the database
    await (0, _db.connectToDatabase)();
    // Fetch distinct categories for active, published products
    const categories =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[324]++, await _productmodel.default.find({
      isPublished: true,
      status: 'active'
    }).distinct('category'));
    /* istanbul ignore next */
    cov_v8cd4345w().s[325]++;
    return categories;
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[326]++;
    console.error('Error fetching categories:', error);
    /* istanbul ignore next */
    cov_v8cd4345w().s[327]++;
    return [];
  }
}
async function getSellerProducts({
  sellerId,
  query =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[110][0]++, ''),
  page =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[111][0]++, 1),
  limit =
  /* istanbul ignore next */
  (cov_v8cd4345w().b[112][0]++, 10)
}) {
  /* istanbul ignore next */
  cov_v8cd4345w().f[52]++;
  cov_v8cd4345w().s[328]++;
  try {
    /* istanbul ignore next */
    cov_v8cd4345w().s[329]++;
    await (0, _db.connectToDatabase)();
    const queryFilter =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[330]++, {
      sellerId
    });
    /* istanbul ignore next */
    cov_v8cd4345w().s[331]++;
    if (query) {
      /* istanbul ignore next */
      cov_v8cd4345w().b[113][0]++;
      cov_v8cd4345w().s[332]++;
      queryFilter.$or = [{
        name: {
          $regex: query,
          $options: 'i'
        }
      }, {
        category: {
          $regex: query,
          $options: 'i'
        }
      }, {
        brand: {
          $regex: query,
          $options: 'i'
        }
      }, {
        slug: {
          $regex: query,
          $options: 'i'
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_v8cd4345w().b[113][1]++;
    }
    const skip =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[333]++, (page - 1) * limit);
    const [products, totalProducts] =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[334]++, await Promise.all([_productmodel.default.find(queryFilter).sort({
      updatedAt: -1
    }).skip(skip).limit(limit).select({
      name: 1,
      slug: 1,
      price: 1,
      category: 1,
      countInStock: 1,
      isPublished: 1,
      avgRating: 1,
      updatedAt: 1,
      pricing: 1,
      metrics: 1,
      status: 1,
      warehouseData: 1
    }).lean(), _productmodel.default.countDocuments(queryFilter)]));
    const formattedProducts =
    /* istanbul ignore next */
    (cov_v8cd4345w().s[335]++, products.map(product => {
      /* istanbul ignore next */
      cov_v8cd4345w().f[53]++;
      cov_v8cd4345w().s[336]++;
      return {
        ...product,
        metrics: {
          ...product.metrics,
          rating:
          /* istanbul ignore next */
          (cov_v8cd4345w().b[114][0]++, product.metrics?.rating) ||
          /* istanbul ignore next */
          (cov_v8cd4345w().b[114][1]++, 0)
        }
      };
    }));
    /* istanbul ignore next */
    cov_v8cd4345w().s[337]++;
    await logOperation('Seller Products List Retrieved', {
      sellerId,
      total: totalProducts,
      page,
      limit
    });
    /* istanbul ignore next */
    cov_v8cd4345w().s[338]++;
    return {
      products: JSON.parse(JSON.stringify(formattedProducts)),
      totalPages: Math.ceil(totalProducts / limit),
      totalProducts,
      from: skip + 1,
      to: skip + products.length
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_v8cd4345w().s[339]++;
    console.error('Error in getSellerProducts:', error);
    /* istanbul ignore next */
    cov_v8cd4345w().s[340]++;
    return {
      products: [],
      totalPages: 0,
      totalProducts: 0,
      from: 0,
      to: 0
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfdjhjZDQzNDV3IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiY3JlYXRlUHJvZHVjdCIsImYiLCJkZWxldGVQcm9kdWN0IiwiZ2V0QWxsQ2F0ZWdvcmllcyIsImdldEFsbFByb2R1Y3RzIiwiZ2V0QWxsUHJvZHVjdHNGb3JBZG1pbiIsImdldEFsbFRhZ3MiLCJnZXRMYXRlc3RQcm9kdWN0cyIsImdldFByb2R1Y3RCeUlkIiwiZ2V0UHJvZHVjdEJ5U2x1ZyIsImdldFByb2R1Y3RDYXRlZ29yaWVzIiwiZ2V0UHJvZHVjdHNCeVRhZyIsImdldFByb2R1Y3RzRm9yQ2FyZCIsImdldFJlbGF0ZWRQcm9kdWN0cyIsImdldFJlbGF0ZWRQcm9kdWN0c0J5Q2F0ZWdvcnkiLCJnZXRTZWxsZXJQcm9kdWN0cyIsInJldmlld1Byb2R1Y3QiLCJ1cGRhdGVQcm9kdWN0Iiwid2FyZWhvdXNlUHJvdmlkZXJzIiwiU2hpcEJvYiIsIl9zaGlwYm9iIiwiU2hpcEJvYlNlcnZpY2UiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiU0hJUEJPQl9BUElfS0VZIiwiYXBpVXJsIiwiU0hJUEJPQl9BUElfVVJMIiwiX2ZvdXJweCIsIkZvdXJQWFNlcnZpY2UiLCJGT1VSUFhfQVBJX0tFWSIsIkZPVVJQWF9BUElfVVJMIiwiZ2V0Q3VycmVudFVzZXJJbmZvIiwic2Vzc2lvbiIsIl9hdXRoIiwiYXV0aCIsInVzZXIiLCJpZCIsImIiLCJFcnJvciIsInVzZXJJZCIsInVzZXJOYW1lIiwibmFtZSIsInVzZXJSb2xlIiwicm9sZSIsImxvZ09wZXJhdGlvbiIsIm9wZXJhdGlvbiIsImRldGFpbHMiLCJjb25zb2xlIiwibG9nIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwicXVlcnkiLCJwYWdlIiwic29ydCIsImxpbWl0IiwiX2RiIiwiY29ubmVjdFRvRGF0YWJhc2UiLCJjb21tb24iLCJwYWdlU2l6ZSIsIl9zZXR0aW5nYWN0aW9ucyIsImdldFNldHRpbmciLCJxdWVyeUZpbHRlciIsIiRvciIsIiRyZWdleCIsIiRvcHRpb25zIiwiY2F0ZWdvcnkiLCJicmFuZCIsInNsdWciLCJzb3J0T3B0aW9ucyIsIm51bVNhbGVzIiwicHJpY2UiLCJhdmdSYXRpbmciLCJ1cGRhdGVkQXQiLCJza2lwIiwicHJvZHVjdHMiLCJ0b3RhbFByb2R1Y3RzIiwiUHJvbWlzZSIsImFsbCIsIl9wcm9kdWN0bW9kZWwiLCJkZWZhdWx0IiwiZmluZCIsInNlbGVjdCIsImNvdW50SW5TdG9jayIsImlzUHVibGlzaGVkIiwicHJpY2luZyIsIm1ldHJpY3MiLCJzdGF0dXMiLCJ3YXJlaG91c2VEYXRhIiwibGVhbiIsImNvdW50RG9jdW1lbnRzIiwiZm9ybWF0dGVkUHJvZHVjdHMiLCJtYXAiLCJwcm9kdWN0IiwicmF0aW5nIiwidG90YWwiLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiLCJ0b3RhbFBhZ2VzIiwiTWF0aCIsImNlaWwiLCJmcm9tIiwidG8iLCJsZW5ndGgiLCJlcnJvciIsInZhbGlkYXRlU2VsbGVyIiwic2VsbGVyUmVzcG9uc2UiLCJfc2VsbGVyYWN0aW9ucyIsImdldFNlbGxlckJ5VXNlcklkIiwic3VjY2VzcyIsImRhdGEiLCJfbW9uZ29vc2UiLCJzdGFydFNlc3Npb24iLCJzdGFydFRyYW5zYWN0aW9uIiwiYXV0aFNlc3Npb24xIiwiY3VycmVudFVzZXIiLCJlbWFpbCIsImNyZWF0aW9uVGltZSIsInNlbGxlciIsImJ1c2luZXNzTmFtZSIsInZhbGlkYXRlZERhdGEiLCJfcHJvZHVjdHZhbGlkYXRvciIsIlByb2R1Y3RJbnB1dFNjaGVtYSIsImV4aXN0aW5nUHJvZHVjdCIsImZpbmRPbmUiLCJwcm9jZXNzZWRXYXJlaG91c2VEYXRhIiwid2FyZWhvdXNlIiwidG90YWxRdWFudGl0eSIsImNvbG9ycyIsInJlZHVjZSIsImNvbG9yIiwiY29sb3JUb3RhbCIsInNpemVzIiwic3VtIiwic2l6ZSIsInF1YW50aXR5IiwiaW5TdG9jayIsImxhc3RVcGRhdGVkIiwidXBkYXRlZEJ5IiwidG90YWxTdG9jayIsImNvbWJpbmVkQ29sb3JzIiwiYWxsQ29sb3JzIiwiZm9yRWFjaCIsIndhcmVob3VzZUNvbG9yIiwiZXhpc3RpbmdDb2xvciIsImMiLCJ3YXJlaG91c2VTaXplIiwiZXhpc3RpbmdTaXplIiwicHVzaCIsImJhc2VQcmljZSIsIk51bWJlciIsIm1hcmt1cCIsImNvbW1pc3Npb24iLCJzdWJzY3JpcHRpb24iLCJmZWF0dXJlcyIsIm1hcmt1cEFtb3VudCIsImNvbW1pc3Npb25BbW91bnQiLCJwcm9kdWN0RGF0YSIsInRyaW0iLCJkZXNjcmlwdGlvbiIsImxpc3RQcmljZSIsInNlbGxlcklkIiwiX2lkIiwicGxhbiIsInByb2ZpdCIsImZpbmFsUHJpY2UiLCJkaXNjb3VudCIsInZpZXdzIiwic2FsZXMiLCJyZXZlbnVlIiwicmV0dXJucyIsImNyZWF0ZWRCeSIsImNyZWF0ZWRBdCIsImNyZWF0ZSIsImNyZWF0ZWRQcm9kdWN0IiwiX3dhcmVob3VzZWFjdGlvbnMiLCJ1cGRhdGVXYXJlaG91c2VTdG9jayIsInByb2R1Y3RJZCIsIndhcmVob3VzZUlkIiwic2t1IiwibG9jYXRpb24iLCJtaW5pbXVtU3RvY2siLCJyZW9yZGVyUG9pbnQiLCJ1cGRhdGVTZWxsZXJNZXRyaWNzIiwicHJvZHVjdHNDb3VudCIsImxhc3RQcm9kdWN0Q3JlYXRlZCIsImNvbW1pdFRyYW5zYWN0aW9uIiwiX2NhY2hlIiwicmV2YWxpZGF0ZVBhdGgiLCJjb2xvcnNDb3VudCIsIm1lc3NhZ2UiLCJhYm9ydFRyYW5zYWN0aW9uIiwiaW5jbHVkZXMiLCJlbmRTZXNzaW9uIiwidmFsaWRhdGVkSW5wdXQiLCJQcm9kdWN0VXBkYXRlU2NoZW1hIiwiZmluZEJ5SWQiLCJ0b1N0cmluZyIsImlzU3RvY2tTdGF0dXNDaGFuZ2VkIiwic3RvY2siLCJ1cGRhdGVEYXRhIiwidXBkYXRlZFByb2R1Y3QiLCJmaW5kQnlJZEFuZFVwZGF0ZSIsIm5ldyIsImFjdGlvbiIsIl91dGlscyIsImZvcm1hdEVycm9yIiwiZmluZEJ5SWRBbmREZWxldGUiLCJkZWxldGVkQnkiLCJ0aW1lc3RhbXAiLCJtZXRhZGF0YSIsImRlbGV0ZWRBdCIsImF1dGhTZXNzaW9uIiwiY29kZSIsImFwcHJvdmVkIiwibm90ZXMiLCJhZG1pblJldmlldyIsInJldmlld2VkQXQiLCJyZXZpZXdlZEJ5IiwiY2F0ZWdvcmllcyIsImFnZ3JlZ2F0ZSIsIiRtYXRjaCIsIiRndCIsIiRncm91cCIsInByb2R1Y3RDb3VudCIsIiRzdW0iLCJ0b3RhbFNhbGVzIiwiaW1hZ2UiLCIkZmlyc3QiLCJsYXRlc3RQcm9kdWN0IiwiaW1hZ2VzIiwiJHNvcnQiLCIkbGltaXQiLCIkcHJvamVjdCIsInRhZyIsInRhZ3MiLCIkaW4iLCIkYWRkRmllbGRzIiwiaHJlZiIsIiRjb25jYXQiLCIkYXJyYXlFbGVtQXQiLCJzb3J0QnkiLCJzb3J0T3B0aW9uIiwiJGd0ZSIsIm1pbiIsIm1heCIsInNwbGl0IiwiJGx0ZSIsIm9yZGVyIiwiVHlwZXMiLCJPYmplY3RJZCIsImlzVmFsaWQiLCJleGVjIiwiZm9ybWF0dGVkUHJvZHVjdCIsInVuZGVmaW5lZCIsImluZm8iLCJhY2Nlc3NlZEJ5IiwiYWNjZXNzZWQiLCJieSIsInJlcXVlc3RlZElkIiwiJG5lIiwiJHVud2luZCIsInVuaXF1ZVRhZ3MiLCIkYWRkVG9TZXQiLCJhIiwibG9jYWxlQ29tcGFyZSIsIndvcmQiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwiam9pbiIsInNraXBBbW91bnQiLCJjb25kaXRpb25zIiwiZGlzdGluY3QiXSwic291cmNlcyI6WyIvaG9tZS9oYWdlci9uZXcvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyICgzKS9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIvbGliL2FwaS9pbnRlZ3JhdGlvbnMvYW1hem9uL3NlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzZXJ2ZXInXG5cbmltcG9ydCB7IGNvbm5lY3RUb0RhdGFiYXNlIH0gZnJvbSAnQC9saWIvZGInXG5pbXBvcnQgUHJvZHVjdCwgeyBJUHJvZHVjdCB9IGZyb20gJ0AvbGliL2RiL21vZGVscy9wcm9kdWN0Lm1vZGVsJ1xuaW1wb3J0IHsgcmV2YWxpZGF0ZVBhdGggfSBmcm9tICduZXh0L2NhY2hlJ1xuaW1wb3J0IHsgZm9ybWF0RXJyb3IgfSBmcm9tICcuLi91dGlscydcbi8vIGltcG9ydCB7IFByb2R1Y3RVcGRhdGVTY2hlbWEgfSBmcm9tICcuLi92YWxpZGF0b3InXG5pbXBvcnQgeyBJUHJvZHVjdElucHV0IH0gZnJvbSAnQC90eXBlcydcbmltcG9ydCB7IGF1dGggfSBmcm9tICdAL2F1dGgnXG5pbXBvcnQgeyBnZXRTZXR0aW5nIH0gZnJvbSAnLi9zZXR0aW5nLmFjdGlvbnMnXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnXG5pbXBvcnQgeyB1cGRhdGVTZWxsZXJNZXRyaWNzLGdldFNlbGxlckJ5VXNlcklkIH0gZnJvbSAnLi9zZWxsZXIuYWN0aW9ucydcbmltcG9ydCB7IHVwZGF0ZVdhcmVob3VzZVN0b2NrIH0gZnJvbSAnLi93YXJlaG91c2UuYWN0aW9ucydcbmltcG9ydCB7IHogfSBmcm9tICd6b2QnXG4vLyBpbXBvcnQgeyBQcm9kdWN0SW5wdXRTY2hlbWEgfSBmcm9tICcuLi92YWxpZGF0b3IvcHJvZHVjdC52YWxpZGF0b3InXG4vLyBpbXBvcnQgeyBTaGlwQm9iU2VydmljZSB9IGZyb20gJy4uL2FwaS9pbnRlZ3JhdGlvbnMvc2hpcGJvYi9zZXJ2aWNlJ1xuLy8gaW1wb3J0IHsgU2hpcEJvYlNlaHJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvd2FyZWhvdXNlL3NoaXBib2InXG5cblxuXG5pbXBvcnQgeyBQcm9kdWN0SW5wdXRTY2hlbWEsIFByb2R1Y3RVcGRhdGVTY2hlbWEgfSBmcm9tICcuLi92YWxpZGF0b3IvcHJvZHVjdC52YWxpZGF0b3InXG5pbXBvcnQgeyBXYXJlaG91c2VQcm92aWRlciB9IGZyb20gJy4uL3NlcnZpY2VzL3dhcmVob3VzZS90eXBlcydcbmltcG9ydCB7IFNoaXBCb2JTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvd2FyZWhvdXNlL3NoaXBib2InXG5pbXBvcnQgeyBGb3VyUFhTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvd2FyZWhvdXNlL2ZvdXJweCdcbi8vIGltcG9ydCB7IEFtYXpvbkZ1bGZpbGxtZW50U2VydmljZSB9IGZyb20gJy4uL2FwaS9pbnRlZ3JhdGlvbnMvYW1hem9uL3NlcnZpY2UnXG4vLyBpbXBvcnQgeyBBbGlFeHByZXNzRnVsZmlsbG1lbnRTZXJ2aWNlIH0gZnJvbSAnLi4vYXBpL2ludGVncmF0aW9ucy9hbGlleHByZXNzL3NlcnZpY2UnXG4vLyBpbXBvcnQgeyBBbWF6b25GdWxmaWxsbWVudFNlcnZpY2UgfSBmcm9tICcuLi9hcGkvaW50ZWdyYXRpb25zL2FtYXpvbi9zZXJ2aWNlJ1xuXG4vLyAvLyBXYXJlaG91c2UgcHJvdmlkZXJzIGNvbmZpZ3VyYXRpb25cbi8vIGNvbnN0IHdhcmVob3VzZVByb3ZpZGVyczogeyBba2V5OiBzdHJpbmddOiBXYXJlaG91c2VQcm92aWRlciB9ID0ge1xuLy8gICBTaGlwQm9iOiBuZXcgU2hpcEJvYlNlcnZpY2Uoe1xuLy8gICAgIGFwaUtleTogcHJvY2Vzcy5lbnYuU0hJUEJPQl9BUElfS0VZISxcbi8vICAgICBhcGlVcmw6IHByb2Nlc3MuZW52LlNISVBCT0JfQVBJX1VSTCEsXG4vLyAgIH0pLFxuLy8gICAnNFBYJzogbmV3IEZvdXJQWFNlcnZpY2Uoe1xuLy8gICAgIGFwaUtleTogcHJvY2Vzcy5lbnYuRk9VUlBYX0FQSV9LRVkhLFxuLy8gICAgIGFwaVVybDogcHJvY2Vzcy5lbnYuRk9VUlBYX0FQSV9VUkwhLFxuLy8gICB9KSxcbi8vIH1cblxuXG5cblxuXG5jb25zdCB3YXJlaG91c2VQcm92aWRlcnMgPSB7XG4gIFNoaXBCb2I6IG5ldyBTaGlwQm9iU2VydmljZSh7XG4gICAgYXBpS2V5OiBwcm9jZXNzLmVudi5TSElQQk9CX0FQSV9LRVkhLFxuICAgIGFwaVVybDogcHJvY2Vzcy5lbnYuU0hJUEJPQl9BUElfVVJMISxcbiAgfSksXG4gICc0UFgnOiBuZXcgRm91clBYU2VydmljZSh7XG4gICAgYXBpS2V5OiBwcm9jZXNzLmVudi5GT1VSUFhfQVBJX0tFWSEsXG4gICAgYXBpVXJsOiBwcm9jZXNzLmVudi5GT1VSUFhfQVBJX1VSTCEsXG4gIH0pLFxuXG59XG5cblxuLy8gVHlwZXNcbnR5cGUgUHJvZHVjdFNvcnRPcHRpb24gPVxuICB8ICdsYXRlc3QnXG4gIHwgJ2Jlc3Qtc2VsbGluZydcbiAgfCAncHJpY2UtbG93LXRvLWhpZ2gnXG4gIHwgJ3ByaWNlLWhpZ2gtdG8tbG93J1xuICB8ICdhdmctY3VzdG9tZXItcmV2aWV3J1xuXG5pbnRlcmZhY2UgUHJvZHVjdFF1ZXJ5RmlsdGVycyB7XG4gIHNlYXJjaD86IHN0cmluZ1xuICBjYXRlZ29yeT86IHN0cmluZ1xuICB0YWc/OiBzdHJpbmdcbiAgbWluUHJpY2U/OiBudW1iZXJcbiAgbWF4UHJpY2U/OiBudW1iZXJcbiAgcmF0aW5nPzogbnVtYmVyXG4gIHN0YXR1cz86ICdhY3RpdmUnIHwgJ2RyYWZ0JyB8ICdwZW5kaW5nJyB8ICdyZWplY3RlZCdcbiAgc3RvY2s/OiBudW1iZXJcbn1cblxuaW50ZXJmYWNlIFByb2R1Y3RMaXN0UmVzcG9uc2Uge1xuICBwcm9kdWN0czogSVByb2R1Y3RbXVxuICB0b3RhbFBhZ2VzOiBudW1iZXJcbiAgdG90YWxQcm9kdWN0czogbnVtYmVyXG4gIGZyb206IG51bWJlclxuICB0bzogbnVtYmVyXG59XG5cbi8vIEhlbHBlciBGdW5jdGlvbnNcbmFzeW5jIGZ1bmN0aW9uIGdldEN1cnJlbnRVc2VySW5mbygpIHtcbiAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGF1dGgoKVxuICBpZiAoIXNlc3Npb24/LnVzZXI/LmlkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmF1dGhvcml6ZWQnKVxuICB9XG4gIHJldHVybiB7XG4gICAgdXNlcklkOiBzZXNzaW9uLnVzZXIuaWQsXG4gICAgdXNlck5hbWU6IHNlc3Npb24udXNlci5uYW1lIHx8IHNlc3Npb24udXNlci5pZCxcbiAgICB1c2VyUm9sZTogc2Vzc2lvbi51c2VyLnJvbGUgfHwgJ1VTRVInXG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gbG9nT3BlcmF0aW9uKG9wZXJhdGlvbjogc3RyaW5nLCBkZXRhaWxzOiBhbnkpIHtcbiAgY29uc3QgeyB1c2VyTmFtZSB9ID0gYXdhaXQgZ2V0Q3VycmVudFVzZXJJbmZvKClcbiAgY29uc29sZS5sb2coYFske25ldyBEYXRlKCkudG9JU09TdHJpbmcoKX1dIPCfk50gJHtvcGVyYXRpb259OmAsIHtcbiAgICB1c2VyOiB1c2VyTmFtZSxcbiAgICAuLi5kZXRhaWxzXG4gIH0pXG59XG4vLyBpbXBvcnQgeyB1cGRhdGVXYXJlaG91c2VTdG9jaywgdXBkYXRlU2VsbGVyTWV0cmljcyB9IGZyb20gJ0AvbGliL29wZXJhdGlvbnMnXG5cbi8vIGFzeW5jIGZ1bmN0aW9uIHZhbGlkYXRlU2VsbGVyKHVzZXJJZDogc3RyaW5nKSB7XG4vLyAgIGNvbnN0IHNlbGxlclJlc3BvbnNlID0gYXdhaXQgZ2V0U2VsbGVyQnlVc2VySWQodXNlcklkKVxuLy8gICBpZiAoIXNlbGxlclJlc3BvbnNlLnN1Y2Nlc3MgfHwgIXNlbGxlclJlc3BvbnNlLmRhdGEpIHtcbi8vICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NlbGxlciBhY2NvdW50IHJlcXVpcmVkJylcbi8vICAgfVxuLy8gICByZXR1cm4gc2VsbGVyUmVzcG9uc2UuZGF0YVxuLy8gfVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBGaXJzdCB2ZXJzaW9uIG9mIGNyZWF0ZVByb2R1Y3QgKGV4YW1wbGUgc25pcHBldCBmaXhpbmcgc3RhdGljIHZhbHVlcylcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIGV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVQcm9kdWN0X3YxKGRhdGE6IElQcm9kdWN0SW5wdXQpIHtcbi8vICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IG1vbmdvb3NlLnN0YXJ0U2Vzc2lvbigpXG4vLyAgIHNlc3Npb24uc3RhcnRUcmFuc2FjdGlvbigpXG5cbi8vICAgdHJ5IHtcbi8vICAgICAvLyBVc2UgY3VycmVudCB0aW1lIGFuZCBjdXJyZW50IHVzZXIgaW5mbyBkeW5hbWljYWxseVxuLy8gICAgIGNvbnN0IGNyZWF0aW9uVGltZSA9IG5ldyBEYXRlKClcbi8vICAgICBjb25zdCB7IHVzZXJJZCwgdXNlck5hbWUgfSA9IGF3YWl0IGdldEN1cnJlbnRVc2VySW5mbygpXG5cbi8vICAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG5cbi8vICAgICBjb25zdCBzZWxsZXIgPSBhd2FpdCB2YWxpZGF0ZVNlbGxlcih1c2VySWQpXG4gICAgXG4vLyAgICAgY29uc29sZS5sb2coYFske2NyZWF0aW9uVGltZS50b0lTT1N0cmluZygpfV0gQ3JlYXRpbmcgcHJvZHVjdDpgLCB7XG4vLyAgICAgICBuYW1lOiBkYXRhLm5hbWUsXG4vLyAgICAgICBzZWxsZXI6IHNlbGxlci5idXNpbmVzc05hbWVcbi8vICAgICB9KVxuXG4vLyAgICAgLy8gVmFsaWRhdGUgYW5kIHByb2Nlc3MgY29sb3JzIGFuZCBzaXplc1xuLy8gICAgIGNvbnN0IHByb2Nlc3NlZFdhcmVob3VzZURhdGEgPSBkYXRhLndhcmVob3VzZURhdGEubWFwKHdhcmVob3VzZSA9PiB7XG4vLyAgICAgICBjb25zdCB0b3RhbFF1YW50aXR5ID0gd2FyZWhvdXNlLmNvbG9ycy5yZWR1Y2UoKHRvdGFsLCBjb2xvcikgPT4ge1xuLy8gICAgICAgICBjb25zdCBjb2xvclRvdGFsID0gY29sb3Iuc2l6ZXMucmVkdWNlKChzdW0sIHNpemUpID0+IHN1bSArIHNpemUucXVhbnRpdHksIDApXG4vLyAgICAgICAgIGNvbG9yLnF1YW50aXR5ID0gY29sb3JUb3RhbCAvLyBVcGRhdGUgY29sb3IgdG90YWxcbi8vICAgICAgICAgY29sb3IuaW5TdG9jayA9IGNvbG9yVG90YWwgPiAwIC8vIFVwZGF0ZSBjb2xvciBzdG9jayBzdGF0dXNcbi8vICAgICAgICAgcmV0dXJuIHRvdGFsICsgY29sb3JUb3RhbFxuLy8gICAgICAgfSwgMClcblxuLy8gICAgICAgcmV0dXJuIHtcbi8vICAgICAgICAgLi4ud2FyZWhvdXNlLFxuLy8gICAgICAgICBxdWFudGl0eTogdG90YWxRdWFudGl0eSAvLyBVcGRhdGUgd2FyZWhvdXNlIHRvdGFsXG4vLyAgICAgICB9XG4vLyAgICAgfSlcblxuLy8gICAgIC8vIENhbGN1bGF0ZSB0b3RhbCBzdG9jayBhY3Jvc3MgYWxsIHdhcmVob3VzZXNcbi8vICAgICBjb25zdCB0b3RhbFN0b2NrID0gcHJvY2Vzc2VkV2FyZWhvdXNlRGF0YS5yZWR1Y2UoXG4vLyAgICAgICAoc3VtLCB3YXJlaG91c2UpID0+IHN1bSArIHdhcmVob3VzZS5xdWFudGl0eSxcbi8vICAgICAgIDBcbi8vICAgICApXG5cbi8vICAgICAvLyBQcmVwYXJlIHByb2R1Y3QgZGF0YVxuLy8gICAgIGNvbnN0IHByb2R1Y3REYXRhID0ge1xuLy8gICAgICAgLi4uZGF0YSxcbi8vICAgICAgIG5hbWU6IGRhdGEubmFtZS50cmltKCksXG4vLyAgICAgICBzbHVnOiBkYXRhLnNsdWcudHJpbSgpLFxuLy8gICAgICAgY2F0ZWdvcnk6IGRhdGEuY2F0ZWdvcnkudHJpbSgpLFxuLy8gICAgICAgYnJhbmQ6IGRhdGEuYnJhbmQudHJpbSgpLFxuLy8gICAgICAgZGVzY3JpcHRpb246IGRhdGEuZGVzY3JpcHRpb24udHJpbSgpLFxuLy8gICAgICAgcHJpY2U6IE51bWJlcihkYXRhLnByaWNlKSxcbi8vICAgICAgIGxpc3RQcmljZTogTnVtYmVyKGRhdGEubGlzdFByaWNlKSB8fCBOdW1iZXIoZGF0YS5wcmljZSksXG4vLyAgICAgICBjb3VudEluU3RvY2s6IHRvdGFsU3RvY2ssXG4vLyAgICAgICB3YXJlaG91c2VEYXRhOiBwcm9jZXNzZWRXYXJlaG91c2VEYXRhLFxuLy8gICAgICAgY29sb3JzOiBwcm9jZXNzZWRXYXJlaG91c2VEYXRhLnJlZHVjZSgoYWxsQ29sb3JzOiBhbnlbXSwgd2FyZWhvdXNlKSA9PiB7XG4vLyAgICAgICAgIHdhcmVob3VzZS5jb2xvcnMuZm9yRWFjaCh3YXJlaG91c2VDb2xvciA9PiB7XG4vLyAgICAgICAgICAgY29uc3QgZXhpc3RpbmdDb2xvciA9IGFsbENvbG9ycy5maW5kKGMgPT4gYy5uYW1lID09PSB3YXJlaG91c2VDb2xvci5uYW1lKVxuLy8gICAgICAgICAgIGlmIChleGlzdGluZ0NvbG9yKSB7XG4vLyAgICAgICAgICAgICAvLyBDb21iaW5lIHF1YW50aXRpZXMgZm9yIHNhbWUgY29sb3IgYWNyb3NzIHdhcmVob3VzZXNcbi8vICAgICAgICAgICAgIGV4aXN0aW5nQ29sb3IucXVhbnRpdHkgKz0gd2FyZWhvdXNlQ29sb3IucXVhbnRpdHlcbi8vICAgICAgICAgICAgIGV4aXN0aW5nQ29sb3IuaW5TdG9jayA9IGV4aXN0aW5nQ29sb3IucXVhbnRpdHkgPiAwXG4vLyAgICAgICAgICAgICAvLyBDb21iaW5lIHNpemVzXG4vLyAgICAgICAgICAgICB3YXJlaG91c2VDb2xvci5zaXplcy5mb3JFYWNoKHdhcmVob3VzZVNpemUgPT4ge1xuLy8gICAgICAgICAgICAgICBjb25zdCBleGlzdGluZ1NpemUgPSBleGlzdGluZ0NvbG9yLnNpemVzLmZpbmQocyA9PiBzLm5hbWUgPT09IHdhcmVob3VzZVNpemUubmFtZSlcbi8vICAgICAgICAgICAgICAgaWYgKGV4aXN0aW5nU2l6ZSkge1xuLy8gICAgICAgICAgICAgICAgIGV4aXN0aW5nU2l6ZS5xdWFudGl0eSArPSB3YXJlaG91c2VTaXplLnF1YW50aXR5XG4vLyAgICAgICAgICAgICAgICAgZXhpc3RpbmdTaXplLmluU3RvY2sgPSBleGlzdGluZ1NpemUucXVhbnRpdHkgPiAwXG4vLyAgICAgICAgICAgICAgIH0gZWxzZSB7XG4vLyAgICAgICAgICAgICAgICAgZXhpc3RpbmdDb2xvci5zaXplcy5wdXNoKHsgLi4ud2FyZWhvdXNlU2l6ZSB9KVxuLy8gICAgICAgICAgICAgICB9XG4vLyAgICAgICAgICAgICB9KVxuLy8gICAgICAgICAgIH0gZWxzZSB7XG4vLyAgICAgICAgICAgICAvLyBBZGQgbmV3IGNvbG9yIHdpdGggaXRzIHNpemVzXG4vLyAgICAgICAgICAgICBhbGxDb2xvcnMucHVzaCh7XG4vLyAgICAgICAgICAgICAgIC4uLndhcmVob3VzZUNvbG9yLFxuLy8gICAgICAgICAgICAgICBzaXplczogWy4uLndhcmVob3VzZUNvbG9yLnNpemVzXVxuLy8gICAgICAgICAgICAgfSlcbi8vICAgICAgICAgICB9XG4vLyAgICAgICAgIH0pXG4vLyAgICAgICAgIHJldHVybiBhbGxDb2xvcnNcbi8vICAgICAgIH0sIFtdKSxcbi8vICAgICAgIHNpemVzOiBbJ1MnLCAnTScsICdMJywgJ1hMJywgJ1hYTCddLFxuLy8gICAgICAgaXNQdWJsaXNoZWQ6IGRhdGEuaXNQdWJsaXNoZWQgfHwgZmFsc2UsXG4vLyAgICAgICBzZWxsZXJJZDogc2VsbGVyLl9pZCxcbi8vICAgICAgIHNlbGxlcjoge1xuLy8gICAgICAgICBuYW1lOiBzZWxsZXIuYnVzaW5lc3NOYW1lLFxuLy8gICAgICAgICBlbWFpbDogc2VsbGVyLmVtYWlsLFxuLy8gICAgICAgICBzdWJzY3JpcHRpb246IHNlbGxlci5zdWJzY3JpcHRpb24ucGxhblxuLy8gICAgICAgfSxcbi8vICAgICAgIHN0YXR1czogZGF0YS5pc1B1Ymxpc2hlZCA/ICdwZW5kaW5nJyA6ICdkcmFmdCcsXG4vLyAgICAgICBjcmVhdGVkQXQ6IGNyZWF0aW9uVGltZSxcbi8vICAgICAgIHVwZGF0ZWRBdDogY3JlYXRpb25UaW1lLFxuLy8gICAgICAgY3JlYXRlZEJ5OiB1c2VyTmFtZSxcbi8vICAgICAgIHVwZGF0ZWRCeTogdXNlck5hbWVcbi8vICAgICB9XG5cbi8vICAgICAvLyBDcmVhdGUgcHJvZHVjdFxuLy8gICAgIGNvbnN0IHByb2R1Y3QgPSBhd2FpdCBQcm9kdWN0LmNyZWF0ZShbcHJvZHVjdERhdGFdLCB7IHNlc3Npb24gfSlcbi8vICAgICBjb25zdCBjcmVhdGVkUHJvZHVjdCA9IHByb2R1Y3RbMF1cblxuLy8gICAgIC8vIFVwZGF0ZSB3YXJlaG91c2Ugc3RvY2tcbi8vICAgICBhd2FpdCBQcm9taXNlLmFsbChwcm9jZXNzZWRXYXJlaG91c2VEYXRhLm1hcCh3YXJlaG91c2UgPT5cbi8vICAgICAgIHVwZGF0ZVdhcmVob3VzZVN0b2NrKHtcbi8vICAgICAgICAgcHJvZHVjdElkOiBjcmVhdGVkUHJvZHVjdC5faWQsXG4vLyAgICAgICAgIHdhcmVob3VzZUlkOiB3YXJlaG91c2Uud2FyZWhvdXNlSWQsXG4vLyAgICAgICAgIHF1YW50aXR5OiB3YXJlaG91c2UucXVhbnRpdHksXG4vLyAgICAgICAgIHNrdTogd2FyZWhvdXNlLnNrdSxcbi8vICAgICAgICAgbG9jYXRpb246IHdhcmVob3VzZS5sb2NhdGlvbixcbi8vICAgICAgICAgbWluaW11bVN0b2NrOiB3YXJlaG91c2UubWluaW11bVN0b2NrLFxuLy8gICAgICAgICByZW9yZGVyUG9pbnQ6IHdhcmVob3VzZS5yZW9yZGVyUG9pbnQsXG4vLyAgICAgICAgIGNvbG9yczogd2FyZWhvdXNlLmNvbG9ycyxcbi8vICAgICAgICAgdXBkYXRlZEJ5OiB1c2VyTmFtZVxuLy8gICAgICAgfSlcbi8vICAgICApKVxuXG4vLyAgICAgLy8gVXBkYXRlIHNlbGxlciBtZXRyaWNzXG4vLyAgICAgYXdhaXQgdXBkYXRlU2VsbGVyTWV0cmljcyhzZWxsZXIuX2lkLCB7XG4vLyAgICAgICBwcm9kdWN0c0NvdW50OiAnKzEnLFxuLy8gICAgICAgbGFzdFByb2R1Y3RDcmVhdGVkOiBjcmVhdGlvblRpbWVcbi8vICAgICB9KVxuXG4vLyAgICAgYXdhaXQgc2Vzc2lvbi5jb21taXRUcmFuc2FjdGlvbigpXG5cbi8vICAgICAvLyBSZXZhbGlkYXRlIHBhdGhzXG4vLyAgICAgcmV2YWxpZGF0ZVBhdGgoJy9zZWxsZXIvZGFzaGJvYXJkL3Byb2R1Y3RzJylcbi8vICAgICByZXZhbGlkYXRlUGF0aCgnL2FkbWluL3Byb2R1Y3RzJylcblxuLy8gICAgIGNvbnNvbGUubG9nKGBbJHtjcmVhdGlvblRpbWUudG9JU09TdHJpbmcoKX1dIFByb2R1Y3QgY3JlYXRlZCBzdWNjZXNzZnVsbHk6YCwge1xuLy8gICAgICAgcHJvZHVjdElkOiBjcmVhdGVkUHJvZHVjdC5faWQsXG4vLyAgICAgICBuYW1lOiBjcmVhdGVkUHJvZHVjdC5uYW1lLFxuLy8gICAgICAgdG90YWxTdG9jayxcbi8vICAgICAgIGNvbG9yc0NvdW50OiBjcmVhdGVkUHJvZHVjdC5jb2xvcnMubGVuZ3RoXG4vLyAgICAgfSlcblxuLy8gICAgIHJldHVybiB7XG4vLyAgICAgICBzdWNjZXNzOiB0cnVlLFxuLy8gICAgICAgbWVzc2FnZTogJ1Byb2R1Y3QgY3JlYXRlZCBzdWNjZXNzZnVsbHknLFxuLy8gICAgICAgZGF0YTogY3JlYXRlZFByb2R1Y3Rcbi8vICAgICB9XG4vLyAgIH0gY2F0Y2ggKGVycm9yKSB7XG4vLyAgICAgYXdhaXQgc2Vzc2lvbi5hYm9ydFRyYW5zYWN0aW9uKClcbi8vICAgICBjb25zb2xlLmVycm9yKCdQcm9kdWN0IGNyZWF0aW9uIGVycm9yOicsIGVycm9yKVxuLy8gICAgIC8vIEFkZGl0aW9uYWwgZXJyb3IgaGFuZGxpbmcgY2FuIGJlIGFkZGVkIGhlcmVcbi8vICAgICByZXR1cm4geyBcbi8vICAgICAgIHN1Y2Nlc3M6IGZhbHNlLCBcbi8vICAgICAgIG1lc3NhZ2U6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ0ZhaWxlZCB0byBjcmVhdGUgcHJvZHVjdCcgXG4vLyAgICAgfVxuLy8gICB9IGZpbmFsbHkge1xuLy8gICAgIHNlc3Npb24uZW5kU2Vzc2lvbigpXG4vLyAgIH1cbi8vIH1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gU2Vjb25kIHZlcnNpb24gd2l0aCBhbGwgZnVuY3Rpb25zIGJlbG93XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEdFVCBBTEwgUFJPRFVDVFMgRk9SIEFETUlOXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsUHJvZHVjdHNGb3JBZG1pbih7XG4gIHF1ZXJ5ID0gJycsXG4gIHBhZ2UgPSAxLFxuICBzb3J0ID0gJ2xhdGVzdCcsXG4gIGxpbWl0LFxufToge1xuICBxdWVyeT86IHN0cmluZ1xuICBwYWdlPzogbnVtYmVyXG4gIHNvcnQ/OiBzdHJpbmdcbiAgbGltaXQ/OiBudW1iZXJcbn0pOiBQcm9taXNlPFByb2R1Y3RMaXN0UmVzcG9uc2U+IHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG5cbiAgICBjb25zdCB7XG4gICAgICBjb21tb246IHsgcGFnZVNpemUgfSxcbiAgICB9ID0gYXdhaXQgZ2V0U2V0dGluZygpXG4gICAgbGltaXQgPSBsaW1pdCB8fCBwYWdlU2l6ZVxuXG4gICAgY29uc3QgcXVlcnlGaWx0ZXI6IGFueSA9IHt9XG4gICAgaWYgKHF1ZXJ5ICYmIHF1ZXJ5ICE9PSAnYWxsJykge1xuICAgICAgcXVlcnlGaWx0ZXIuJG9yID0gW1xuICAgICAgICB7IG5hbWU6IHsgJHJlZ2V4OiBxdWVyeSwgJG9wdGlvbnM6ICdpJyB9IH0sXG4gICAgICAgIHsgY2F0ZWdvcnk6IHsgJHJlZ2V4OiBxdWVyeSwgJG9wdGlvbnM6ICdpJyB9IH0sXG4gICAgICAgIHsgYnJhbmQ6IHsgJHJlZ2V4OiBxdWVyeSwgJG9wdGlvbnM6ICdpJyB9IH0sXG4gICAgICAgIHsgc2x1ZzogeyAkcmVnZXg6IHF1ZXJ5LCAkb3B0aW9uczogJ2knIH0gfSxcbiAgICAgIF1cbiAgICB9XG5cbiAgICBjb25zdCBzb3J0T3B0aW9uczogUmVjb3JkPHN0cmluZywgMSB8IC0xPiA9XG4gICAgICBzb3J0ID09PSAnYmVzdC1zZWxsaW5nJ1xuICAgICAgICA/IHsgbnVtU2FsZXM6IC0xIH1cbiAgICAgICAgOiBzb3J0ID09PSAncHJpY2UtbG93LXRvLWhpZ2gnXG4gICAgICAgID8geyBwcmljZTogMSB9XG4gICAgICAgIDogc29ydCA9PT0gJ3ByaWNlLWhpZ2gtdG8tbG93J1xuICAgICAgICA/IHsgcHJpY2U6IC0xIH1cbiAgICAgICAgOiBzb3J0ID09PSAnYXZnLWN1c3RvbWVyLXJldmlldydcbiAgICAgICAgPyB7IGF2Z1JhdGluZzogLTEgfVxuICAgICAgICA6IHsgdXBkYXRlZEF0OiAtMSB9IC8vIERlZmF1bHQ6IGxhdGVzdFxuXG4gICAgY29uc3Qgc2tpcCA9IChwYWdlIC0gMSkgKiBsaW1pdFxuXG4gICAgY29uc3QgW3Byb2R1Y3RzLCB0b3RhbFByb2R1Y3RzXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgIFByb2R1Y3QuZmluZChxdWVyeUZpbHRlcilcbiAgICAgICAgLnNvcnQoc29ydE9wdGlvbnMpXG4gICAgICAgIC5za2lwKHNraXApXG4gICAgICAgIC5saW1pdChsaW1pdClcbiAgICAgICAgLnNlbGVjdCh7XG4gICAgICAgICAgbmFtZTogMSxcbiAgICAgICAgICBzbHVnOiAxLFxuICAgICAgICAgIHByaWNlOiAxLFxuICAgICAgICAgIGNhdGVnb3J5OiAxLFxuICAgICAgICAgIGNvdW50SW5TdG9jazogMSxcbiAgICAgICAgICBpc1B1Ymxpc2hlZDogMSxcbiAgICAgICAgICBhdmdSYXRpbmc6IDEsXG4gICAgICAgICAgdXBkYXRlZEF0OiAxLFxuICAgICAgICAgIHByaWNpbmc6IDEsXG4gICAgICAgICAgbWV0cmljczogMSxcbiAgICAgICAgICBzdGF0dXM6IDEsXG4gICAgICAgICAgd2FyZWhvdXNlRGF0YTogMVxuICAgICAgICB9KVxuICAgICAgICAubGVhbigpLFxuICAgICAgUHJvZHVjdC5jb3VudERvY3VtZW50cyhxdWVyeUZpbHRlciksXG4gICAgXSlcblxuICAgIGNvbnN0IGZvcm1hdHRlZFByb2R1Y3RzID0gcHJvZHVjdHMubWFwKHByb2R1Y3QgPT4gKHtcbiAgICAgIC4uLnByb2R1Y3QsXG4gICAgICBtZXRyaWNzOiB7XG4gICAgICAgIC4uLnByb2R1Y3QubWV0cmljcyxcbiAgICAgICAgcmF0aW5nOiBwcm9kdWN0Lm1ldHJpY3M/LnJhdGluZyB8fCAwLFxuICAgICAgfSxcbiAgICB9KSlcblxuICAgIGF3YWl0IGxvZ09wZXJhdGlvbignQWRtaW4gUHJvZHVjdHMgTGlzdCBSZXRyaWV2ZWQnLCB7XG4gICAgICB0b3RhbDogdG90YWxQcm9kdWN0cyxcbiAgICAgIHBhZ2UsXG4gICAgICBsaW1pdCxcbiAgICAgIHNvcnQsXG4gICAgfSlcblxuICAgIHJldHVybiB7XG4gICAgICBwcm9kdWN0czogSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShmb3JtYXR0ZWRQcm9kdWN0cykpLFxuICAgICAgdG90YWxQYWdlczogTWF0aC5jZWlsKHRvdGFsUHJvZHVjdHMgLyBsaW1pdCksXG4gICAgICB0b3RhbFByb2R1Y3RzLFxuICAgICAgZnJvbTogc2tpcCArIDEsXG4gICAgICB0bzogc2tpcCArIHByb2R1Y3RzLmxlbmd0aCxcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gZ2V0QWxsUHJvZHVjdHNGb3JBZG1pbjonLCBlcnJvcilcbiAgICByZXR1cm4ge1xuICAgICAgcHJvZHVjdHM6IFtdLFxuICAgICAgdG90YWxQYWdlczogMCxcbiAgICAgIHRvdGFsUHJvZHVjdHM6IDAsXG4gICAgICBmcm9tOiAwLFxuICAgICAgdG86IDAsXG4gICAgfVxuICB9XG59XG5cbi8vIENSRUFURSBQUk9EVUNUIChTZWNvbmQgdmVyc2lvbilcbi8vIENSRUFURSBQUk9EVUNUXG5hc3luYyBmdW5jdGlvbiB2YWxpZGF0ZVNlbGxlcih1c2VySWQ6IHN0cmluZykge1xuICBjb25zdCBzZWxsZXJSZXNwb25zZSA9IGF3YWl0IGdldFNlbGxlckJ5VXNlcklkKHVzZXJJZClcbiAgaWYgKCFzZWxsZXJSZXNwb25zZS5zdWNjZXNzIHx8ICFzZWxsZXJSZXNwb25zZS5kYXRhKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdTZWxsZXIgYWNjb3VudCByZXF1aXJlZCcpXG4gIH1cbiAgcmV0dXJuIHNlbGxlclJlc3BvbnNlLmRhdGFcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVByb2R1Y3QoZGF0YTogSVByb2R1Y3RJbnB1dCkge1xuICBjb25zdCBzZXNzaW9uID0gYXdhaXQgbW9uZ29vc2Uuc3RhcnRTZXNzaW9uKClcbiAgc2Vzc2lvbi5zdGFydFRyYW5zYWN0aW9uKClcblxuICB0cnkge1xuICAgIC8vIEdldCBjdXJyZW50IHVzZXIgaW5mbyBhbmQgdmFsaWRhdGUgYXV0aG9yaXphdGlvblxuICAgIGNvbnN0IGF1dGhTZXNzaW9uID0gYXdhaXQgYXV0aCgpXG4gICAgaWYgKCFhdXRoU2Vzc2lvbj8udXNlcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmF1dGhvcml6ZWQnKVxuICAgIH1cblxuICAgIGNvbnN0IGN1cnJlbnRVc2VyID0ge1xuICAgICAgaWQ6IGF1dGhTZXNzaW9uLnVzZXIuaWQsXG4gICAgICBuYW1lOiBhdXRoU2Vzc2lvbi51c2VyLm5hbWUgfHwgYXV0aFNlc3Npb24udXNlci5lbWFpbCxcbiAgICAgIHJvbGU6IGF1dGhTZXNzaW9uLnVzZXIucm9sZVxuICAgIH1cblxuICAgIGlmIChjdXJyZW50VXNlci5yb2xlICE9PSAnc2VsbGVyJyAmJiBjdXJyZW50VXNlci5yb2xlICE9PSAnQWRtaW4nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ09ubHkgc2VsbGVycyBhbmQgYWRtaW5zIGNhbiBjcmVhdGUgcHJvZHVjdHMnKVxuICAgIH1cblxuICAgIGNvbnN0IGNyZWF0aW9uVGltZSA9IG5ldyBEYXRlKClcbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG5cbiAgICAvLyBWYWxpZGF0ZSBzZWxsZXIgYW5kIGdldCBzZWxsZXIgaW5mb1xuICAgIGNvbnN0IHNlbGxlciA9IGF3YWl0IHZhbGlkYXRlU2VsbGVyKGN1cnJlbnRVc2VyLmlkKVxuICAgIFxuICAgIGNvbnNvbGUubG9nKGBbJHtjcmVhdGlvblRpbWUudG9JU09TdHJpbmcoKX1dIENyZWF0aW5nIHByb2R1Y3Q6YCwge1xuICAgICAgbmFtZTogZGF0YS5uYW1lLFxuICAgICAgc2VsbGVyOiBzZWxsZXIuYnVzaW5lc3NOYW1lXG4gICAgfSlcblxuICAgIC8vIFZhbGlkYXRlIGlucHV0IGRhdGFcbiAgICBjb25zdCB2YWxpZGF0ZWREYXRhID0gUHJvZHVjdElucHV0U2NoZW1hLnBhcnNlKGRhdGEpXG5cbiAgICAvLyBDaGVjayBmb3IgZHVwbGljYXRlIHNsdWdcbiAgICBjb25zdCBleGlzdGluZ1Byb2R1Y3QgPSBhd2FpdCBQcm9kdWN0LmZpbmRPbmUoeyBzbHVnOiB2YWxpZGF0ZWREYXRhLnNsdWcgfSkuc2Vzc2lvbihzZXNzaW9uKVxuICAgIGlmIChleGlzdGluZ1Byb2R1Y3QpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVGhpcyBzbHVnIGFscmVhZHkgZXhpc3RzLiBQbGVhc2UgY2hvb3NlIGEgZGlmZmVyZW50IG9uZS4nKVxuICAgIH1cblxuICAgIC8vIFByb2Nlc3Mgd2FyZWhvdXNlIGRhdGEgYW5kIGNhbGN1bGF0ZSB0b3RhbCBzdG9ja1xuICAgIGNvbnN0IHByb2Nlc3NlZFdhcmVob3VzZURhdGEgPSB2YWxpZGF0ZWREYXRhLndhcmVob3VzZURhdGE/Lm1hcCh3YXJlaG91c2UgPT4ge1xuICAgICAgY29uc3QgdG90YWxRdWFudGl0eSA9IHdhcmVob3VzZS5jb2xvcnMucmVkdWNlKCh0b3RhbCwgY29sb3IpID0+IHtcbiAgICAgICAgY29uc3QgY29sb3JUb3RhbCA9IGNvbG9yLnNpemVzLnJlZHVjZSgoc3VtLCBzaXplKSA9PiBzdW0gKyBzaXplLnF1YW50aXR5LCAwKVxuICAgICAgICBjb2xvci5xdWFudGl0eSA9IGNvbG9yVG90YWxcbiAgICAgICAgY29sb3IuaW5TdG9jayA9IGNvbG9yVG90YWwgPiAwXG4gICAgICAgIHJldHVybiB0b3RhbCArIGNvbG9yVG90YWxcbiAgICAgIH0sIDApXG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLndhcmVob3VzZSxcbiAgICAgICAgcXVhbnRpdHk6IHRvdGFsUXVhbnRpdHksXG4gICAgICAgIGxhc3RVcGRhdGVkOiBjcmVhdGlvblRpbWUsXG4gICAgICAgIHVwZGF0ZWRCeTogY3VycmVudFVzZXIubmFtZVxuICAgICAgfVxuICAgIH0pIHx8IFtdXG5cbiAgICBjb25zdCB0b3RhbFN0b2NrID0gcHJvY2Vzc2VkV2FyZWhvdXNlRGF0YS5yZWR1Y2UoKHN1bSwgd2FyZWhvdXNlKSA9PiBzdW0gKyB3YXJlaG91c2UucXVhbnRpdHksIDApXG5cbiAgICAvLyBDb21iaW5lIGNvbG9ycyBmcm9tIGFsbCB3YXJlaG91c2VzXG4gICAgY29uc3QgY29tYmluZWRDb2xvcnMgPSBwcm9jZXNzZWRXYXJlaG91c2VEYXRhLnJlZHVjZSgoYWxsQ29sb3JzOiBhbnlbXSwgd2FyZWhvdXNlKSA9PiB7XG4gICAgICB3YXJlaG91c2UuY29sb3JzLmZvckVhY2god2FyZWhvdXNlQ29sb3IgPT4ge1xuICAgICAgICBjb25zdCBleGlzdGluZ0NvbG9yID0gYWxsQ29sb3JzLmZpbmQoYyA9PiBjLm5hbWUgPT09IHdhcmVob3VzZUNvbG9yLm5hbWUpXG4gICAgICAgIGlmIChleGlzdGluZ0NvbG9yKSB7XG4gICAgICAgICAgZXhpc3RpbmdDb2xvci5xdWFudGl0eSArPSB3YXJlaG91c2VDb2xvci5xdWFudGl0eVxuICAgICAgICAgIGV4aXN0aW5nQ29sb3IuaW5TdG9jayA9IGV4aXN0aW5nQ29sb3IucXVhbnRpdHkgPiAwXG5cbiAgICAgICAgICB3YXJlaG91c2VDb2xvci5zaXplcy5mb3JFYWNoKHdhcmVob3VzZVNpemUgPT4ge1xuICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdTaXplID0gZXhpc3RpbmdDb2xvci5zaXplcy5maW5kKHMgPT4gcy5uYW1lID09PSB3YXJlaG91c2VTaXplLm5hbWUpXG4gICAgICAgICAgICBpZiAoZXhpc3RpbmdTaXplKSB7XG4gICAgICAgICAgICAgIGV4aXN0aW5nU2l6ZS5xdWFudGl0eSArPSB3YXJlaG91c2VTaXplLnF1YW50aXR5XG4gICAgICAgICAgICAgIGV4aXN0aW5nU2l6ZS5pblN0b2NrID0gZXhpc3RpbmdTaXplLnF1YW50aXR5ID4gMFxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgZXhpc3RpbmdDb2xvci5zaXplcy5wdXNoKHsgLi4ud2FyZWhvdXNlU2l6ZSB9KVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYWxsQ29sb3JzLnB1c2goe1xuICAgICAgICAgICAgLi4ud2FyZWhvdXNlQ29sb3IsXG4gICAgICAgICAgICBzaXplczogWy4uLndhcmVob3VzZUNvbG9yLnNpemVzXVxuICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICByZXR1cm4gYWxsQ29sb3JzXG4gICAgfSwgW10pXG5cbiAgICAvLyBDYWxjdWxhdGUgcHJpY2luZ1xuICAgIGNvbnN0IGJhc2VQcmljZSA9IE51bWJlcih2YWxpZGF0ZWREYXRhLnByaWNlKVxuICAgIGNvbnN0IG1hcmt1cCA9IE51bWJlcih2YWxpZGF0ZWREYXRhLnByaWNpbmc/Lm1hcmt1cCB8fCAzMClcbiAgICBjb25zdCBjb21taXNzaW9uID0gc2VsbGVyLnN1YnNjcmlwdGlvbi5mZWF0dXJlcz8uY29tbWlzc2lvbiB8fCAzXG4gICAgY29uc3QgbWFya3VwQW1vdW50ID0gYmFzZVByaWNlICogKG1hcmt1cCAvIDEwMClcbiAgICBjb25zdCBjb21taXNzaW9uQW1vdW50ID0gYmFzZVByaWNlICogKGNvbW1pc3Npb24gLyAxMDApXG5cbiAgICAvLyBQcmVwYXJlIHByb2R1Y3QgZGF0YVxuICAgIGNvbnN0IHByb2R1Y3REYXRhID0ge1xuICAgICAgLi4udmFsaWRhdGVkRGF0YSxcbiAgICAgIG5hbWU6IHZhbGlkYXRlZERhdGEubmFtZS50cmltKCksXG4gICAgICBzbHVnOiB2YWxpZGF0ZWREYXRhLnNsdWcudHJpbSgpLFxuICAgICAgY2F0ZWdvcnk6IHZhbGlkYXRlZERhdGEuY2F0ZWdvcnkudHJpbSgpLFxuICAgICAgYnJhbmQ6IHZhbGlkYXRlZERhdGEuYnJhbmQudHJpbSgpLFxuICAgICAgZGVzY3JpcHRpb246IHZhbGlkYXRlZERhdGEuZGVzY3JpcHRpb24udHJpbSgpLFxuICAgICAgcHJpY2U6IGJhc2VQcmljZSxcbiAgICAgIGxpc3RQcmljZTogTnVtYmVyKHZhbGlkYXRlZERhdGEubGlzdFByaWNlKSB8fCBiYXNlUHJpY2UsXG4gICAgICBjb3VudEluU3RvY2s6IHRvdGFsU3RvY2ssXG4gICAgICB3YXJlaG91c2VEYXRhOiBwcm9jZXNzZWRXYXJlaG91c2VEYXRhLFxuICAgICAgY29sb3JzOiBjb21iaW5lZENvbG9ycyxcbiAgICAgIHNpemVzOiBbJ1MnLCAnTScsICdMJywgJ1hMJywgJ1hYTCddLFxuICAgICAgaXNQdWJsaXNoZWQ6IHZhbGlkYXRlZERhdGEuaXNQdWJsaXNoZWQgfHwgZmFsc2UsXG4gICAgICBzZWxsZXJJZDogc2VsbGVyLl9pZCxcbiAgICAgIHNlbGxlcjoge1xuICAgICAgICBuYW1lOiBzZWxsZXIuYnVzaW5lc3NOYW1lLFxuICAgICAgICBlbWFpbDogc2VsbGVyLmVtYWlsLFxuICAgICAgICBzdWJzY3JpcHRpb246IHNlbGxlci5zdWJzY3JpcHRpb24ucGxhblxuICAgICAgfSxcbiAgICAgIHByaWNpbmc6IHtcbiAgICAgICAgYmFzZVByaWNlLFxuICAgICAgICBtYXJrdXAsXG4gICAgICAgIHByb2ZpdDogbWFya3VwQW1vdW50IC0gY29tbWlzc2lvbkFtb3VudCxcbiAgICAgICAgY29tbWlzc2lvbjogY29tbWlzc2lvbkFtb3VudCxcbiAgICAgICAgZmluYWxQcmljZTogYmFzZVByaWNlICsgbWFya3VwQW1vdW50LFxuICAgICAgICBkaXNjb3VudDogdmFsaWRhdGVkRGF0YS5wcmljaW5nPy5kaXNjb3VudFxuICAgICAgfSxcbiAgICAgIG1ldHJpY3M6IHtcbiAgICAgICAgdmlld3M6IDAsXG4gICAgICAgIHNhbGVzOiAwLFxuICAgICAgICByZXZlbnVlOiAwLFxuICAgICAgICByZXR1cm5zOiAwLFxuICAgICAgICByYXRpbmc6IDBcbiAgICAgIH0sXG4gICAgICBzdGF0dXM6IHZhbGlkYXRlZERhdGEuaXNQdWJsaXNoZWQgPyAncGVuZGluZycgOiAnZHJhZnQnLFxuICAgICAgY3JlYXRlZEJ5OiBjdXJyZW50VXNlci5uYW1lLFxuICAgICAgdXBkYXRlZEJ5OiBjdXJyZW50VXNlci5uYW1lLFxuICAgICAgY3JlYXRlZEF0OiBjcmVhdGlvblRpbWUsXG4gICAgICB1cGRhdGVkQXQ6IGNyZWF0aW9uVGltZVxuICAgIH1cblxuICAgIC8vIENyZWF0ZSBwcm9kdWN0XG4gICAgY29uc3QgcHJvZHVjdCA9IGF3YWl0IFByb2R1Y3QuY3JlYXRlKFtwcm9kdWN0RGF0YV0sIHsgc2Vzc2lvbiB9KVxuICAgIGNvbnN0IGNyZWF0ZWRQcm9kdWN0ID0gcHJvZHVjdFswXVxuXG4gICAgLy8gVXBkYXRlIHdhcmVob3VzZSBzdG9ja1xuICAgIGF3YWl0IFByb21pc2UuYWxsKHByb2Nlc3NlZFdhcmVob3VzZURhdGEubWFwKHdhcmVob3VzZSA9PlxuICAgICAgdXBkYXRlV2FyZWhvdXNlU3RvY2soe1xuICAgICAgICBwcm9kdWN0SWQ6IGNyZWF0ZWRQcm9kdWN0Ll9pZCxcbiAgICAgICAgd2FyZWhvdXNlSWQ6IHdhcmVob3VzZS53YXJlaG91c2VJZCxcbiAgICAgICAgcXVhbnRpdHk6IHdhcmVob3VzZS5xdWFudGl0eSxcbiAgICAgICAgc2t1OiB3YXJlaG91c2Uuc2t1LFxuICAgICAgICBsb2NhdGlvbjogd2FyZWhvdXNlLmxvY2F0aW9uLFxuICAgICAgICBtaW5pbXVtU3RvY2s6IHdhcmVob3VzZS5taW5pbXVtU3RvY2ssXG4gICAgICAgIHJlb3JkZXJQb2ludDogd2FyZWhvdXNlLnJlb3JkZXJQb2ludCxcbiAgICAgICAgY29sb3JzOiB3YXJlaG91c2UuY29sb3JzLFxuICAgICAgICB1cGRhdGVkQnk6IGN1cnJlbnRVc2VyLm5hbWVcbiAgICAgIH0pXG4gICAgKSlcblxuICAgIC8vIFVwZGF0ZSBzZWxsZXIgbWV0cmljc1xuICAgIGF3YWl0IHVwZGF0ZVNlbGxlck1ldHJpY3Moc2VsbGVyLl9pZCwge1xuICAgICAgcHJvZHVjdHNDb3VudDogJysxJyxcbiAgICAgIGxhc3RQcm9kdWN0Q3JlYXRlZDogY3JlYXRpb25UaW1lXG4gICAgfSlcblxuICAgIGF3YWl0IHNlc3Npb24uY29tbWl0VHJhbnNhY3Rpb24oKVxuXG4gICAgLy8gUmV2YWxpZGF0ZSBwYXRoc1xuICAgIHJldmFsaWRhdGVQYXRoKCcvc2VsbGVyL2Rhc2hib2FyZC9wcm9kdWN0cycpXG4gICAgcmV2YWxpZGF0ZVBhdGgoJy9hZG1pbi9wcm9kdWN0cycpXG4gICAgcmV2YWxpZGF0ZVBhdGgoYC9wcm9kdWN0LyR7Y3JlYXRlZFByb2R1Y3Quc2x1Z31gKVxuXG4gICAgY29uc29sZS5sb2coYFske2NyZWF0aW9uVGltZS50b0lTT1N0cmluZygpfV0gUHJvZHVjdCBjcmVhdGVkIHN1Y2Nlc3NmdWxseTpgLCB7XG4gICAgICBwcm9kdWN0SWQ6IGNyZWF0ZWRQcm9kdWN0Ll9pZCxcbiAgICAgIG5hbWU6IGNyZWF0ZWRQcm9kdWN0Lm5hbWUsXG4gICAgICB0b3RhbFN0b2NrLFxuICAgICAgY29sb3JzQ291bnQ6IGNyZWF0ZWRQcm9kdWN0LmNvbG9ycy5sZW5ndGhcbiAgICB9KVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBtZXNzYWdlOiAnUHJvZHVjdCBjcmVhdGVkIHN1Y2Nlc3NmdWxseScsXG4gICAgICBkYXRhOiBjcmVhdGVkUHJvZHVjdFxuICAgIH1cblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGF3YWl0IHNlc3Npb24uYWJvcnRUcmFuc2FjdGlvbigpXG4gICAgY29uc29sZS5lcnJvcignUHJvZHVjdCBjcmVhdGlvbiBlcnJvcjonLCBlcnJvcilcblxuICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICBpZiAoZXJyb3IubWVzc2FnZS5pbmNsdWRlcygnZHVwbGljYXRlJykpIHtcbiAgICAgICAgcmV0dXJuIHsgXG4gICAgICAgICAgc3VjY2VzczogZmFsc2UsIFxuICAgICAgICAgIG1lc3NhZ2U6ICdUaGlzIHNsdWcgYWxyZWFkeSBleGlzdHMuIFBsZWFzZSBjaG9vc2UgYSBkaWZmZXJlbnQgb25lLicgXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCd2YWxpZGF0aW9uIGZhaWxlZCcpKSB7XG4gICAgICAgIHJldHVybiB7IFxuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLCBcbiAgICAgICAgICBtZXNzYWdlOiAnUGxlYXNlIGNoZWNrIHRoYXQgYWxsIHJlcXVpcmVkIGZpZWxkcyBhcmUgZmlsbGVkIGNvcnJlY3RseS4nIFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgbWVzc2FnZTogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnRmFpbGVkIHRvIGNyZWF0ZSBwcm9kdWN0J1xuICAgIH1cblxuICB9IGZpbmFsbHkge1xuICAgIHNlc3Npb24uZW5kU2Vzc2lvbigpXG4gIH1cbn1cblxuLy8gVVBEQVRFIFBST0RVQ1RcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVQcm9kdWN0KGRhdGE6IHouaW5mZXI8dHlwZW9mIFByb2R1Y3RVcGRhdGVTY2hlbWE+KSB7XG4gIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBtb25nb29zZS5zdGFydFNlc3Npb24oKVxuICBzZXNzaW9uLnN0YXJ0VHJhbnNhY3Rpb24oKVxuXG4gIHRyeSB7XG4gICAgLy8gVmFsaWRhdGUgaW5wdXQgZGF0YSBmaXJzdFxuICAgIGNvbnN0IHZhbGlkYXRlZElucHV0ID0gUHJvZHVjdFVwZGF0ZVNjaGVtYS5wYXJzZShkYXRhKVxuXG4gICAgLy8gQ2hlY2sgYXV0aGVudGljYXRpb25cbiAgICBjb25zdCBhdXRoU2Vzc2lvbiA9IGF3YWl0IGF1dGgoKVxuICAgIGlmICghYXV0aFNlc3Npb24/LnVzZXIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVW5hdXRob3JpemVkJylcbiAgICB9XG5cbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG5cbiAgICAvLyBWZXJpZnkgcHJvZHVjdCBleGlzdGVuY2UgYW5kIG93bmVyc2hpcFxuICAgIGNvbnN0IGV4aXN0aW5nUHJvZHVjdCA9IGF3YWl0IFByb2R1Y3QuZmluZEJ5SWQodmFsaWRhdGVkSW5wdXQuX2lkKS5zZXNzaW9uKHNlc3Npb24pXG4gICAgaWYgKCFleGlzdGluZ1Byb2R1Y3QpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUHJvZHVjdCBub3QgZm91bmQnKVxuICAgIH1cblxuICAgIC8vIENoZWNrIGF1dGhvcml6YXRpb25cbiAgICBpZiAoXG4gICAgICBhdXRoU2Vzc2lvbi51c2VyLnJvbGUgIT09ICdBZG1pbicgJiZcbiAgICAgIGV4aXN0aW5nUHJvZHVjdC5zZWxsZXJJZC50b1N0cmluZygpICE9PSBhdXRoU2Vzc2lvbi51c2VyLmlkXG4gICAgKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuYXV0aG9yaXplZCcpXG4gICAgfVxuXG4gICAgLy8gR2V0IHNlbGxlciBpbmZvcm1hdGlvblxuICAgIGNvbnN0IHNlbGxlclJlc3BvbnNlID0gYXdhaXQgZ2V0U2VsbGVyQnlVc2VySWQoXG4gICAgICBhdXRoU2Vzc2lvbi51c2VyLnJvbGUgPT09ICdBZG1pbidcbiAgICAgICAgPyBleGlzdGluZ1Byb2R1Y3Quc2VsbGVySWQudG9TdHJpbmcoKVxuICAgICAgICA6IGF1dGhTZXNzaW9uLnVzZXIuaWRcbiAgICApXG5cbiAgICBpZiAoIXNlbGxlclJlc3BvbnNlLnN1Y2Nlc3MgfHwgIXNlbGxlclJlc3BvbnNlLmRhdGEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignU2VsbGVyIG5vdCBmb3VuZCcpXG4gICAgfVxuXG4gICAgY29uc3Qgc2VsbGVyID0gc2VsbGVyUmVzcG9uc2UuZGF0YVxuXG4gICAgLy8gQ2FsY3VsYXRlIHByaWNpbmcgaWYgcHJpY2Ugb3IgbWFya3VwIGNoYW5nZWRcbiAgICBsZXQgcHJpY2luZyA9IGV4aXN0aW5nUHJvZHVjdC5wcmljaW5nXG4gICAgaWYgKFxuICAgICAgdmFsaWRhdGVkSW5wdXQucHJpY2UgIT09IGV4aXN0aW5nUHJvZHVjdC5wcmljZSB8fCBcbiAgICAgIHZhbGlkYXRlZElucHV0LnByaWNpbmc/Lm1hcmt1cCAhPT0gZXhpc3RpbmdQcm9kdWN0LnByaWNpbmcubWFya3VwXG4gICAgKSB7XG4gICAgICBjb25zdCBiYXNlUHJpY2UgPSB2YWxpZGF0ZWRJbnB1dC5wcmljZVxuICAgICAgY29uc3QgbWFya3VwID0gdmFsaWRhdGVkSW5wdXQucHJpY2luZz8ubWFya3VwIHx8IGV4aXN0aW5nUHJvZHVjdC5wcmljaW5nLm1hcmt1cFxuICAgICAgY29uc3QgY29tbWlzc2lvbiA9IHNlbGxlci5zdWJzY3JpcHRpb24uZmVhdHVyZXMuY29tbWlzc2lvbiB8fCAzXG4gICAgICBjb25zdCBtYXJrdXBBbW91bnQgPSBiYXNlUHJpY2UgKiAobWFya3VwIC8gMTAwKVxuICAgICAgY29uc3QgY29tbWlzc2lvbkFtb3VudCA9IGJhc2VQcmljZSAqIChjb21taXNzaW9uIC8gMTAwKVxuXG4gICAgICBwcmljaW5nID0ge1xuICAgICAgICBiYXNlUHJpY2UsXG4gICAgICAgIG1hcmt1cCxcbiAgICAgICAgcHJvZml0OiBtYXJrdXBBbW91bnQgLSBjb21taXNzaW9uQW1vdW50LFxuICAgICAgICBjb21taXNzaW9uOiBjb21taXNzaW9uQW1vdW50LFxuICAgICAgICBmaW5hbFByaWNlOiBiYXNlUHJpY2UgKyBtYXJrdXBBbW91bnRcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBDaGVjayBpZiBzdG9jayBzdGF0dXMgaGFzIGNoYW5nZWRcbiAgICBjb25zdCBpc1N0b2NrU3RhdHVzQ2hhbmdlZCA9XG4gICAgICAoZXhpc3RpbmdQcm9kdWN0LnN0b2NrID4gMCAmJiB2YWxpZGF0ZWRJbnB1dC5zdG9jayA9PT0gMCkgfHxcbiAgICAgIChleGlzdGluZ1Byb2R1Y3Quc3RvY2sgPT09IDAgJiYgdmFsaWRhdGVkSW5wdXQuc3RvY2sgPiAwKVxuXG4gICAgLy8gUHJlcGFyZSB1cGRhdGUgZGF0YVxuICAgIGNvbnN0IHVwZGF0ZURhdGEgPSB7XG4gICAgICAuLi52YWxpZGF0ZWRJbnB1dCxcbiAgICAgIHByaWNpbmcsXG4gICAgICBzdGF0dXM6IHZhbGlkYXRlZElucHV0LmlzUHVibGlzaGVkXG4gICAgICAgID8gZXhpc3RpbmdQcm9kdWN0LnN0YXR1cyA9PT0gJ2FjdGl2ZSdcbiAgICAgICAgICA/ICdhY3RpdmUnXG4gICAgICAgICAgOiAncGVuZGluZydcbiAgICAgICAgOiAnZHJhZnQnLFxuICAgICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpLFxuICAgICAgdXBkYXRlZEJ5OiBhdXRoU2Vzc2lvbi51c2VyLm5hbWUgfHwgYXV0aFNlc3Npb24udXNlci5lbWFpbFxuICAgIH1cblxuICAgIC8vIFVwZGF0ZSB0aGUgcHJvZHVjdFxuICAgIGNvbnN0IHVwZGF0ZWRQcm9kdWN0ID0gYXdhaXQgUHJvZHVjdC5maW5kQnlJZEFuZFVwZGF0ZShcbiAgICAgIHZhbGlkYXRlZElucHV0Ll9pZCxcbiAgICAgIHVwZGF0ZURhdGEsXG4gICAgICB7IG5ldzogdHJ1ZSwgc2Vzc2lvbiB9XG4gICAgKVxuXG4gICAgLy8gVXBkYXRlIHNlbGxlciBtZXRyaWNzIGlmIHN0b2NrIHN0YXR1cyBjaGFuZ2VkXG4gICAgaWYgKGlzU3RvY2tTdGF0dXNDaGFuZ2VkKSB7XG4gICAgICBhd2FpdCB1cGRhdGVTZWxsZXJNZXRyaWNzKHNlbGxlci5faWQsIHtcbiAgICAgICAgYWN0aW9uOiB2YWxpZGF0ZWRJbnB1dC5zdG9jayA9PT0gMCBcbiAgICAgICAgICA/ICdwcm9kdWN0X291dF9vZl9zdG9jaycgXG4gICAgICAgICAgOiAncHJvZHVjdF9iYWNrX2luX3N0b2NrJ1xuICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyBDb21taXQgdHJhbnNhY3Rpb25cbiAgICBhd2FpdCBzZXNzaW9uLmNvbW1pdFRyYW5zYWN0aW9uKClcblxuICAgIC8vIFJldmFsaWRhdGUgY2FjaGUgcGF0aHNcbiAgICByZXZhbGlkYXRlUGF0aCgnL3NlbGxlci9kYXNoYm9hcmQvcHJvZHVjdHMnKVxuICAgIHJldmFsaWRhdGVQYXRoKCcvYWRtaW4vcHJvZHVjdHMnKVxuICAgIHJldmFsaWRhdGVQYXRoKGAvcHJvZHVjdC8ke3VwZGF0ZWRQcm9kdWN0Py5zbHVnfWApXG5cbiAgICAvLyBMb2cgdGhlIHVwZGF0ZSBvcGVyYXRpb25cbiAgICBhd2FpdCBsb2dPcGVyYXRpb24oJ1Byb2R1Y3QgVXBkYXRlZCcsIHtcbiAgICAgIHByb2R1Y3RJZDogdXBkYXRlZFByb2R1Y3Q/Ll9pZCxcbiAgICAgIG5hbWU6IHVwZGF0ZWRQcm9kdWN0Py5uYW1lLFxuICAgICAgc2VsbGVyOiBzZWxsZXIuYnVzaW5lc3NOYW1lXG4gICAgfSlcblxuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgbWVzc2FnZTogJ1Byb2R1Y3QgdXBkYXRlZCBzdWNjZXNzZnVsbHknLFxuICAgICAgZGF0YTogdXBkYXRlZFByb2R1Y3RcbiAgICB9XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAvLyBSb2xsYmFjayB0cmFuc2FjdGlvbiBvbiBlcnJvclxuICAgIGF3YWl0IHNlc3Npb24uYWJvcnRUcmFuc2FjdGlvbigpXG4gICAgXG4gICAgY29uc29sZS5lcnJvcignUHJvZHVjdCB1cGRhdGUgZXJyb3I6JywgZXJyb3IpXG4gICAgcmV0dXJuIHsgXG4gICAgICBzdWNjZXNzOiBmYWxzZSwgXG4gICAgICBtZXNzYWdlOiBmb3JtYXRFcnJvcihlcnJvcilcbiAgICB9XG5cbiAgfSBmaW5hbGx5IHtcbiAgICAvLyBBbHdheXMgZW5kIHRoZSBzZXNzaW9uXG4gICAgc2Vzc2lvbi5lbmRTZXNzaW9uKClcbiAgfVxufVxuXG4vLyBERUxFVEUgUFJPRFVDVFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlbGV0ZVByb2R1Y3QoaWQ6IHN0cmluZykge1xuICBjb25zdCBzZXNzaW9uID0gYXdhaXQgbW9uZ29vc2Uuc3RhcnRTZXNzaW9uKClcbiAgc2Vzc2lvbi5zdGFydFRyYW5zYWN0aW9uKClcblxuICB0cnkge1xuICAgIC8vINin2YTYqtit2YLZgiDZhdmGINin2YTZhdi12KfYr9mC2KlcbiAgICBjb25zdCBhdXRoU2Vzc2lvbiA9IGF3YWl0IGF1dGgoKVxuICAgIGlmICghYXV0aFNlc3Npb24/LnVzZXIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVW5hdXRob3JpemVkJylcbiAgICB9XG5cbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG5cbiAgICAvLyDYp9mE2KjYrdirINi52YYg2KfZhNmF2YbYqtisINmF2Lkg2KfYs9iq2K7Yr9in2YUg2KfZhNis2YTYs9ipXG4gICAgY29uc3QgcHJvZHVjdCA9IGF3YWl0IFByb2R1Y3QuZmluZEJ5SWQoaWQpLnNlc3Npb24oc2Vzc2lvbilcbiAgICBpZiAoIXByb2R1Y3QpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUHJvZHVjdCBub3QgZm91bmQnKVxuICAgIH1cblxuICAgIC8vINin2YTYqtit2YLZgiDZhdmGINin2YTYtdmE2KfYrdmK2KfYqlxuICAgIGlmIChcbiAgICAgIGF1dGhTZXNzaW9uLnVzZXIucm9sZSAhPT0gJ0FkbWluJyAmJlxuICAgICAgcHJvZHVjdC5zZWxsZXJJZC50b1N0cmluZygpICE9PSBhdXRoU2Vzc2lvbi51c2VyLmlkXG4gICAgKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VuYXV0aG9yaXplZCcpXG4gICAgfVxuXG4gICAgLy8g2K3YsNmBINin2YTZhdmG2KrYrFxuICAgIGF3YWl0IFByb2R1Y3QuZmluZEJ5SWRBbmREZWxldGUoaWQpLnNlc3Npb24oc2Vzc2lvbilcblxuICAgIC8vINiq2K3Yr9mK2Ksg2KXYrdi12KfYptmK2KfYqiDYp9mE2KjYp9im2LlcbiAgICBpZiAocHJvZHVjdC5zZWxsZXJJZCkge1xuICAgICAgYXdhaXQgdXBkYXRlU2VsbGVyTWV0cmljcyhwcm9kdWN0LnNlbGxlcklkLCB7XG4gICAgICAgIHByb2R1Y3RzQ291bnQ6ICctMScsXG4gICAgICAgIGxhc3RVcGRhdGVkOiBuZXcgRGF0ZSgpXG4gICAgICB9KVxuICAgIH1cblxuICAgIC8vINiq2LPYrNmK2YQg2LnZhdmE2YrYqSDYp9mE2K3YsNmBXG4gICAgYXdhaXQgbG9nT3BlcmF0aW9uKCdQcm9kdWN0IERlbGV0ZWQnLCB7XG4gICAgICBwcm9kdWN0SWQ6IGlkLFxuICAgICAgbmFtZTogcHJvZHVjdC5uYW1lLFxuICAgICAgZGVsZXRlZEJ5OiBhdXRoU2Vzc2lvbi51c2VyLm5hbWUgfHwgYXV0aFNlc3Npb24udXNlci5lbWFpbCxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKVxuICAgIH0pXG5cbiAgICAvLyDYqtij2YPZitivINin2YTZhdi52KfZhdmE2KlcbiAgICBhd2FpdCBzZXNzaW9uLmNvbW1pdFRyYW5zYWN0aW9uKClcblxuICAgIC8vINiq2K3Yr9mK2Ksg2KfZhNi12YHYrdin2Kog2LDYp9iqINin2YTYtdmE2KlcbiAgICByZXZhbGlkYXRlUGF0aCgnL3NlbGxlci9kYXNoYm9hcmQvcHJvZHVjdHMnKVxuICAgIHJldmFsaWRhdGVQYXRoKCcvYWRtaW4vcHJvZHVjdHMnKVxuICAgIHJldmFsaWRhdGVQYXRoKGAvcHJvZHVjdC8ke3Byb2R1Y3Quc2x1Z31gKVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBtZXNzYWdlOiAnUHJvZHVjdCBkZWxldGVkIHN1Y2Nlc3NmdWxseScsXG4gICAgICBtZXRhZGF0YToge1xuICAgICAgICBkZWxldGVkQXQ6IG5ldyBEYXRlKCksXG4gICAgICAgIGRlbGV0ZWRCeTogYXV0aFNlc3Npb24udXNlci5uYW1lIHx8IGF1dGhTZXNzaW9uLnVzZXIuZW1haWwsXG4gICAgICAgIHByb2R1Y3RJZDogaWRcbiAgICAgIH1cbiAgICB9XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAvLyDYp9mE2KrYsdin2KzYuSDYudmGINin2YTZhdi52KfZhdmE2Kkg2YHZiiDYrdin2YTYqSDYrdiv2YjYqyDYrti32KNcbiAgICBhd2FpdCBzZXNzaW9uLmFib3J0VHJhbnNhY3Rpb24oKVxuICAgIFxuICAgIGNvbnNvbGUuZXJyb3IoJ0RlbGV0ZSBwcm9kdWN0IGVycm9yOicsIHtcbiAgICAgIGVycm9yLFxuICAgICAgcHJvZHVjdElkOiBpZCxcbiAgICAgIHVzZXJJZDogYXV0aFNlc3Npb24/LnVzZXI/LmlkLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpXG4gICAgfSlcblxuICAgIC8vINil2LHYrNin2Lkg2LHYs9in2YTYqSDYrti32KMg2YXZhtin2LPYqNipXG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgIGlmIChlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCdVbmF1dGhvcml6ZWQnKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIG1lc3NhZ2U6ICdZb3UgZG8gbm90IGhhdmUgcGVybWlzc2lvbiB0byBkZWxldGUgdGhpcyBwcm9kdWN0JyxcbiAgICAgICAgICBjb2RlOiAnVU5BVVRIT1JJWkVEJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoZXJyb3IubWVzc2FnZS5pbmNsdWRlcygnUHJvZHVjdCBub3QgZm91bmQnKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIG1lc3NhZ2U6ICdUaGUgcHJvZHVjdCB5b3UgYXJlIHRyeWluZyB0byBkZWxldGUgZG9lcyBub3QgZXhpc3QnLFxuICAgICAgICAgIGNvZGU6ICdOT1RfRk9VTkQnXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4geyBcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLCBcbiAgICAgIG1lc3NhZ2U6IGZvcm1hdEVycm9yKGVycm9yKSxcbiAgICAgIGNvZGU6ICdJTlRFUk5BTF9FUlJPUidcbiAgICB9XG5cbiAgfSBmaW5hbGx5IHtcbiAgICAvLyDYpdmG2YfYp9ihINin2YTYrNmE2LPYqSDYr9in2KbZhdin2YtcbiAgICBzZXNzaW9uLmVuZFNlc3Npb24oKVxuICB9XG59XG5cbi8vIFJFVklFVyBQUk9EVUNUIChBZG1pbiBvbmx5KVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJldmlld1Byb2R1Y3QoXG4gIHByb2R1Y3RJZDogc3RyaW5nLFxuICBhcHByb3ZlZDogYm9vbGVhbixcbiAgbm90ZXM/OiBzdHJpbmdcbikge1xuICBjb25zdCBzZXNzaW9uID0gYXdhaXQgbW9uZ29vc2Uuc3RhcnRTZXNzaW9uKClcbiAgc2Vzc2lvbi5zdGFydFRyYW5zYWN0aW9uKClcblxuICB0cnkge1xuICAgIGNvbnN0IGF1dGhTZXNzaW9uID0gYXdhaXQgYXV0aCgpXG4gICAgaWYgKCFhdXRoU2Vzc2lvbj8udXNlcj8ucm9sZSA9PT0gJ0FkbWluJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmF1dGhvcml6ZWQnKVxuICAgIH1cblxuICAgIGF3YWl0IGNvbm5lY3RUb0RhdGFiYXNlKClcblxuICAgIGNvbnN0IHByb2R1Y3QgPSBhd2FpdCBQcm9kdWN0LmZpbmRCeUlkKHByb2R1Y3RJZCkuc2Vzc2lvbihzZXNzaW9uKVxuICAgIGlmICghcHJvZHVjdCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdQcm9kdWN0IG5vdCBmb3VuZCcpXG4gICAgfVxuXG4gICAgLy8gVXBkYXRlIHByb2R1Y3Qgc3RhdHVzXG4gICAgY29uc3QgdXBkYXRlRGF0YSA9IHtcbiAgICAgIHN0YXR1czogYXBwcm92ZWQgPyAnYWN0aXZlJyA6ICdyZWplY3RlZCcsXG4gICAgICBhZG1pblJldmlldzoge1xuICAgICAgICBhcHByb3ZlZCxcbiAgICAgICAgcmV2aWV3ZWRBdDogbmV3IERhdGUoKSxcbiAgICAgICAgcmV2aWV3ZWRCeTogYXV0aFNlc3Npb24udXNlci5pZCxcbiAgICAgICAgbm90ZXM6IG5vdGVzIHx8ICcnXG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgdXBkYXRlZFByb2R1Y3QgPSBhd2FpdCBQcm9kdWN0LmZpbmRCeUlkQW5kVXBkYXRlKFxuICAgICAgcHJvZHVjdElkLFxuICAgICAgdXBkYXRlRGF0YSxcbiAgICAgIHsgbmV3OiB0cnVlLCBzZXNzaW9uIH1cbiAgICApXG5cbiAgICBhd2FpdCBzZXNzaW9uLmNvbW1pdFRyYW5zYWN0aW9uKClcblxuICAgIHJldmFsaWRhdGVQYXRoKCcvYWRtaW4vcHJvZHVjdHMnKVxuICAgIHJldmFsaWRhdGVQYXRoKCcvc2VsbGVyL2Rhc2hib2FyZC9wcm9kdWN0cycpXG4gICAgaWYgKGFwcHJvdmVkKSB7XG4gICAgICByZXZhbGlkYXRlUGF0aChgL3Byb2R1Y3QvJHtwcm9kdWN0LnNsdWd9YClcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6IGBQcm9kdWN0ICR7YXBwcm92ZWQgPyAnYXBwcm92ZWQnIDogJ3JlamVjdGVkJ30gc3VjY2Vzc2Z1bGx5YCxcbiAgICAgIGRhdGE6IHVwZGF0ZWRQcm9kdWN0XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGF3YWl0IHNlc3Npb24uYWJvcnRUcmFuc2FjdGlvbigpXG4gICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IGZvcm1hdEVycm9yKGVycm9yKSB9XG4gIH0gZmluYWxseSB7XG4gICAgc2Vzc2lvbi5lbmRTZXNzaW9uKClcbiAgfVxufVxuXG4vLyBHRVQgUFJPRFVDVCBDQVRFR09SSUVTXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UHJvZHVjdENhdGVnb3JpZXMobGltaXQgPSA0KSB7XG4gIHRyeSB7XG4gICAgYXdhaXQgY29ubmVjdFRvRGF0YWJhc2UoKVxuXG4gICAgY29uc3QgY2F0ZWdvcmllcyA9IGF3YWl0IFByb2R1Y3QuYWdncmVnYXRlKFtcbiAgICAgIHtcbiAgICAgICAgJG1hdGNoOiB7XG4gICAgICAgICAgaXNQdWJsaXNoZWQ6IHRydWUsXG4gICAgICAgICAgc3RhdHVzOiAnYWN0aXZlJyxcbiAgICAgICAgICBzdG9jazogeyAkZ3Q6IDAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAkZ3JvdXA6IHtcbiAgICAgICAgICBfaWQ6ICckY2F0ZWdvcnknLFxuICAgICAgICAgIHByb2R1Y3RDb3VudDogeyAkc3VtOiAxIH0sXG4gICAgICAgICAgdG90YWxTYWxlczogeyAkc3VtOiAnJG1ldHJpY3Muc2FsZXMnIH0sXG4gICAgICAgICAgaW1hZ2U6IHsgJGZpcnN0OiAnJGltYWdlcycgfSxcbiAgICAgICAgICBsYXRlc3RQcm9kdWN0OiB7XG4gICAgICAgICAgICAkZmlyc3Q6IHtcbiAgICAgICAgICAgICAgbmFtZTogJyRuYW1lJyxcbiAgICAgICAgICAgICAgc2x1ZzogJyRzbHVnJyxcbiAgICAgICAgICAgICAgaW1hZ2VzOiAnJGltYWdlcydcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICRzb3J0OiB7XG4gICAgICAgICAgcHJvZHVjdENvdW50OiAtMSxcbiAgICAgICAgICB0b3RhbFNhbGVzOiAtMVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAkbGltaXQ6IGxpbWl0XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAkcHJvamVjdDoge1xuICAgICAgICAgIG5hbWU6ICckX2lkJyxcbiAgICAgICAgICBpbWFnZTogeyAkZmlyc3Q6ICckbGF0ZXN0UHJvZHVjdC5pbWFnZXMnIH0sXG4gICAgICAgICAgc2x1ZzogJyRsYXRlc3RQcm9kdWN0LnNsdWcnLFxuICAgICAgICAgIHByb2R1Y3RDb3VudDogMVxuICAgICAgICB9XG4gICAgICB9XG4gICAgXSlcblxuICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGNhdGVnb3JpZXMpKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGNhdGVnb3JpZXM6JywgZXJyb3IpXG4gICAgcmV0dXJuIFtdXG4gIH1cbn1cblxuLy8gR0VUIFBST0RVQ1RTIEZPUiBDQVJEXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UHJvZHVjdHNGb3JDYXJkKHtcbiAgdGFnLFxuICBsaW1pdCA9IDQsXG59OiB7XG4gIHRhZzogc3RyaW5nXG4gIGxpbWl0PzogbnVtYmVyXG59KTogUHJvbWlzZTx7XG4gIG5hbWU6IHN0cmluZ1xuICBzbHVnOiBzdHJpbmdcbiAgaW1hZ2VzOiBzdHJpbmdbXVxuICBwcmljZTogbnVtYmVyXG4gIG1ldHJpY3M6IGFueVxuICBocmVmPzogc3RyaW5nXG4gIGltYWdlPzogc3RyaW5nXG59W10+IHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG5cbiAgICBjb25zdCBwcm9kdWN0cyA9IGF3YWl0IFByb2R1Y3QuYWdncmVnYXRlKFtcbiAgICAgIHtcbiAgICAgICAgJG1hdGNoOiB7XG4gICAgICAgICAgdGFnczogeyAkaW46IFt0YWddIH0sXG4gICAgICAgICAgaXNQdWJsaXNoZWQ6IHRydWUsXG4gICAgICAgICAgc3RhdHVzOiAnYWN0aXZlJyxcbiAgICAgICAgICBzdG9jazogeyAkZ3Q6IDAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgICRhZGRGaWVsZHM6IHtcbiAgICAgICAgICBocmVmOiB7ICRjb25jYXQ6IFsnL3Byb2R1Y3QvJywgJyRzbHVnJ10gfSxcbiAgICAgICAgICBpbWFnZTogeyAkYXJyYXlFbGVtQXQ6IFsnJGltYWdlcycsIDBdIH0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAkcHJvamVjdDoge1xuICAgICAgICAgIG5hbWU6IDEsXG4gICAgICAgICAgc2x1ZzogMSxcbiAgICAgICAgICBpbWFnZXM6IDEsXG4gICAgICAgICAgcHJpY2U6IDEsXG4gICAgICAgICAgbWV0cmljczogMSxcbiAgICAgICAgICBocmVmOiAxLFxuICAgICAgICAgIGltYWdlOiAxLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICAgIHsgJHNvcnQ6IHsgJ21ldHJpY3Muc2FsZXMnOiAtMSwgY3JlYXRlZEF0OiAtMSB9IH0sXG4gICAgICB7ICRsaW1pdDogbGltaXQgfSxcbiAgICBdKVxuXG4gICAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocHJvZHVjdHMpKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHByb2R1Y3RzIGZvciBjYXJkOicsIGVycm9yKVxuICAgIHJldHVybiBbXVxuICB9XG59XG5cblxuLy8gR0VUIFBST0RVQ1RTIEJZIFRBR1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByb2R1Y3RzQnlUYWcoe1xuICB0YWcsXG4gIGxpbWl0ID0gMTAsXG4gIHNvcnRCeSA9ICdzYWxlcycsIC8vIHNhbGVzIG9yIGNyZWF0ZWRBdFxufToge1xuICB0YWc6IHN0cmluZ1xuICBsaW1pdD86IG51bWJlclxuICBzb3J0Qnk/OiAnc2FsZXMnIHwgJ2NyZWF0ZWRBdCdcbn0pIHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG5cbiAgICBjb25zdCBxdWVyeTogYW55ID0ge1xuICAgICAgdGFnczogeyAkaW46IFt0YWddIH0sXG4gICAgICBpc1B1Ymxpc2hlZDogdHJ1ZSxcbiAgICB9XG5cbiAgICAvLyDYpdiw2Kcg2KfYrtiq2LHZhtinINin2YTZgdix2LIg2K3Ys9ioINin2YTZhdio2YrYudin2KrYjCDZhti22YrZgSDYtNix2YjYtyDYpdi22KfZgdmK2KlcbiAgICBpZiAoc29ydEJ5ID09PSAnc2FsZXMnKSB7XG4gICAgICBxdWVyeS5zdGF0dXMgPSAnYWN0aXZlJ1xuICAgICAgcXVlcnkuc3RvY2sgPSB7ICRndDogMCB9XG4gICAgfVxuXG4gICAgY29uc3Qgc29ydE9wdGlvbiA9XG4gICAgICBzb3J0QnkgPT09ICdzYWxlcycgPyB7ICdtZXRyaWNzLnNhbGVzJzogLTEgfSA6IHsgY3JlYXRlZEF0OiAtMSB9XG5cbiAgICBjb25zdCBwcm9kdWN0cyA9IGF3YWl0IFByb2R1Y3QuZmluZChxdWVyeSlcbiAgICAgIC5zb3J0KHNvcnRPcHRpb24pXG4gICAgICAubGltaXQobGltaXQpXG4gICAgICAubGVhbigpXG5cbiAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShwcm9kdWN0cykpXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgcHJvZHVjdHMgYnkgdGFnOicsIGVycm9yKVxuICAgIHJldHVybiBbXVxuICB9XG59XG5cblxuLy8gR0VUIExBVEVTVCBQUk9EVUNUU1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldExhdGVzdFByb2R1Y3RzKHtcbiAgbGltaXQgPSA0LFxufTogeyBsaW1pdD86IG51bWJlciB9ID0ge30pIHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG5cbiAgICBjb25zdCBwcm9kdWN0cyA9IGF3YWl0IFByb2R1Y3QuZmluZCh7XG4gICAgICBpc1B1Ymxpc2hlZDogdHJ1ZSxcbiAgICAgIHN0YXR1czogJ2FjdGl2ZScsXG4gICAgICBzdG9jazogeyAkZ3Q6IDAgfVxuICAgIH0pXG4gICAgICAuc29ydCh7IGNyZWF0ZWRBdDogLTEgfSlcbiAgICAgIC5saW1pdChsaW1pdClcbiAgICAgIC5zZWxlY3QoJ25hbWUgaW1hZ2VzIHNsdWcgcHJpY2UnKVxuICAgICAgLmxlYW4oKVxuXG4gICAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocHJvZHVjdHMpKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGxhdGVzdCBwcm9kdWN0czonLCBlcnJvcilcbiAgICByZXR1cm4gW11cbiAgfVxufVxuXG4vLyBHRVQgQUxMIFBST0RVQ1RTXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsUHJvZHVjdHMoe1xuICBxdWVyeSA9ICcnLFxuICBjYXRlZ29yeSA9ICdhbGwnLFxuICB0YWcgPSAnYWxsJyxcbiAgc29ydCA9ICdsYXRlc3QnLFxuICBwYWdlID0gMSxcbiAgbGltaXQsXG4gIHByaWNlLFxuICByYXRpbmcsXG59OiB7XG4gIHF1ZXJ5Pzogc3RyaW5nXG4gIGNhdGVnb3J5Pzogc3RyaW5nXG4gIHRhZz86IHN0cmluZ1xuICBzb3J0PzogUHJvZHVjdFNvcnRPcHRpb24gfCBzdHJpbmdcbiAgcGFnZT86IG51bWJlclxuICBsaW1pdD86IG51bWJlclxuICBwcmljZT86IHN0cmluZ1xuICByYXRpbmc/OiBzdHJpbmdcbn0pOiBQcm9taXNlPFByb2R1Y3RMaXN0UmVzcG9uc2U+IHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG5cbiAgICBjb25zdCB7XG4gICAgICBjb21tb246IHsgcGFnZVNpemUgfSxcbiAgICB9ID0gYXdhaXQgZ2V0U2V0dGluZygpXG4gICAgbGltaXQgPSBsaW1pdCB8fCBwYWdlU2l6ZVxuXG4gICAgLy8g2KfZhNio2YbYp9ihINin2YTYsNmD2Yog2YTZhNmB2YTYqtix2KfYqiDZhdi5INiv2YXYrCDYp9mE2LTYsdmI2LdcbiAgICBjb25zdCBxdWVyeUZpbHRlcjogYW55ID0ge1xuICAgICAgaXNQdWJsaXNoZWQ6IHRydWUsXG4gICAgICBzdGF0dXM6ICdhY3RpdmUnLFxuICAgICAgc3RvY2s6IHsgJGd0OiAwIH0sXG4gICAgfVxuXG4gICAgaWYgKHF1ZXJ5ICYmIHF1ZXJ5ICE9PSAnYWxsJykge1xuICAgICAgcXVlcnlGaWx0ZXIubmFtZSA9IHsgJHJlZ2V4OiBxdWVyeSwgJG9wdGlvbnM6ICdpJyB9XG4gICAgfVxuXG4gICAgaWYgKGNhdGVnb3J5ICYmIGNhdGVnb3J5ICE9PSAnYWxsJykge1xuICAgICAgcXVlcnlGaWx0ZXIuY2F0ZWdvcnkgPSBjYXRlZ29yeVxuICAgIH1cblxuICAgIGlmICh0YWcgJiYgdGFnICE9PSAnYWxsJykge1xuICAgICAgcXVlcnlGaWx0ZXIudGFncyA9IHRhZ1xuICAgIH1cblxuICAgIGlmIChyYXRpbmcgJiYgcmF0aW5nICE9PSAnYWxsJykge1xuICAgICAgcXVlcnlGaWx0ZXJbJ21ldHJpY3MucmF0aW5nJ10gPSB7ICRndGU6IE51bWJlcihyYXRpbmcpIH1cbiAgICB9XG5cbiAgICBpZiAocHJpY2UgJiYgcHJpY2UgIT09ICdhbGwnKSB7XG4gICAgICBjb25zdCBbbWluLCBtYXhdID0gcHJpY2Uuc3BsaXQoJy0nKS5tYXAoTnVtYmVyKVxuICAgICAgcXVlcnlGaWx0ZXJbJ3ByaWNpbmcuZmluYWxQcmljZSddID0ge1xuICAgICAgICAkZ3RlOiBtaW4sXG4gICAgICAgICRsdGU6IG1heCxcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyDYqtix2KrZitioINin2YTZhtiq2KfYptisINit2LPYqCDYp9mE2K7Zitin2LFcbiAgICBjb25zdCBvcmRlcjogUmVjb3JkPHN0cmluZywgMSB8IC0xPiA9XG4gICAgICBzb3J0ID09PSAnYmVzdC1zZWxsaW5nJ1xuICAgICAgICA/IHsgJ21ldHJpY3Muc2FsZXMnOiAtMSB9XG4gICAgICAgIDogc29ydCA9PT0gJ3ByaWNlLWxvdy10by1oaWdoJ1xuICAgICAgICA/IHsgJ3ByaWNpbmcuZmluYWxQcmljZSc6IDEgfVxuICAgICAgICA6IHNvcnQgPT09ICdwcmljZS1oaWdoLXRvLWxvdydcbiAgICAgICAgPyB7ICdwcmljaW5nLmZpbmFsUHJpY2UnOiAtMSB9XG4gICAgICAgIDogc29ydCA9PT0gJ2F2Zy1jdXN0b21lci1yZXZpZXcnXG4gICAgICAgID8geyAnbWV0cmljcy5yYXRpbmcnOiAtMSB9XG4gICAgICAgIDogeyBjcmVhdGVkQXQ6IC0xIH1cblxuICAgIC8vINit2LPYp9ioINin2YTYqtiu2LfZiiDZiNin2YTYrdivINmE2YTYtdmB2K3YqVxuICAgIGNvbnN0IHNraXAgPSBsaW1pdCAqIChOdW1iZXIocGFnZSkgLSAxKVxuXG4gICAgLy8g2KrZhtmB2YrYsCDYp9mE2KfYs9iq2LnZhNin2YUg2YjYp9mE2LnYryDYqNin2YTYqtmI2KfYstmKXG4gICAgY29uc3QgW3Byb2R1Y3RzLCB0b3RhbFByb2R1Y3RzXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgIFByb2R1Y3QuZmluZChxdWVyeUZpbHRlcilcbiAgICAgICAgLnNvcnQob3JkZXIpXG4gICAgICAgIC5za2lwKHNraXApXG4gICAgICAgIC5saW1pdChsaW1pdClcbiAgICAgICAgLmxlYW4oKSxcbiAgICAgIFByb2R1Y3QuY291bnREb2N1bWVudHMocXVlcnlGaWx0ZXIpLFxuICAgIF0pXG5cbiAgICByZXR1cm4ge1xuICAgICAgcHJvZHVjdHM6IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocHJvZHVjdHMpKSBhcyBJUHJvZHVjdFtdLFxuICAgICAgdG90YWxQYWdlczogTWF0aC5jZWlsKHRvdGFsUHJvZHVjdHMgLyBsaW1pdCksXG4gICAgICB0b3RhbFByb2R1Y3RzLFxuICAgICAgZnJvbTogc2tpcCArIDEsXG4gICAgICB0bzogc2tpcCArIHByb2R1Y3RzLmxlbmd0aCxcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgcHJvZHVjdHM6JywgZXJyb3IpXG4gICAgcmV0dXJuIHtcbiAgICAgIHByb2R1Y3RzOiBbXSxcbiAgICAgIHRvdGFsUGFnZXM6IDAsXG4gICAgICB0b3RhbFByb2R1Y3RzOiAwLFxuICAgICAgZnJvbTogMCxcbiAgICAgIHRvOiAwLFxuICAgIH1cbiAgfVxufVxuXG5cblxuXG4vLyBHRVQgUFJPRFVDVCBCWSBJRFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByb2R1Y3RCeUlkKHByb2R1Y3RJZDogc3RyaW5nKSB7XG4gIHRyeSB7XG4gICAgLy8g2KfZhNiq2K3ZgtmCINmF2YYg2LXYrdipINmF2LnYsdmBINin2YTZhdmG2KrYrFxuICAgIGlmICghcHJvZHVjdElkIHx8ICFtb25nb29zZS5UeXBlcy5PYmplY3RJZC5pc1ZhbGlkKHByb2R1Y3RJZCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBwcm9kdWN0IElEJylcbiAgICB9XG5cbiAgICAvLyDYp9mE2KfYqti12KfZhCDYqNmC2KfYudiv2Kkg2KfZhNio2YrYp9mG2KfYqlxuICAgIGF3YWl0IGNvbm5lY3RUb0RhdGFiYXNlKClcblxuICAgIC8vINin2YTYqNit2Ksg2LnZhiDYp9mE2YXZhtiq2Kwg2YXYuSDYp9iz2KrYrtiv2KfZhSBsZWFuKCkg2YTZhNij2K/Yp9ihINin2YTYo9mB2LbZhFxuICAgIGNvbnN0IHByb2R1Y3QgPSBhd2FpdCBQcm9kdWN0LmZpbmRCeUlkKHByb2R1Y3RJZClcbiAgICAgIC5sZWFuKClcbiAgICAgIC5zZWxlY3QoJy1fX3YnKSAvLyDYp9iz2KrYqNi52KfYryDYrdmC2YQgX192XG4gICAgICAuZXhlYygpXG5cbiAgICBpZiAoIXByb2R1Y3QpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignUHJvZHVjdCBub3QgZm91bmQnKVxuICAgIH1cblxuICAgIC8vINiq2K3ZiNmK2YQg2KfZhNiq2KfYsdmK2K4g2KXZhNmJINin2YTYqtmG2LPZitmCINin2YTZhdi32YTZiNioXG4gICAgY29uc3QgZm9ybWF0dGVkUHJvZHVjdCA9IHtcbiAgICAgIC4uLnByb2R1Y3QsXG4gICAgICBjcmVhdGVkQXQ6IHByb2R1Y3QuY3JlYXRlZEF0IFxuICAgICAgICA/IG5ldyBEYXRlKHByb2R1Y3QuY3JlYXRlZEF0KS50b0lTT1N0cmluZygpXG4gICAgICAgIDogdW5kZWZpbmVkLFxuICAgICAgdXBkYXRlZEF0OiBwcm9kdWN0LnVwZGF0ZWRBdFxuICAgICAgICA/IG5ldyBEYXRlKHByb2R1Y3QudXBkYXRlZEF0KS50b0lTT1N0cmluZygpXG4gICAgICAgIDogdW5kZWZpbmVkXG4gICAgfVxuXG4gICAgLy8g2KrYs9is2YrZhCDYp9mE2YjYtdmI2YQg2YTZhNmF2YbYqtisICjZitmF2YPZhiDYp9iz2KrYrtiv2KfZhdmHINmE2YTYqtit2YTZitmE2KfYqilcbiAgICBjb25zb2xlLmluZm8oJ1Byb2R1Y3QgYWNjZXNzZWQ6Jywge1xuICAgICAgcHJvZHVjdElkLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICBhY2Nlc3NlZEJ5OiAnTmlnZWwtSGVucnknIC8vIHVzaW5nIHRoZSBjdXJyZW50IHVzZXJcbiAgICB9KVxuXG4gICAgLy8g2KrYrdmI2YrZhCDYp9mE2KjZitin2YbYp9iqINil2YTZiSBKU09OINmI2KXYsdis2KfYudmH2KdcbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIGRhdGE6IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZm9ybWF0dGVkUHJvZHVjdCkpIGFzIElQcm9kdWN0LFxuICAgICAgbWV0YWRhdGE6IHtcbiAgICAgICAgYWNjZXNzZWQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgYnk6ICdOaWdlbC1IZW5yeSdcbiAgICAgIH1cbiAgICB9XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAvLyDZhdi52KfZhNis2Kkg2KfZhNij2K7Yt9in2KEg2KjYtNmD2YQg2YXZhtin2LPYqFxuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHByb2R1Y3Q6Jywge1xuICAgICAgcHJvZHVjdElkLFxuICAgICAgZXJyb3IsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgIH0pXG5cbiAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgaWYgKGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ0ludmFsaWQgcHJvZHVjdCBJRCcpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgbWVzc2FnZTogJ1BsZWFzZSBwcm92aWRlIGEgdmFsaWQgcHJvZHVjdCBJRCcsXG4gICAgICAgICAgY29kZTogJ0lOVkFMSURfSUQnXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCdQcm9kdWN0IG5vdCBmb3VuZCcpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgbWVzc2FnZTogJ1RoZSByZXF1ZXN0ZWQgcHJvZHVjdCBkb2VzIG5vdCBleGlzdCcsXG4gICAgICAgICAgY29kZTogJ05PVF9GT1VORCdcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgIG1lc3NhZ2U6IGZvcm1hdEVycm9yKGVycm9yKSxcbiAgICAgIGNvZGU6ICdJTlRFUk5BTF9FUlJPUicsXG4gICAgICBtZXRhZGF0YToge1xuICAgICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgcmVxdWVzdGVkSWQ6IHByb2R1Y3RJZFxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLyBHRVQgUFJPRFVDVCBCWSBTTFVHXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UHJvZHVjdEJ5U2x1ZyhzbHVnOiBzdHJpbmcpIHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG4gICAgY29uc3QgcHJvZHVjdCA9IGF3YWl0IFByb2R1Y3QuZmluZE9uZSh7XG4gICAgICBzbHVnLFxuICAgICAgaXNQdWJsaXNoZWQ6IHRydWUsXG4gICAgICBzdGF0dXM6ICdhY3RpdmUnLFxuICAgIH0pLmxlYW4oKVxuXG4gICAgaWYgKCFwcm9kdWN0KSB0aHJvdyBuZXcgRXJyb3IoJ1Byb2R1Y3Qgbm90IGZvdW5kJylcblxuICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHByb2R1Y3QpKSBhcyBJUHJvZHVjdFxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRocm93IG5ldyBFcnJvcihmb3JtYXRFcnJvcihlcnJvcikpXG4gIH1cbn1cblxuXG5cbi8vIEdFVCBSRUxBVEVEIFBST0RVQ1RTXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UmVsYXRlZFByb2R1Y3RzKHtcbiAgY2F0ZWdvcnksXG4gIHByb2R1Y3RJZCxcbiAgbGltaXQgPSA0LFxufToge1xuICBjYXRlZ29yeTogc3RyaW5nXG4gIHByb2R1Y3RJZDogc3RyaW5nXG4gIGxpbWl0PzogbnVtYmVyXG59KSB7XG4gIHRyeSB7XG4gICAgYXdhaXQgY29ubmVjdFRvRGF0YWJhc2UoKVxuXG4gICAgY29uc3QgcHJvZHVjdHMgPSBhd2FpdCBQcm9kdWN0LmZpbmQoe1xuICAgICAgX2lkOiB7ICRuZTogcHJvZHVjdElkIH0sXG4gICAgICBjYXRlZ29yeSxcbiAgICAgIGlzUHVibGlzaGVkOiB0cnVlLFxuICAgICAgc3RhdHVzOiAnYWN0aXZlJyxcbiAgICAgIHN0b2NrOiB7ICRndDogMCB9XG4gICAgfSlcbiAgICAgIC5zb3J0KHsgJ21ldHJpY3Muc2FsZXMnOiAtMSB9KVxuICAgICAgLmxpbWl0KGxpbWl0KVxuICAgICAgLnNlbGVjdCgnbmFtZSBpbWFnZXMgc2x1ZyBwcmljZScpXG4gICAgICAubGVhbigpXG5cbiAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShwcm9kdWN0cykpXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgcmVsYXRlZCBwcm9kdWN0czonLCBlcnJvcilcbiAgICByZXR1cm4gW11cbiAgfVxufVxuXG4vLyBHRVQgQUxMIFRBR1NcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBbGxUYWdzKCkge1xuICB0cnkge1xuICAgIGF3YWl0IGNvbm5lY3RUb0RhdGFiYXNlKClcblxuICAgIGNvbnN0IHRhZ3MgPSBhd2FpdCBQcm9kdWN0LmFnZ3JlZ2F0ZShbXG4gICAgICB7XG4gICAgICAgICRtYXRjaDoge1xuICAgICAgICAgIGlzUHVibGlzaGVkOiB0cnVlLFxuICAgICAgICAgIHN0YXR1czogJ2FjdGl2ZScsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAgeyAkdW53aW5kOiAnJHRhZ3MnIH0sXG4gICAgICB7ICRncm91cDogeyBfaWQ6IG51bGwsIHVuaXF1ZVRhZ3M6IHsgJGFkZFRvU2V0OiAnJHRhZ3MnIH0gfSB9LFxuICAgICAgeyAkcHJvamVjdDogeyBfaWQ6IDAsIHVuaXF1ZVRhZ3M6IDEgfSB9LFxuICAgIF0pXG5cbiAgICByZXR1cm4gKFxuICAgICAgdGFnc1swXT8udW5pcXVlVGFnc1xuICAgICAgICAuc29ydCgoYTogc3RyaW5nLCBiOiBzdHJpbmcpID0+IGEubG9jYWxlQ29tcGFyZShiKSlcbiAgICAgICAgLm1hcCgodGFnOiBzdHJpbmcpID0+XG4gICAgICAgICAgdGFnXG4gICAgICAgICAgICAuc3BsaXQoJy0nKVxuICAgICAgICAgICAgLm1hcCgod29yZCkgPT4gd29yZC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHdvcmQuc2xpY2UoMSkpXG4gICAgICAgICAgICAuam9pbignICcpXG4gICAgICAgICkgfHwgW11cbiAgICApXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgdGFnczonLCBlcnJvcilcbiAgICByZXR1cm4gW11cbiAgfVxufVxuXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRSZWxhdGVkUHJvZHVjdHNCeUNhdGVnb3J5KHtcbiAgY2F0ZWdvcnksXG4gIHByb2R1Y3RJZCxcbiAgbGltaXQgPSA0LFxuICBwYWdlID0gMSxcbn06IHtcbiAgY2F0ZWdvcnk6IHN0cmluZ1xuICBwcm9kdWN0SWQ6IHN0cmluZ1xuICBsaW1pdD86IG51bWJlclxuICBwYWdlOiBudW1iZXJcbn0pOiBQcm9taXNlPHsgZGF0YTogSVByb2R1Y3RbXTsgdG90YWxQYWdlczogbnVtYmVyIH0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7XG4gICAgICBjb21tb246IHsgcGFnZVNpemUgfSxcbiAgICB9ID0gYXdhaXQgZ2V0U2V0dGluZygpXG5cbiAgICBsaW1pdCA9IGxpbWl0IHx8IHBhZ2VTaXplXG4gICAgYXdhaXQgY29ubmVjdFRvRGF0YWJhc2UoKVxuXG4gICAgY29uc3Qgc2tpcEFtb3VudCA9IChOdW1iZXIocGFnZSkgLSAxKSAqIGxpbWl0XG4gICAgY29uc3QgY29uZGl0aW9ucyA9IHtcbiAgICAgIGlzUHVibGlzaGVkOiB0cnVlLFxuICAgICAgY2F0ZWdvcnksXG4gICAgICBfaWQ6IHsgJG5lOiBwcm9kdWN0SWQgfSxcbiAgICB9XG5cbiAgICBjb25zdCBwcm9kdWN0cyA9IGF3YWl0IFByb2R1Y3QuZmluZChjb25kaXRpb25zKVxuICAgICAgLnNvcnQoeyBudW1TYWxlczogLTEgfSkgLy8g2KrYsdiq2YrYqCDYqtmG2KfYstmE2Yog2K3Ys9ioINin2YTZhdio2YrYudin2KpcbiAgICAgIC5za2lwKHNraXBBbW91bnQpXG4gICAgICAubGltaXQobGltaXQpXG4gICAgICAubGVhbigpXG5cbiAgICBjb25zdCBwcm9kdWN0c0NvdW50ID0gYXdhaXQgUHJvZHVjdC5jb3VudERvY3VtZW50cyhjb25kaXRpb25zKVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGRhdGE6IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocHJvZHVjdHMpKSBhcyBJUHJvZHVjdFtdLFxuICAgICAgdG90YWxQYWdlczogTWF0aC5jZWlsKHByb2R1Y3RzQ291bnQgLyBsaW1pdCksXG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHJlbGF0ZWQgcHJvZHVjdHM6JywgZXJyb3IpXG4gICAgcmV0dXJuIHsgZGF0YTogW10sIHRvdGFsUGFnZXM6IDAgfVxuICB9XG59XG5cblxuLy8gR0VUIEFMTCBDQVRFR09SSUVTXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsQ2F0ZWdvcmllcygpOiBQcm9taXNlPHN0cmluZ1tdPiB7XG4gIHRyeSB7XG4gICAgLy8gQ29ubmVjdCB0byB0aGUgZGF0YWJhc2VcbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG5cbiAgICAvLyBGZXRjaCBkaXN0aW5jdCBjYXRlZ29yaWVzIGZvciBhY3RpdmUsIHB1Ymxpc2hlZCBwcm9kdWN0c1xuICAgIGNvbnN0IGNhdGVnb3JpZXMgPSBhd2FpdCBQcm9kdWN0LmZpbmQoe1xuICAgICAgaXNQdWJsaXNoZWQ6IHRydWUsXG4gICAgICBzdGF0dXM6ICdhY3RpdmUnLFxuICAgIH0pLmRpc3RpbmN0KCdjYXRlZ29yeScpXG5cbiAgICByZXR1cm4gY2F0ZWdvcmllc1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGNhdGVnb3JpZXM6JywgZXJyb3IpXG4gICAgcmV0dXJuIFtdXG4gIH1cbn1cblxuXG5cbi8vIEdFVCBBTEwgUFJPRFVDVFMgRk9SIEEgU1BFQ0lGSUMgU0VMTEVSXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VsbGVyUHJvZHVjdHMoe1xuICBzZWxsZXJJZCxcbiAgcXVlcnkgPSAnJyxcbiAgcGFnZSA9IDEsXG4gIGxpbWl0ID0gMTAsXG59OiB7XG4gIHNlbGxlcklkOiBzdHJpbmdcbiAgcXVlcnk/OiBzdHJpbmdcbiAgcGFnZT86IG51bWJlclxuICBsaW1pdD86IG51bWJlclxufSk6IFByb21pc2U8UHJvZHVjdExpc3RSZXNwb25zZT4ge1xuICB0cnkge1xuICAgIGF3YWl0IGNvbm5lY3RUb0RhdGFiYXNlKClcblxuICAgIGNvbnN0IHF1ZXJ5RmlsdGVyOiBhbnkgPSB7IHNlbGxlcklkIH1cbiAgICBpZiAocXVlcnkpIHtcbiAgICAgIHF1ZXJ5RmlsdGVyLiRvciA9IFtcbiAgICAgICAgeyBuYW1lOiB7ICRyZWdleDogcXVlcnksICRvcHRpb25zOiAnaScgfSB9LFxuICAgICAgICB7IGNhdGVnb3J5OiB7ICRyZWdleDogcXVlcnksICRvcHRpb25zOiAnaScgfSB9LFxuICAgICAgICB7IGJyYW5kOiB7ICRyZWdleDogcXVlcnksICRvcHRpb25zOiAnaScgfSB9LFxuICAgICAgICB7IHNsdWc6IHsgJHJlZ2V4OiBxdWVyeSwgJG9wdGlvbnM6ICdpJyB9IH1cbiAgICAgIF1cbiAgICB9XG5cbiAgICBjb25zdCBza2lwID0gKHBhZ2UgLSAxKSAqIGxpbWl0XG5cbiAgICBjb25zdCBbcHJvZHVjdHMsIHRvdGFsUHJvZHVjdHNdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgUHJvZHVjdC5maW5kKHF1ZXJ5RmlsdGVyKVxuICAgICAgICAuc29ydCh7IHVwZGF0ZWRBdDogLTEgfSlcbiAgICAgICAgLnNraXAoc2tpcClcbiAgICAgICAgLmxpbWl0KGxpbWl0KVxuICAgICAgICAuc2VsZWN0KHtcbiAgICAgICAgICBuYW1lOiAxLFxuICAgICAgICAgIHNsdWc6IDEsXG4gICAgICAgICAgcHJpY2U6IDEsXG4gICAgICAgICAgY2F0ZWdvcnk6IDEsXG4gICAgICAgICAgY291bnRJblN0b2NrOiAxLFxuICAgICAgICAgIGlzUHVibGlzaGVkOiAxLFxuICAgICAgICAgIGF2Z1JhdGluZzogMSxcbiAgICAgICAgICB1cGRhdGVkQXQ6IDEsXG4gICAgICAgICAgcHJpY2luZzogMSxcbiAgICAgICAgICBtZXRyaWNzOiAxLFxuICAgICAgICAgIHN0YXR1czogMSxcbiAgICAgICAgICB3YXJlaG91c2VEYXRhOiAxXG4gICAgICAgIH0pXG4gICAgICAgIC5sZWFuKCksXG4gICAgICBQcm9kdWN0LmNvdW50RG9jdW1lbnRzKHF1ZXJ5RmlsdGVyKVxuICAgIF0pXG5cbiAgICBjb25zdCBmb3JtYXR0ZWRQcm9kdWN0cyA9IHByb2R1Y3RzLm1hcChwcm9kdWN0ID0+ICh7XG4gICAgICAuLi5wcm9kdWN0LFxuICAgICAgbWV0cmljczoge1xuICAgICAgICAuLi5wcm9kdWN0Lm1ldHJpY3MsXG4gICAgICAgIHJhdGluZzogcHJvZHVjdC5tZXRyaWNzPy5yYXRpbmcgfHwgMFxuICAgICAgfVxuICAgIH0pKVxuXG4gICAgYXdhaXQgbG9nT3BlcmF0aW9uKCdTZWxsZXIgUHJvZHVjdHMgTGlzdCBSZXRyaWV2ZWQnLCB7XG4gICAgICBzZWxsZXJJZCxcbiAgICAgIHRvdGFsOiB0b3RhbFByb2R1Y3RzLFxuICAgICAgcGFnZSxcbiAgICAgIGxpbWl0XG4gICAgfSlcblxuICAgIHJldHVybiB7XG4gICAgICBwcm9kdWN0czogSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShmb3JtYXR0ZWRQcm9kdWN0cykpLFxuICAgICAgdG90YWxQYWdlczogTWF0aC5jZWlsKHRvdGFsUHJvZHVjdHMgLyBsaW1pdCksXG4gICAgICB0b3RhbFByb2R1Y3RzLFxuICAgICAgZnJvbTogc2tpcCArIDEsXG4gICAgICB0bzogc2tpcCArIHByb2R1Y3RzLmxlbmd0aCxcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgaW4gZ2V0U2VsbGVyUHJvZHVjdHM6JywgZXJyb3IpXG4gICAgcmV0dXJuIHtcbiAgICAgIHByb2R1Y3RzOiBbXSxcbiAgICAgIHRvdGFsUGFnZXM6IDAsXG4gICAgICB0b3RhbFByb2R1Y3RzOiAwLFxuICAgICAgZnJvbTogMCxcbiAgICAgIHRvOiAwLFxuICAgIH1cbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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