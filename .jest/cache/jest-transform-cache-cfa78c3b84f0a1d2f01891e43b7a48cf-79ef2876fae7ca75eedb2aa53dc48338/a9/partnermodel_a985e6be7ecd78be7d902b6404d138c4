8e0783e5f3d414b1319a5588ab854474
"use strict";

/* istanbul ignore next */
function cov_2m9myanx5r() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/partner.model.ts";
  var hash = "1133c3a71c9f6295b512d758caff16fe19540047";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/partner.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 18
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "4": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 82,
          column: 2
        }
      },
      "5": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 62
        }
      },
      "6": {
        start: {
          line: 84,
          column: 17
        },
        end: {
          line: 84,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/partner.model.ts"],
      sourcesContent: ["import { Schema, model, Document } from 'mongoose';\n\nexport interface IPartner extends Document {\n  name: string;\n  email: string;\n  commissionRate: number; // Seller's commission rate (in percentage)\n  totalEarnings: number; // Total earnings from sales\n  balance: number; // Remaining balance for withdrawal\n  bankInfo: {\n    accountName: string;\n    accountNumber: string;\n    bankName: string;\n    swiftCode: string;\n  };\n  transactions: Array<{\n    type: 'credit' | 'debit';\n    amount: number;\n    description: string;\n    date: Date;\n  }>;\n}\n\nconst PartnerSchema = new Schema<IPartner>(\n  {\n    name: { type: String, required: true },\n    email: { type: String, required: true, unique: true },\n    commissionRate: { type: Number, required: true, default: 10 }, // Default 10% commission rate\n    totalEarnings: { type: Number, required: true, default: 0 },\n    balance: { type: Number, required: true, default: 0 },\n    bankInfo: {\n      accountName: { type: String, required: true },\n      accountNumber: { type: String, required: true },\n      bankName: { type: String, required: true },\n      swiftCode: { type: String, required: true },\n    },\n    transactions: [\n      {\n        type: { type: String, enum: ['credit', 'debit'], required: true },\n        amount: { type: Number, required: true },\n        description: { type: String, required: true },\n        date: { type: Date, required: true, default: Date.now },\n      },\n    ],\n  },\n  { timestamps: true }\n);\n\nconst Partner = model<IPartner>('Partner', PartnerSchema);\nexport default Partner;"],
      names: ["PartnerSchema", "Schema", "name", "type", "String", "required", "email", "unique", "commissionRate", "Number", "default", "totalEarnings", "balance", "bankInfo", "accountName", "accountNumber", "bankName", "swiftCode", "transactions", "enum", "amount", "description", "date", "Date", "now", "timestamps", "Partner", "model"],
      mappings: ";;;;+BAgDA;;;eAAA;;;0BAhDwC;AAsBxC,MAAMA,gBAAgB,IAAIC,gBAAM,CAC9B;IACEC,MAAM;QAAEC,MAAMC;QAAQC,UAAU;IAAK;IACrCC,OAAO;QAAEH,MAAMC;QAAQC,UAAU;QAAME,QAAQ;IAAK;IACpDC,gBAAgB;QAAEL,MAAMM;QAAQJ,UAAU;QAAMK,SAAS;IAAG;IAC5DC,eAAe;QAAER,MAAMM;QAAQJ,UAAU;QAAMK,SAAS;IAAE;IAC1DE,SAAS;QAAET,MAAMM;QAAQJ,UAAU;QAAMK,SAAS;IAAE;IACpDG,UAAU;QACRC,aAAa;YAAEX,MAAMC;YAAQC,UAAU;QAAK;QAC5CU,eAAe;YAAEZ,MAAMC;YAAQC,UAAU;QAAK;QAC9CW,UAAU;YAAEb,MAAMC;YAAQC,UAAU;QAAK;QACzCY,WAAW;YAAEd,MAAMC;YAAQC,UAAU;QAAK;IAC5C;IACAa,cAAc;QACZ;YACEf,MAAM;gBAAEA,MAAMC;gBAAQe,MAAM;oBAAC;oBAAU;iBAAQ;gBAAEd,UAAU;YAAK;YAChEe,QAAQ;gBAAEjB,MAAMM;gBAAQJ,UAAU;YAAK;YACvCgB,aAAa;gBAAElB,MAAMC;gBAAQC,UAAU;YAAK;YAC5CiB,MAAM;gBAAEnB,MAAMoB;gBAAMlB,UAAU;gBAAMK,SAASa,KAAKC,GAAG;YAAC;QACxD;KACD;AACH,GACA;IAAEC,YAAY;AAAK;AAGrB,MAAMC,UAAUC,IAAAA,eAAK,EAAW,WAAW3B;MAC3C,WAAe0B"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1133c3a71c9f6295b512d758caff16fe19540047"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2m9myanx5r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2m9myanx5r();
cov_2m9myanx5r().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2m9myanx5r().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2m9myanx5r().f[0]++;
    cov_2m9myanx5r().s[2]++;
    return _default;
  }
});
const _mongoose =
/* istanbul ignore next */
(cov_2m9myanx5r().s[3]++, require("mongoose"));
const PartnerSchema =
/* istanbul ignore next */
(cov_2m9myanx5r().s[4]++, new _mongoose.Schema({
  name: {
    type: String,
    required: true
  },
  email: {
    type: String,
    required: true,
    unique: true
  },
  commissionRate: {
    type: Number,
    required: true,
    default: 10
  },
  totalEarnings: {
    type: Number,
    required: true,
    default: 0
  },
  balance: {
    type: Number,
    required: true,
    default: 0
  },
  bankInfo: {
    accountName: {
      type: String,
      required: true
    },
    accountNumber: {
      type: String,
      required: true
    },
    bankName: {
      type: String,
      required: true
    },
    swiftCode: {
      type: String,
      required: true
    }
  },
  transactions: [{
    type: {
      type: String,
      enum: ['credit', 'debit'],
      required: true
    },
    amount: {
      type: Number,
      required: true
    },
    description: {
      type: String,
      required: true
    },
    date: {
      type: Date,
      required: true,
      default: Date.now
    }
  }]
}, {
  timestamps: true
}));
const Partner =
/* istanbul ignore next */
(cov_2m9myanx5r().s[5]++, (0, _mongoose.model)('Partner', PartnerSchema));
const _default =
/* istanbul ignore next */
(cov_2m9myanx5r().s[6]++, Partner);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMm05bXlhbng1ciIsImFjdHVhbENvdmVyYWdlIiwicyIsIl9kZWZhdWx0IiwiUGFydG5lclNjaGVtYSIsIl9tb25nb29zZSIsIlNjaGVtYSIsIm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJlbWFpbCIsInVuaXF1ZSIsImNvbW1pc3Npb25SYXRlIiwiTnVtYmVyIiwiZGVmYXVsdCIsInRvdGFsRWFybmluZ3MiLCJiYWxhbmNlIiwiYmFua0luZm8iLCJhY2NvdW50TmFtZSIsImFjY291bnROdW1iZXIiLCJiYW5rTmFtZSIsInN3aWZ0Q29kZSIsInRyYW5zYWN0aW9ucyIsImVudW0iLCJhbW91bnQiLCJkZXNjcmlwdGlvbiIsImRhdGUiLCJEYXRlIiwibm93IiwidGltZXN0YW1wcyIsIlBhcnRuZXIiLCJtb2RlbCJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9saWIvZGIvbW9kZWxzL3BhcnRuZXIubW9kZWwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2NoZW1hLCBtb2RlbCwgRG9jdW1lbnQgfSBmcm9tICdtb25nb29zZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVBhcnRuZXIgZXh0ZW5kcyBEb2N1bWVudCB7XG4gIG5hbWU6IHN0cmluZztcbiAgZW1haWw6IHN0cmluZztcbiAgY29tbWlzc2lvblJhdGU6IG51bWJlcjsgLy8gU2VsbGVyJ3MgY29tbWlzc2lvbiByYXRlIChpbiBwZXJjZW50YWdlKVxuICB0b3RhbEVhcm5pbmdzOiBudW1iZXI7IC8vIFRvdGFsIGVhcm5pbmdzIGZyb20gc2FsZXNcbiAgYmFsYW5jZTogbnVtYmVyOyAvLyBSZW1haW5pbmcgYmFsYW5jZSBmb3Igd2l0aGRyYXdhbFxuICBiYW5rSW5mbzoge1xuICAgIGFjY291bnROYW1lOiBzdHJpbmc7XG4gICAgYWNjb3VudE51bWJlcjogc3RyaW5nO1xuICAgIGJhbmtOYW1lOiBzdHJpbmc7XG4gICAgc3dpZnRDb2RlOiBzdHJpbmc7XG4gIH07XG4gIHRyYW5zYWN0aW9uczogQXJyYXk8e1xuICAgIHR5cGU6ICdjcmVkaXQnIHwgJ2RlYml0JztcbiAgICBhbW91bnQ6IG51bWJlcjtcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICAgIGRhdGU6IERhdGU7XG4gIH0+O1xufVxuXG5jb25zdCBQYXJ0bmVyU2NoZW1hID0gbmV3IFNjaGVtYTxJUGFydG5lcj4oXG4gIHtcbiAgICBuYW1lOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcbiAgICBlbWFpbDogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlLCB1bmlxdWU6IHRydWUgfSxcbiAgICBjb21taXNzaW9uUmF0ZTogeyB0eXBlOiBOdW1iZXIsIHJlcXVpcmVkOiB0cnVlLCBkZWZhdWx0OiAxMCB9LCAvLyBEZWZhdWx0IDEwJSBjb21taXNzaW9uIHJhdGVcbiAgICB0b3RhbEVhcm5pbmdzOiB7IHR5cGU6IE51bWJlciwgcmVxdWlyZWQ6IHRydWUsIGRlZmF1bHQ6IDAgfSxcbiAgICBiYWxhbmNlOiB7IHR5cGU6IE51bWJlciwgcmVxdWlyZWQ6IHRydWUsIGRlZmF1bHQ6IDAgfSxcbiAgICBiYW5rSW5mbzoge1xuICAgICAgYWNjb3VudE5hbWU6IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSB9LFxuICAgICAgYWNjb3VudE51bWJlcjogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sXG4gICAgICBiYW5rTmFtZTogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sXG4gICAgICBzd2lmdENvZGU6IHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSB9LFxuICAgIH0sXG4gICAgdHJhbnNhY3Rpb25zOiBbXG4gICAgICB7XG4gICAgICAgIHR5cGU6IHsgdHlwZTogU3RyaW5nLCBlbnVtOiBbJ2NyZWRpdCcsICdkZWJpdCddLCByZXF1aXJlZDogdHJ1ZSB9LFxuICAgICAgICBhbW91bnQ6IHsgdHlwZTogTnVtYmVyLCByZXF1aXJlZDogdHJ1ZSB9LFxuICAgICAgICBkZXNjcmlwdGlvbjogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sXG4gICAgICAgIGRhdGU6IHsgdHlwZTogRGF0ZSwgcmVxdWlyZWQ6IHRydWUsIGRlZmF1bHQ6IERhdGUubm93IH0sXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG4gIHsgdGltZXN0YW1wczogdHJ1ZSB9XG4pO1xuXG5jb25zdCBQYXJ0bmVyID0gbW9kZWw8SVBhcnRuZXI+KCdQYXJ0bmVyJywgUGFydG5lclNjaGVtYSk7XG5leHBvcnQgZGVmYXVsdCBQYXJ0bmVyOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBd0J5QztJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7OytCQXdCekM7Ozs7OztXQUFBQyxRQUFBOzs7OztrQ0FoRHdDO0FBc0J4QyxNQUFNQyxhQUFBO0FBQUE7QUFBQSxDQUFBSixjQUFBLEdBQUFFLENBQUEsT0FBZ0IsSUFBSUcsU0FBQSxDQUFBQyxNQUFNLENBQzlCO0VBQ0VDLElBQUEsRUFBTTtJQUFFQyxJQUFBLEVBQU1DLE1BQUE7SUFBUUMsUUFBQSxFQUFVO0VBQUs7RUFDckNDLEtBQUEsRUFBTztJQUFFSCxJQUFBLEVBQU1DLE1BQUE7SUFBUUMsUUFBQSxFQUFVO0lBQU1FLE1BQUEsRUFBUTtFQUFLO0VBQ3BEQyxjQUFBLEVBQWdCO0lBQUVMLElBQUEsRUFBTU0sTUFBQTtJQUFRSixRQUFBLEVBQVU7SUFBTUssT0FBQSxFQUFTO0VBQUc7RUFDNURDLGFBQUEsRUFBZTtJQUFFUixJQUFBLEVBQU1NLE1BQUE7SUFBUUosUUFBQSxFQUFVO0lBQU1LLE9BQUEsRUFBUztFQUFFO0VBQzFERSxPQUFBLEVBQVM7SUFBRVQsSUFBQSxFQUFNTSxNQUFBO0lBQVFKLFFBQUEsRUFBVTtJQUFNSyxPQUFBLEVBQVM7RUFBRTtFQUNwREcsUUFBQSxFQUFVO0lBQ1JDLFdBQUEsRUFBYTtNQUFFWCxJQUFBLEVBQU1DLE1BQUE7TUFBUUMsUUFBQSxFQUFVO0lBQUs7SUFDNUNVLGFBQUEsRUFBZTtNQUFFWixJQUFBLEVBQU1DLE1BQUE7TUFBUUMsUUFBQSxFQUFVO0lBQUs7SUFDOUNXLFFBQUEsRUFBVTtNQUFFYixJQUFBLEVBQU1DLE1BQUE7TUFBUUMsUUFBQSxFQUFVO0lBQUs7SUFDekNZLFNBQUEsRUFBVztNQUFFZCxJQUFBLEVBQU1DLE1BQUE7TUFBUUMsUUFBQSxFQUFVO0lBQUs7RUFDNUM7RUFDQWEsWUFBQSxFQUFjLENBQ1o7SUFDRWYsSUFBQSxFQUFNO01BQUVBLElBQUEsRUFBTUMsTUFBQTtNQUFRZSxJQUFBLEVBQU0sQ0FBQyxVQUFVLFFBQVE7TUFBRWQsUUFBQSxFQUFVO0lBQUs7SUFDaEVlLE1BQUEsRUFBUTtNQUFFakIsSUFBQSxFQUFNTSxNQUFBO01BQVFKLFFBQUEsRUFBVTtJQUFLO0lBQ3ZDZ0IsV0FBQSxFQUFhO01BQUVsQixJQUFBLEVBQU1DLE1BQUE7TUFBUUMsUUFBQSxFQUFVO0lBQUs7SUFDNUNpQixJQUFBLEVBQU07TUFBRW5CLElBQUEsRUFBTW9CLElBQUE7TUFBTWxCLFFBQUEsRUFBVTtNQUFNSyxPQUFBLEVBQVNhLElBQUEsQ0FBS0M7SUFBSTtFQUN4RDtBQUVKLEdBQ0E7RUFBRUMsVUFBQSxFQUFZO0FBQUs7QUFHckIsTUFBTUMsT0FBQTtBQUFBO0FBQUEsQ0FBQS9CLGNBQUEsR0FBQUUsQ0FBQSxPQUFVLElBQUFHLFNBQUEsQ0FBQTJCLEtBQUssRUFBVyxXQUFXNUIsYUFBQTtNQUMzQ0QsUUFBQTtBQUFBO0FBQUEsQ0FBQUgsY0FBQSxHQUFBRSxDQUFBLE9BQWU2QixPQUFBIiwiaWdub3JlTGlzdCI6W119