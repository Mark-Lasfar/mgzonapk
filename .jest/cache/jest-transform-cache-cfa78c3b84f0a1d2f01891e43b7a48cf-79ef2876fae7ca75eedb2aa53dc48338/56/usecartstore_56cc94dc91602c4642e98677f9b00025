a3517ca380ca57b88d0d5e64998c53f6
"use strict";

/* istanbul ignore next */
function cov_1djgxjdeoc() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/hooks/use-cart-store.ts";
  var hash = "7f076b82155771ab339e78e48b65de1f4bc7bf40";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/hooks/use-cart-store.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 35
        }
      },
      "4": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 49
        }
      },
      "5": {
        start: {
          line: 13,
          column: 22
        },
        end: {
          line: 13,
          column: 61
        }
      },
      "6": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 23,
          column: 1
        }
      },
      "7": {
        start: {
          line: 24,
          column: 21
        },
        end: {
          line: 144,
          column: 3
        }
      },
      "8": {
        start: {
          line: 24,
          column: 80
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "9": {
        start: {
          line: 27,
          column: 47
        },
        end: {
          line: 27,
          column: 57
        }
      },
      "10": {
        start: {
          line: 28,
          column: 30
        },
        end: {
          line: 28,
          column: 123
        }
      },
      "11": {
        start: {
          line: 28,
          column: 46
        },
        end: {
          line: 28,
          column: 122
        }
      },
      "12": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 37,
          column: 13
        }
      },
      "13": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 32,
          column: 17
        }
      },
      "14": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 65
        }
      },
      "15": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 36,
          column: 17
        }
      },
      "16": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 65
        }
      },
      "17": {
        start: {
          line: 38,
          column: 37
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "18": {
        start: {
          line: 38,
          column: 64
        },
        end: {
          line: 41,
          column: 21
        }
      },
      "19": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 57,
          column: 15
        }
      },
      "20": {
        start: {
          line: 58,
          column: 30
        },
        end: {
          line: 58,
          column: 134
        }
      },
      "21": {
        start: {
          line: 58,
          column: 57
        },
        end: {
          line: 58,
          column: 133
        }
      },
      "22": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "23": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 58
        }
      },
      "24": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 38
        }
      },
      "25": {
        start: {
          line: 65,
          column: 47
        },
        end: {
          line: 65,
          column: 57
        }
      },
      "26": {
        start: {
          line: 66,
          column: 26
        },
        end: {
          line: 66,
          column: 119
        }
      },
      "27": {
        start: {
          line: 66,
          column: 42
        },
        end: {
          line: 66,
          column: 118
        }
      },
      "28": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "29": {
        start: {
          line: 67,
          column: 24
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "30": {
        start: {
          line: 68,
          column: 37
        },
        end: {
          line: 71,
          column: 22
        }
      },
      "31": {
        start: {
          line: 68,
          column: 52
        },
        end: {
          line: 71,
          column: 21
        }
      },
      "32": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 81,
          column: 15
        }
      },
      "33": {
        start: {
          line: 84,
          column: 47
        },
        end: {
          line: 84,
          column: 57
        }
      },
      "34": {
        start: {
          line: 85,
          column: 37
        },
        end: {
          line: 85,
          column: 132
        }
      },
      "35": {
        start: {
          line: 85,
          column: 55
        },
        end: {
          line: 85,
          column: 131
        }
      },
      "36": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 95,
          column: 15
        }
      },
      "37": {
        start: {
          line: 98,
          column: 30
        },
        end: {
          line: 98,
          column: 40
        }
      },
      "38": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 108,
          column: 15
        }
      },
      "39": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 116,
          column: 15
        }
      },
      "40": {
        start: {
          line: 119,
          column: 47
        },
        end: {
          line: 119,
          column: 57
        }
      },
      "41": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 129,
          column: 15
        }
      },
      "42": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 137,
          column: 15
        }
      },
      "43": {
        start: {
          line: 139,
          column: 18
        },
        end: {
          line: 141,
          column: 14
        }
      },
      "44": {
        start: {
          line: 145,
          column: 17
        },
        end: {
          line: 145,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 67
          },
          end: {
            line: 24,
            column: 68
          }
        },
        loc: {
          start: {
            line: 24,
            column: 80
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 17
          },
          end: {
            line: 26,
            column: 18
          }
        },
        loc: {
          start: {
            line: 26,
            column: 41
          },
          end: {
            line: 63,
            column: 9
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 28,
            column: 42
          }
        },
        loc: {
          start: {
            line: 28,
            column: 46
          },
          end: {
            line: 28,
            column: 122
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 59
          },
          end: {
            line: 38,
            column: 60
          }
        },
        loc: {
          start: {
            line: 38,
            column: 64
          },
          end: {
            line: 41,
            column: 21
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 58,
            column: 52
          },
          end: {
            line: 58,
            column: 53
          }
        },
        loc: {
          start: {
            line: 58,
            column: 57
          },
          end: {
            line: 58,
            column: 133
          }
        },
        line: 58
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 64,
            column: 20
          },
          end: {
            line: 64,
            column: 21
          }
        },
        loc: {
          start: {
            line: 64,
            column: 44
          },
          end: {
            line: 82,
            column: 9
          }
        },
        line: 64
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 66,
            column: 37
          },
          end: {
            line: 66,
            column: 38
          }
        },
        loc: {
          start: {
            line: 66,
            column: 42
          },
          end: {
            line: 66,
            column: 118
          }
        },
        line: 66
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 68,
            column: 47
          },
          end: {
            line: 68,
            column: 48
          }
        },
        loc: {
          start: {
            line: 68,
            column: 52
          },
          end: {
            line: 71,
            column: 21
          }
        },
        line: 68
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 83,
            column: 21
          }
        },
        loc: {
          start: {
            line: 83,
            column: 34
          },
          end: {
            line: 96,
            column: 9
          }
        },
        line: 83
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 85,
            column: 50
          },
          end: {
            line: 85,
            column: 51
          }
        },
        loc: {
          start: {
            line: 85,
            column: 55
          },
          end: {
            line: 85,
            column: 131
          }
        },
        line: 85
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 97,
            column: 28
          },
          end: {
            line: 97,
            column: 29
          }
        },
        loc: {
          start: {
            line: 97,
            column: 53
          },
          end: {
            line: 109,
            column: 9
          }
        },
        line: 97
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 110,
            column: 26
          },
          end: {
            line: 110,
            column: 27
          }
        },
        loc: {
          start: {
            line: 110,
            column: 43
          },
          end: {
            line: 117,
            column: 9
          }
        },
        line: 110
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 118,
            column: 30
          },
          end: {
            line: 118,
            column: 31
          }
        },
        loc: {
          start: {
            line: 118,
            column: 45
          },
          end: {
            line: 130,
            column: 9
          }
        },
        line: 118
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 131,
            column: 19
          },
          end: {
            line: 131,
            column: 20
          }
        },
        loc: {
          start: {
            line: 131,
            column: 23
          },
          end: {
            line: 138,
            column: 9
          }
        },
        line: 131
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 139,
            column: 14
          },
          end: {
            line: 139,
            column: 15
          }
        },
        loc: {
          start: {
            line: 139,
            column: 18
          },
          end: {
            line: 141,
            column: 14
          }
        },
        line: 139
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 46
          },
          end: {
            line: 28,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 46
          },
          end: {
            line: 28,
            column: 72
          }
        }, {
          start: {
            line: 28,
            column: 76
          },
          end: {
            line: 28,
            column: 98
          }
        }, {
          start: {
            line: 28,
            column: 102
          },
          end: {
            line: 28,
            column: 122
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 37,
            column: 13
          }
        }, {
          start: {
            line: 33,
            column: 19
          },
          end: {
            line: 37,
            column: 13
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 32,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 32,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 36,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 36,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 37
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 49
          },
          end: {
            line: 41,
            column: 22
          }
        }, {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 47,
            column: 13
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 64
          },
          end: {
            line: 41,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 143
          },
          end: {
            line: 41,
            column: 17
          }
        }, {
          start: {
            line: 41,
            column: 20
          },
          end: {
            line: 41,
            column: 21
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 64
          },
          end: {
            line: 38,
            column: 140
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 64
          },
          end: {
            line: 38,
            column: 90
          }
        }, {
          start: {
            line: 38,
            column: 94
          },
          end: {
            line: 38,
            column: 116
          }
        }, {
          start: {
            line: 38,
            column: 120
          },
          end: {
            line: 38,
            column: 140
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 58,
            column: 57
          },
          end: {
            line: 58,
            column: 133
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 57
          },
          end: {
            line: 58,
            column: 83
          }
        }, {
          start: {
            line: 58,
            column: 87
          },
          end: {
            line: 58,
            column: 109
          }
        }, {
          start: {
            line: 58,
            column: 113
          },
          end: {
            line: 58,
            column: 133
          }
        }],
        line: 58
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "9": {
        loc: {
          start: {
            line: 66,
            column: 42
          },
          end: {
            line: 66,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 42
          },
          end: {
            line: 66,
            column: 68
          }
        }, {
          start: {
            line: 66,
            column: 72
          },
          end: {
            line: 66,
            column: 94
          }
        }, {
          start: {
            line: 66,
            column: 98
          },
          end: {
            line: 66,
            column: 118
          }
        }],
        line: 66
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 68,
            column: 52
          },
          end: {
            line: 71,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 131
          },
          end: {
            line: 71,
            column: 17
          }
        }, {
          start: {
            line: 71,
            column: 20
          },
          end: {
            line: 71,
            column: 21
          }
        }],
        line: 68
      },
      "12": {
        loc: {
          start: {
            line: 68,
            column: 52
          },
          end: {
            line: 68,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 52
          },
          end: {
            line: 68,
            column: 78
          }
        }, {
          start: {
            line: 68,
            column: 82
          },
          end: {
            line: 68,
            column: 104
          }
        }, {
          start: {
            line: 68,
            column: 108
          },
          end: {
            line: 68,
            column: 128
          }
        }],
        line: 68
      },
      "13": {
        loc: {
          start: {
            line: 85,
            column: 55
          },
          end: {
            line: 85,
            column: 131
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 55
          },
          end: {
            line: 85,
            column: 81
          }
        }, {
          start: {
            line: 85,
            column: 85
          },
          end: {
            line: 85,
            column: 107
          }
        }, {
          start: {
            line: 85,
            column: 111
          },
          end: {
            line: 85,
            column: 131
          }
        }],
        line: 85
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/hooks/use-cart-store.ts"],
      sourcesContent: ["import { create } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\nimport { Cart, OrderItem, ShippingAddress } from '@/types'\nimport { calcDeliveryDateAndPrice } from '@/lib/actions/order.actions'\n\nconst initialState: Cart = {\n  items: [],\n  itemsPrice: 0,\n  taxPrice: undefined,\n  shippingPrice: undefined,\n  totalPrice: 0,\n  paymentMethod: undefined,\n  shippingAddress: undefined,\n  deliveryDateIndex: undefined,\n}\n\ninterface CartState {\n  cart: Cart\n  addItem: (item: OrderItem, quantity: number) => Promise<string>\n  updateItem: (item: OrderItem, quantity: number) => Promise<void>\n  removeItem: (item: OrderItem) => void\n  clearCart: () => void\n  setShippingAddress: (shippingAddress: ShippingAddress) => Promise<void>\n  setPaymentMethod: (paymentMethod: string) => void\n  setDeliveryDateIndex: (index: number) => Promise<void>\n}\n\nconst useCartStore = create(\n  persist<CartState>(\n    (set, get) => ({\n      cart: initialState,\n\n      addItem: async (item: OrderItem, quantity: number) => {\n        const { items, shippingAddress } = get().cart\n        const existItem = items.find(\n          (x) =>\n            x.product === item.product &&\n            x.color === item.color &&\n            x.size === item.size\n        )\n\n        if (existItem) {\n          if (existItem.countInStock < quantity + existItem.quantity) {\n            throw new Error('Not enough items in stock')\n          }\n        } else {\n          if (item.countInStock < item.quantity) {\n            throw new Error('Not enough items in stock')\n          }\n        }\n\n        const updatedCartItems = existItem\n          ? items.map((x) =>\n              x.product === item.product &&\n              x.color === item.color &&\n              x.size === item.size\n                ? { ...existItem, quantity: existItem.quantity + quantity }\n                : x\n            )\n          : [...items, { ...item, quantity }]\n\n        set({\n          cart: {\n            ...get().cart,\n            items: updatedCartItems,\n            ...(await calcDeliveryDateAndPrice({\n              items: updatedCartItems,\n              shippingAddress,\n            })),\n          },\n        })\n        const foundItem = updatedCartItems.find(\n          (x) =>\n            x.product === item.product &&\n            x.color === item.color &&\n            x.size === item.size\n        )\n        if (!foundItem) {\n          throw new Error('Item not found in cart')\n        }\n        return foundItem.clientId\n      },\n      updateItem: async (item: OrderItem, quantity: number) => {\n        const { items, shippingAddress } = get().cart\n        const exist = items.find(\n          (x) =>\n            x.product === item.product &&\n            x.color === item.color &&\n            x.size === item.size\n        )\n        if (!exist) return\n        const updatedCartItems = items.map((x) =>\n          x.product === item.product &&\n          x.color === item.color &&\n          x.size === item.size\n            ? { ...exist, quantity: quantity }\n            : x\n        )\n        set({\n          cart: {\n            ...get().cart,\n            items: updatedCartItems,\n            ...(await calcDeliveryDateAndPrice({\n              items: updatedCartItems,\n              shippingAddress,\n            })),\n          },\n        })\n      },\n      removeItem: async (item: OrderItem) => {\n        const { items, shippingAddress } = get().cart\n        const updatedCartItems = items.filter(\n          (x) =>\n            x.product !== item.product ||\n            x.color !== item.color ||\n            x.size !== item.size\n        )\n        set({\n          cart: {\n            ...get().cart,\n            items: updatedCartItems,\n            ...(await calcDeliveryDateAndPrice({\n              items: updatedCartItems,\n              shippingAddress,\n            })),\n          },\n        })\n      },\n      setShippingAddress: async (shippingAddress: ShippingAddress) => {\n        const { items } = get().cart\n        set({\n          cart: {\n            ...get().cart,\n            shippingAddress,\n            ...(await calcDeliveryDateAndPrice({\n              items,\n              shippingAddress,\n            })),\n          },\n        })\n      },\n      setPaymentMethod: (paymentMethod: string) => {\n        set({\n          cart: {\n            ...get().cart,\n            paymentMethod,\n          },\n        })\n      },\n      setDeliveryDateIndex: async (index: number) => {\n        const { items, shippingAddress } = get().cart\n\n        set({\n          cart: {\n            ...get().cart,\n            ...(await calcDeliveryDateAndPrice({\n              items,\n              shippingAddress,\n              deliveryDateIndex: index,\n            })),\n          },\n        })\n      },\n      clearCart: () => {\n        set({\n          cart: {\n            ...get().cart,\n            items: [],\n          },\n        })\n      },\n      init: () => set({ cart: initialState }),\n    }),\n\n    {\n      name: 'cart-store',\n    }\n  )\n)\nexport default useCartStore\n"],
      names: ["initialState", "items", "itemsPrice", "taxPrice", "undefined", "shippingPrice", "totalPrice", "paymentMethod", "shippingAddress", "deliveryDateIndex", "useCartStore", "create", "persist", "set", "get", "cart", "addItem", "item", "quantity", "existItem", "find", "x", "product", "color", "size", "countInStock", "Error", "updatedCartItems", "map", "calcDeliveryDateAndPrice", "foundItem", "clientId", "updateItem", "exist", "removeItem", "filter", "setShippingAddress", "setPaymentMethod", "setDeliveryDateIndex", "index", "clearCart", "init", "name"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7f076b82155771ab339e78e48b65de1f4bc7bf40"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1djgxjdeoc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1djgxjdeoc();
cov_1djgxjdeoc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1djgxjdeoc().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1djgxjdeoc().f[0]++;
    cov_1djgxjdeoc().s[2]++;
    return _default;
  }
});
const _zustand =
/* istanbul ignore next */
(cov_1djgxjdeoc().s[3]++, require("zustand"));
const _middleware =
/* istanbul ignore next */
(cov_1djgxjdeoc().s[4]++, require("zustand/middleware"));
const _orderactions =
/* istanbul ignore next */
(cov_1djgxjdeoc().s[5]++, require("../lib/actions/order.actions"));
const initialState =
/* istanbul ignore next */
(cov_1djgxjdeoc().s[6]++, {
  items: [],
  itemsPrice: 0,
  taxPrice: undefined,
  shippingPrice: undefined,
  totalPrice: 0,
  paymentMethod: undefined,
  shippingAddress: undefined,
  deliveryDateIndex: undefined
});
const useCartStore =
/* istanbul ignore next */
(cov_1djgxjdeoc().s[7]++, (0, _zustand.create)((0, _middleware.persist)((set, get) => {
  /* istanbul ignore next */
  cov_1djgxjdeoc().f[1]++;
  cov_1djgxjdeoc().s[8]++;
  return {
    cart: initialState,
    addItem: async (item, quantity) => {
      /* istanbul ignore next */
      cov_1djgxjdeoc().f[2]++;
      const {
        items,
        shippingAddress
      } =
      /* istanbul ignore next */
      (cov_1djgxjdeoc().s[9]++, get().cart);
      const existItem =
      /* istanbul ignore next */
      (cov_1djgxjdeoc().s[10]++, items.find(x => {
        /* istanbul ignore next */
        cov_1djgxjdeoc().f[3]++;
        cov_1djgxjdeoc().s[11]++;
        return /* istanbul ignore next */(cov_1djgxjdeoc().b[0][0]++, x.product === item.product) &&
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[0][1]++, x.color === item.color) &&
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[0][2]++, x.size === item.size);
      }));
      /* istanbul ignore next */
      cov_1djgxjdeoc().s[12]++;
      if (existItem) {
        /* istanbul ignore next */
        cov_1djgxjdeoc().b[1][0]++;
        cov_1djgxjdeoc().s[13]++;
        if (existItem.countInStock < quantity + existItem.quantity) {
          /* istanbul ignore next */
          cov_1djgxjdeoc().b[2][0]++;
          cov_1djgxjdeoc().s[14]++;
          throw new Error('Not enough items in stock');
        } else
        /* istanbul ignore next */
        {
          cov_1djgxjdeoc().b[2][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_1djgxjdeoc().b[1][1]++;
        cov_1djgxjdeoc().s[15]++;
        if (item.countInStock < item.quantity) {
          /* istanbul ignore next */
          cov_1djgxjdeoc().b[3][0]++;
          cov_1djgxjdeoc().s[16]++;
          throw new Error('Not enough items in stock');
        } else
        /* istanbul ignore next */
        {
          cov_1djgxjdeoc().b[3][1]++;
        }
      }
      const updatedCartItems =
      /* istanbul ignore next */
      (cov_1djgxjdeoc().s[17]++, existItem ?
      /* istanbul ignore next */
      (cov_1djgxjdeoc().b[4][0]++, items.map(x => {
        /* istanbul ignore next */
        cov_1djgxjdeoc().f[4]++;
        cov_1djgxjdeoc().s[18]++;
        return /* istanbul ignore next */(cov_1djgxjdeoc().b[6][0]++, x.product === item.product) &&
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[6][1]++, x.color === item.color) &&
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[6][2]++, x.size === item.size) ?
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[5][0]++, {
          ...existItem,
          quantity: existItem.quantity + quantity
        }) :
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[5][1]++, x);
      })) :
      /* istanbul ignore next */
      (cov_1djgxjdeoc().b[4][1]++, [...items, {
        ...item,
        quantity
      }]));
      /* istanbul ignore next */
      cov_1djgxjdeoc().s[19]++;
      set({
        cart: {
          ...get().cart,
          items: updatedCartItems,
          ...(await (0, _orderactions.calcDeliveryDateAndPrice)({
            items: updatedCartItems,
            shippingAddress
          }))
        }
      });
      const foundItem =
      /* istanbul ignore next */
      (cov_1djgxjdeoc().s[20]++, updatedCartItems.find(x => {
        /* istanbul ignore next */
        cov_1djgxjdeoc().f[5]++;
        cov_1djgxjdeoc().s[21]++;
        return /* istanbul ignore next */(cov_1djgxjdeoc().b[7][0]++, x.product === item.product) &&
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[7][1]++, x.color === item.color) &&
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[7][2]++, x.size === item.size);
      }));
      /* istanbul ignore next */
      cov_1djgxjdeoc().s[22]++;
      if (!foundItem) {
        /* istanbul ignore next */
        cov_1djgxjdeoc().b[8][0]++;
        cov_1djgxjdeoc().s[23]++;
        throw new Error('Item not found in cart');
      } else
      /* istanbul ignore next */
      {
        cov_1djgxjdeoc().b[8][1]++;
      }
      cov_1djgxjdeoc().s[24]++;
      return foundItem.clientId;
    },
    updateItem: async (item, quantity) => {
      /* istanbul ignore next */
      cov_1djgxjdeoc().f[6]++;
      const {
        items,
        shippingAddress
      } =
      /* istanbul ignore next */
      (cov_1djgxjdeoc().s[25]++, get().cart);
      const exist =
      /* istanbul ignore next */
      (cov_1djgxjdeoc().s[26]++, items.find(x => {
        /* istanbul ignore next */
        cov_1djgxjdeoc().f[7]++;
        cov_1djgxjdeoc().s[27]++;
        return /* istanbul ignore next */(cov_1djgxjdeoc().b[9][0]++, x.product === item.product) &&
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[9][1]++, x.color === item.color) &&
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[9][2]++, x.size === item.size);
      }));
      /* istanbul ignore next */
      cov_1djgxjdeoc().s[28]++;
      if (!exist) {
        /* istanbul ignore next */
        cov_1djgxjdeoc().b[10][0]++;
        cov_1djgxjdeoc().s[29]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1djgxjdeoc().b[10][1]++;
      }
      const updatedCartItems =
      /* istanbul ignore next */
      (cov_1djgxjdeoc().s[30]++, items.map(x => {
        /* istanbul ignore next */
        cov_1djgxjdeoc().f[8]++;
        cov_1djgxjdeoc().s[31]++;
        return /* istanbul ignore next */(cov_1djgxjdeoc().b[12][0]++, x.product === item.product) &&
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[12][1]++, x.color === item.color) &&
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[12][2]++, x.size === item.size) ?
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[11][0]++, {
          ...exist,
          quantity: quantity
        }) :
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[11][1]++, x);
      }));
      /* istanbul ignore next */
      cov_1djgxjdeoc().s[32]++;
      set({
        cart: {
          ...get().cart,
          items: updatedCartItems,
          ...(await (0, _orderactions.calcDeliveryDateAndPrice)({
            items: updatedCartItems,
            shippingAddress
          }))
        }
      });
    },
    removeItem: async item => {
      /* istanbul ignore next */
      cov_1djgxjdeoc().f[9]++;
      const {
        items,
        shippingAddress
      } =
      /* istanbul ignore next */
      (cov_1djgxjdeoc().s[33]++, get().cart);
      const updatedCartItems =
      /* istanbul ignore next */
      (cov_1djgxjdeoc().s[34]++, items.filter(x => {
        /* istanbul ignore next */
        cov_1djgxjdeoc().f[10]++;
        cov_1djgxjdeoc().s[35]++;
        return /* istanbul ignore next */(cov_1djgxjdeoc().b[13][0]++, x.product !== item.product) ||
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[13][1]++, x.color !== item.color) ||
        /* istanbul ignore next */
        (cov_1djgxjdeoc().b[13][2]++, x.size !== item.size);
      }));
      /* istanbul ignore next */
      cov_1djgxjdeoc().s[36]++;
      set({
        cart: {
          ...get().cart,
          items: updatedCartItems,
          ...(await (0, _orderactions.calcDeliveryDateAndPrice)({
            items: updatedCartItems,
            shippingAddress
          }))
        }
      });
    },
    setShippingAddress: async shippingAddress => {
      /* istanbul ignore next */
      cov_1djgxjdeoc().f[11]++;
      const {
        items
      } =
      /* istanbul ignore next */
      (cov_1djgxjdeoc().s[37]++, get().cart);
      /* istanbul ignore next */
      cov_1djgxjdeoc().s[38]++;
      set({
        cart: {
          ...get().cart,
          shippingAddress,
          ...(await (0, _orderactions.calcDeliveryDateAndPrice)({
            items,
            shippingAddress
          }))
        }
      });
    },
    setPaymentMethod: paymentMethod => {
      /* istanbul ignore next */
      cov_1djgxjdeoc().f[12]++;
      cov_1djgxjdeoc().s[39]++;
      set({
        cart: {
          ...get().cart,
          paymentMethod
        }
      });
    },
    setDeliveryDateIndex: async index => {
      /* istanbul ignore next */
      cov_1djgxjdeoc().f[13]++;
      const {
        items,
        shippingAddress
      } =
      /* istanbul ignore next */
      (cov_1djgxjdeoc().s[40]++, get().cart);
      /* istanbul ignore next */
      cov_1djgxjdeoc().s[41]++;
      set({
        cart: {
          ...get().cart,
          ...(await (0, _orderactions.calcDeliveryDateAndPrice)({
            items,
            shippingAddress,
            deliveryDateIndex: index
          }))
        }
      });
    },
    clearCart: () => {
      /* istanbul ignore next */
      cov_1djgxjdeoc().f[14]++;
      cov_1djgxjdeoc().s[42]++;
      set({
        cart: {
          ...get().cart,
          items: []
        }
      });
    },
    init: () => {
      /* istanbul ignore next */
      cov_1djgxjdeoc().f[15]++;
      cov_1djgxjdeoc().s[43]++;
      return set({
        cart: initialState
      });
    }
  };
}, {
  name: 'cart-store'
})));
const _default =
/* istanbul ignore next */
(cov_1djgxjdeoc().s[44]++, useCartStore);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,