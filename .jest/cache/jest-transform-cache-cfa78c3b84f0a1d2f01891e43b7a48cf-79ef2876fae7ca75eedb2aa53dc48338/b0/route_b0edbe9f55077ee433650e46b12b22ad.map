{"version":3,"names":["cov_j8dr5qu4r","actualCoverage","s","GET","f","session","_auth","auth","b","user","role","_server","NextResponse","json","success","message","status","sellerResult","_selleractions","getSellerByUserId","id","data","metrics","getSellerMetrics","salesData","name","sales","totalSales","revenue","yearly","totalOrders","orders","total","totalProducts","products","averageRating","performance","rating","lastUpdate","Date","toISOString","monthlyStats","monthly","averageValue","avgOrderValue","error"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/seller/dashboard/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { auth } from '@/auth';\nimport { getSellerMetrics, getSellerByUserId } from '@/lib/actions/seller.actions';\n\nexport async function GET() {\n  const session = await auth();\n  if (!session || session.user.role !== 'SELLER') {\n    return NextResponse.json({ success: false, message: 'Unauthorized' }, { status: 401 });\n  }\n\n  try {\n    const sellerResult = await getSellerByUserId(session.user.id);\n    if (!sellerResult.success || !sellerResult.data) {\n      return NextResponse.json({ success: false, message: 'Seller not found' }, { status: 404 });\n    }\n\n    const metrics = await getSellerMetrics(session.user.id);\n    const salesData = [\n      { name: 'Mon', sales: 100 },\n      { name: 'Tue', sales: 150 },\n      { name: 'Wed', sales: 200 },\n      { name: 'Thu', sales: 180 },\n      { name: 'Fri', sales: 220 },\n      { name: 'Sat', sales: 300 },\n      { name: 'Sun', sales: 250 },\n    ];\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        totalSales: metrics.revenue.yearly,\n        totalOrders: metrics.orders.total,\n        totalProducts: metrics.products.total,\n        averageRating: metrics.performance.rating,\n        lastUpdate: new Date().toISOString(),\n        monthlyStats: {\n          revenue: metrics.revenue.monthly,\n          orders: metrics.orders.total,\n          averageValue: metrics.orders.avgOrderValue,\n        },\n        salesData,\n      },\n    });\n  } catch (error) {\n    return NextResponse.json(\n      { success: false, message: 'Failed to fetch dashboard data' },\n      { status: 500 }\n    );\n  }\n}"],"mappings":"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","ignoreList":[]}