9eed92188b4937b4a897e65bddd0ae90
"use strict";

/* istanbul ignore next */
function cov_hpklv07a9() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/v1/api-keys/route.ts";
  var hash = "0e521e3ee0df90d9be677b504e060f3a5554fbd4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/v1/api-keys/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 12,
          column: 78
        }
      },
      "5": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "7": {
        start: {
          line: 17,
          column: 32
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "8": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 52
        }
      },
      "9": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 20,
          column: 52
        }
      },
      "10": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 41
        }
      },
      "11": {
        start: {
          line: 22,
          column: 38
        },
        end: {
          line: 22,
          column: 42
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "13": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 30,
          column: 15
        }
      },
      "14": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "15": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 40,
          column: 11
        }
      },
      "16": {
        start: {
          line: 42,
          column: 29
        },
        end: {
          line: 42,
          column: 93
        }
      },
      "17": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 19
          }
        },
        loc: {
          start: {
            line: 14,
            column: 29
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 20,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 20,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 29
          },
          end: {
            line: 42,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 54
          },
          end: {
            line: 42,
            column: 67
          }
        }, {
          start: {
            line: 42,
            column: 70
          },
          end: {
            line: 42,
            column: 93
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/v1/api-keys/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { ApiKeyService } from '@/lib/api/services/api-key.service';\nimport { validatePermissions } from '@/lib/api/middleware/auth';\n\nexport async function POST(request: NextRequest) {\n  try {\n    // Validate admin permissions\n    const permissionCheck = await validatePermissions(['admin'])(request);\n    if (permissionCheck) return permissionCheck;\n\n    const body = await request.json();\n    const { name, permissions } = body;\n\n    if (!name) {\n      return NextResponse.json(\n        { \n          success: false, \n          error: 'Name is required',\n          timestamp: new Date().toISOString(),\n        },\n        { status: 400 }\n      );\n    }\n\n    const apiKey = await ApiKeyService.createApiKey({ name, permissions });\n\n    return NextResponse.json({\n      success: true,\n      data: apiKey,\n      timestamp: new Date().toISOString(),\n    });\n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : 'Internal Server Error';\n    return NextResponse.json(\n      { \n        success: false, \n        error: errorMessage,\n        timestamp: new Date().toISOString(),\n      },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["POST", "request", "permissionCheck", "validatePermissions", "body", "json", "name", "permissions", "NextResponse", "success", "error", "timestamp", "Date", "toISOString", "status", "apiKey", "ApiKeyService", "createApiKey", "data", "errorMessage", "Error", "message"],
      mappings: ";;;;+BAIsBA;;;eAAAA;;;wBAJoB;+BACZ;sBACM;AAE7B,eAAeA,KAAKC,OAAoB;IAC7C,IAAI;QACF,6BAA6B;QAC7B,MAAMC,kBAAkB,MAAMC,IAAAA,yBAAmB,EAAC;YAAC;SAAQ,EAAEF;QAC7D,IAAIC,iBAAiB,OAAOA;QAE5B,MAAME,OAAO,MAAMH,QAAQI,IAAI;QAC/B,MAAM,EAAEC,IAAI,EAAEC,WAAW,EAAE,GAAGH;QAE9B,IAAI,CAACE,MAAM;YACT,OAAOE,oBAAY,CAACH,IAAI,CACtB;gBACEI,SAAS;gBACTC,OAAO;gBACPC,WAAW,IAAIC,OAAOC,WAAW;YACnC,GACA;gBAAEC,QAAQ;YAAI;QAElB;QAEA,MAAMC,SAAS,MAAMC,4BAAa,CAACC,YAAY,CAAC;YAAEX;YAAMC;QAAY;QAEpE,OAAOC,oBAAY,CAACH,IAAI,CAAC;YACvBI,SAAS;YACTS,MAAMH;YACNJ,WAAW,IAAIC,OAAOC,WAAW;QACnC;IACF,EAAE,OAAOH,OAAO;QACd,MAAMS,eAAeT,iBAAiBU,QAAQV,MAAMW,OAAO,GAAG;QAC9D,OAAOb,oBAAY,CAACH,IAAI,CACtB;YACEI,SAAS;YACTC,OAAOS;YACPR,WAAW,IAAIC,OAAOC,WAAW;QACnC,GACA;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0e521e3ee0df90d9be677b504e060f3a5554fbd4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_hpklv07a9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_hpklv07a9();
cov_hpklv07a9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_hpklv07a9().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_hpklv07a9().f[0]++;
    cov_hpklv07a9().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_hpklv07a9().s[3]++, require("next/server"));
const _apikeyservice =
/* istanbul ignore next */
(cov_hpklv07a9().s[4]++, require("../../../../lib/api/services/api-key.service"));
const _auth =
/* istanbul ignore next */
(cov_hpklv07a9().s[5]++, require("../../../../lib/api/middleware/auth"));
async function POST(request) {
  /* istanbul ignore next */
  cov_hpklv07a9().f[1]++;
  cov_hpklv07a9().s[6]++;
  try {
    // Validate admin permissions
    const permissionCheck =
    /* istanbul ignore next */
    (cov_hpklv07a9().s[7]++, await (0, _auth.validatePermissions)(['admin'])(request));
    /* istanbul ignore next */
    cov_hpklv07a9().s[8]++;
    if (permissionCheck) {
      /* istanbul ignore next */
      cov_hpklv07a9().b[0][0]++;
      cov_hpklv07a9().s[9]++;
      return permissionCheck;
    } else
    /* istanbul ignore next */
    {
      cov_hpklv07a9().b[0][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_hpklv07a9().s[10]++, await request.json());
    const {
      name,
      permissions
    } =
    /* istanbul ignore next */
    (cov_hpklv07a9().s[11]++, body);
    /* istanbul ignore next */
    cov_hpklv07a9().s[12]++;
    if (!name) {
      /* istanbul ignore next */
      cov_hpklv07a9().b[1][0]++;
      cov_hpklv07a9().s[13]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Name is required',
        timestamp: new Date().toISOString()
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_hpklv07a9().b[1][1]++;
    }
    const apiKey =
    /* istanbul ignore next */
    (cov_hpklv07a9().s[14]++, await _apikeyservice.ApiKeyService.createApiKey({
      name,
      permissions
    }));
    /* istanbul ignore next */
    cov_hpklv07a9().s[15]++;
    return _server.NextResponse.json({
      success: true,
      data: apiKey,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    const errorMessage =
    /* istanbul ignore next */
    (cov_hpklv07a9().s[16]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_hpklv07a9().b[2][0]++, error.message) :
    /* istanbul ignore next */
    (cov_hpklv07a9().b[2][1]++, 'Internal Server Error'));
    /* istanbul ignore next */
    cov_hpklv07a9().s[17]++;
    return _server.NextResponse.json({
      success: false,
      error: errorMessage,
      timestamp: new Date().toISOString()
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfaHBrbHYwN2E5IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiUE9TVCIsInJlcXVlc3QiLCJmIiwicGVybWlzc2lvbkNoZWNrIiwiX2F1dGgiLCJ2YWxpZGF0ZVBlcm1pc3Npb25zIiwiYiIsImJvZHkiLCJqc29uIiwibmFtZSIsInBlcm1pc3Npb25zIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsInN1Y2Nlc3MiLCJlcnJvciIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInN0YXR1cyIsImFwaUtleSIsIl9hcGlrZXlzZXJ2aWNlIiwiQXBpS2V5U2VydmljZSIsImNyZWF0ZUFwaUtleSIsImRhdGEiLCJlcnJvck1lc3NhZ2UiLCJFcnJvciIsIm1lc3NhZ2UiXSwic291cmNlcyI6WyIvaG9tZS9oYWdlci9uZXcvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyICgzKS9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIvYXBwL2FwaS92MS9hcGkta2V5cy9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgQXBpS2V5U2VydmljZSB9IGZyb20gJ0AvbGliL2FwaS9zZXJ2aWNlcy9hcGkta2V5LnNlcnZpY2UnO1xuaW1wb3J0IHsgdmFsaWRhdGVQZXJtaXNzaW9ucyB9IGZyb20gJ0AvbGliL2FwaS9taWRkbGV3YXJlL2F1dGgnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIC8vIFZhbGlkYXRlIGFkbWluIHBlcm1pc3Npb25zXG4gICAgY29uc3QgcGVybWlzc2lvbkNoZWNrID0gYXdhaXQgdmFsaWRhdGVQZXJtaXNzaW9ucyhbJ2FkbWluJ10pKHJlcXVlc3QpO1xuICAgIGlmIChwZXJtaXNzaW9uQ2hlY2spIHJldHVybiBwZXJtaXNzaW9uQ2hlY2s7XG5cbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG4gICAgY29uc3QgeyBuYW1lLCBwZXJtaXNzaW9ucyB9ID0gYm9keTtcblxuICAgIGlmICghbmFtZSkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IFxuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLCBcbiAgICAgICAgICBlcnJvcjogJ05hbWUgaXMgcmVxdWlyZWQnLFxuICAgICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgY29uc3QgYXBpS2V5ID0gYXdhaXQgQXBpS2V5U2VydmljZS5jcmVhdGVBcGlLZXkoeyBuYW1lLCBwZXJtaXNzaW9ucyB9KTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgZGF0YTogYXBpS2V5LFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnSW50ZXJuYWwgU2VydmVyIEVycm9yJztcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IFxuICAgICAgICBzdWNjZXNzOiBmYWxzZSwgXG4gICAgICAgIGVycm9yOiBlcnJvck1lc3NhZ2UsXG4gICAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFNSTtJQUFBQSxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxhQUFBO0FBQUFBLGFBQUEsR0FBQUUsQ0FBQTs7Ozs7OytCQUZrQjs7Ozs7O1dBQUFDLElBQUE7Ozs7O2lDQUpvQjs7O2lDQUNaOzs7aUNBQ007QUFFN0IsZUFBZUEsS0FBS0MsT0FBb0I7RUFBQTtFQUFBSixhQUFBLEdBQUFLLENBQUE7RUFBQUwsYUFBQSxHQUFBRSxDQUFBO0VBQzdDLElBQUk7SUFDRjtJQUNBLE1BQU1JLGVBQUE7SUFBQTtJQUFBLENBQUFOLGFBQUEsR0FBQUUsQ0FBQSxPQUFrQixNQUFNLElBQUFLLEtBQUEsQ0FBQUMsbUJBQW1CLEVBQUMsQ0FBQyxRQUFRLEVBQUVKLE9BQUE7SUFBQTtJQUFBSixhQUFBLEdBQUFFLENBQUE7SUFDN0QsSUFBSUksZUFBQSxFQUFpQjtNQUFBO01BQUFOLGFBQUEsR0FBQVMsQ0FBQTtNQUFBVCxhQUFBLEdBQUFFLENBQUE7TUFBQSxPQUFPSSxlQUFBO0lBQUE7SUFBQTtJQUFBO01BQUFOLGFBQUEsR0FBQVMsQ0FBQTtJQUFBO0lBRTVCLE1BQU1DLElBQUE7SUFBQTtJQUFBLENBQUFWLGFBQUEsR0FBQUUsQ0FBQSxRQUFPLE1BQU1FLE9BQUEsQ0FBUU8sSUFBSTtJQUMvQixNQUFNO01BQUVDLElBQUk7TUFBRUM7SUFBVyxDQUFFO0lBQUE7SUFBQSxDQUFBYixhQUFBLEdBQUFFLENBQUEsUUFBR1EsSUFBQTtJQUFBO0lBQUFWLGFBQUEsR0FBQUUsQ0FBQTtJQUU5QixJQUFJLENBQUNVLElBQUEsRUFBTTtNQUFBO01BQUFaLGFBQUEsR0FBQVMsQ0FBQTtNQUFBVCxhQUFBLEdBQUFFLENBQUE7TUFDVCxPQUFPWSxPQUFBLENBQUFDLFlBQVksQ0FBQ0osSUFBSSxDQUN0QjtRQUNFSyxPQUFBLEVBQVM7UUFDVEMsS0FBQSxFQUFPO1FBQ1BDLFNBQUEsRUFBVyxJQUFJQyxJQUFBLEdBQU9DLFdBQVc7TUFDbkMsR0FDQTtRQUFFQyxNQUFBLEVBQVE7TUFBSTtJQUVsQjtJQUFBO0lBQUE7TUFBQXJCLGFBQUEsR0FBQVMsQ0FBQTtJQUFBO0lBRUEsTUFBTWEsTUFBQTtJQUFBO0lBQUEsQ0FBQXRCLGFBQUEsR0FBQUUsQ0FBQSxRQUFTLE1BQU1xQixjQUFBLENBQUFDLGFBQWEsQ0FBQ0MsWUFBWSxDQUFDO01BQUViLElBQUE7TUFBTUM7SUFBWTtJQUFBO0lBQUFiLGFBQUEsR0FBQUUsQ0FBQTtJQUVwRSxPQUFPWSxPQUFBLENBQUFDLFlBQVksQ0FBQ0osSUFBSSxDQUFDO01BQ3ZCSyxPQUFBLEVBQVM7TUFDVFUsSUFBQSxFQUFNSixNQUFBO01BQ05KLFNBQUEsRUFBVyxJQUFJQyxJQUFBLEdBQU9DLFdBQVc7SUFDbkM7RUFDRixFQUFFLE9BQU9ILEtBQUEsRUFBTztJQUNkLE1BQU1VLFlBQUE7SUFBQTtJQUFBLENBQUEzQixhQUFBLEdBQUFFLENBQUEsUUFBZWUsS0FBQSxZQUFpQlcsS0FBQTtJQUFBO0lBQUEsQ0FBQTVCLGFBQUEsR0FBQVMsQ0FBQSxVQUFRUSxLQUFBLENBQU1ZLE9BQU87SUFBQTtJQUFBLENBQUE3QixhQUFBLEdBQUFTLENBQUEsVUFBRztJQUFBO0lBQUFULGFBQUEsR0FBQUUsQ0FBQTtJQUM5RCxPQUFPWSxPQUFBLENBQUFDLFlBQVksQ0FBQ0osSUFBSSxDQUN0QjtNQUNFSyxPQUFBLEVBQVM7TUFDVEMsS0FBQSxFQUFPVSxZQUFBO01BQ1BULFNBQUEsRUFBVyxJQUFJQyxJQUFBLEdBQU9DLFdBQVc7SUFDbkMsR0FDQTtNQUFFQyxNQUFBLEVBQVE7SUFBSTtFQUVsQjtBQUNGIiwiaWdub3JlTGlzdCI6W119