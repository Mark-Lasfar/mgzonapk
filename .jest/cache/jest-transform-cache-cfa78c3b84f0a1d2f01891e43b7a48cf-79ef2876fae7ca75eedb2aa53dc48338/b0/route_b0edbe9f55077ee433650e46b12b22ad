8c27928f3284fa92d6d7a85f9f56fb6c
"use strict";

/* istanbul ignore next */
function cov_j8dr5qu4r() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/seller/dashboard/route.ts";
  var hash = "d3cf4cc9d9e959bfa9154d15a342e8237c89db80";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/seller/dashboard/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 14
        },
        end: {
          line: 12,
          column: 41
        }
      },
      "5": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "6": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 43
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 22,
          column: 11
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "10": {
        start: {
          line: 25,
          column: 29
        },
        end: {
          line: 25,
          column: 89
        }
      },
      "11": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "12": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 32,
          column: 15
        }
      },
      "13": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 34,
          column: 83
        }
      },
      "14": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "15": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "16": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 18
          }
        },
        loc: {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 16,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 16,
            column: 16
          }
        }, {
          start: {
            line: 16,
            column: 20
          },
          end: {
            line: 16,
            column: 50
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 33
          }
        }, {
          start: {
            line: 26,
            column: 37
          },
          end: {
            line: 26,
            column: 55
          }
        }],
        line: 26
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/seller/dashboard/route.ts"],
      sourcesContent: ["import { NextResponse } from 'next/server';\nimport { auth } from '@/auth';\nimport { getSellerMetrics, getSellerByUserId } from '@/lib/actions/seller.actions';\n\nexport async function GET() {\n  const session = await auth();\n  if (!session || session.user.role !== 'SELLER') {\n    return NextResponse.json({ success: false, message: 'Unauthorized' }, { status: 401 });\n  }\n\n  try {\n    const sellerResult = await getSellerByUserId(session.user.id);\n    if (!sellerResult.success || !sellerResult.data) {\n      return NextResponse.json({ success: false, message: 'Seller not found' }, { status: 404 });\n    }\n\n    const metrics = await getSellerMetrics(session.user.id);\n    const salesData = [\n      { name: 'Mon', sales: 100 },\n      { name: 'Tue', sales: 150 },\n      { name: 'Wed', sales: 200 },\n      { name: 'Thu', sales: 180 },\n      { name: 'Fri', sales: 220 },\n      { name: 'Sat', sales: 300 },\n      { name: 'Sun', sales: 250 },\n    ];\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        totalSales: metrics.revenue.yearly,\n        totalOrders: metrics.orders.total,\n        totalProducts: metrics.products.total,\n        averageRating: metrics.performance.rating,\n        lastUpdate: new Date().toISOString(),\n        monthlyStats: {\n          revenue: metrics.revenue.monthly,\n          orders: metrics.orders.total,\n          averageValue: metrics.orders.avgOrderValue,\n        },\n        salesData,\n      },\n    });\n  } catch (error) {\n    return NextResponse.json(\n      { success: false, message: 'Failed to fetch dashboard data' },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["GET", "session", "auth", "user", "role", "NextResponse", "json", "success", "message", "status", "sellerResult", "getSellerByUserId", "id", "data", "metrics", "getSellerMetrics", "salesData", "name", "sales", "totalSales", "revenue", "yearly", "totalOrders", "orders", "total", "totalProducts", "products", "averageRating", "performance", "rating", "lastUpdate", "Date", "toISOString", "monthlyStats", "monthly", "averageValue", "avgOrderValue", "error"],
      mappings: ";;;;+BAIsBA;;;eAAAA;;;wBAJO;sBACR;+BAC+B;AAE7C,eAAeA;IACpB,MAAMC,UAAU,MAAMC,IAAAA,UAAI;IAC1B,IAAI,CAACD,WAAWA,QAAQE,IAAI,CAACC,IAAI,KAAK,UAAU;QAC9C,OAAOC,oBAAY,CAACC,IAAI,CAAC;YAAEC,SAAS;YAAOC,SAAS;QAAe,GAAG;YAAEC,QAAQ;QAAI;IACtF;IAEA,IAAI;QACF,MAAMC,eAAe,MAAMC,IAAAA,gCAAiB,EAACV,QAAQE,IAAI,CAACS,EAAE;QAC5D,IAAI,CAACF,aAAaH,OAAO,IAAI,CAACG,aAAaG,IAAI,EAAE;YAC/C,OAAOR,oBAAY,CAACC,IAAI,CAAC;gBAAEC,SAAS;gBAAOC,SAAS;YAAmB,GAAG;gBAAEC,QAAQ;YAAI;QAC1F;QAEA,MAAMK,UAAU,MAAMC,IAAAA,+BAAgB,EAACd,QAAQE,IAAI,CAACS,EAAE;QACtD,MAAMI,YAAY;YAChB;gBAAEC,MAAM;gBAAOC,OAAO;YAAI;YAC1B;gBAAED,MAAM;gBAAOC,OAAO;YAAI;YAC1B;gBAAED,MAAM;gBAAOC,OAAO;YAAI;YAC1B;gBAAED,MAAM;gBAAOC,OAAO;YAAI;YAC1B;gBAAED,MAAM;gBAAOC,OAAO;YAAI;YAC1B;gBAAED,MAAM;gBAAOC,OAAO;YAAI;YAC1B;gBAAED,MAAM;gBAAOC,OAAO;YAAI;SAC3B;QAED,OAAOb,oBAAY,CAACC,IAAI,CAAC;YACvBC,SAAS;YACTM,MAAM;gBACJM,YAAYL,QAAQM,OAAO,CAACC,MAAM;gBAClCC,aAAaR,QAAQS,MAAM,CAACC,KAAK;gBACjCC,eAAeX,QAAQY,QAAQ,CAACF,KAAK;gBACrCG,eAAeb,QAAQc,WAAW,CAACC,MAAM;gBACzCC,YAAY,IAAIC,OAAOC,WAAW;gBAClCC,cAAc;oBACZb,SAASN,QAAQM,OAAO,CAACc,OAAO;oBAChCX,QAAQT,QAAQS,MAAM,CAACC,KAAK;oBAC5BW,cAAcrB,QAAQS,MAAM,CAACa,aAAa;gBAC5C;gBACApB;YACF;QACF;IACF,EAAE,OAAOqB,OAAO;QACd,OAAOhC,oBAAY,CAACC,IAAI,CACtB;YAAEC,SAAS;YAAOC,SAAS;QAAiC,GAC5D;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d3cf4cc9d9e959bfa9154d15a342e8237c89db80"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_j8dr5qu4r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_j8dr5qu4r();
cov_j8dr5qu4r().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_j8dr5qu4r().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_j8dr5qu4r().f[0]++;
    cov_j8dr5qu4r().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_j8dr5qu4r().s[3]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_j8dr5qu4r().s[4]++, require("../../../../auth"));
const _selleractions =
/* istanbul ignore next */
(cov_j8dr5qu4r().s[5]++, require("../../../../lib/actions/seller.actions"));
async function GET() {
  /* istanbul ignore next */
  cov_j8dr5qu4r().f[1]++;
  const session =
  /* istanbul ignore next */
  (cov_j8dr5qu4r().s[6]++, await (0, _auth.auth)());
  /* istanbul ignore next */
  cov_j8dr5qu4r().s[7]++;
  if (
  /* istanbul ignore next */
  (cov_j8dr5qu4r().b[1][0]++, !session) ||
  /* istanbul ignore next */
  (cov_j8dr5qu4r().b[1][1]++, session.user.role !== 'SELLER')) {
    /* istanbul ignore next */
    cov_j8dr5qu4r().b[0][0]++;
    cov_j8dr5qu4r().s[8]++;
    return _server.NextResponse.json({
      success: false,
      message: 'Unauthorized'
    }, {
      status: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_j8dr5qu4r().b[0][1]++;
  }
  cov_j8dr5qu4r().s[9]++;
  try {
    const sellerResult =
    /* istanbul ignore next */
    (cov_j8dr5qu4r().s[10]++, await (0, _selleractions.getSellerByUserId)(session.user.id));
    /* istanbul ignore next */
    cov_j8dr5qu4r().s[11]++;
    if (
    /* istanbul ignore next */
    (cov_j8dr5qu4r().b[3][0]++, !sellerResult.success) ||
    /* istanbul ignore next */
    (cov_j8dr5qu4r().b[3][1]++, !sellerResult.data)) {
      /* istanbul ignore next */
      cov_j8dr5qu4r().b[2][0]++;
      cov_j8dr5qu4r().s[12]++;
      return _server.NextResponse.json({
        success: false,
        message: 'Seller not found'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_j8dr5qu4r().b[2][1]++;
    }
    const metrics =
    /* istanbul ignore next */
    (cov_j8dr5qu4r().s[13]++, await (0, _selleractions.getSellerMetrics)(session.user.id));
    const salesData =
    /* istanbul ignore next */
    (cov_j8dr5qu4r().s[14]++, [{
      name: 'Mon',
      sales: 100
    }, {
      name: 'Tue',
      sales: 150
    }, {
      name: 'Wed',
      sales: 200
    }, {
      name: 'Thu',
      sales: 180
    }, {
      name: 'Fri',
      sales: 220
    }, {
      name: 'Sat',
      sales: 300
    }, {
      name: 'Sun',
      sales: 250
    }]);
    /* istanbul ignore next */
    cov_j8dr5qu4r().s[15]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        totalSales: metrics.revenue.yearly,
        totalOrders: metrics.orders.total,
        totalProducts: metrics.products.total,
        averageRating: metrics.performance.rating,
        lastUpdate: new Date().toISOString(),
        monthlyStats: {
          revenue: metrics.revenue.monthly,
          orders: metrics.orders.total,
          averageValue: metrics.orders.avgOrderValue
        },
        salesData
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_j8dr5qu4r().s[16]++;
    return _server.NextResponse.json({
      success: false,
      message: 'Failed to fetch dashboard data'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfajhkcjVxdTRyIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiR0VUIiwiZiIsInNlc3Npb24iLCJfYXV0aCIsImF1dGgiLCJiIiwidXNlciIsInJvbGUiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwic3RhdHVzIiwic2VsbGVyUmVzdWx0IiwiX3NlbGxlcmFjdGlvbnMiLCJnZXRTZWxsZXJCeVVzZXJJZCIsImlkIiwiZGF0YSIsIm1ldHJpY3MiLCJnZXRTZWxsZXJNZXRyaWNzIiwic2FsZXNEYXRhIiwibmFtZSIsInNhbGVzIiwidG90YWxTYWxlcyIsInJldmVudWUiLCJ5ZWFybHkiLCJ0b3RhbE9yZGVycyIsIm9yZGVycyIsInRvdGFsIiwidG90YWxQcm9kdWN0cyIsInByb2R1Y3RzIiwiYXZlcmFnZVJhdGluZyIsInBlcmZvcm1hbmNlIiwicmF0aW5nIiwibGFzdFVwZGF0ZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsIm1vbnRobHlTdGF0cyIsIm1vbnRobHkiLCJhdmVyYWdlVmFsdWUiLCJhdmdPcmRlclZhbHVlIiwiZXJyb3IiXSwic291cmNlcyI6WyIvaG9tZS9oYWdlci9uZXcvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyICgzKS9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIvYXBwL2FwaS9zZWxsZXIvZGFzaGJvYXJkL3JvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IGF1dGggfSBmcm9tICdAL2F1dGgnO1xuaW1wb3J0IHsgZ2V0U2VsbGVyTWV0cmljcywgZ2V0U2VsbGVyQnlVc2VySWQgfSBmcm9tICdAL2xpYi9hY3Rpb25zL3NlbGxlci5hY3Rpb25zJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVCgpIHtcbiAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGF1dGgoKTtcbiAgaWYgKCFzZXNzaW9uIHx8IHNlc3Npb24udXNlci5yb2xlICE9PSAnU0VMTEVSJykge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiAnVW5hdXRob3JpemVkJyB9LCB7IHN0YXR1czogNDAxIH0pO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBjb25zdCBzZWxsZXJSZXN1bHQgPSBhd2FpdCBnZXRTZWxsZXJCeVVzZXJJZChzZXNzaW9uLnVzZXIuaWQpO1xuICAgIGlmICghc2VsbGVyUmVzdWx0LnN1Y2Nlc3MgfHwgIXNlbGxlclJlc3VsdC5kYXRhKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogJ1NlbGxlciBub3QgZm91bmQnIH0sIHsgc3RhdHVzOiA0MDQgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgbWV0cmljcyA9IGF3YWl0IGdldFNlbGxlck1ldHJpY3Moc2Vzc2lvbi51c2VyLmlkKTtcbiAgICBjb25zdCBzYWxlc0RhdGEgPSBbXG4gICAgICB7IG5hbWU6ICdNb24nLCBzYWxlczogMTAwIH0sXG4gICAgICB7IG5hbWU6ICdUdWUnLCBzYWxlczogMTUwIH0sXG4gICAgICB7IG5hbWU6ICdXZWQnLCBzYWxlczogMjAwIH0sXG4gICAgICB7IG5hbWU6ICdUaHUnLCBzYWxlczogMTgwIH0sXG4gICAgICB7IG5hbWU6ICdGcmknLCBzYWxlczogMjIwIH0sXG4gICAgICB7IG5hbWU6ICdTYXQnLCBzYWxlczogMzAwIH0sXG4gICAgICB7IG5hbWU6ICdTdW4nLCBzYWxlczogMjUwIH0sXG4gICAgXTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgZGF0YToge1xuICAgICAgICB0b3RhbFNhbGVzOiBtZXRyaWNzLnJldmVudWUueWVhcmx5LFxuICAgICAgICB0b3RhbE9yZGVyczogbWV0cmljcy5vcmRlcnMudG90YWwsXG4gICAgICAgIHRvdGFsUHJvZHVjdHM6IG1ldHJpY3MucHJvZHVjdHMudG90YWwsXG4gICAgICAgIGF2ZXJhZ2VSYXRpbmc6IG1ldHJpY3MucGVyZm9ybWFuY2UucmF0aW5nLFxuICAgICAgICBsYXN0VXBkYXRlOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICAgIG1vbnRobHlTdGF0czoge1xuICAgICAgICAgIHJldmVudWU6IG1ldHJpY3MucmV2ZW51ZS5tb250aGx5LFxuICAgICAgICAgIG9yZGVyczogbWV0cmljcy5vcmRlcnMudG90YWwsXG4gICAgICAgICAgYXZlcmFnZVZhbHVlOiBtZXRyaWNzLm9yZGVycy5hdmdPcmRlclZhbHVlLFxuICAgICAgICB9LFxuICAgICAgICBzYWxlc0RhdGEsXG4gICAgICB9LFxuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6ICdGYWlsZWQgdG8gZmV0Y2ggZGFzaGJvYXJkIGRhdGEnIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApO1xuICB9XG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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