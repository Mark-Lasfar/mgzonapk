514310cf4bc15147f45ac2af9449ac91
"use strict";

/* istanbul ignore next */
function cov_2jivryg0x2() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/seller.model.ts";
  var hash = "48e937f194bcb7397524f3e8b8a11d26c7a30eb8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/seller.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 32
        },
        end: {
          line: 11,
          column: 78
        }
      },
      "4": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 53
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "6": {
        start: {
          line: 14,
          column: 39
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "7": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "8": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "9": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "11": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 19
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 10
        }
      },
      "15": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 53
        }
      },
      "16": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "18": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "19": {
        start: {
          line: 37,
          column: 32
        },
        end: {
          line: 37,
          column: 88
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "21": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "22": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 95
        }
      },
      "23": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "24": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 57
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 39
        }
      },
      "26": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 25
        }
      },
      "27": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 31
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 18
        }
      },
      "30": {
        start: {
          line: 54,
          column: 21
        },
        end: {
          line: 668,
          column: 2
        }
      },
      "31": {
        start: {
          line: 664,
          column: 12
        },
        end: {
          line: 664,
          column: 47
        }
      },
      "32": {
        start: {
          line: 665,
          column: 12
        },
        end: {
          line: 665,
          column: 23
        }
      },
      "33": {
        start: {
          line: 669,
          column: 0
        },
        end: {
          line: 681,
          column: 3
        }
      },
      "34": {
        start: {
          line: 670,
          column: 4
        },
        end: {
          line: 679,
          column: 5
        }
      },
      "35": {
        start: {
          line: 671,
          column: 8
        },
        end: {
          line: 678,
          column: 9
        }
      },
      "36": {
        start: {
          line: 672,
          column: 12
        },
        end: {
          line: 674,
          column: 13
        }
      },
      "37": {
        start: {
          line: 673,
          column: 16
        },
        end: {
          line: 673,
          column: 106
        }
      },
      "38": {
        start: {
          line: 676,
          column: 12
        },
        end: {
          line: 676,
          column: 54
        }
      },
      "39": {
        start: {
          line: 677,
          column: 12
        },
        end: {
          line: 677,
          column: 71
        }
      },
      "40": {
        start: {
          line: 680,
          column: 4
        },
        end: {
          line: 680,
          column: 11
        }
      },
      "41": {
        start: {
          line: 682,
          column: 0
        },
        end: {
          line: 687,
          column: 3
        }
      },
      "42": {
        start: {
          line: 683,
          column: 4
        },
        end: {
          line: 683,
          column: 22
        }
      },
      "43": {
        start: {
          line: 683,
          column: 15
        },
        end: {
          line: 683,
          column: 22
        }
      },
      "44": {
        start: {
          line: 684,
          column: 4
        },
        end: {
          line: 686,
          column: 5
        }
      },
      "45": {
        start: {
          line: 685,
          column: 8
        },
        end: {
          line: 685,
          column: 40
        }
      },
      "46": {
        start: {
          line: 688,
          column: 0
        },
        end: {
          line: 691,
          column: 3
        }
      },
      "47": {
        start: {
          line: 689,
          column: 4
        },
        end: {
          line: 689,
          column: 21
        }
      },
      "48": {
        start: {
          line: 689,
          column: 14
        },
        end: {
          line: 689,
          column: 21
        }
      },
      "49": {
        start: {
          line: 690,
          column: 4
        },
        end: {
          line: 690,
          column: 36
        }
      },
      "50": {
        start: {
          line: 693,
          column: 4
        },
        end: {
          line: 693,
          column: 46
        }
      },
      "51": {
        start: {
          line: 693,
          column: 39
        },
        end: {
          line: 693,
          column: 46
        }
      },
      "52": {
        start: {
          line: 694,
          column: 4
        },
        end: {
          line: 702,
          column: 5
        }
      },
      "53": {
        start: {
          line: 695,
          column: 8
        },
        end: {
          line: 701,
          column: 9
        }
      },
      "54": {
        start: {
          line: 696,
          column: 12
        },
        end: {
          line: 696,
          column: 100
        }
      },
      "55": {
        start: {
          line: 698,
          column: 12
        },
        end: {
          line: 698,
          column: 99
        }
      },
      "56": {
        start: {
          line: 699,
          column: 12
        },
        end: {
          line: 699,
          column: 44
        }
      },
      "57": {
        start: {
          line: 700,
          column: 12
        },
        end: {
          line: 700,
          column: 42
        }
      },
      "58": {
        start: {
          line: 704,
          column: 0
        },
        end: {
          line: 723,
          column: 2
        }
      },
      "59": {
        start: {
          line: 705,
          column: 4
        },
        end: {
          line: 707,
          column: 5
        }
      },
      "60": {
        start: {
          line: 706,
          column: 8
        },
        end: {
          line: 706,
          column: 58
        }
      },
      "61": {
        start: {
          line: 708,
          column: 4
        },
        end: {
          line: 710,
          column: 5
        }
      },
      "62": {
        start: {
          line: 709,
          column: 8
        },
        end: {
          line: 709,
          column: 63
        }
      },
      "63": {
        start: {
          line: 711,
          column: 4
        },
        end: {
          line: 713,
          column: 5
        }
      },
      "64": {
        start: {
          line: 712,
          column: 8
        },
        end: {
          line: 712,
          column: 44
        }
      },
      "65": {
        start: {
          line: 714,
          column: 4
        },
        end: {
          line: 714,
          column: 33
        }
      },
      "66": {
        start: {
          line: 715,
          column: 4
        },
        end: {
          line: 721,
          column: 7
        }
      },
      "67": {
        start: {
          line: 722,
          column: 4
        },
        end: {
          line: 722,
          column: 22
        }
      },
      "68": {
        start: {
          line: 724,
          column: 15
        },
        end: {
          line: 724,
          column: 97
        }
      },
      "69": {
        start: {
          line: 725,
          column: 17
        },
        end: {
          line: 725,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 47
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 17,
            column: 40
          }
        },
        loc: {
          start: {
            line: 17,
            column: 61
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 34
          }
        },
        loc: {
          start: {
            line: 21,
            column: 53
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 663,
            column: 19
          },
          end: {
            line: 663,
            column: 20
          }
        },
        loc: {
          start: {
            line: 663,
            column: 31
          },
          end: {
            line: 666,
            column: 9
          }
        },
        line: 663
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 669,
            column: 25
          },
          end: {
            line: 669,
            column: 26
          }
        },
        loc: {
          start: {
            line: 669,
            column: 46
          },
          end: {
            line: 681,
            column: 1
          }
        },
        line: 669
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 682,
            column: 26
          },
          end: {
            line: 682,
            column: 27
          }
        },
        loc: {
          start: {
            line: 682,
            column: 47
          },
          end: {
            line: 687,
            column: 1
          }
        },
        line: 682
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 688,
            column: 29
          },
          end: {
            line: 688,
            column: 30
          }
        },
        loc: {
          start: {
            line: 688,
            column: 49
          },
          end: {
            line: 691,
            column: 1
          }
        },
        line: 688
      },
      "8": {
        name: "decryptAccountNumber",
        decl: {
          start: {
            line: 692,
            column: 15
          },
          end: {
            line: 692,
            column: 35
          }
        },
        loc: {
          start: {
            line: 692,
            column: 41
          },
          end: {
            line: 703,
            column: 1
          }
        },
        line: 692
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 704,
            column: 33
          },
          end: {
            line: 704,
            column: 34
          }
        },
        loc: {
          start: {
            line: 704,
            column: 78
          },
          end: {
            line: 723,
            column: 1
          }
        },
        line: 704
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 48
          },
          end: {
            line: 18,
            column: 65
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 20
          }
        }, {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 22,
            column: 27
          }
        }, {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 22,
            column: 45
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 47
          }
        }, {
          start: {
            line: 25,
            column: 51
          },
          end: {
            line: 25,
            column: 76
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 13
          }
        }, {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 31
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 53
          }
        }, {
          start: {
            line: 37,
            column: 57
          },
          end: {
            line: 37,
            column: 88
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "10": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 29
          }
        }, {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 39,
            column: 79
          }
        }],
        line: 39
      },
      "11": {
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 40,
            column: 88
          }
        }, {
          start: {
            line: 40,
            column: 91
          },
          end: {
            line: 40,
            column: 95
          }
        }],
        line: 40
      },
      "12": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 45,
            column: 13
          }
        }],
        line: 41
      },
      "13": {
        loc: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 41,
            column: 33
          }
        }, {
          start: {
            line: 41,
            column: 37
          },
          end: {
            line: 41,
            column: 45
          }
        }],
        line: 41
      },
      "14": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "15": {
        loc: {
          start: {
            line: 670,
            column: 4
          },
          end: {
            line: 679,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 670,
            column: 4
          },
          end: {
            line: 679,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 670
      },
      "16": {
        loc: {
          start: {
            line: 672,
            column: 12
          },
          end: {
            line: 674,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 672,
            column: 12
          },
          end: {
            line: 674,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 672
      },
      "17": {
        loc: {
          start: {
            line: 672,
            column: 16
          },
          end: {
            line: 672,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 672,
            column: 16
          },
          end: {
            line: 672,
            column: 43
          }
        }, {
          start: {
            line: 672,
            column: 47
          },
          end: {
            line: 672,
            column: 89
          }
        }],
        line: 672
      },
      "18": {
        loc: {
          start: {
            line: 683,
            column: 4
          },
          end: {
            line: 683,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 683,
            column: 4
          },
          end: {
            line: 683,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 683
      },
      "19": {
        loc: {
          start: {
            line: 689,
            column: 4
          },
          end: {
            line: 689,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 689,
            column: 4
          },
          end: {
            line: 689,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 689
      },
      "20": {
        loc: {
          start: {
            line: 693,
            column: 4
          },
          end: {
            line: 693,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 693,
            column: 4
          },
          end: {
            line: 693,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 693
      },
      "21": {
        loc: {
          start: {
            line: 694,
            column: 4
          },
          end: {
            line: 702,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 694,
            column: 4
          },
          end: {
            line: 702,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 694
      },
      "22": {
        loc: {
          start: {
            line: 694,
            column: 8
          },
          end: {
            line: 694,
            column: 142
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 694,
            column: 8
          },
          end: {
            line: 694,
            column: 48
          }
        }, {
          start: {
            line: 694,
            column: 52
          },
          end: {
            line: 694,
            column: 98
          }
        }, {
          start: {
            line: 694,
            column: 102
          },
          end: {
            line: 694,
            column: 142
          }
        }],
        line: 694
      },
      "23": {
        loc: {
          start: {
            line: 705,
            column: 4
          },
          end: {
            line: 707,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 705,
            column: 4
          },
          end: {
            line: 707,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 705
      },
      "24": {
        loc: {
          start: {
            line: 708,
            column: 4
          },
          end: {
            line: 710,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 708,
            column: 4
          },
          end: {
            line: 710,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 708
      },
      "25": {
        loc: {
          start: {
            line: 708,
            column: 8
          },
          end: {
            line: 708,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 708,
            column: 8
          },
          end: {
            line: 708,
            column: 20
          }
        }, {
          start: {
            line: 708,
            column: 24
          },
          end: {
            line: 708,
            column: 49
          }
        }],
        line: 708
      },
      "26": {
        loc: {
          start: {
            line: 711,
            column: 4
          },
          end: {
            line: 713,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 711,
            column: 4
          },
          end: {
            line: 713,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 711
      },
      "27": {
        loc: {
          start: {
            line: 711,
            column: 8
          },
          end: {
            line: 711,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 711,
            column: 8
          },
          end: {
            line: 711,
            column: 15
          }
        }, {
          start: {
            line: 711,
            column: 19
          },
          end: {
            line: 711,
            column: 69
          }
        }],
        line: 711
      },
      "28": {
        loc: {
          start: {
            line: 724,
            column: 15
          },
          end: {
            line: 724,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 724,
            column: 15
          },
          end: {
            line: 724,
            column: 46
          }
        }, {
          start: {
            line: 724,
            column: 50
          },
          end: {
            line: 724,
            column: 97
          }
        }],
        line: 724
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/seller.model.ts"],
      sourcesContent: ["import mongoose, { Schema, Document, Model } from 'mongoose';\nimport { encrypt, decrypt } from '@/lib/utils/encryption';\n\nexport interface ISeller extends Document {\n  userId: string;\n  businessName: string;\n  email: string;\n  phone: string;\n  description?: string;\n  businessType: 'individual' | 'company';\n  vatRegistered: boolean;\n  logo?: string;\n  address: {\n    street: string;\n    city: string;\n    state: string;\n    country: string;\n    postalCode: string;\n  };\n  taxId: string;\n  bankInfo: {\n    accountName: string;\n    accountNumber: string;\n    bankName: string;\n    swiftCode: string;\n    verified: boolean;\n  };\n  subscription: {\n    plan: 'Trial' | 'Basic' | 'Pro' | 'VIP';\n    startDate: Date;\n    endDate: Date;\n    status: 'active' | 'expired' | 'cancelled' | 'pending' | 'suspended';\n    features: {\n      productsLimit: number;\n      commission: number;\n      prioritySupport: boolean;\n      instantPayouts: boolean;\n      customSectionsLimit?: number;\n    };\n    pointsRedeemed?: number;\n    paymentMethod?: 'stripe' | 'paypal';\n    paymentId?: string;\n  };\n  verification: {\n    status: 'pending' | 'verified' | 'rejected';\n    documents: Map<\n      string,\n      {\n        url: string;\n        status: 'pending' | 'verified' | 'rejected';\n        uploadedAt: Date;\n        metadata?: Record<string, any>;\n      }\n    >;\n    submittedAt: Date;\n    lastUpdatedAt?: Date;\n  };\n  metrics: {\n    rating: number;\n    totalSales: number;\n    totalRevenue: number;\n    productsCount: number;\n    ordersCount: number;\n    customersCount: number;\n    views: number;\n    followers: number;\n    lastProductCreated?: Date;\n    products: {\n      total: number;\n      active: number;\n      outOfStock: number;\n    };\n  };\n  settings: {\n    notifications: {\n      email: boolean;\n      sms: boolean;\n      orderUpdates: boolean;\n      marketingEmails: boolean;\n      pointsNotifications: boolean;\n    };\n    display: {\n      showRating: boolean;\n      showContactInfo: boolean;\n      showMetrics: boolean;\n      showPointsBalance: boolean;\n    };\n    security: {\n      twoFactorAuth: boolean;\n      loginNotifications: boolean;\n    };\n    customSite: {\n      theme: string;\n      primaryColor: string;\n      bannerImage?: string;\n      customSections?: Array<{\n        title: string;\n        content: string;\n      }>;\n    };\n  };\n  pointsBalance: number;\n  pointsTransactions: Array<{\n    amount: number;\n    type: 'earn' | 'redeem';\n    description: string;\n    orderId?: string;\n    createdAt: Date;\n  }>;\n  freeTrialActive: boolean;\n  freeTrialEndDate?: Date;\n  trialMonthsUsed: number;\n  customSiteUrl: string;\n  createdAt: Date;\n  updatedAt: Date;\n  apiKeys: mongoose.Types.ObjectId[]; // New: References to ApiKey documents\n  addPoints(amount: number, description: string, orderId?: string): Promise<void>;\n}\n\nconst SellerSchema: Schema<ISeller> = new Schema(\n  {\n    userId: {\n      type: String,\n      required: [true, 'User ID is required'],\n      unique: true,\n      trim: true,\n    },\n    businessName: {\n      type: String,\n      required: [true, 'Business name is required'],\n      trim: true,\n      minlength: [2, 'Business name must be at least 2 characters'],\n      maxlength: [100, 'Business name cannot exceed 100 characters'],\n    },\n    email: {\n      type: String,\n      required: [true, 'Email is required'],\n      unique: true,\n      trim: true,\n      lowercase: true,\n      match: [\n        /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n        'Please enter a valid email address',\n      ],\n    },\n    phone: {\n      type: String,\n      required: [true, 'Phone number is required'],\n      trim: true,\n      match: [\n        /^[+]?[(]?[0-9]{1,4}[)]?[-\\s./0-9]*$/,\n        'Please enter a valid phone number',\n      ],\n    },\n    description: {\n      type: String,\n      trim: true,\n      minlength: [10, 'Description must be at least 10 characters if provided'],\n      maxlength: [500, 'Description cannot exceed 500 characters'],\n    },\n    businessType: {\n      type: String,\n      enum: {\n        values: ['individual', 'company'],\n        message: '{VALUE} is not a valid business type',\n      },\n      required: [true, 'Business type is required'],\n    },\n    vatRegistered: {\n      type: Boolean,\n      default: false,\n    },\n    logo: {\n      type: String,\n      trim: true,\n      match: [/^https?:\\/\\/.*\\.(?:png|jpg|jpeg|webp)$/, 'Please provide a valid image URL'],\n    },\n    address: {\n      street: { type: String, required: [true, 'Street is required'], trim: true },\n      city: { type: String, required: [true, 'City is required'], trim: true },\n      state: { type: String, required: [true, 'State is required'], trim: true },\n      country: { type: String, required: [true, 'Country is required'], trim: true },\n      postalCode: {\n        type: String,\n        required: [true, 'Postal code is required'],\n        trim: true,\n        match: [/^[0-9A-Z\\s-]*$/, 'Please enter a valid postal code'],\n      },\n    },\n    taxId: {\n      type: String,\n      required: [true, 'Tax ID is required'],\n      trim: true,\n      minlength: [5, 'Tax ID must be at least 5 characters'],\n    },\n    bankInfo: {\n      accountName: {\n        type: String,\n        required: [true, 'Account name is required'],\n        trim: true,\n        minlength: [2, 'Account name must be at least 2 characters'],\n        maxlength: [100, 'Account name cannot exceed 100 characters'],\n      },\n      accountNumber: {\n        type: String,\n        required: [true, 'Account number is required'],\n        trim: true,\n        minlength: [8, 'Account number must be at least 8 characters'],\n        maxlength: [34, 'Account number cannot exceed 34 characters'],\n        match: [/^[0-9A-Za-z]*$/, 'Please enter a valid account number'],\n      },\n      bankName: {\n        type: String,\n        required: [true, 'Bank name is required'],\n        trim: true,\n        minlength: [2, 'Bank name must be at least 2 characters'],\n        maxlength: [100, 'Bank name cannot exceed 100 characters'],\n      },\n      swiftCode: {\n        type: String,\n        required: [true, 'SWIFT code is required'],\n        trim: true,\n        match: [\n          /^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$/,\n          'Please enter a valid SWIFT code',\n        ],\n      },\n      verified: {\n        type: Boolean,\n        default: false,\n      },\n    },\n    subscription: {\n      plan: {\n        type: String,\n        enum: {\n          values: ['Trial', 'Basic', 'Pro', 'VIP'],\n          message: '{VALUE} is not a valid subscription plan',\n        },\n        required: [true, 'Subscription plan is required'],\n      },\n      startDate: {\n        type: Date,\n        required: [true, 'Subscription start date is required'],\n      },\n      endDate: {\n        type: Date,\n        required: [true, 'Subscription end date is required'],\n      },\n      status: {\n        type: String,\n        enum: {\n          values: ['active', 'expired', 'cancelled', 'pending', 'suspended'],\n          message: '{VALUE} is not a valid subscription status',\n        },\n        default: 'pending',\n      },\n      features: {\n        productsLimit: {\n          type: Number,\n          required: true,\n          min: [0, 'Products limit cannot be negative'],\n        },\n        commission: {\n          type: Number,\n          required: true,\n          min: [0, 'Commission cannot be negative'],\n        },\n        prioritySupport: { type: Boolean, default: false },\n        instantPayouts: { type: Boolean, default: false },\n        customSectionsLimit: { type: Number, default: 0 },\n      },\n      pointsRedeemed: {\n        type: Number,\n        default: 0,\n        min: [0, 'Points redeemed cannot be negative'],\n      },\n      paymentMethod: {\n        type: String,\n        enum: {\n          values: ['stripe', 'paypal'],\n          message: '{VALUE} is not a valid payment method',\n        },\n      },\n      paymentId: { type: String, trim: true },\n    },\n    verification: {\n      status: {\n        type: String,\n        enum: {\n          values: ['pending', 'verified', 'rejected'],\n          message: '{VALUE} is not a valid verification status',\n        },\n        default: 'pending',\n      },\n      documents: {\n        type: Map,\n        of: new Schema(\n          {\n            url: { type: String, required: true, trim: true },\n            status: {\n              type: String,\n              enum: {\n                values: ['pending', 'verified', 'rejected'],\n                message: '{VALUE} is not a valid document status',\n              },\n              default: 'pending',\n            },\n            uploadedAt: { type: Date, required: true },\n            metadata: { type: Schema.Types.Mixed },\n          },\n          { _id: false }\n        ),\n        default: {},\n      },\n      submittedAt: {\n        type: Date,\n        required: [true, 'Verification submission date is required'],\n      },\n      lastUpdatedAt: { type: Date },\n    },\n    metrics: {\n      rating: { type: Number, default: 0, min: 0, max: 5 },\n      totalSales: { type: Number, default: 0, min: 0 },\n      totalRevenue: { type: Number, default: 0, min: 0 },\n      productsCount: { type: Number, default: 0, min: 0 },\n      ordersCount: { type: Number, default: 0, min: 0 },\n      customersCount: { type: Number, default: 0, min: 0 },\n      views: { type: Number, default: 0, min: 0 },\n      followers: { type: Number, default: 0, min: 0 },\n      lastProductCreated: { type: Date },\n      products: {\n        total: { type: Number, default: 0, min: 0 },\n        active: { type: Number, default: 0, min: 0 },\n        outOfStock: { type: Number, default: 0, min: 0 },\n      },\n    },\n    settings: {\n      notifications: {\n        email: { type: Boolean, default: true },\n        sms: { type: Boolean, default: false },\n        orderUpdates: { type: Boolean, default: true },\n        marketingEmails: { type: Boolean, default: false },\n        pointsNotifications: { type: Boolean, default: true },\n      },\n      display: {\n        showRating: { type: Boolean, default: true },\n        showContactInfo: { type: Boolean, default: true },\n        showMetrics: { type: Boolean, default: true },\n        showPointsBalance: { type: Boolean, default: true },\n      },\n      security: {\n        twoFactorAuth: { type: Boolean, default: false },\n        loginNotifications: { type: Boolean, default: true },\n      },\n      customSite: {\n        theme: { type: String, default: 'default', trim: true },\n        primaryColor: {\n          type: String,\n          default: '#000000',\n          match: [/^#[0-9A-F]{6}$/i, 'Please enter a valid hex color code'],\n          trim: true,\n        },\n        bannerImage: { type: String, trim: true },\n        customSections: [\n          {\n            title: { type: String, required: true, trim: true },\n            content: { type: String, required: true, trim: true },\n            _id: false,\n          },\n        ],\n      },\n    },\n    pointsBalance: {\n      type: Number,\n      default: 100,\n      min: [0, 'Points balance cannot be negative'],\n    },\n    pointsTransactions: [\n      {\n        amount: {\n          type: Number,\n          required: true,\n          min: [0, 'Transaction amount cannot be negative'],\n        },\n        type: {\n          type: String,\n          enum: {\n            values: ['earn', 'redeem'],\n            message: '{VALUE} is not a valid transaction type',\n          },\n          required: true,\n        },\n        description: { type: String, required: true, trim: true },\n        orderId: { type: String, trim: true },\n        createdAt: { type: Date, default: Date.now },\n        _id: false,\n      },\n    ],\n    freeTrialActive: {\n      type: Boolean,\n      default: false,\n    },\n    freeTrialEndDate: {\n      type: Date,\n    },\n    trialMonthsUsed: {\n      type: Number,\n      default: 0,\n      min: [0, 'Trial months used cannot be negative'],\n    },\n    customSiteUrl: {\n      type: String,\n      required: [true, 'Custom site URL is required'],\n      trim: true,\n      unique: true,\n    },\n    apiKeys: [{ type: Schema.Types.ObjectId, ref: 'ApiKey', default: [] }], // New: References to ApiKey documents\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n    toJSON: {\n      transform: (doc, ret) => {\n        delete ret.bankInfo?.accountNumber;\n        return ret;\n      },\n    },\n  }\n);\n\nSellerSchema.pre('save', async function (next) {\n  if (this.isModified('bankInfo.accountNumber')) {\n    try {\n      if (this.bankInfo.accountNumber && !this.bankInfo.accountNumber.includes(':')) {\n        this.bankInfo.accountNumber = await encrypt(this.bankInfo.accountNumber);\n      }\n    } catch (error) {\n      console.error('Encryption error:', error);\n      return next(new Error('Failed to encrypt account number'));\n    }\n  }\n  next();\n});\n\nSellerSchema.post('find', async function (docs: ISeller[]) {\n  if (!docs) return;\n  for (const doc of docs) {\n    await decryptAccountNumber(doc);\n  }\n});\n\nSellerSchema.post('findOne', async function (doc: ISeller | null) {\n  if (!doc) return;\n  await decryptAccountNumber(doc);\n});\n\nasync function decryptAccountNumber(doc: ISeller) {\n  if (!doc?.bankInfo?.accountNumber) return;\n\n  if (\n    doc.isSelected('bankInfo.accountNumber') &&\n    typeof doc.bankInfo.accountNumber === 'string' &&\n    doc.bankInfo.accountNumber.includes(':')\n  ) {\n    try {\n      doc.bankInfo.accountNumber = await decrypt(doc.bankInfo.accountNumber);\n    } catch (error: unknown) {\n      console.warn(\n        `Failed to decrypt account number for seller ${doc._id}:`,\n        (error as Error).message\n      );\n      doc.bankInfo.accountNumber = '';\n      doc.bankInfo.verified = false;\n    }\n  }\n}\n\nSellerSchema.methods.addPoints = async function (\n  amount: number,\n  description: string,\n  orderId?: string\n): Promise<void> {\n  if (amount <= 0) {\n    throw new Error('Points amount must be positive');\n  }\n  if (!description || description.trim() === '') {\n    throw new Error('Transaction description is required');\n  }\n  if (orderId && !mongoose.Types.ObjectId.isValid(orderId)) {\n    throw new Error('Invalid order ID');\n  }\n\n  this.pointsBalance += amount;\n  this.pointsTransactions.push({\n    amount,\n    type: 'earn',\n    description,\n    orderId,\n    createdAt: new Date(),\n  });\n\n  await this.save();\n};\n\nconst Seller: Model<ISeller> =\n  mongoose.models.Seller || mongoose.model<ISeller>('Seller', SellerSchema);\n\nexport default Seller;"],
      names: ["SellerSchema", "Schema", "userId", "type", "String", "required", "unique", "trim", "businessName", "minlength", "maxlength", "email", "lowercase", "match", "phone", "description", "businessType", "enum", "values", "message", "vatRegistered", "Boolean", "default", "logo", "address", "street", "city", "state", "country", "postalCode", "taxId", "bankInfo", "accountName", "accountNumber", "bankName", "swiftCode", "verified", "subscription", "plan", "startDate", "Date", "endDate", "status", "features", "productsLimit", "Number", "min", "commission", "prioritySupport", "instantPayouts", "customSectionsLimit", "pointsRedeemed", "paymentMethod", "paymentId", "verification", "documents", "Map", "of", "url", "uploadedAt", "metadata", "Types", "Mixed", "_id", "submittedAt", "lastUpdatedAt", "metrics", "rating", "max", "totalSales", "totalRevenue", "productsCount", "ordersCount", "customersCount", "views", "followers", "lastProductCreated", "products", "total", "active", "outOfStock", "settings", "notifications", "sms", "orderUpdates", "marketingEmails", "pointsNotifications", "display", "showRating", "showContactInfo", "showMetrics", "showPointsBalance", "security", "twoFactorAuth", "loginNotifications", "customSite", "theme", "primaryColor", "bannerImage", "customSections", "title", "content", "pointsBalance", "pointsTransactions", "amount", "orderId", "createdAt", "now", "freeTrialActive", "freeTrialEndDate", "trialMonthsUsed", "customSiteUrl", "apiKeys", "ObjectId", "ref", "updatedAt", "timestamps", "toJSON", "transform", "doc", "ret", "pre", "next", "isModified", "includes", "encrypt", "error", "console", "Error", "post", "docs", "decryptAccountNumber", "isSelected", "decrypt", "warn", "methods", "addPoints", "mongoose", "isValid", "push", "save", "Seller", "models", "model"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "48e937f194bcb7397524f3e8b8a11d26c7a30eb8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2jivryg0x2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2jivryg0x2();
cov_2jivryg0x2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2jivryg0x2().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2jivryg0x2().f[0]++;
    cov_2jivryg0x2().s[2]++;
    return _default;
  }
});
const _mongoose =
/* istanbul ignore next */
(/*#__PURE__*/cov_2jivryg0x2().s[3]++, _interop_require_wildcard(require("mongoose")));
const _encryption =
/* istanbul ignore next */
(cov_2jivryg0x2().s[4]++, require("../../utils/encryption"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2jivryg0x2().f[1]++;
  cov_2jivryg0x2().s[5]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2jivryg0x2().b[0][0]++;
    cov_2jivryg0x2().s[6]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2jivryg0x2().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2jivryg0x2().s[7]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2jivryg0x2().s[8]++, new WeakMap());
  /* istanbul ignore next */
  cov_2jivryg0x2().s[9]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2jivryg0x2().f[2]++;
    cov_2jivryg0x2().s[10]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2jivryg0x2().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2jivryg0x2().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2jivryg0x2().f[3]++;
  cov_2jivryg0x2().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2jivryg0x2().b[2][0]++;
    cov_2jivryg0x2().s[12]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2jivryg0x2().b[2][1]++;
  }
  cov_2jivryg0x2().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2jivryg0x2().b[4][0]++;
    cov_2jivryg0x2().s[14]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2jivryg0x2().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2jivryg0x2().s[15]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2jivryg0x2().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2jivryg0x2().b[6][0]++;
    cov_2jivryg0x2().s[17]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2jivryg0x2().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2jivryg0x2().s[18]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2jivryg0x2().s[19]++,
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2jivryg0x2().s[20]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2jivryg0x2().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_2jivryg0x2().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2jivryg0x2().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2jivryg0x2().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2jivryg0x2().s[22]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2jivryg0x2().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2jivryg0x2().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2jivryg0x2().s[23]++;
      if (
      /* istanbul ignore next */
      (cov_2jivryg0x2().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2jivryg0x2().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2jivryg0x2().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2jivryg0x2().b[12][0]++;
        cov_2jivryg0x2().s[24]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2jivryg0x2().b[12][1]++;
        cov_2jivryg0x2().s[25]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2jivryg0x2().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2jivryg0x2().s[26]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2jivryg0x2().s[27]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2jivryg0x2().b[14][0]++;
    cov_2jivryg0x2().s[28]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2jivryg0x2().b[14][1]++;
  }
  cov_2jivryg0x2().s[29]++;
  return newObj;
}
const SellerSchema =
/* istanbul ignore next */
(cov_2jivryg0x2().s[30]++, new _mongoose.Schema({
  userId: {
    type: String,
    required: [true, 'User ID is required'],
    unique: true,
    trim: true
  },
  businessName: {
    type: String,
    required: [true, 'Business name is required'],
    trim: true,
    minlength: [2, 'Business name must be at least 2 characters'],
    maxlength: [100, 'Business name cannot exceed 100 characters']
  },
  email: {
    type: String,
    required: [true, 'Email is required'],
    unique: true,
    trim: true,
    lowercase: true,
    match: [/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/, 'Please enter a valid email address']
  },
  phone: {
    type: String,
    required: [true, 'Phone number is required'],
    trim: true,
    match: [/^[+]?[(]?[0-9]{1,4}[)]?[-\s./0-9]*$/, 'Please enter a valid phone number']
  },
  description: {
    type: String,
    trim: true,
    minlength: [10, 'Description must be at least 10 characters if provided'],
    maxlength: [500, 'Description cannot exceed 500 characters']
  },
  businessType: {
    type: String,
    enum: {
      values: ['individual', 'company'],
      message: '{VALUE} is not a valid business type'
    },
    required: [true, 'Business type is required']
  },
  vatRegistered: {
    type: Boolean,
    default: false
  },
  logo: {
    type: String,
    trim: true,
    match: [/^https?:\/\/.*\.(?:png|jpg|jpeg|webp)$/, 'Please provide a valid image URL']
  },
  address: {
    street: {
      type: String,
      required: [true, 'Street is required'],
      trim: true
    },
    city: {
      type: String,
      required: [true, 'City is required'],
      trim: true
    },
    state: {
      type: String,
      required: [true, 'State is required'],
      trim: true
    },
    country: {
      type: String,
      required: [true, 'Country is required'],
      trim: true
    },
    postalCode: {
      type: String,
      required: [true, 'Postal code is required'],
      trim: true,
      match: [/^[0-9A-Z\s-]*$/, 'Please enter a valid postal code']
    }
  },
  taxId: {
    type: String,
    required: [true, 'Tax ID is required'],
    trim: true,
    minlength: [5, 'Tax ID must be at least 5 characters']
  },
  bankInfo: {
    accountName: {
      type: String,
      required: [true, 'Account name is required'],
      trim: true,
      minlength: [2, 'Account name must be at least 2 characters'],
      maxlength: [100, 'Account name cannot exceed 100 characters']
    },
    accountNumber: {
      type: String,
      required: [true, 'Account number is required'],
      trim: true,
      minlength: [8, 'Account number must be at least 8 characters'],
      maxlength: [34, 'Account number cannot exceed 34 characters'],
      match: [/^[0-9A-Za-z]*$/, 'Please enter a valid account number']
    },
    bankName: {
      type: String,
      required: [true, 'Bank name is required'],
      trim: true,
      minlength: [2, 'Bank name must be at least 2 characters'],
      maxlength: [100, 'Bank name cannot exceed 100 characters']
    },
    swiftCode: {
      type: String,
      required: [true, 'SWIFT code is required'],
      trim: true,
      match: [/^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$/, 'Please enter a valid SWIFT code']
    },
    verified: {
      type: Boolean,
      default: false
    }
  },
  subscription: {
    plan: {
      type: String,
      enum: {
        values: ['Trial', 'Basic', 'Pro', 'VIP'],
        message: '{VALUE} is not a valid subscription plan'
      },
      required: [true, 'Subscription plan is required']
    },
    startDate: {
      type: Date,
      required: [true, 'Subscription start date is required']
    },
    endDate: {
      type: Date,
      required: [true, 'Subscription end date is required']
    },
    status: {
      type: String,
      enum: {
        values: ['active', 'expired', 'cancelled', 'pending', 'suspended'],
        message: '{VALUE} is not a valid subscription status'
      },
      default: 'pending'
    },
    features: {
      productsLimit: {
        type: Number,
        required: true,
        min: [0, 'Products limit cannot be negative']
      },
      commission: {
        type: Number,
        required: true,
        min: [0, 'Commission cannot be negative']
      },
      prioritySupport: {
        type: Boolean,
        default: false
      },
      instantPayouts: {
        type: Boolean,
        default: false
      },
      customSectionsLimit: {
        type: Number,
        default: 0
      }
    },
    pointsRedeemed: {
      type: Number,
      default: 0,
      min: [0, 'Points redeemed cannot be negative']
    },
    paymentMethod: {
      type: String,
      enum: {
        values: ['stripe', 'paypal'],
        message: '{VALUE} is not a valid payment method'
      }
    },
    paymentId: {
      type: String,
      trim: true
    }
  },
  verification: {
    status: {
      type: String,
      enum: {
        values: ['pending', 'verified', 'rejected'],
        message: '{VALUE} is not a valid verification status'
      },
      default: 'pending'
    },
    documents: {
      type: Map,
      of: new _mongoose.Schema({
        url: {
          type: String,
          required: true,
          trim: true
        },
        status: {
          type: String,
          enum: {
            values: ['pending', 'verified', 'rejected'],
            message: '{VALUE} is not a valid document status'
          },
          default: 'pending'
        },
        uploadedAt: {
          type: Date,
          required: true
        },
        metadata: {
          type: _mongoose.Schema.Types.Mixed
        }
      }, {
        _id: false
      }),
      default: {}
    },
    submittedAt: {
      type: Date,
      required: [true, 'Verification submission date is required']
    },
    lastUpdatedAt: {
      type: Date
    }
  },
  metrics: {
    rating: {
      type: Number,
      default: 0,
      min: 0,
      max: 5
    },
    totalSales: {
      type: Number,
      default: 0,
      min: 0
    },
    totalRevenue: {
      type: Number,
      default: 0,
      min: 0
    },
    productsCount: {
      type: Number,
      default: 0,
      min: 0
    },
    ordersCount: {
      type: Number,
      default: 0,
      min: 0
    },
    customersCount: {
      type: Number,
      default: 0,
      min: 0
    },
    views: {
      type: Number,
      default: 0,
      min: 0
    },
    followers: {
      type: Number,
      default: 0,
      min: 0
    },
    lastProductCreated: {
      type: Date
    },
    products: {
      total: {
        type: Number,
        default: 0,
        min: 0
      },
      active: {
        type: Number,
        default: 0,
        min: 0
      },
      outOfStock: {
        type: Number,
        default: 0,
        min: 0
      }
    }
  },
  settings: {
    notifications: {
      email: {
        type: Boolean,
        default: true
      },
      sms: {
        type: Boolean,
        default: false
      },
      orderUpdates: {
        type: Boolean,
        default: true
      },
      marketingEmails: {
        type: Boolean,
        default: false
      },
      pointsNotifications: {
        type: Boolean,
        default: true
      }
    },
    display: {
      showRating: {
        type: Boolean,
        default: true
      },
      showContactInfo: {
        type: Boolean,
        default: true
      },
      showMetrics: {
        type: Boolean,
        default: true
      },
      showPointsBalance: {
        type: Boolean,
        default: true
      }
    },
    security: {
      twoFactorAuth: {
        type: Boolean,
        default: false
      },
      loginNotifications: {
        type: Boolean,
        default: true
      }
    },
    customSite: {
      theme: {
        type: String,
        default: 'default',
        trim: true
      },
      primaryColor: {
        type: String,
        default: '#000000',
        match: [/^#[0-9A-F]{6}$/i, 'Please enter a valid hex color code'],
        trim: true
      },
      bannerImage: {
        type: String,
        trim: true
      },
      customSections: [{
        title: {
          type: String,
          required: true,
          trim: true
        },
        content: {
          type: String,
          required: true,
          trim: true
        },
        _id: false
      }]
    }
  },
  pointsBalance: {
    type: Number,
    default: 100,
    min: [0, 'Points balance cannot be negative']
  },
  pointsTransactions: [{
    amount: {
      type: Number,
      required: true,
      min: [0, 'Transaction amount cannot be negative']
    },
    type: {
      type: String,
      enum: {
        values: ['earn', 'redeem'],
        message: '{VALUE} is not a valid transaction type'
      },
      required: true
    },
    description: {
      type: String,
      required: true,
      trim: true
    },
    orderId: {
      type: String,
      trim: true
    },
    createdAt: {
      type: Date,
      default: Date.now
    },
    _id: false
  }],
  freeTrialActive: {
    type: Boolean,
    default: false
  },
  freeTrialEndDate: {
    type: Date
  },
  trialMonthsUsed: {
    type: Number,
    default: 0,
    min: [0, 'Trial months used cannot be negative']
  },
  customSiteUrl: {
    type: String,
    required: [true, 'Custom site URL is required'],
    trim: true,
    unique: true
  },
  apiKeys: [{
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'ApiKey',
    default: []
  }],
  createdAt: {
    type: Date,
    default: Date.now
  },
  updatedAt: {
    type: Date,
    default: Date.now
  }
}, {
  timestamps: true,
  toJSON: {
    transform: (doc, ret) => {
      /* istanbul ignore next */
      cov_2jivryg0x2().f[4]++;
      cov_2jivryg0x2().s[31]++;
      delete ret.bankInfo?.accountNumber;
      /* istanbul ignore next */
      cov_2jivryg0x2().s[32]++;
      return ret;
    }
  }
}));
/* istanbul ignore next */
cov_2jivryg0x2().s[33]++;
SellerSchema.pre('save', async function (next) {
  /* istanbul ignore next */
  cov_2jivryg0x2().f[5]++;
  cov_2jivryg0x2().s[34]++;
  if (this.isModified('bankInfo.accountNumber')) {
    /* istanbul ignore next */
    cov_2jivryg0x2().b[15][0]++;
    cov_2jivryg0x2().s[35]++;
    try {
      /* istanbul ignore next */
      cov_2jivryg0x2().s[36]++;
      if (
      /* istanbul ignore next */
      (cov_2jivryg0x2().b[17][0]++, this.bankInfo.accountNumber) &&
      /* istanbul ignore next */
      (cov_2jivryg0x2().b[17][1]++, !this.bankInfo.accountNumber.includes(':'))) {
        /* istanbul ignore next */
        cov_2jivryg0x2().b[16][0]++;
        cov_2jivryg0x2().s[37]++;
        this.bankInfo.accountNumber = await (0, _encryption.encrypt)(this.bankInfo.accountNumber);
      } else
      /* istanbul ignore next */
      {
        cov_2jivryg0x2().b[16][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2jivryg0x2().s[38]++;
      console.error('Encryption error:', error);
      /* istanbul ignore next */
      cov_2jivryg0x2().s[39]++;
      return next(new Error('Failed to encrypt account number'));
    }
  } else
  /* istanbul ignore next */
  {
    cov_2jivryg0x2().b[15][1]++;
  }
  cov_2jivryg0x2().s[40]++;
  next();
});
/* istanbul ignore next */
cov_2jivryg0x2().s[41]++;
SellerSchema.post('find', async function (docs) {
  /* istanbul ignore next */
  cov_2jivryg0x2().f[6]++;
  cov_2jivryg0x2().s[42]++;
  if (!docs) {
    /* istanbul ignore next */
    cov_2jivryg0x2().b[18][0]++;
    cov_2jivryg0x2().s[43]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_2jivryg0x2().b[18][1]++;
  }
  cov_2jivryg0x2().s[44]++;
  for (const doc of docs) {
    /* istanbul ignore next */
    cov_2jivryg0x2().s[45]++;
    await decryptAccountNumber(doc);
  }
});
/* istanbul ignore next */
cov_2jivryg0x2().s[46]++;
SellerSchema.post('findOne', async function (doc) {
  /* istanbul ignore next */
  cov_2jivryg0x2().f[7]++;
  cov_2jivryg0x2().s[47]++;
  if (!doc) {
    /* istanbul ignore next */
    cov_2jivryg0x2().b[19][0]++;
    cov_2jivryg0x2().s[48]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_2jivryg0x2().b[19][1]++;
  }
  cov_2jivryg0x2().s[49]++;
  await decryptAccountNumber(doc);
});
async function decryptAccountNumber(doc) {
  /* istanbul ignore next */
  cov_2jivryg0x2().f[8]++;
  cov_2jivryg0x2().s[50]++;
  if (!doc?.bankInfo?.accountNumber) {
    /* istanbul ignore next */
    cov_2jivryg0x2().b[20][0]++;
    cov_2jivryg0x2().s[51]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_2jivryg0x2().b[20][1]++;
  }
  cov_2jivryg0x2().s[52]++;
  if (
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[22][0]++, doc.isSelected('bankInfo.accountNumber')) &&
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[22][1]++, typeof doc.bankInfo.accountNumber === 'string') &&
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[22][2]++, doc.bankInfo.accountNumber.includes(':'))) {
    /* istanbul ignore next */
    cov_2jivryg0x2().b[21][0]++;
    cov_2jivryg0x2().s[53]++;
    try {
      /* istanbul ignore next */
      cov_2jivryg0x2().s[54]++;
      doc.bankInfo.accountNumber = await (0, _encryption.decrypt)(doc.bankInfo.accountNumber);
    } catch (error) {
      /* istanbul ignore next */
      cov_2jivryg0x2().s[55]++;
      console.warn(`Failed to decrypt account number for seller ${doc._id}:`, error.message);
      /* istanbul ignore next */
      cov_2jivryg0x2().s[56]++;
      doc.bankInfo.accountNumber = '';
      /* istanbul ignore next */
      cov_2jivryg0x2().s[57]++;
      doc.bankInfo.verified = false;
    }
  } else
  /* istanbul ignore next */
  {
    cov_2jivryg0x2().b[21][1]++;
  }
}
/* istanbul ignore next */
cov_2jivryg0x2().s[58]++;
SellerSchema.methods.addPoints = async function (amount, description, orderId) {
  /* istanbul ignore next */
  cov_2jivryg0x2().f[9]++;
  cov_2jivryg0x2().s[59]++;
  if (amount <= 0) {
    /* istanbul ignore next */
    cov_2jivryg0x2().b[23][0]++;
    cov_2jivryg0x2().s[60]++;
    throw new Error('Points amount must be positive');
  } else
  /* istanbul ignore next */
  {
    cov_2jivryg0x2().b[23][1]++;
  }
  cov_2jivryg0x2().s[61]++;
  if (
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[25][0]++, !description) ||
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[25][1]++, description.trim() === '')) {
    /* istanbul ignore next */
    cov_2jivryg0x2().b[24][0]++;
    cov_2jivryg0x2().s[62]++;
    throw new Error('Transaction description is required');
  } else
  /* istanbul ignore next */
  {
    cov_2jivryg0x2().b[24][1]++;
  }
  cov_2jivryg0x2().s[63]++;
  if (
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[27][0]++, orderId) &&
  /* istanbul ignore next */
  (cov_2jivryg0x2().b[27][1]++, !_mongoose.default.Types.ObjectId.isValid(orderId))) {
    /* istanbul ignore next */
    cov_2jivryg0x2().b[26][0]++;
    cov_2jivryg0x2().s[64]++;
    throw new Error('Invalid order ID');
  } else
  /* istanbul ignore next */
  {
    cov_2jivryg0x2().b[26][1]++;
  }
  cov_2jivryg0x2().s[65]++;
  this.pointsBalance += amount;
  /* istanbul ignore next */
  cov_2jivryg0x2().s[66]++;
  this.pointsTransactions.push({
    amount,
    type: 'earn',
    description,
    orderId,
    createdAt: new Date()
  });
  /* istanbul ignore next */
  cov_2jivryg0x2().s[67]++;
  await this.save();
};
const Seller =
/* istanbul ignore next */
(cov_2jivryg0x2().s[68]++,
/* istanbul ignore next */
(cov_2jivryg0x2().b[28][0]++, _mongoose.default.models.Seller) ||
/* istanbul ignore next */
(cov_2jivryg0x2().b[28][1]++, _mongoose.default.model('Seller', SellerSchema)));
const _default =
/* istanbul ignore next */
(cov_2jivryg0x2().s[69]++, Seller);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,