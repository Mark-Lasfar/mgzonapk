{"version":3,"names":["VerificationPage","cov_y0nnwutgc","f","t","s","_nextintl","useTranslations","data","session","status","_react1","useSession","seller","setSeller","_react","useState","loading","setLoading","error","setError","file","setFile","documentType","setDocumentType","useEffect","fetchSeller","b","user","id","result","_selleractions","getSellerByUserId","success","err","handleFileChange","e","target","files","handleUploadDocument","alert","formData","FormData","append","uploadSellerDocument","updatedSeller","_jsxruntime","jsx","className","role","jsxs","_button","Button","onClick","window","location","reload","_card","Card","CardHeader","CardTitle","CardContent","verification","submittedAt","Date","toLocaleDateString","_input","Input","type","value","onChange","placeholder","accept","disabled","_table","Table","TableHeader","TableRow","TableHead","TableBody","documents","Array","from","entries","map","doc","TableCell","uploadedAt"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/verification/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useTranslations } from 'next-intl';\nimport { useSession } from 'next-auth/react';\nimport { uploadSellerDocument, getSellerByUserId } from '@/lib/actions/seller.actions';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\n\nexport default function VerificationPage() {\n  const t = useTranslations('settings.verification');\n  const { data: session, status } = useSession();\n  const [seller, setSeller] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [file, setFile] = useState<File | null>(null);\n  const [documentType, setDocumentType] = useState<string>('');\n\n  useEffect(() => {\n    const fetchSeller = async () => {\n      if (status !== 'authenticated' || !session?.user?.id) return;\n      try {\n        setLoading(true);\n        const result = await getSellerByUserId(session.user.id);\n        if (result.success) {\n          setSeller(result.data);\n        } else {\n          setError(result.error);\n        }\n      } catch (err) {\n        setError(t('errors.fetchFailed'));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSeller();\n  }, [status, session, t]);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files[0]) {\n      setFile(e.target.files[0]);\n    }\n  };\n\n  const handleUploadDocument = async () => {\n    if (!file || !documentType || !session?.user?.id) {\n      alert(t('errors.missingFields'));\n      return;\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('documentType', documentType);\n\n      const result = await uploadSellerDocument(session.user.id, formData);\n      if (result.success) {\n        alert(t('documentUploaded'));\n        setFile(null);\n        setDocumentType('');\n        const updatedSeller = await getSellerByUserId(session.user.id);\n        if (updatedSeller.success) {\n          setSeller(updatedSeller.data);\n        }\n      } else {\n        alert(result.error);\n      }\n    } catch (err) {\n      alert(t('errors.uploadFailed'));\n    }\n  };\n\n  if (status === 'loading' || loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-gray-900\"></div>\n      </div>\n    );\n  }\n\n  if (status === 'unauthenticated') {\n    return <div className=\"p-6\">{t('errors.unauthenticated')}</div>;\n  }\n\n  if (session?.user?.role !== 'SELLER') {\n    return <div className=\"p-6\">{t('errors.accessDenied')}</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen p-4\">\n        <div className=\"text-red-500 mb-4\">{error}</div>\n        <Button onClick={() => window.location.reload()}>{t('retry')}</Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <h2 className=\"text-2xl font-bold\">{t('title')}</h2>\n      <Card>\n        <CardHeader>\n          <CardTitle>{t('verificationStatus')}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <p>\n            {t('status')}: <span className=\"font-semibold\">{seller?.verification?.status || 'pending'}</span>\n          </p>\n          <p>\n            {t('submittedAt')}:{' '}\n            {seller?.verification?.submittedAt\n              ? new Date(seller.verification.submittedAt).toLocaleDateString()\n              : '-'}\n          </p>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>{t('uploadDocument')}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <Input\n              type=\"text\"\n              value={documentType}\n              onChange={(e) => setDocumentType(e.target.value)}\n              placeholder={t('documentTypePlaceholder')}\n            />\n            <Input type=\"file\" accept=\".pdf,.jpg,.png\" onChange={handleFileChange} />\n            <Button onClick={handleUploadDocument} disabled={!file || !documentType}>\n              {t('upload')}\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>{t('documents')}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>{t('documentType')}</TableHead>\n                <TableHead>{t('status')}</TableHead>\n                <TableHead>{t('uploadedAt')}</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {seller?.verification?.documents &&\n                Array.from(seller.verification.documents.entries()).map(([type, doc]: [string, any]) => (\n                  <TableRow key={type}>\n                    <TableCell>{type}</TableCell>\n                    <TableCell>{doc.status}</TableCell>\n                    <TableCell>{new Date(doc.uploadedAt).toLocaleDateString()}</TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"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","ignoreList":[]}