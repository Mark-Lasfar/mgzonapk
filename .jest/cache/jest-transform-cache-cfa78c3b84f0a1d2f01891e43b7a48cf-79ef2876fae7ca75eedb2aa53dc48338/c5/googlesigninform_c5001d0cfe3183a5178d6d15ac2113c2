1293f4243bc39a922941a6ab07dc6593
'use client';
"use strict";

/* istanbul ignore next */
function cov_d135savpy() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(auth)/sign-in/google-signin-form.tsx";
  var hash = "2de2f88ac1fdf05513835e4dc8afc8883e6bb582";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(auth)/sign-in/google-signin-form.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 32
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 18
        },
        end: {
          line: 13,
          column: 38
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 59
        }
      },
      "6": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 68
        }
      },
      "7": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "8": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 58
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 24,
          column: 11
        }
      },
      "10": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 29,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "GoogleSignInForm",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 25
          }
        },
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 25
          },
          end: {
            line: 17,
            column: 26
          }
        },
        loc: {
          start: {
            line: 17,
            column: 29
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 17
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 22
          },
          end: {
            line: 23,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 23,
            column: 58
          }
        }, {
          start: {
            line: 23,
            column: 61
          },
          end: {
            line: 23,
            column: 82
          }
        }],
        line: 23
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(auth)/sign-in/google-signin-form.tsx"],
      sourcesContent: ["'use client'\nimport { useFormStatus } from 'react-dom'\n\nimport { Button } from '@/components/ui/button'\nimport { SignInWithGoogle } from '@/lib/actions/user.actions'\n\nexport function GoogleSignInForm() {\n  const SignInButton = () => {\n    const { pending } = useFormStatus()\n    return (\n      <Button disabled={pending} className=\"w-full\" variant=\"outline\">\n        {pending ? 'Redirecting to Google...' : 'Sign In with Google'}\n      </Button>\n    )\n  }\n  return (\n    <form action={SignInWithGoogle}>\n      <SignInButton />\n    </form>\n  )\n}\n"],
      names: ["GoogleSignInForm", "SignInButton", "pending", "useFormStatus", "Button", "disabled", "className", "variant", "form", "action", "SignInWithGoogle"],
      mappings: "AAAA;;;;;+BAMgBA;;;eAAAA;;;;0BALc;wBAEP;6BACU;AAE1B,SAASA;IACd,MAAMC,eAAe;QACnB,MAAM,EAAEC,OAAO,EAAE,GAAGC,IAAAA,uBAAa;QACjC,qBACE,qBAACC,cAAM;YAACC,UAAUH;YAASI,WAAU;YAASC,SAAQ;sBACnDL,UAAU,6BAA6B;;IAG9C;IACA,qBACE,qBAACM;QAAKC,QAAQC,6BAAgB;kBAC5B,cAAA,qBAACT;;AAGP"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2de2f88ac1fdf05513835e4dc8afc8883e6bb582"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_d135savpy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_d135savpy();
cov_d135savpy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_d135savpy().s[1]++;
Object.defineProperty(exports, "GoogleSignInForm", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_d135savpy().f[0]++;
    cov_d135savpy().s[2]++;
    return GoogleSignInForm;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_d135savpy().s[3]++, require("react/jsx-runtime"));
const _reactdom =
/* istanbul ignore next */
(cov_d135savpy().s[4]++, require("react-dom"));
const _button =
/* istanbul ignore next */
(cov_d135savpy().s[5]++, require("../../../../components/ui/button"));
const _useractions =
/* istanbul ignore next */
(cov_d135savpy().s[6]++, require("../../../../lib/actions/user.actions"));
function GoogleSignInForm() {
  /* istanbul ignore next */
  cov_d135savpy().f[1]++;
  cov_d135savpy().s[7]++;
  const SignInButton = () => {
    /* istanbul ignore next */
    cov_d135savpy().f[2]++;
    const {
      pending
    } =
    /* istanbul ignore next */
    (cov_d135savpy().s[8]++, (0, _reactdom.useFormStatus)());
    /* istanbul ignore next */
    cov_d135savpy().s[9]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
      disabled: pending,
      className: "w-full",
      variant: "outline",
      children: pending ?
      /* istanbul ignore next */
      (cov_d135savpy().b[0][0]++, 'Redirecting to Google...') :
      /* istanbul ignore next */
      (cov_d135savpy().b[0][1]++, 'Sign In with Google')
    });
  };
  /* istanbul ignore next */
  cov_d135savpy().s[10]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("form", {
    action: _useractions.SignInWithGoogle,
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(SignInButton, {})
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZDEzNXNhdnB5IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiR29vZ2xlU2lnbkluRm9ybSIsImYiLCJTaWduSW5CdXR0b24iLCJwZW5kaW5nIiwiX3JlYWN0ZG9tIiwidXNlRm9ybVN0YXR1cyIsIl9qc3hydW50aW1lIiwianN4IiwiX2J1dHRvbiIsIkJ1dHRvbiIsImRpc2FibGVkIiwiY2xhc3NOYW1lIiwidmFyaWFudCIsImIiLCJhY3Rpb24iLCJfdXNlcmFjdGlvbnMiLCJTaWduSW5XaXRoR29vZ2xlIl0sInNvdXJjZXMiOlsiL2hvbWUvaGFnZXIvbmV3L215LW5leHRqcy1wcm9qZWN0LW1hc3RlciAoMykvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyL2FwcC9bbG9jYWxlXS8oYXV0aCkvc2lnbi1pbi9nb29nbGUtc2lnbmluLWZvcm0udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuaW1wb3J0IHsgdXNlRm9ybVN0YXR1cyB9IGZyb20gJ3JlYWN0LWRvbSdcblxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2J1dHRvbidcbmltcG9ydCB7IFNpZ25JbldpdGhHb29nbGUgfSBmcm9tICdAL2xpYi9hY3Rpb25zL3VzZXIuYWN0aW9ucydcblxuZXhwb3J0IGZ1bmN0aW9uIEdvb2dsZVNpZ25JbkZvcm0oKSB7XG4gIGNvbnN0IFNpZ25JbkJ1dHRvbiA9ICgpID0+IHtcbiAgICBjb25zdCB7IHBlbmRpbmcgfSA9IHVzZUZvcm1TdGF0dXMoKVxuICAgIHJldHVybiAoXG4gICAgICA8QnV0dG9uIGRpc2FibGVkPXtwZW5kaW5nfSBjbGFzc05hbWU9XCJ3LWZ1bGxcIiB2YXJpYW50PVwib3V0bGluZVwiPlxuICAgICAgICB7cGVuZGluZyA/ICdSZWRpcmVjdGluZyB0byBHb29nbGUuLi4nIDogJ1NpZ24gSW4gd2l0aCBHb29nbGUnfVxuICAgICAgPC9CdXR0b24+XG4gICAgKVxuICB9XG4gIHJldHVybiAoXG4gICAgPGZvcm0gYWN0aW9uPXtTaWduSW5XaXRoR29vZ2xlfT5cbiAgICAgIDxTaWduSW5CdXR0b24gLz5cbiAgICA8L2Zvcm0+XG4gIClcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBTWdCO0lBQUFBLGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGFBQUE7QUFBQUEsYUFBQSxHQUFBRSxDQUFBOzs7Ozs7K0JBQUE7Ozs7OztXQUFBQyxnQkFBQTs7Ozs7Ozs7aUNBTGM7OztpQ0FFUDs7O2lDQUNVO0FBRTFCLFNBQVNBLGlCQUFBO0VBQUE7RUFBQUgsYUFBQSxHQUFBSSxDQUFBO0VBQUFKLGFBQUEsR0FBQUUsQ0FBQTtFQUNkLE1BQU1HLFlBQUEsR0FBZUEsQ0FBQTtJQUFBO0lBQUFMLGFBQUEsR0FBQUksQ0FBQTtJQUNuQixNQUFNO01BQUVFO0lBQU8sQ0FBRTtJQUFBO0lBQUEsQ0FBQU4sYUFBQSxHQUFBRSxDQUFBLE9BQUcsSUFBQUssU0FBQSxDQUFBQyxhQUFhO0lBQUE7SUFBQVIsYUFBQSxHQUFBRSxDQUFBO0lBQ2pDLG9CQUNFLElBQUFPLFdBQUEsQ0FBQUMsR0FBQSxFQUFDQyxPQUFBLENBQUFDLE1BQU07TUFBQ0MsUUFBQSxFQUFVUCxPQUFBO01BQVNRLFNBQUEsRUFBVTtNQUFTQyxPQUFBLEVBQVE7Z0JBQ25EVCxPQUFBO01BQUE7TUFBQSxDQUFBTixhQUFBLEdBQUFnQixDQUFBLFVBQVU7TUFBQTtNQUFBLENBQUFoQixhQUFBLEdBQUFnQixDQUFBLFVBQTZCOztFQUc5QztFQUFBO0VBQUFoQixhQUFBLEdBQUFFLENBQUE7RUFDQSxvQkFDRSxJQUFBTyxXQUFBLENBQUFDLEdBQUEsRUFBQztJQUFLTyxNQUFBLEVBQVFDLFlBQUEsQ0FBQUMsZ0JBQWdCO2NBQzVCLGlCQUFBVixXQUFBLENBQUFDLEdBQUEsRUFBQ0wsWUFBQTs7QUFHUCIsImlnbm9yZUxpc3QiOltdfQ==