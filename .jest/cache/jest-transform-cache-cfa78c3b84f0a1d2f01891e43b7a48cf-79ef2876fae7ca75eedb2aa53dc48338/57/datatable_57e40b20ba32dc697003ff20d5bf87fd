f09b9bed7e2aceba0b98165c7690cb41
// components/ui/data-table.tsx
"use strict";

/* istanbul ignore next */
function cov_wxgdp8f8p() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/ui/data-table.tsx";
  var hash = "6b04d0f3d0c98c1954742d6392b42c5fba3d745c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/ui/data-table.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 25
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 18
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "6": {
        start: {
          line: 15,
          column: 32
        },
        end: {
          line: 15,
          column: 56
        }
      },
      "7": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 17,
          column: 104
        }
      },
      "8": {
        start: {
          line: 17,
          column: 44
        },
        end: {
          line: 17,
          column: 103
        }
      },
      "9": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 61,
          column: 7
        }
      },
      "10": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 60
        }
      },
      "11": {
        start: {
          line: 36,
          column: 74
        },
        end: {
          line: 39,
          column: 54
        }
      },
      "12": {
        start: {
          line: 43,
          column: 98
        },
        end: {
          line: 50,
          column: 38
        }
      },
      "13": {
        start: {
          line: 44,
          column: 78
        },
        end: {
          line: 49,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 19
          }
        },
        loc: {
          start: {
            line: 14,
            column: 50
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 37
          },
          end: {
            line: 17,
            column: 38
          }
        },
        loc: {
          start: {
            line: 17,
            column: 44
          },
          end: {
            line: 17,
            column: 103
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 30
          },
          end: {
            line: 28,
            column: 31
          }
        },
        loc: {
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 28,
            column: 60
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 50
          },
          end: {
            line: 36,
            column: 51
          }
        },
        loc: {
          start: {
            line: 36,
            column: 74
          },
          end: {
            line: 39,
            column: 54
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 43,
            column: 77
          },
          end: {
            line: 43,
            column: 78
          }
        },
        loc: {
          start: {
            line: 43,
            column: 98
          },
          end: {
            line: 50,
            column: 38
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 44,
            column: 54
          },
          end: {
            line: 44,
            column: 55
          }
        },
        loc: {
          start: {
            line: 44,
            column: 78
          },
          end: {
            line: 49,
            column: 58
          }
        },
        line: 44
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 43,
            column: 34
          },
          end: {
            line: 56,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 60
          },
          end: {
            line: 50,
            column: 39
          }
        }, {
          start: {
            line: 50,
            column: 56
          },
          end: {
            line: 56,
            column: 26
          }
        }],
        line: 43
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 50
          },
          end: {
            line: 48,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 64
          },
          end: {
            line: 48,
            column: 42
          }
        }, {
          start: {
            line: 48,
            column: 45
          },
          end: {
            line: 48,
            column: 68
          }
        }],
        line: 46
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/ui/data-table.tsx"],
      sourcesContent: ["// components/ui/data-table.tsx\n\nimport { useState } from 'react';\n\ninterface Column {\n  header: string;\n  accessorKey: string;\n  cell?: (row: any) => React.ReactNode;\n}\n\ninterface DataTableProps {\n  columns: Column[];\n  data: any[];\n  searchKey: string;\n}\n\nexport const DataTable = ({ columns, data, searchKey }: DataTableProps) => {\n  const [search, setSearch] = useState('');\n\n  // \u062A\u0635\u0641\u064A\u0629 \u0627\u0644\u0628\u064A\u0627\u0646\u0627\u062A \u0628\u0646\u0627\u0621\u064B \u0639\u0644\u0649 \u0627\u0644\u0646\u0635 \u0627\u0644\u0645\u062F\u062E\u0644 \u0641\u064A \u062E\u0627\u0646\u0629 \u0627\u0644\u0628\u062D\u062B\n  const filteredData = data.filter((row) =>\n    row[searchKey].toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div className=\"space-y-4\">\n      {/* \u062E\u0627\u0646\u0629 \u0627\u0644\u0628\u062D\u062B */}\n      <div className=\"flex items-center mb-4\">\n        <input\n          type=\"text\"\n          className=\"p-2 border rounded\"\n          placeholder=\"Search...\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n      </div>\n\n      {/* \u062C\u062F\u0648\u0644 \u0627\u0644\u0628\u064A\u0627\u0646\u0627\u062A */}\n      <table className=\"min-w-full table-auto\">\n        <thead>\n          <tr>\n            {columns.map((column) => (\n              <th key={column.accessorKey} className=\"px-4 py-2 text-left\">\n                {column.header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {filteredData.length > 0 ? (\n            filteredData.map((row) => (\n              <tr key={row.id}>\n                {columns.map((column) => (\n                  <td key={column.accessorKey} className=\"px-4 py-2\">\n                    {column.cell ? column.cell({ row }) : row[column.accessorKey]}\n                  </td>\n                ))}\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan={columns.length} className=\"px-4 py-2 text-center\">\n                No results found.\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n"],
      names: ["DataTable", "columns", "data", "searchKey", "search", "setSearch", "useState", "filteredData", "filter", "row", "toLowerCase", "includes", "div", "className", "input", "type", "placeholder", "value", "onChange", "e", "target", "table", "thead", "tr", "map", "column", "th", "header", "accessorKey", "tbody", "length", "td", "cell", "id", "colSpan"],
      mappings: "AAAA,+BAA+B;;;;;+BAgBlBA;;;eAAAA;;;;uBAdY;AAclB,MAAMA,YAAY,CAAC,EAAEC,OAAO,EAAEC,IAAI,EAAEC,SAAS,EAAkB;IACpE,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAAC;IAErC,qDAAqD;IACrD,MAAMC,eAAeL,KAAKM,MAAM,CAAC,CAACC,MAChCA,GAAG,CAACN,UAAU,CAACO,WAAW,GAAGC,QAAQ,CAACP,OAAOM,WAAW;IAG1D,qBACE,sBAACE;QAAIC,WAAU;;0BAEb,qBAACD;gBAAIC,WAAU;0BACb,cAAA,qBAACC;oBACCC,MAAK;oBACLF,WAAU;oBACVG,aAAY;oBACZC,OAAOb;oBACPc,UAAU,CAACC,IAAMd,UAAUc,EAAEC,MAAM,CAACH,KAAK;;;0BAK7C,sBAACI;gBAAMR,WAAU;;kCACf,qBAACS;kCACC,cAAA,qBAACC;sCACEtB,QAAQuB,GAAG,CAAC,CAACC,uBACZ,qBAACC;oCAA4Bb,WAAU;8CACpCY,OAAOE,MAAM;mCADPF,OAAOG,WAAW;;;kCAMjC,qBAACC;kCACEtB,aAAauB,MAAM,GAAG,IACrBvB,aAAaiB,GAAG,CAAC,CAACf,oBAChB,qBAACc;0CACEtB,QAAQuB,GAAG,CAAC,CAACC,uBACZ,qBAACM;wCAA4BlB,WAAU;kDACpCY,OAAOO,IAAI,GAAGP,OAAOO,IAAI,CAAC;4CAAEvB;wCAAI,KAAKA,GAAG,CAACgB,OAAOG,WAAW,CAAC;uCADtDH,OAAOG,WAAW;+BAFtBnB,IAAIwB,EAAE,mBASjB,qBAACV;sCACC,cAAA,qBAACQ;gCAAGG,SAASjC,QAAQ6B,MAAM;gCAAEjB,WAAU;0CAAwB;;;;;;;;AAS7E"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6b04d0f3d0c98c1954742d6392b42c5fba3d745c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wxgdp8f8p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wxgdp8f8p();
cov_wxgdp8f8p().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_wxgdp8f8p().s[1]++;
Object.defineProperty(exports, "DataTable", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_wxgdp8f8p().f[0]++;
    cov_wxgdp8f8p().s[2]++;
    return DataTable;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_wxgdp8f8p().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_wxgdp8f8p().s[4]++, require("react"));
/* istanbul ignore next */
cov_wxgdp8f8p().s[5]++;
const DataTable = ({
  columns,
  data,
  searchKey
}) => {
  /* istanbul ignore next */
  cov_wxgdp8f8p().f[1]++;
  const [search, setSearch] =
  /* istanbul ignore next */
  (cov_wxgdp8f8p().s[6]++, (0, _react.useState)(''));
  // تصفية البيانات بناءً على النص المدخل في خانة البحث
  const filteredData =
  /* istanbul ignore next */
  (cov_wxgdp8f8p().s[7]++, data.filter(row => {
    /* istanbul ignore next */
    cov_wxgdp8f8p().f[2]++;
    cov_wxgdp8f8p().s[8]++;
    return row[searchKey].toLowerCase().includes(search.toLowerCase());
  }));
  /* istanbul ignore next */
  cov_wxgdp8f8p().s[9]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-4",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex items-center mb-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
        type: "text",
        className: "p-2 border rounded",
        placeholder: "Search...",
        value: search,
        onChange: e => {
          /* istanbul ignore next */
          cov_wxgdp8f8p().f[3]++;
          cov_wxgdp8f8p().s[10]++;
          return setSearch(e.target.value);
        }
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("table", {
      className: "min-w-full table-auto",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("thead", {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("tr", {
          children: columns.map(column => {
            /* istanbul ignore next */
            cov_wxgdp8f8p().f[4]++;
            cov_wxgdp8f8p().s[11]++;
            return /*#__PURE__*/(0, _jsxruntime.jsx)("th", {
              className: "px-4 py-2 text-left",
              children: column.header
            }, column.accessorKey);
          })
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("tbody", {
        children: filteredData.length > 0 ?
        /* istanbul ignore next */
        (cov_wxgdp8f8p().b[0][0]++, filteredData.map(row => {
          /* istanbul ignore next */
          cov_wxgdp8f8p().f[5]++;
          cov_wxgdp8f8p().s[12]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("tr", {
            children: columns.map(column => {
              /* istanbul ignore next */
              cov_wxgdp8f8p().f[6]++;
              cov_wxgdp8f8p().s[13]++;
              return /*#__PURE__*/(0, _jsxruntime.jsx)("td", {
                className: "px-4 py-2",
                children: column.cell ?
                /* istanbul ignore next */
                (cov_wxgdp8f8p().b[1][0]++, column.cell({
                  row
                })) :
                /* istanbul ignore next */
                (cov_wxgdp8f8p().b[1][1]++, row[column.accessorKey])
              }, column.accessorKey);
            })
          }, row.id);
        })) :
        /* istanbul ignore next */
        (/*#__PURE__*/cov_wxgdp8f8p().b[0][1]++, (0, _jsxruntime.jsx)("tr", {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("td", {
            colSpan: columns.length,
            className: "px-4 py-2 text-center",
            children: "No results found."
          })
        }))
      })]
    })]
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3Zfd3hnZHA4ZjhwIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiRGF0YVRhYmxlIiwiY29sdW1ucyIsImRhdGEiLCJzZWFyY2hLZXkiLCJmIiwic2VhcmNoIiwic2V0U2VhcmNoIiwiX3JlYWN0IiwidXNlU3RhdGUiLCJmaWx0ZXJlZERhdGEiLCJmaWx0ZXIiLCJyb3ciLCJ0b0xvd2VyQ2FzZSIsImluY2x1ZGVzIiwiX2pzeHJ1bnRpbWUiLCJqc3hzIiwiY2xhc3NOYW1lIiwianN4IiwidHlwZSIsInBsYWNlaG9sZGVyIiwidmFsdWUiLCJvbkNoYW5nZSIsImUiLCJ0YXJnZXQiLCJtYXAiLCJjb2x1bW4iLCJoZWFkZXIiLCJhY2Nlc3NvcktleSIsImxlbmd0aCIsImIiLCJjZWxsIiwiaWQiLCJjb2xTcGFuIl0sInNvdXJjZXMiOlsiL2hvbWUvaGFnZXIvbmV3L215LW5leHRqcy1wcm9qZWN0LW1hc3RlciAoMykvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyL2NvbXBvbmVudHMvdWkvZGF0YS10YWJsZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29tcG9uZW50cy91aS9kYXRhLXRhYmxlLnRzeFxuXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW50ZXJmYWNlIENvbHVtbiB7XG4gIGhlYWRlcjogc3RyaW5nO1xuICBhY2Nlc3NvcktleTogc3RyaW5nO1xuICBjZWxsPzogKHJvdzogYW55KSA9PiBSZWFjdC5SZWFjdE5vZGU7XG59XG5cbmludGVyZmFjZSBEYXRhVGFibGVQcm9wcyB7XG4gIGNvbHVtbnM6IENvbHVtbltdO1xuICBkYXRhOiBhbnlbXTtcbiAgc2VhcmNoS2V5OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCBEYXRhVGFibGUgPSAoeyBjb2x1bW5zLCBkYXRhLCBzZWFyY2hLZXkgfTogRGF0YVRhYmxlUHJvcHMpID0+IHtcbiAgY29uc3QgW3NlYXJjaCwgc2V0U2VhcmNoXSA9IHVzZVN0YXRlKCcnKTtcblxuICAvLyDYqti12YHZitipINin2YTYqNmK2KfZhtin2Kog2KjZhtin2KHZiyDYudmE2Ykg2KfZhNmG2LUg2KfZhNmF2K/YrtmEINmB2Yog2K7Yp9mG2Kkg2KfZhNio2K3Yq1xuICBjb25zdCBmaWx0ZXJlZERhdGEgPSBkYXRhLmZpbHRlcigocm93KSA9PlxuICAgIHJvd1tzZWFyY2hLZXldLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoLnRvTG93ZXJDYXNlKCkpXG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNFwiPlxuICAgICAgey8qINiu2KfZhtipINin2YTYqNit2KsgKi99XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIG1iLTRcIj5cbiAgICAgICAgPGlucHV0XG4gICAgICAgICAgdHlwZT1cInRleHRcIlxuICAgICAgICAgIGNsYXNzTmFtZT1cInAtMiBib3JkZXIgcm91bmRlZFwiXG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCJTZWFyY2guLi5cIlxuICAgICAgICAgIHZhbHVlPXtzZWFyY2h9XG4gICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRTZWFyY2goZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIHsvKiDYrNiv2YjZhCDYp9mE2KjZitin2YbYp9iqICovfVxuICAgICAgPHRhYmxlIGNsYXNzTmFtZT1cIm1pbi13LWZ1bGwgdGFibGUtYXV0b1wiPlxuICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgPHRyPlxuICAgICAgICAgICAge2NvbHVtbnMubWFwKChjb2x1bW4pID0+IChcbiAgICAgICAgICAgICAgPHRoIGtleT17Y29sdW1uLmFjY2Vzc29yS2V5fSBjbGFzc05hbWU9XCJweC00IHB5LTIgdGV4dC1sZWZ0XCI+XG4gICAgICAgICAgICAgICAge2NvbHVtbi5oZWFkZXJ9XG4gICAgICAgICAgICAgIDwvdGg+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgICA8L3RyPlxuICAgICAgICA8L3RoZWFkPlxuICAgICAgICA8dGJvZHk+XG4gICAgICAgICAge2ZpbHRlcmVkRGF0YS5sZW5ndGggPiAwID8gKFxuICAgICAgICAgICAgZmlsdGVyZWREYXRhLm1hcCgocm93KSA9PiAoXG4gICAgICAgICAgICAgIDx0ciBrZXk9e3Jvdy5pZH0+XG4gICAgICAgICAgICAgICAge2NvbHVtbnMubWFwKChjb2x1bW4pID0+IChcbiAgICAgICAgICAgICAgICAgIDx0ZCBrZXk9e2NvbHVtbi5hY2Nlc3NvcktleX0gY2xhc3NOYW1lPVwicHgtNCBweS0yXCI+XG4gICAgICAgICAgICAgICAgICAgIHtjb2x1bW4uY2VsbCA/IGNvbHVtbi5jZWxsKHsgcm93IH0pIDogcm93W2NvbHVtbi5hY2Nlc3NvcktleV19XG4gICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgKSlcbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICA8dGQgY29sU3Bhbj17Y29sdW1ucy5sZW5ndGh9IGNsYXNzTmFtZT1cInB4LTQgcHktMiB0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICAgIE5vIHJlc3VsdHMgZm91bmQuXG4gICAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvdGJvZHk+XG4gICAgICA8L3RhYmxlPlxuICAgIDwvZGl2PlxuICApO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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