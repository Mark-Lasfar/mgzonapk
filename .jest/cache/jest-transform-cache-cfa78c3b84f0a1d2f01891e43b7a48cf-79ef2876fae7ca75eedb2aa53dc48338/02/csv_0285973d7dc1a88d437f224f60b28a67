23ce5dbcbca827271f92550caa5e2e9f
// ========== INTERFACES ==========
"use strict";

/* istanbul ignore next */
function cov_y2zc5088i() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/utils/csv.ts";
  var hash = "2f508c5fccc709f890d902b657a6201af09819cc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/utils/csv.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 25
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 27
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 24
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "9": {
        start: {
          line: 30,
          column: 79
        },
        end: {
          line: 30,
          column: 86
        }
      },
      "10": {
        start: {
          line: 31,
          column: 22
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "11": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 32,
          column: 122
        }
      },
      "12": {
        start: {
          line: 33,
          column: 23
        },
        end: {
          line: 33,
          column: 25
        }
      },
      "13": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "14": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 36,
          column: 94
        }
      },
      "15": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 43
        }
      },
      "16": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 37,
          column: 43
        }
      },
      "17": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 31
        }
      },
      "18": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 22
        }
      },
      "19": {
        start: {
          line: 42,
          column: 18
        },
        end: {
          line: 42,
          column: 75
        }
      },
      "20": {
        start: {
          line: 42,
          column: 56
        },
        end: {
          line: 42,
          column: 74
        }
      },
      "21": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 38
        }
      },
      "22": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 43,
          column: 38
        }
      },
      "23": {
        start: {
          line: 45,
          column: 25
        },
        end: {
          line: 45,
          column: 26
        }
      },
      "24": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "25": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 26
        }
      },
      "26": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 27
        }
      },
      "27": {
        start: {
          line: 49,
          column: 11
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "28": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 21
        }
      },
      "29": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 27
        }
      },
      "30": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 38
        }
      },
      "31": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 55,
          column: 22
        }
      },
      "32": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "33": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 30
        }
      },
      "34": {
        start: {
          line: 57,
          column: 23
        },
        end: {
          line: 57,
          column: 42
        }
      },
      "35": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 22
        }
      },
      "36": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "37": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 60,
          column: 35
        }
      },
      "38": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "39": {
        start: {
          line: 62,
          column: 30
        },
        end: {
          line: 62,
          column: 49
        }
      },
      "40": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 65,
          column: 70
        }
      },
      "41": {
        start: {
          line: 63,
          column: 38
        },
        end: {
          line: 63,
          column: 51
        }
      },
      "42": {
        start: {
          line: 64,
          column: 21
        },
        end: {
          line: 65,
          column: 70
        }
      },
      "43": {
        start: {
          line: 64,
          column: 44
        },
        end: {
          line: 64,
          column: 58
        }
      },
      "44": {
        start: {
          line: 65,
          column: 21
        },
        end: {
          line: 65,
          column: 70
        }
      },
      "45": {
        start: {
          line: 65,
          column: 48
        },
        end: {
          line: 65,
          column: 70
        }
      },
      "46": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 32
        }
      },
      "47": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 26
        }
      },
      "48": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 19
        }
      },
      "49": {
        start: {
          line: 74,
          column: 74
        },
        end: {
          line: 74,
          column: 81
        }
      },
      "50": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 61
        }
      },
      "51": {
        start: {
          line: 75,
          column: 51
        },
        end: {
          line: 75,
          column: 61
        }
      },
      "52": {
        start: {
          line: 76,
          column: 20
        },
        end: {
          line: 76,
          column: 69
        }
      },
      "53": {
        start: {
          line: 77,
          column: 18
        },
        end: {
          line: 77,
          column: 20
        }
      },
      "54": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "55": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 44
        }
      },
      "56": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "57": {
        start: {
          line: 82,
          column: 23
        },
        end: {
          line: 93,
          column: 10
        }
      },
      "58": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 83,
          column: 34
        }
      },
      "59": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 65
        }
      },
      "60": {
        start: {
          line: 84,
          column: 55
        },
        end: {
          line: 84,
          column: 65
        }
      },
      "61": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "62": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 46
        }
      },
      "63": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 38
        }
      },
      "64": {
        start: {
          line: 90,
          column: 32
        },
        end: {
          line: 90,
          column: 104
        }
      },
      "65": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 46
        }
      },
      "66": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 54
        }
      },
      "67": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 43
        }
      },
      "68": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 28
        }
      },
      "69": {
        start: {
          line: 99,
          column: 19
        },
        end: {
          line: 99,
          column: 21
        }
      },
      "70": {
        start: {
          line: 100,
          column: 19
        },
        end: {
          line: 100,
          column: 45
        }
      },
      "71": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "72": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 61
        }
      },
      "73": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 106,
          column: 10
        }
      },
      "74": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "75": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 17
        }
      },
      "76": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 29
        }
      },
      "77": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "78": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "79": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 80
        }
      },
      "80": {
        start: {
          line: 113,
          column: 19
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "81": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 72
        }
      },
      "82": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 121,
          column: 6
        }
      },
      "83": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 129,
          column: 7
        }
      },
      "84": {
        start: {
          line: 125,
          column: 23
        },
        end: {
          line: 125,
          column: 39
        }
      },
      "85": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 51
        }
      },
      "86": {
        start: {
          line: 126,
          column: 28
        },
        end: {
          line: 126,
          column: 50
        }
      },
      "87": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 50
        }
      },
      "88": {
        start: {
          line: 127,
          column: 29
        },
        end: {
          line: 127,
          column: 49
        }
      },
      "89": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 41
        }
      },
      "90": {
        start: {
          line: 132,
          column: 17
        },
        end: {
          line: 136,
          column: 6
        }
      },
      "91": {
        start: {
          line: 137,
          column: 17
        },
        end: {
          line: 137,
          column: 44
        }
      },
      "92": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 41
        }
      },
      "93": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 20
        }
      },
      "94": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 140,
          column: 29
        }
      },
      "95": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 141,
          column: 32
        }
      },
      "96": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 142,
          column: 36
        }
      },
      "97": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 17
        }
      },
      "98": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 144,
          column: 36
        }
      },
      "99": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 145,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 16
          }
        },
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 16,
            column: 18
          }
        },
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 14
          },
          end: {
            line: 19,
            column: 15
          }
        },
        loc: {
          start: {
            line: 19,
            column: 25
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 17
          },
          end: {
            line: 22,
            column: 18
          }
        },
        loc: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 17
          },
          end: {
            line: 25,
            column: 18
          }
        },
        loc: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "parseCSV",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 17
          }
        },
        loc: {
          start: {
            line: 29,
            column: 41
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 22
          },
          end: {
            line: 31,
            column: 23
          }
        },
        loc: {
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 42,
            column: 48
          },
          end: {
            line: 42,
            column: 49
          }
        },
        loc: {
          start: {
            line: 42,
            column: 56
          },
          end: {
            line: 42,
            column: 74
          }
        },
        line: 42
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 59,
            column: 24
          },
          end: {
            line: 59,
            column: 25
          }
        },
        loc: {
          start: {
            line: 59,
            column: 39
          },
          end: {
            line: 68,
            column: 9
          }
        },
        line: 59
      },
      "10": {
        name: "createCSV",
        decl: {
          start: {
            line: 73,
            column: 9
          },
          end: {
            line: 73,
            column: 18
          }
        },
        loc: {
          start: {
            line: 73,
            column: 47
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 73
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 82,
            column: 34
          },
          end: {
            line: 82,
            column: 35
          }
        },
        loc: {
          start: {
            line: 82,
            column: 43
          },
          end: {
            line: 93,
            column: 9
          }
        },
        line: 82
      },
      "12": {
        name: "validateCSV",
        decl: {
          start: {
            line: 98,
            column: 9
          },
          end: {
            line: 98,
            column: 20
          }
        },
        loc: {
          start: {
            line: 98,
            column: 60
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 98
      },
      "13": {
        name: "readCSVFile",
        decl: {
          start: {
            line: 123,
            column: 9
          },
          end: {
            line: 123,
            column: 20
          }
        },
        loc: {
          start: {
            line: 123,
            column: 27
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 123
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 124,
            column: 23
          },
          end: {
            line: 124,
            column: 24
          }
        },
        loc: {
          start: {
            line: 124,
            column: 42
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 124
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 126,
            column: 24
          },
          end: {
            line: 126,
            column: 25
          }
        },
        loc: {
          start: {
            line: 126,
            column: 28
          },
          end: {
            line: 126,
            column: 50
          }
        },
        line: 126
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 127,
            column: 25
          },
          end: {
            line: 127,
            column: 26
          }
        },
        loc: {
          start: {
            line: 127,
            column: 29
          },
          end: {
            line: 127,
            column: 49
          }
        },
        line: 127
      },
      "17": {
        name: "downloadCSV",
        decl: {
          start: {
            line: 131,
            column: 9
          },
          end: {
            line: 131,
            column: 20
          }
        },
        loc: {
          start: {
            line: 131,
            column: 56
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 131
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 27
          },
          end: {
            line: 29,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 29,
            column: 39
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 27
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 30,
            column: 42
          },
          end: {
            line: 30,
            column: 47
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 49
          },
          end: {
            line: 30,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 30,
            column: 59
          },
          end: {
            line: 30,
            column: 61
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 63
          },
          end: {
            line: 30,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 30,
            column: 70
          },
          end: {
            line: 30,
            column: 74
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 49
          },
          end: {
            line: 36,
            column: 77
          }
        }, {
          start: {
            line: 36,
            column: 80
          },
          end: {
            line: 36,
            column: 94
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 80
          },
          end: {
            line: 36,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 80
          },
          end: {
            line: 36,
            column: 88
          }
        }, {
          start: {
            line: 36,
            column: 92
          },
          end: {
            line: 36,
            column: 94
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 12
          },
          end: {
            line: 37,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "8": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "9": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: 49,
            column: 11
          },
          end: {
            line: 54,
            column: 5
          }
        }],
        line: 46
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 11
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 11
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: 52,
            column: 11
          },
          end: {
            line: 54,
            column: 5
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "12": {
        loc: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 65,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 65,
            column: 70
          }
        }, {
          start: {
            line: 64,
            column: 21
          },
          end: {
            line: 65,
            column: 70
          }
        }],
        line: 63
      },
      "13": {
        loc: {
          start: {
            line: 64,
            column: 21
          },
          end: {
            line: 65,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 21
          },
          end: {
            line: 65,
            column: 70
          }
        }, {
          start: {
            line: 65,
            column: 21
          },
          end: {
            line: 65,
            column: 70
          }
        }],
        line: 64
      },
      "14": {
        loc: {
          start: {
            line: 65,
            column: 21
          },
          end: {
            line: 65,
            column: 70
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 21
          },
          end: {
            line: 65,
            column: 70
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "15": {
        loc: {
          start: {
            line: 73,
            column: 33
          },
          end: {
            line: 73,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 73,
            column: 43
          },
          end: {
            line: 73,
            column: 45
          }
        }],
        line: 73
      },
      "16": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 74,
            column: 27
          }
        }],
        line: 74
      },
      "17": {
        loc: {
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 74,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 74,
            column: 45
          },
          end: {
            line: 74,
            column: 49
          }
        }],
        line: 74
      },
      "18": {
        loc: {
          start: {
            line: 74,
            column: 51
          },
          end: {
            line: 74,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 74,
            column: 67
          },
          end: {
            line: 74,
            column: 69
          }
        }],
        line: 74
      },
      "19": {
        loc: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "20": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 75,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 75,
            column: 28
          }
        }, {
          start: {
            line: 75,
            column: 32
          },
          end: {
            line: 75,
            column: 49
          }
        }],
        line: 75
      },
      "21": {
        loc: {
          start: {
            line: 76,
            column: 20
          },
          end: {
            line: 76,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 47
          },
          end: {
            line: 76,
            column: 60
          }
        }, {
          start: {
            line: 76,
            column: 63
          },
          end: {
            line: 76,
            column: 69
          }
        }],
        line: 76
      },
      "22": {
        loc: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "23": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "24": {
        loc: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 30
          }
        }, {
          start: {
            line: 84,
            column: 34
          },
          end: {
            line: 84,
            column: 53
          }
        }],
        line: 84
      },
      "25": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: 87,
            column: 19
          },
          end: {
            line: 89,
            column: 13
          }
        }],
        line: 85
      },
      "26": {
        loc: {
          start: {
            line: 90,
            column: 32
          },
          end: {
            line: 90,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 32
          },
          end: {
            line: 90,
            column: 57
          }
        }, {
          start: {
            line: 90,
            column: 61
          },
          end: {
            line: 90,
            column: 80
          }
        }, {
          start: {
            line: 90,
            column: 84
          },
          end: {
            line: 90,
            column: 104
          }
        }],
        line: 90
      },
      "27": {
        loc: {
          start: {
            line: 92,
            column: 19
          },
          end: {
            line: 92,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 33
          },
          end: {
            line: 92,
            column: 45
          }
        }, {
          start: {
            line: 92,
            column: 48
          },
          end: {
            line: 92,
            column: 53
          }
        }],
        line: 92
      },
      "28": {
        loc: {
          start: {
            line: 98,
            column: 46
          },
          end: {
            line: 98,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 98,
            column: 56
          },
          end: {
            line: 98,
            column: 58
          }
        }],
        line: 98
      },
      "29": {
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "30": {
        loc: {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: 113,
            column: 19
          },
          end: {
            line: 115,
            column: 13
          }
        }],
        line: 111
      },
      "31": {
        loc: {
          start: {
            line: 113,
            column: 19
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 19
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "32": {
        loc: {
          start: {
            line: 113,
            column: 23
          },
          end: {
            line: 113,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 23
          },
          end: {
            line: 113,
            column: 40
          }
        }, {
          start: {
            line: 113,
            column: 44
          },
          end: {
            line: 113,
            column: 63
          }
        }, {
          start: {
            line: 113,
            column: 67
          },
          end: {
            line: 113,
            column: 91
          }
        }],
        line: 113
      },
      "33": {
        loc: {
          start: {
            line: 131,
            column: 33
          },
          end: {
            line: 131,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 131,
            column: 44
          },
          end: {
            line: 131,
            column: 54
          }
        }],
        line: 131
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0],
      "33": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/utils/csv.ts"],
      sourcesContent: ["\n\n// ========== INTERFACES ==========\n\nexport interface CSVParseOptions {\n    delimiter?: string;\n    skipHeader?: boolean;\n    columns?: string[];\n    trim?: boolean;\n  }\n  \n  export interface CSVCreateOptions {\n    delimiter?: string;\n    includeHeader?: boolean;\n    customHeaders?: string[];\n  }\n  \n  export interface CSVValidationResult {\n    valid: boolean;\n    errors: string[];\n  }\n  \n  // ========== PARSER ==========\n  \n  export function parseCSV<T>(\n    content: string,\n    options: CSVParseOptions = {}\n  ): T[] {\n    const {\n      delimiter = ',',\n      skipHeader = false,\n      columns = [],\n      trim = true,\n    } = options;\n  \n    const parseLine = (line: string): string[] => {\n      const regex = new RegExp(\n        `(?:\\\\s*\\\"([^\"]*(?:\\\"\\\"[^\"]*)*)\\\"\\\\s*|([^\"${delimiter}\\\\r\\\\n]*))(?:${delimiter}|$)`,\n        'g'\n      );\n      const result: string[] = [];\n      let match: RegExpExecArray | null;\n  \n      while ((match = regex.exec(line)) !== null) {\n        let value = match[1] !== undefined\n          ? match[1].replace(/\"\"/g, '\"')\n          : match[2] ?? '';\n        if (trim) value = value.trim();\n        result.push(value);\n      }\n  \n      return result;\n    };\n  \n    const lines = content\n      .split(/\\r?\\n/)\n      .filter(line => line.trim() !== '');\n  \n    if (lines.length === 0) return [];\n  \n    let headers: string[];\n    let dataStartIndex = 1;\n  \n    if (columns.length > 0) {\n      headers = columns;\n      dataStartIndex = 0;\n    } else if (skipHeader) {\n      headers = [];\n      dataStartIndex = 0;\n    } else {\n      headers = parseLine(lines[0]);\n    }\n  \n    const results: T[] = [];\n  \n    for (let i = dataStartIndex; i < lines.length; i++) {\n      const values = parseLine(lines[i]);\n      const obj: any = {};\n  \n      headers.forEach((header, idx) => {\n        let value = values[idx];\n  \n        if (value !== undefined) {\n          const lower = value.toLowerCase();\n          if (lower === 'true') value = true;\n          else if (lower === 'false') value = false;\n          else if (!isNaN(Number(value))) value = Number(value);\n        }\n  \n        obj[header] = value;\n      });\n  \n      results.push(obj as T);\n    }\n  \n    return results;\n  }\n  \n  // ========== CREATOR ==========\n  \n  export function createCSV(\n    data: any[],\n    fields: string[],\n    options: CSVCreateOptions = {}\n  ): string {\n    const {\n      delimiter = ',',\n      includeHeader = true,\n      customHeaders = [],\n    } = options;\n  \n    if (!Array.isArray(data) || data.length === 0) return '';\n  \n    const headers = customHeaders.length > 0 ? customHeaders : fields;\n    const lines: string[] = [];\n  \n    if (includeHeader) {\n      lines.push(headers.join(delimiter));\n    }\n  \n    for (const row of data) {\n      const values = fields.map(field => {\n        let value = row[field];\n        if (value === null || value === undefined) return '';\n  \n        if (typeof value === 'object') {\n          value = JSON.stringify(value);\n        } else {\n          value = String(value);\n        }\n  \n        const needsQuotes = value.includes(delimiter) || value.includes('\"') || value.includes('\\n');\n        value = value.replace(/\"/g, '\"\"');\n        return needsQuotes ? `\"${value}\"` : value;\n      });\n  \n      lines.push(values.join(delimiter));\n    }\n  \n    return lines.join('\\n');\n  }\n  \n  // ========== VALIDATOR ==========\n  \n  export function validateCSV(\n    content: string,\n    requiredFields: string[],\n    options: CSVParseOptions = {}\n  ): CSVValidationResult {\n    const errors: string[] = [];\n    const parsed = parseCSV<any>(content, options);\n  \n    if (parsed.length === 0) {\n      errors.push('CSV is empty or improperly formatted.');\n      return { valid: false, errors };\n    }\n  \n    for (let i = 0; i < parsed.length; i++) {\n      const row = parsed[i];\n      for (const field of requiredFields) {\n        if (!(field in row)) {\n          errors.push(`Row ${i + 1}: Missing required field \"${field}\".`);\n        } else if (row[field] === '' || row[field] === null || row[field] === undefined) {\n          errors.push(`Row ${i + 1}: Field \"${field}\" is empty.`);\n        }\n      }\n    }\n  \n    return {\n      valid: errors.length === 0,\n      errors,\n    };\n  }\n  \n  // ========== FILE UTILS (For Browser) ==========\n  \n  // \u0642\u0631\u0627\u0621\u0629 CSV \u0645\u0646 \u0645\u0644\u0641 \u0625\u062F\u062E\u0627\u0644 (input type=\"file\")\n  export function readCSVFile(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n  \n      reader.onload = () => resolve(reader.result as string);\n      reader.onerror = () => reject(reader.error);\n  \n      reader.readAsText(file, 'utf-8');\n    });\n  }\n  \n  // \u062A\u0646\u0632\u064A\u0644 CSV \u0643\u0645\u0644\u0641\n  export function downloadCSV(csvContent: string, filename = 'data.csv') {\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n  \n    link.href = url;\n    link.download = filename;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n  "],
      names: ["createCSV", "downloadCSV", "parseCSV", "readCSVFile", "validateCSV", "content", "options", "delimiter", "skipHeader", "columns", "trim", "parseLine", "line", "regex", "RegExp", "result", "match", "exec", "value", "undefined", "replace", "push", "lines", "split", "filter", "length", "headers", "dataStartIndex", "results", "i", "values", "obj", "forEach", "header", "idx", "lower", "toLowerCase", "isNaN", "Number", "data", "fields", "includeHeader", "customHeaders", "Array", "isArray", "join", "row", "map", "field", "JSON", "stringify", "String", "needsQuotes", "includes", "requiredFields", "errors", "parsed", "valid", "file", "Promise", "resolve", "reject", "reader", "FileReader", "onload", "onerror", "error", "readAsText", "csvContent", "filename", "blob", "Blob", "type", "link", "document", "createElement", "url", "URL", "createObjectURL", "href", "download", "style", "display", "body", "appendChild", "click", "removeChild", "revokeObjectURL"],
      mappings: "AAEA,mCAAmC;;;;;;;;;;;;IAkGjBA,SAAS;eAATA;;IAyFAC,WAAW;eAAXA;;IArKAC,QAAQ;eAARA;;IAyJAC,WAAW;eAAXA;;IAjCAC,WAAW;eAAXA;;;AAxHT,SAASF,SACdG,OAAe,EACfC,UAA2B,CAAC,CAAC;IAE7B,MAAM,EACJC,YAAY,GAAG,EACfC,aAAa,KAAK,EAClBC,UAAU,EAAE,EACZC,OAAO,IAAI,EACZ,GAAGJ;IAEJ,MAAMK,YAAY,CAACC;QACjB,MAAMC,QAAQ,IAAIC,OAChB,CAAC,yCAAyC,EAAEP,UAAU,aAAa,EAAEA,UAAU,GAAG,CAAC,EACnF;QAEF,MAAMQ,SAAmB,EAAE;QAC3B,IAAIC;QAEJ,MAAO,AAACA,CAAAA,QAAQH,MAAMI,IAAI,CAACL,KAAI,MAAO,KAAM;YAC1C,IAAIM,QAAQF,KAAK,CAAC,EAAE,KAAKG,YACrBH,KAAK,CAAC,EAAE,CAACI,OAAO,CAAC,OAAO,OACxBJ,KAAK,CAAC,EAAE,IAAI;YAChB,IAAIN,MAAMQ,QAAQA,MAAMR,IAAI;YAC5BK,OAAOM,IAAI,CAACH;QACd;QAEA,OAAOH;IACT;IAEA,MAAMO,QAAQjB,QACXkB,KAAK,CAAC,SACNC,MAAM,CAACZ,CAAAA,OAAQA,KAAKF,IAAI,OAAO;IAElC,IAAIY,MAAMG,MAAM,KAAK,GAAG,OAAO,EAAE;IAEjC,IAAIC;IACJ,IAAIC,iBAAiB;IAErB,IAAIlB,QAAQgB,MAAM,GAAG,GAAG;QACtBC,UAAUjB;QACVkB,iBAAiB;IACnB,OAAO,IAAInB,YAAY;QACrBkB,UAAU,EAAE;QACZC,iBAAiB;IACnB,OAAO;QACLD,UAAUf,UAAUW,KAAK,CAAC,EAAE;IAC9B;IAEA,MAAMM,UAAe,EAAE;IAEvB,IAAK,IAAIC,IAAIF,gBAAgBE,IAAIP,MAAMG,MAAM,EAAEI,IAAK;QAClD,MAAMC,SAASnB,UAAUW,KAAK,CAACO,EAAE;QACjC,MAAME,MAAW,CAAC;QAElBL,QAAQM,OAAO,CAAC,CAACC,QAAQC;YACvB,IAAIhB,QAAQY,MAAM,CAACI,IAAI;YAEvB,IAAIhB,UAAUC,WAAW;gBACvB,MAAMgB,QAAQjB,MAAMkB,WAAW;gBAC/B,IAAID,UAAU,QAAQjB,QAAQ;qBACzB,IAAIiB,UAAU,SAASjB,QAAQ;qBAC/B,IAAI,CAACmB,MAAMC,OAAOpB,SAASA,QAAQoB,OAAOpB;YACjD;YAEAa,GAAG,CAACE,OAAO,GAAGf;QAChB;QAEAU,QAAQP,IAAI,CAACU;IACf;IAEA,OAAOH;AACT;AAIO,SAAS5B,UACduC,IAAW,EACXC,MAAgB,EAChBlC,UAA4B,CAAC,CAAC;IAE9B,MAAM,EACJC,YAAY,GAAG,EACfkC,gBAAgB,IAAI,EACpBC,gBAAgB,EAAE,EACnB,GAAGpC;IAEJ,IAAI,CAACqC,MAAMC,OAAO,CAACL,SAASA,KAAKd,MAAM,KAAK,GAAG,OAAO;IAEtD,MAAMC,UAAUgB,cAAcjB,MAAM,GAAG,IAAIiB,gBAAgBF;IAC3D,MAAMlB,QAAkB,EAAE;IAE1B,IAAImB,eAAe;QACjBnB,MAAMD,IAAI,CAACK,QAAQmB,IAAI,CAACtC;IAC1B;IAEA,KAAK,MAAMuC,OAAOP,KAAM;QACtB,MAAMT,SAASU,OAAOO,GAAG,CAACC,CAAAA;YACxB,IAAI9B,QAAQ4B,GAAG,CAACE,MAAM;YACtB,IAAI9B,UAAU,QAAQA,UAAUC,WAAW,OAAO;YAElD,IAAI,OAAOD,UAAU,UAAU;gBAC7BA,QAAQ+B,KAAKC,SAAS,CAAChC;YACzB,OAAO;gBACLA,QAAQiC,OAAOjC;YACjB;YAEA,MAAMkC,cAAclC,MAAMmC,QAAQ,CAAC9C,cAAcW,MAAMmC,QAAQ,CAAC,QAAQnC,MAAMmC,QAAQ,CAAC;YACvFnC,QAAQA,MAAME,OAAO,CAAC,MAAM;YAC5B,OAAOgC,cAAc,CAAC,CAAC,EAAElC,MAAM,CAAC,CAAC,GAAGA;QACtC;QAEAI,MAAMD,IAAI,CAACS,OAAOe,IAAI,CAACtC;IACzB;IAEA,OAAOe,MAAMuB,IAAI,CAAC;AACpB;AAIO,SAASzC,YACdC,OAAe,EACfiD,cAAwB,EACxBhD,UAA2B,CAAC,CAAC;IAE7B,MAAMiD,SAAmB,EAAE;IAC3B,MAAMC,SAAStD,SAAcG,SAASC;IAEtC,IAAIkD,OAAO/B,MAAM,KAAK,GAAG;QACvB8B,OAAOlC,IAAI,CAAC;QACZ,OAAO;YAAEoC,OAAO;YAAOF;QAAO;IAChC;IAEA,IAAK,IAAI1B,IAAI,GAAGA,IAAI2B,OAAO/B,MAAM,EAAEI,IAAK;QACtC,MAAMiB,MAAMU,MAAM,CAAC3B,EAAE;QACrB,KAAK,MAAMmB,SAASM,eAAgB;YAClC,IAAI,CAAEN,CAAAA,SAASF,GAAE,GAAI;gBACnBS,OAAOlC,IAAI,CAAC,CAAC,IAAI,EAAEQ,IAAI,EAAE,0BAA0B,EAAEmB,MAAM,EAAE,CAAC;YAChE,OAAO,IAAIF,GAAG,CAACE,MAAM,KAAK,MAAMF,GAAG,CAACE,MAAM,KAAK,QAAQF,GAAG,CAACE,MAAM,KAAK7B,WAAW;gBAC/EoC,OAAOlC,IAAI,CAAC,CAAC,IAAI,EAAEQ,IAAI,EAAE,SAAS,EAAEmB,MAAM,WAAW,CAAC;YACxD;QACF;IACF;IAEA,OAAO;QACLS,OAAOF,OAAO9B,MAAM,KAAK;QACzB8B;IACF;AACF;AAKO,SAASpD,YAAYuD,IAAU;IACpC,OAAO,IAAIC,QAAQ,CAACC,SAASC;QAC3B,MAAMC,SAAS,IAAIC;QAEnBD,OAAOE,MAAM,GAAG,IAAMJ,QAAQE,OAAO/C,MAAM;QAC3C+C,OAAOG,OAAO,GAAG,IAAMJ,OAAOC,OAAOI,KAAK;QAE1CJ,OAAOK,UAAU,CAACT,MAAM;IAC1B;AACF;AAGO,SAASzD,YAAYmE,UAAkB,EAAEC,WAAW,UAAU;IACnE,MAAMC,OAAO,IAAIC,KAAK;QAACH;KAAW,EAAE;QAAEI,MAAM;IAA0B;IACtE,MAAMC,OAAOC,SAASC,aAAa,CAAC;IACpC,MAAMC,MAAMC,IAAIC,eAAe,CAACR;IAEhCG,KAAKM,IAAI,GAAGH;IACZH,KAAKO,QAAQ,GAAGX;IAChBI,KAAKQ,KAAK,CAACC,OAAO,GAAG;IACrBR,SAASS,IAAI,CAACC,WAAW,CAACX;IAC1BA,KAAKY,KAAK;IACVX,SAASS,IAAI,CAACG,WAAW,CAACb;IAC1BI,IAAIU,eAAe,CAACX;AACtB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2f508c5fccc709f890d902b657a6201af09819cc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_y2zc5088i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_y2zc5088i();
cov_y2zc5088i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_y2zc5088i().f[0]++;
  cov_y2zc5088i().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_y2zc5088i().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_y2zc5088i().s[3]++;
_export(exports, {
  createCSV: function () {
    /* istanbul ignore next */
    cov_y2zc5088i().f[1]++;
    cov_y2zc5088i().s[4]++;
    return createCSV;
  },
  downloadCSV: function () {
    /* istanbul ignore next */
    cov_y2zc5088i().f[2]++;
    cov_y2zc5088i().s[5]++;
    return downloadCSV;
  },
  parseCSV: function () {
    /* istanbul ignore next */
    cov_y2zc5088i().f[3]++;
    cov_y2zc5088i().s[6]++;
    return parseCSV;
  },
  readCSVFile: function () {
    /* istanbul ignore next */
    cov_y2zc5088i().f[4]++;
    cov_y2zc5088i().s[7]++;
    return readCSVFile;
  },
  validateCSV: function () {
    /* istanbul ignore next */
    cov_y2zc5088i().f[5]++;
    cov_y2zc5088i().s[8]++;
    return validateCSV;
  }
});
function parseCSV(content, options =
/* istanbul ignore next */
(cov_y2zc5088i().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_y2zc5088i().f[6]++;
  const {
    delimiter =
    /* istanbul ignore next */
    (cov_y2zc5088i().b[1][0]++, ','),
    skipHeader =
    /* istanbul ignore next */
    (cov_y2zc5088i().b[2][0]++, false),
    columns =
    /* istanbul ignore next */
    (cov_y2zc5088i().b[3][0]++, []),
    trim =
    /* istanbul ignore next */
    (cov_y2zc5088i().b[4][0]++, true)
  } =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[9]++, options);
  /* istanbul ignore next */
  cov_y2zc5088i().s[10]++;
  const parseLine = line => {
    /* istanbul ignore next */
    cov_y2zc5088i().f[7]++;
    const regex =
    /* istanbul ignore next */
    (cov_y2zc5088i().s[11]++, new RegExp(`(?:\\s*\"([^"]*(?:\"\"[^"]*)*)\"\\s*|([^"${delimiter}\\r\\n]*))(?:${delimiter}|$)`, 'g'));
    const result =
    /* istanbul ignore next */
    (cov_y2zc5088i().s[12]++, []);
    let match;
    /* istanbul ignore next */
    cov_y2zc5088i().s[13]++;
    while ((match = regex.exec(line)) !== null) {
      let value =
      /* istanbul ignore next */
      (cov_y2zc5088i().s[14]++, match[1] !== undefined ?
      /* istanbul ignore next */
      (cov_y2zc5088i().b[5][0]++, match[1].replace(/""/g, '"')) :
      /* istanbul ignore next */
      (cov_y2zc5088i().b[5][1]++,
      /* istanbul ignore next */
      (cov_y2zc5088i().b[6][0]++, match[2]) ??
      /* istanbul ignore next */
      (cov_y2zc5088i().b[6][1]++, '')));
      /* istanbul ignore next */
      cov_y2zc5088i().s[15]++;
      if (trim) {
        /* istanbul ignore next */
        cov_y2zc5088i().b[7][0]++;
        cov_y2zc5088i().s[16]++;
        value = value.trim();
      } else
      /* istanbul ignore next */
      {
        cov_y2zc5088i().b[7][1]++;
      }
      cov_y2zc5088i().s[17]++;
      result.push(value);
    }
    /* istanbul ignore next */
    cov_y2zc5088i().s[18]++;
    return result;
  };
  const lines =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[19]++, content.split(/\r?\n/).filter(line => {
    /* istanbul ignore next */
    cov_y2zc5088i().f[8]++;
    cov_y2zc5088i().s[20]++;
    return line.trim() !== '';
  }));
  /* istanbul ignore next */
  cov_y2zc5088i().s[21]++;
  if (lines.length === 0) {
    /* istanbul ignore next */
    cov_y2zc5088i().b[8][0]++;
    cov_y2zc5088i().s[22]++;
    return [];
  } else
  /* istanbul ignore next */
  {
    cov_y2zc5088i().b[8][1]++;
  }
  let headers;
  let dataStartIndex =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[23]++, 1);
  /* istanbul ignore next */
  cov_y2zc5088i().s[24]++;
  if (columns.length > 0) {
    /* istanbul ignore next */
    cov_y2zc5088i().b[9][0]++;
    cov_y2zc5088i().s[25]++;
    headers = columns;
    /* istanbul ignore next */
    cov_y2zc5088i().s[26]++;
    dataStartIndex = 0;
  } else {
    /* istanbul ignore next */
    cov_y2zc5088i().b[9][1]++;
    cov_y2zc5088i().s[27]++;
    if (skipHeader) {
      /* istanbul ignore next */
      cov_y2zc5088i().b[10][0]++;
      cov_y2zc5088i().s[28]++;
      headers = [];
      /* istanbul ignore next */
      cov_y2zc5088i().s[29]++;
      dataStartIndex = 0;
    } else {
      /* istanbul ignore next */
      cov_y2zc5088i().b[10][1]++;
      cov_y2zc5088i().s[30]++;
      headers = parseLine(lines[0]);
    }
  }
  const results =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[31]++, []);
  /* istanbul ignore next */
  cov_y2zc5088i().s[32]++;
  for (let i =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[33]++, dataStartIndex); i < lines.length; i++) {
    const values =
    /* istanbul ignore next */
    (cov_y2zc5088i().s[34]++, parseLine(lines[i]));
    const obj =
    /* istanbul ignore next */
    (cov_y2zc5088i().s[35]++, {});
    /* istanbul ignore next */
    cov_y2zc5088i().s[36]++;
    headers.forEach((header, idx) => {
      /* istanbul ignore next */
      cov_y2zc5088i().f[9]++;
      let value =
      /* istanbul ignore next */
      (cov_y2zc5088i().s[37]++, values[idx]);
      /* istanbul ignore next */
      cov_y2zc5088i().s[38]++;
      if (value !== undefined) {
        /* istanbul ignore next */
        cov_y2zc5088i().b[11][0]++;
        const lower =
        /* istanbul ignore next */
        (cov_y2zc5088i().s[39]++, value.toLowerCase());
        /* istanbul ignore next */
        cov_y2zc5088i().s[40]++;
        if (lower === 'true') {
          /* istanbul ignore next */
          cov_y2zc5088i().b[12][0]++;
          cov_y2zc5088i().s[41]++;
          value = true;
        } else {
          /* istanbul ignore next */
          cov_y2zc5088i().b[12][1]++;
          cov_y2zc5088i().s[42]++;
          if (lower === 'false') {
            /* istanbul ignore next */
            cov_y2zc5088i().b[13][0]++;
            cov_y2zc5088i().s[43]++;
            value = false;
          } else {
            /* istanbul ignore next */
            cov_y2zc5088i().b[13][1]++;
            cov_y2zc5088i().s[44]++;
            if (!isNaN(Number(value))) {
              /* istanbul ignore next */
              cov_y2zc5088i().b[14][0]++;
              cov_y2zc5088i().s[45]++;
              value = Number(value);
            } else
            /* istanbul ignore next */
            {
              cov_y2zc5088i().b[14][1]++;
            }
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_y2zc5088i().b[11][1]++;
      }
      cov_y2zc5088i().s[46]++;
      obj[header] = value;
    });
    /* istanbul ignore next */
    cov_y2zc5088i().s[47]++;
    results.push(obj);
  }
  /* istanbul ignore next */
  cov_y2zc5088i().s[48]++;
  return results;
}
function createCSV(data, fields, options =
/* istanbul ignore next */
(cov_y2zc5088i().b[15][0]++, {})) {
  /* istanbul ignore next */
  cov_y2zc5088i().f[10]++;
  const {
    delimiter =
    /* istanbul ignore next */
    (cov_y2zc5088i().b[16][0]++, ','),
    includeHeader =
    /* istanbul ignore next */
    (cov_y2zc5088i().b[17][0]++, true),
    customHeaders =
    /* istanbul ignore next */
    (cov_y2zc5088i().b[18][0]++, [])
  } =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[49]++, options);
  /* istanbul ignore next */
  cov_y2zc5088i().s[50]++;
  if (
  /* istanbul ignore next */
  (cov_y2zc5088i().b[20][0]++, !Array.isArray(data)) ||
  /* istanbul ignore next */
  (cov_y2zc5088i().b[20][1]++, data.length === 0)) {
    /* istanbul ignore next */
    cov_y2zc5088i().b[19][0]++;
    cov_y2zc5088i().s[51]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_y2zc5088i().b[19][1]++;
  }
  const headers =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[52]++, customHeaders.length > 0 ?
  /* istanbul ignore next */
  (cov_y2zc5088i().b[21][0]++, customHeaders) :
  /* istanbul ignore next */
  (cov_y2zc5088i().b[21][1]++, fields));
  const lines =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[53]++, []);
  /* istanbul ignore next */
  cov_y2zc5088i().s[54]++;
  if (includeHeader) {
    /* istanbul ignore next */
    cov_y2zc5088i().b[22][0]++;
    cov_y2zc5088i().s[55]++;
    lines.push(headers.join(delimiter));
  } else
  /* istanbul ignore next */
  {
    cov_y2zc5088i().b[22][1]++;
  }
  cov_y2zc5088i().s[56]++;
  for (const row of data) {
    const values =
    /* istanbul ignore next */
    (cov_y2zc5088i().s[57]++, fields.map(field => {
      /* istanbul ignore next */
      cov_y2zc5088i().f[11]++;
      let value =
      /* istanbul ignore next */
      (cov_y2zc5088i().s[58]++, row[field]);
      /* istanbul ignore next */
      cov_y2zc5088i().s[59]++;
      if (
      /* istanbul ignore next */
      (cov_y2zc5088i().b[24][0]++, value === null) ||
      /* istanbul ignore next */
      (cov_y2zc5088i().b[24][1]++, value === undefined)) {
        /* istanbul ignore next */
        cov_y2zc5088i().b[23][0]++;
        cov_y2zc5088i().s[60]++;
        return '';
      } else
      /* istanbul ignore next */
      {
        cov_y2zc5088i().b[23][1]++;
      }
      cov_y2zc5088i().s[61]++;
      if (typeof value === 'object') {
        /* istanbul ignore next */
        cov_y2zc5088i().b[25][0]++;
        cov_y2zc5088i().s[62]++;
        value = JSON.stringify(value);
      } else {
        /* istanbul ignore next */
        cov_y2zc5088i().b[25][1]++;
        cov_y2zc5088i().s[63]++;
        value = String(value);
      }
      const needsQuotes =
      /* istanbul ignore next */
      (cov_y2zc5088i().s[64]++,
      /* istanbul ignore next */
      (cov_y2zc5088i().b[26][0]++, value.includes(delimiter)) ||
      /* istanbul ignore next */
      (cov_y2zc5088i().b[26][1]++, value.includes('"')) ||
      /* istanbul ignore next */
      (cov_y2zc5088i().b[26][2]++, value.includes('\n')));
      /* istanbul ignore next */
      cov_y2zc5088i().s[65]++;
      value = value.replace(/"/g, '""');
      /* istanbul ignore next */
      cov_y2zc5088i().s[66]++;
      return needsQuotes ?
      /* istanbul ignore next */
      (cov_y2zc5088i().b[27][0]++, `"${value}"`) :
      /* istanbul ignore next */
      (cov_y2zc5088i().b[27][1]++, value);
    }));
    /* istanbul ignore next */
    cov_y2zc5088i().s[67]++;
    lines.push(values.join(delimiter));
  }
  /* istanbul ignore next */
  cov_y2zc5088i().s[68]++;
  return lines.join('\n');
}
function validateCSV(content, requiredFields, options =
/* istanbul ignore next */
(cov_y2zc5088i().b[28][0]++, {})) {
  /* istanbul ignore next */
  cov_y2zc5088i().f[12]++;
  const errors =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[69]++, []);
  const parsed =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[70]++, parseCSV(content, options));
  /* istanbul ignore next */
  cov_y2zc5088i().s[71]++;
  if (parsed.length === 0) {
    /* istanbul ignore next */
    cov_y2zc5088i().b[29][0]++;
    cov_y2zc5088i().s[72]++;
    errors.push('CSV is empty or improperly formatted.');
    /* istanbul ignore next */
    cov_y2zc5088i().s[73]++;
    return {
      valid: false,
      errors
    };
  } else
  /* istanbul ignore next */
  {
    cov_y2zc5088i().b[29][1]++;
  }
  cov_y2zc5088i().s[74]++;
  for (let i =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[75]++, 0); i < parsed.length; i++) {
    const row =
    /* istanbul ignore next */
    (cov_y2zc5088i().s[76]++, parsed[i]);
    /* istanbul ignore next */
    cov_y2zc5088i().s[77]++;
    for (const field of requiredFields) {
      /* istanbul ignore next */
      cov_y2zc5088i().s[78]++;
      if (!(field in row)) {
        /* istanbul ignore next */
        cov_y2zc5088i().b[30][0]++;
        cov_y2zc5088i().s[79]++;
        errors.push(`Row ${i + 1}: Missing required field "${field}".`);
      } else {
        /* istanbul ignore next */
        cov_y2zc5088i().b[30][1]++;
        cov_y2zc5088i().s[80]++;
        if (
        /* istanbul ignore next */
        (cov_y2zc5088i().b[32][0]++, row[field] === '') ||
        /* istanbul ignore next */
        (cov_y2zc5088i().b[32][1]++, row[field] === null) ||
        /* istanbul ignore next */
        (cov_y2zc5088i().b[32][2]++, row[field] === undefined)) {
          /* istanbul ignore next */
          cov_y2zc5088i().b[31][0]++;
          cov_y2zc5088i().s[81]++;
          errors.push(`Row ${i + 1}: Field "${field}" is empty.`);
        } else
        /* istanbul ignore next */
        {
          cov_y2zc5088i().b[31][1]++;
        }
      }
    }
  }
  /* istanbul ignore next */
  cov_y2zc5088i().s[82]++;
  return {
    valid: errors.length === 0,
    errors
  };
}
function readCSVFile(file) {
  /* istanbul ignore next */
  cov_y2zc5088i().f[13]++;
  cov_y2zc5088i().s[83]++;
  return new Promise((resolve, reject) => {
    /* istanbul ignore next */
    cov_y2zc5088i().f[14]++;
    const reader =
    /* istanbul ignore next */
    (cov_y2zc5088i().s[84]++, new FileReader());
    /* istanbul ignore next */
    cov_y2zc5088i().s[85]++;
    reader.onload = () => {
      /* istanbul ignore next */
      cov_y2zc5088i().f[15]++;
      cov_y2zc5088i().s[86]++;
      return resolve(reader.result);
    };
    /* istanbul ignore next */
    cov_y2zc5088i().s[87]++;
    reader.onerror = () => {
      /* istanbul ignore next */
      cov_y2zc5088i().f[16]++;
      cov_y2zc5088i().s[88]++;
      return reject(reader.error);
    };
    /* istanbul ignore next */
    cov_y2zc5088i().s[89]++;
    reader.readAsText(file, 'utf-8');
  });
}
function downloadCSV(csvContent, filename =
/* istanbul ignore next */
(cov_y2zc5088i().b[33][0]++, 'data.csv')) {
  /* istanbul ignore next */
  cov_y2zc5088i().f[17]++;
  const blob =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[90]++, new Blob([csvContent], {
    type: 'text/csv;charset=utf-8;'
  }));
  const link =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[91]++, document.createElement('a'));
  const url =
  /* istanbul ignore next */
  (cov_y2zc5088i().s[92]++, URL.createObjectURL(blob));
  /* istanbul ignore next */
  cov_y2zc5088i().s[93]++;
  link.href = url;
  /* istanbul ignore next */
  cov_y2zc5088i().s[94]++;
  link.download = filename;
  /* istanbul ignore next */
  cov_y2zc5088i().s[95]++;
  link.style.display = 'none';
  /* istanbul ignore next */
  cov_y2zc5088i().s[96]++;
  document.body.appendChild(link);
  /* istanbul ignore next */
  cov_y2zc5088i().s[97]++;
  link.click();
  /* istanbul ignore next */
  cov_y2zc5088i().s[98]++;
  document.body.removeChild(link);
  /* istanbul ignore next */
  cov_y2zc5088i().s[99]++;
  URL.revokeObjectURL(url);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,