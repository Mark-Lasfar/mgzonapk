{"version":3,"names":["cov_24shqx0duj","actualCoverage","s","AliExpressClient","constructor","config","f","baseUrl","sandbox","b","headers","apiKey","apiSecret","accessToken","getProducts","response","fetch","ok","Error","statusText","json","error","console","syncInventory","products","method","body","JSON","stringify","execute","apiName","params","convertToProduct","aliProduct","name","title","slug","toLowerCase","replace","category","images","brand","description","isPublished","price","listPrice","countInStock","inventory","tags","sizes","colors","avgRating","numReviews","discount","weight","dimensions","length","width","height","warehouse","provider","sku","id","availableQuantity"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/integrations/aliexpress/top-client.ts"],"sourcesContent":["import { IProductInput } from '@/types';\n\nexport interface AliExpressProduct {\n  id: string;\n  title: string;\n  price: number;\n  inventory: number;\n  shipping: {\n    method: string;\n    cost: number;\n  };\n  variations: Array<{\n    sku: string;\n    attributes: Record<string, string>;\n    price: number;\n    inventory: number;\n  }>;\n  metadata: Record<string, any>;\n}\n\nexport interface SyncResult {\n  success: boolean;\n  synced: number;\n  failed: number;\n  errors: Array<{\n    sku: string;\n    error: string;\n  }>;\n}\n\nexport interface AliExpressClientConfig {\n  apiKey: string;\n  apiSecret: string;\n  accessToken?: string;\n  sandbox?: boolean;\n}\n\nexport class AliExpressClient {\n  private baseUrl: string;\n  private headers: HeadersInit;\n  private accessToken?: string;\n\n  constructor(config: AliExpressClientConfig) {\n    this.baseUrl = config.sandbox\n      ? 'https://api.sandbox.aliexpress.com/v2'\n      : 'https://api.aliexpress.com/v2';\n\n    this.headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${config.apiKey}`,\n      'X-API-Secret': config.apiSecret\n    };\n\n    if (config.accessToken) {\n      this.accessToken = config.accessToken;\n      this.headers['X-Access-Token'] = config.accessToken;\n    }\n  }\n\n  async getProducts(): Promise<AliExpressProduct[]> {\n    try {\n      const response = await fetch(`${this.baseUrl}/products`, {\n        headers: this.headers\n      });\n\n      if (!response.ok) {\n        throw new Error(`AliExpress API error: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('AliExpress API Error:', error);\n      throw error;\n    }\n  }\n\n  async syncInventory(products: Array<{\n    sku: string;\n    quantity: number;\n  }>): Promise<SyncResult> {\n    try {\n      const response = await fetch(`${this.baseUrl}/inventory/batch`, {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify({ products })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Inventory sync failed: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Inventory sync error:', error);\n      throw error;\n    }\n  }\n\n  // Execute a generic API call (used for fulfillment, etc)\n  async execute(apiName: string, params: Record<string, any>): Promise<any> {\n    try {\n      const response = await fetch(`${this.baseUrl}/topapi/${apiName}`, {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify(params)\n      });\n\n      if (!response.ok) {\n        throw new Error(`AliExpress execute error: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('AliExpress execute error:', error);\n      throw error;\n    }\n  }\n\n  async convertToProduct(aliProduct: AliExpressProduct): Promise<IProductInput> {\n    return {\n      name: aliProduct.title,\n      slug: aliProduct.title.toLowerCase().replace(/\\s+/g, '-'),\n      category: 'Imported',\n      images: [], // Need to implement image handling\n      brand: 'AliExpress',\n      description: '',  // You can populate this if available from aliProduct.metadata\n      isPublished: true,\n      price: aliProduct.price,\n      listPrice: aliProduct.price,\n      countInStock: aliProduct.inventory,\n      tags: ['aliexpress'],\n      sizes: [],\n      colors: [],\n      avgRating: 0,\n      numReviews: 0,\n      discount: 0,\n      weight: 0,\n      dimensions: { length: 0, width: 0, height: 0 },\n      warehouse: {\n        provider: \"4PX\", // or \"ShipBob\", depending on your integration\n        sku: aliProduct.id,\n        availableQuantity: aliProduct.inventory,\n        // Add additional warehouse-specific fields here if needed\n      }\n    };\n  }\n}"],"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","ignoreList":[]}