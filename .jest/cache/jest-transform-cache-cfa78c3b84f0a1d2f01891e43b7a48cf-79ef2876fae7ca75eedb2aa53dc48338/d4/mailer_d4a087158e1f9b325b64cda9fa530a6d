2aaf71d08a7a0ae1684f58219e295001
"use strict";

/* istanbul ignore next */
function cov_1dqtnypwma() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/email/mailer.ts";
  var hash = "a25ff544d3eafd30ab13a97ebd98b8ecce1776a8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/email/mailer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "3": {
        start: {
          line: 11,
          column: 34
        },
        end: {
          line: 11,
          column: 81
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 44
        }
      },
      "5": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 54
        }
      },
      "6": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 14,
          column: 73
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 35,
          column: 11
        }
      },
      "9": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 32
        }
      },
      "10": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 72
        }
      },
      "11": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "12": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "13": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 50,
          column: 59
        }
      },
      "14": {
        start: {
          line: 51,
          column: 29
        },
        end: {
          line: 51,
          column: 47
        }
      },
      "15": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 60,
          column: 15
        }
      },
      "16": {
        start: {
          line: 62,
          column: 29
        },
        end: {
          line: 62,
          column: 47
        }
      },
      "17": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 71,
          column: 15
        }
      },
      "18": {
        start: {
          line: 75,
          column: 26
        },
        end: {
          line: 75,
          column: 36
        }
      },
      "19": {
        start: {
          line: 76,
          column: 25
        },
        end: {
          line: 76,
          column: 43
        }
      },
      "20": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "21": {
        start: {
          line: 78,
          column: 27
        },
        end: {
          line: 81,
          column: 14
        }
      },
      "22": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 91,
          column: 15
        }
      },
      "23": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 26
        }
      },
      "24": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 111,
          column: 15
        }
      },
      "25": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 24
        }
      },
      "26": {
        start: {
          line: 116,
          column: 25
        },
        end: {
          line: 116,
          column: 43
        }
      },
      "27": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "28": {
        start: {
          line: 153,
          column: 25
        },
        end: {
          line: 153,
          column: 43
        }
      },
      "29": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 185,
          column: 11
        }
      },
      "30": {
        start: {
          line: 163,
          column: 46
        },
        end: {
          line: 167,
          column: 13
        }
      },
      "31": {
        start: {
          line: 179,
          column: 42
        },
        end: {
          line: 179,
          column: 121
        }
      },
      "32": {
        start: {
          line: 188,
          column: 25
        },
        end: {
          line: 188,
          column: 43
        }
      },
      "33": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 221,
          column: 11
        }
      },
      "34": {
        start: {
          line: 224,
          column: 21
        },
        end: {
          line: 224,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 17
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 21
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 18
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 41
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 29
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 48
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 74
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 115,
            column: 40
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 115
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 41
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 152
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 163,
            column: 38
          },
          end: {
            line: 163,
            column: 39
          }
        },
        loc: {
          start: {
            line: 163,
            column: 46
          },
          end: {
            line: 167,
            column: 13
          }
        },
        line: 163
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 179,
            column: 34
          },
          end: {
            line: 179,
            column: 35
          }
        },
        loc: {
          start: {
            line: 179,
            column: 42
          },
          end: {
            line: 179,
            column: 121
          }
        },
        line: 179
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        loc: {
          start: {
            line: 187,
            column: 37
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 187
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 38
          }
        }, {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 18,
            column: 5
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 14
          }
        }, {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 32
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 18
          },
          end: {
            line: 44,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 18
          },
          end: {
            line: 44,
            column: 42
          }
        }, {
          start: {
            line: 44,
            column: 46
          },
          end: {
            line: 44,
            column: 54
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 48
          },
          end: {
            line: 64,
            column: 61
          }
        }, {
          start: {
            line: 64,
            column: 64
          },
          end: {
            line: 64,
            column: 77
          }
        }],
        line: 64
      },
      "4": {
        loc: {
          start: {
            line: 95,
            column: 23
          },
          end: {
            line: 99,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 48
          },
          end: {
            line: 99,
            column: 17
          }
        }, {
          start: {
            line: 99,
            column: 20
          },
          end: {
            line: 99,
            column: 33
          }
        }],
        line: 95
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/email/mailer.ts"],
      sourcesContent: ["import nodemailer from 'nodemailer';\nimport { EMAIL_CONFIG } from '@/lib/config/email';\nimport { logger } from '@/lib/api/services/logging';\nimport crypto from 'crypto';\n\n// \u062A\u0639\u0631\u064A\u0641 \u0627\u0644\u0623\u0646\u0648\u0627\u0639\ninterface EmailOptions {\n  to: string;\n  subject: string;\n  html: string;\n  text: string;\n}\n\ninterface OrderItem {\n  name: string;\n  quantity: number;\n  price: number;\n}\n\ninterface Order {\n  _id: string;\n  items: OrderItem[];\n  totalPrice: number;\n}\n\ninterface User {\n  name: string;\n}\n\ninterface EmailMetadata {\n  timestamp: string;\n  user: string;\n  requestId: string;\n}\n\nclass EmailService {\n  private transporter: nodemailer.Transporter;\n\n  constructor() {\n    this.transporter = nodemailer.createTransport({\n      service: 'gmail',\n      auth: {\n        user: EMAIL_CONFIG.SMTP.USER,\n        pass: EMAIL_CONFIG.SMTP.PASS?.replace(/\\s/g, ''),\n      },\n      pool: true,\n      maxConnections: 5,\n      maxMessages: 100,\n      secure: true,\n      port: 465,\n      debug: process.env.NODE_ENV === 'development',\n      logger: process.env.NODE_ENV === 'development',\n    });\n\n    this.verifyConnection();\n  }\n\n  private formatDate(date: Date): string {\n    return date.toISOString()\n      .replace(/T/, ' ')\n      .replace(/\\..+/, '');\n  }\n\n  private getMetadata(): EmailMetadata {\n    return {\n      timestamp: this.formatDate(new Date()),\n      user: process.env.CURRENT_USER || 'system',\n      requestId: crypto.randomUUID()\n    };\n  }\n\n  private async verifyConnection() {\n    try {\n      const isReady = await this.transporter.verify();\n      const metadata = this.getMetadata();\n\n      logger.info('SMTP Connection Status', {\n        ready: isReady,\n        email: EMAIL_CONFIG.SMTP.USER,\n        host: EMAIL_CONFIG.SMTP.HOST,\n        metadata: {\n          service: 'api',\n          ...metadata\n        }\n      });\n    } catch (error) {\n      const metadata = this.getMetadata();\n      \n      logger.error('SMTP Connection Error', {\n        error: error instanceof Error ? error.message : String(error),\n        email: EMAIL_CONFIG.SMTP.USER,\n        host: EMAIL_CONFIG.SMTP.HOST,\n        metadata: {\n          service: 'api',\n          ...metadata\n        }\n      });\n    }\n  }\n\n  private async send(options: EmailOptions) {\n    const startTime = Date.now();\n    const metadata = this.getMetadata();\n\n    try {\n      const result = await this.transporter.sendMail({\n        from: `\"${EMAIL_CONFIG.FROM.NAME}\" <${EMAIL_CONFIG.FROM.EMAIL}>`,\n        ...options,\n      });\n\n      logger.info('Email sent successfully', {\n        messageId: result.messageId,\n        to: options.to,\n        subject: options.subject,\n        duration: Date.now() - startTime,\n        metadata: {\n          service: 'api',\n          ...metadata\n        }\n      });\n\n      return result;\n    } catch (error) {\n      logger.error('Failed to send email', {\n        error: error instanceof Error ? {\n          message: error.message,\n          name: error.name,\n          stack: error.stack,\n        } : String(error),\n        to: options.to,\n        subject: options.subject,\n        duration: Date.now() - startTime,\n        metadata: {\n          service: 'api',\n          ...metadata\n        },\n        smtp: {\n          user: EMAIL_CONFIG.SMTP.USER,\n          host: EMAIL_CONFIG.SMTP.HOST,\n        },\n      });\n      throw error;\n    }\n  }\n\n  public async sendVerificationCode(options: {\n    to: string;\n    code: string;\n    name: string;\n  }) {\n    const metadata = this.getMetadata();\n    \n    return this.send({\n      to: options.to,\n      subject: EMAIL_CONFIG.TEMPLATES.VERIFICATION.SUBJECT,\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;\">\n          <h1 style=\"color: #333; text-align: center;\">Email Verification</h1>\n          <p>Hello ${options.name},</p>\n          <p>Please use the following code to verify your email address:</p>\n          <div style=\"background-color: #f4f4f4; padding: 15px; text-align: center; font-size: 24px; letter-spacing: 5px; margin: 20px 0; border-radius: 5px;\">\n            <strong>${options.code}</strong>\n          </div>\n          <p>This code will expire in 10 minutes.</p>\n          <p>If you didn't request this code, please ignore this email.</p>\n          <div style=\"margin-top: 20px; padding-top: 20px; border-top: 1px solid #eee; text-align: center; color: #666;\">\n            <p>This is an automated message from MGZon</p>\n            <p>Sent at: ${metadata.timestamp}</p>\n          </div>\n        </div>\n      `,\n      text: `\n        Hello ${options.name},\n\n        Please use the following code to verify your email address:\n\n        ${options.code}\n\n        This code will expire in 10 minutes.\n\n        If you didn't request this code, please ignore this email.\n\n        MGZon\n        Sent at: ${metadata.timestamp}\n      `,\n    });\n  }\n\n  public async sendOrderConfirmation(options: {\n    to: string;\n    order: Order;\n    user: User;\n  }) {\n    const metadata = this.getMetadata();\n    \n    return this.send({\n      to: options.to,\n      subject: EMAIL_CONFIG.TEMPLATES.ORDER_CONFIRMATION.SUBJECT,\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;\">\n          <h1>Order Confirmation</h1>\n          <p>Thank you for your order, ${options.user.name}!</p>\n          <p>Order #${options.order._id}</p>\n          <div style=\"margin: 20px 0;\">\n            ${options.order.items.map(item => `\n              <div style=\"padding: 10px; border-bottom: 1px solid #eee;\">\n                <p>${item.name} x ${item.quantity} - $${(item.price * item.quantity).toFixed(2)}</p>\n              </div>\n            `).join('')}\n          </div>\n          <p><strong>Total:</strong> $${options.order.totalPrice.toFixed(2)}</p>\n          <p>Sent at: ${metadata.timestamp}</p>\n        </div>\n      `,\n      text: `\n        Order Confirmation\n\n        Thank you for your order, ${options.user.name}!\n        Order #${options.order._id}\n\n        ${options.order.items.map(item => \n          `${item.name} x ${item.quantity} - $${(item.price * item.quantity).toFixed(2)}`\n        ).join('\\n')}\n\n        Total: $${options.order.totalPrice.toFixed(2)}\n        \n        Sent at: ${metadata.timestamp}\n      `,\n    });\n  }\n\n  public async sendPasswordReset(options: {\n    to: string;\n    resetToken: string;\n    name: string;\n  }) {\n    const metadata = this.getMetadata();\n\n    return this.send({\n      to: options.to,\n      subject: EMAIL_CONFIG.TEMPLATES.PASSWORD_RESET.SUBJECT,\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;\">\n          <h1>Password Reset</h1>\n          <p>Hello ${options.name},</p>\n          <p>Click the button below to reset your password:</p>\n          <div style=\"text-align: center; margin: 20px 0;\">\n            <a href=\"${process.env.NEXT_PUBLIC_BASE_URL}/reset-password/${options.resetToken}\"\n               style=\"background-color: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">\n              Reset Password\n            </a>\n          </div>\n          <p>If you didn't request this, please ignore this email.</p>\n          <p style=\"color: #666; text-align: center; margin-top: 20px;\">\n            Sent at: ${metadata.timestamp}\n          </p>\n        </div>\n      `,\n      text: `\n        Password Reset\n\n        Hello ${options.name},\n\n        Click the link below to reset your password:\n        ${process.env.NEXT_PUBLIC_BASE_URL}/reset-password/${options.resetToken}\n\n        If you didn't request this, please ignore this email.\n        \n        Sent at: ${metadata.timestamp}\n      `,\n    });\n  }\n}\n\n// \u062A\u0635\u062F\u064A\u0631 \u0646\u0633\u062E\u0629 \u0648\u0627\u062D\u062F\u0629 \u0645\u0646 \u0627\u0644\u062E\u062F\u0645\u0629\nexport const emailService = new EmailService();"],
      names: ["emailService", "EmailService", "constructor", "transporter", "nodemailer", "createTransport", "service", "auth", "user", "EMAIL_CONFIG", "SMTP", "USER", "pass", "PASS", "replace", "pool", "maxConnections", "maxMessages", "secure", "port", "debug", "process", "env", "NODE_ENV", "logger", "verifyConnection", "formatDate", "date", "toISOString", "getMetadata", "timestamp", "Date", "CURRENT_USER", "requestId", "crypto", "randomUUID", "isReady", "verify", "metadata", "info", "ready", "email", "host", "HOST", "error", "Error", "message", "String", "send", "options", "startTime", "now", "result", "sendMail", "from", "FROM", "NAME", "EMAIL", "messageId", "to", "subject", "duration", "name", "stack", "smtp", "sendVerificationCode", "TEMPLATES", "VERIFICATION", "SUBJECT", "html", "code", "text", "sendOrderConfirmation", "ORDER_CONFIRMATION", "order", "_id", "items", "map", "item", "quantity", "price", "toFixed", "join", "totalPrice", "sendPasswordReset", "PASSWORD_RESET", "NEXT_PUBLIC_BASE_URL", "resetToken"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a25ff544d3eafd30ab13a97ebd98b8ecce1776a8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1dqtnypwma = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1dqtnypwma();
cov_1dqtnypwma().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1dqtnypwma().s[1]++;
Object.defineProperty(exports, "emailService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1dqtnypwma().f[0]++;
    cov_1dqtnypwma().s[2]++;
    return emailService;
  }
});
const _nodemailer =
/* istanbul ignore next */
(/*#__PURE__*/cov_1dqtnypwma().s[3]++, _interop_require_default(require("nodemailer")));
const _email =
/* istanbul ignore next */
(cov_1dqtnypwma().s[4]++, require("../../config/email"));
const _logging =
/* istanbul ignore next */
(cov_1dqtnypwma().s[5]++, require("../../api/services/logging"));
const _crypto =
/* istanbul ignore next */
(/*#__PURE__*/cov_1dqtnypwma().s[6]++, _interop_require_default(require("crypto")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1dqtnypwma().f[1]++;
  cov_1dqtnypwma().s[7]++;
  return /* istanbul ignore next */(cov_1dqtnypwma().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1dqtnypwma().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1dqtnypwma().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1dqtnypwma().b[0][1]++, {
    default: obj
  });
}
class EmailService {
  constructor() {
    /* istanbul ignore next */
    cov_1dqtnypwma().f[2]++;
    cov_1dqtnypwma().s[8]++;
    this.transporter = _nodemailer.default.createTransport({
      service: 'gmail',
      auth: {
        user: _email.EMAIL_CONFIG.SMTP.USER,
        pass: _email.EMAIL_CONFIG.SMTP.PASS?.replace(/\s/g, '')
      },
      pool: true,
      maxConnections: 5,
      maxMessages: 100,
      secure: true,
      port: 465,
      debug: process.env.NODE_ENV === 'development',
      logger: process.env.NODE_ENV === 'development'
    });
    /* istanbul ignore next */
    cov_1dqtnypwma().s[9]++;
    this.verifyConnection();
  }
  formatDate(date) {
    /* istanbul ignore next */
    cov_1dqtnypwma().f[3]++;
    cov_1dqtnypwma().s[10]++;
    return date.toISOString().replace(/T/, ' ').replace(/\..+/, '');
  }
  getMetadata() {
    /* istanbul ignore next */
    cov_1dqtnypwma().f[4]++;
    cov_1dqtnypwma().s[11]++;
    return {
      timestamp: this.formatDate(new Date()),
      user:
      /* istanbul ignore next */
      (cov_1dqtnypwma().b[2][0]++, process.env.CURRENT_USER) ||
      /* istanbul ignore next */
      (cov_1dqtnypwma().b[2][1]++, 'system'),
      requestId: _crypto.default.randomUUID()
    };
  }
  async verifyConnection() {
    /* istanbul ignore next */
    cov_1dqtnypwma().f[5]++;
    cov_1dqtnypwma().s[12]++;
    try {
      const isReady =
      /* istanbul ignore next */
      (cov_1dqtnypwma().s[13]++, await this.transporter.verify());
      const metadata =
      /* istanbul ignore next */
      (cov_1dqtnypwma().s[14]++, this.getMetadata());
      /* istanbul ignore next */
      cov_1dqtnypwma().s[15]++;
      _logging.logger.info('SMTP Connection Status', {
        ready: isReady,
        email: _email.EMAIL_CONFIG.SMTP.USER,
        host: _email.EMAIL_CONFIG.SMTP.HOST,
        metadata: {
          service: 'api',
          ...metadata
        }
      });
    } catch (error) {
      const metadata =
      /* istanbul ignore next */
      (cov_1dqtnypwma().s[16]++, this.getMetadata());
      /* istanbul ignore next */
      cov_1dqtnypwma().s[17]++;
      _logging.logger.error('SMTP Connection Error', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1dqtnypwma().b[3][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1dqtnypwma().b[3][1]++, String(error)),
        email: _email.EMAIL_CONFIG.SMTP.USER,
        host: _email.EMAIL_CONFIG.SMTP.HOST,
        metadata: {
          service: 'api',
          ...metadata
        }
      });
    }
  }
  async send(options) {
    /* istanbul ignore next */
    cov_1dqtnypwma().f[6]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1dqtnypwma().s[18]++, Date.now());
    const metadata =
    /* istanbul ignore next */
    (cov_1dqtnypwma().s[19]++, this.getMetadata());
    /* istanbul ignore next */
    cov_1dqtnypwma().s[20]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1dqtnypwma().s[21]++, await this.transporter.sendMail({
        from: `"${_email.EMAIL_CONFIG.FROM.NAME}" <${_email.EMAIL_CONFIG.FROM.EMAIL}>`,
        ...options
      }));
      /* istanbul ignore next */
      cov_1dqtnypwma().s[22]++;
      _logging.logger.info('Email sent successfully', {
        messageId: result.messageId,
        to: options.to,
        subject: options.subject,
        duration: Date.now() - startTime,
        metadata: {
          service: 'api',
          ...metadata
        }
      });
      /* istanbul ignore next */
      cov_1dqtnypwma().s[23]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_1dqtnypwma().s[24]++;
      _logging.logger.error('Failed to send email', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1dqtnypwma().b[4][0]++, {
          message: error.message,
          name: error.name,
          stack: error.stack
        }) :
        /* istanbul ignore next */
        (cov_1dqtnypwma().b[4][1]++, String(error)),
        to: options.to,
        subject: options.subject,
        duration: Date.now() - startTime,
        metadata: {
          service: 'api',
          ...metadata
        },
        smtp: {
          user: _email.EMAIL_CONFIG.SMTP.USER,
          host: _email.EMAIL_CONFIG.SMTP.HOST
        }
      });
      /* istanbul ignore next */
      cov_1dqtnypwma().s[25]++;
      throw error;
    }
  }
  async sendVerificationCode(options) {
    /* istanbul ignore next */
    cov_1dqtnypwma().f[7]++;
    const metadata =
    /* istanbul ignore next */
    (cov_1dqtnypwma().s[26]++, this.getMetadata());
    /* istanbul ignore next */
    cov_1dqtnypwma().s[27]++;
    return this.send({
      to: options.to,
      subject: _email.EMAIL_CONFIG.TEMPLATES.VERIFICATION.SUBJECT,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
          <h1 style="color: #333; text-align: center;">Email Verification</h1>
          <p>Hello ${options.name},</p>
          <p>Please use the following code to verify your email address:</p>
          <div style="background-color: #f4f4f4; padding: 15px; text-align: center; font-size: 24px; letter-spacing: 5px; margin: 20px 0; border-radius: 5px;">
            <strong>${options.code}</strong>
          </div>
          <p>This code will expire in 10 minutes.</p>
          <p>If you didn't request this code, please ignore this email.</p>
          <div style="margin-top: 20px; padding-top: 20px; border-top: 1px solid #eee; text-align: center; color: #666;">
            <p>This is an automated message from MGZon</p>
            <p>Sent at: ${metadata.timestamp}</p>
          </div>
        </div>
      `,
      text: `
        Hello ${options.name},

        Please use the following code to verify your email address:

        ${options.code}

        This code will expire in 10 minutes.

        If you didn't request this code, please ignore this email.

        MGZon
        Sent at: ${metadata.timestamp}
      `
    });
  }
  async sendOrderConfirmation(options) {
    /* istanbul ignore next */
    cov_1dqtnypwma().f[8]++;
    const metadata =
    /* istanbul ignore next */
    (cov_1dqtnypwma().s[28]++, this.getMetadata());
    /* istanbul ignore next */
    cov_1dqtnypwma().s[29]++;
    return this.send({
      to: options.to,
      subject: _email.EMAIL_CONFIG.TEMPLATES.ORDER_CONFIRMATION.SUBJECT,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
          <h1>Order Confirmation</h1>
          <p>Thank you for your order, ${options.user.name}!</p>
          <p>Order #${options.order._id}</p>
          <div style="margin: 20px 0;">
            ${options.order.items.map(item => {
        /* istanbul ignore next */
        cov_1dqtnypwma().f[9]++;
        cov_1dqtnypwma().s[30]++;
        return `
              <div style="padding: 10px; border-bottom: 1px solid #eee;">
                <p>${item.name} x ${item.quantity} - $${(item.price * item.quantity).toFixed(2)}</p>
              </div>
            `;
      }).join('')}
          </div>
          <p><strong>Total:</strong> $${options.order.totalPrice.toFixed(2)}</p>
          <p>Sent at: ${metadata.timestamp}</p>
        </div>
      `,
      text: `
        Order Confirmation

        Thank you for your order, ${options.user.name}!
        Order #${options.order._id}

        ${options.order.items.map(item => {
        /* istanbul ignore next */
        cov_1dqtnypwma().f[10]++;
        cov_1dqtnypwma().s[31]++;
        return `${item.name} x ${item.quantity} - $${(item.price * item.quantity).toFixed(2)}`;
      }).join('\n')}

        Total: $${options.order.totalPrice.toFixed(2)}
        
        Sent at: ${metadata.timestamp}
      `
    });
  }
  async sendPasswordReset(options) {
    /* istanbul ignore next */
    cov_1dqtnypwma().f[11]++;
    const metadata =
    /* istanbul ignore next */
    (cov_1dqtnypwma().s[32]++, this.getMetadata());
    /* istanbul ignore next */
    cov_1dqtnypwma().s[33]++;
    return this.send({
      to: options.to,
      subject: _email.EMAIL_CONFIG.TEMPLATES.PASSWORD_RESET.SUBJECT,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
          <h1>Password Reset</h1>
          <p>Hello ${options.name},</p>
          <p>Click the button below to reset your password:</p>
          <div style="text-align: center; margin: 20px 0;">
            <a href="${process.env.NEXT_PUBLIC_BASE_URL}/reset-password/${options.resetToken}"
               style="background-color: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;">
              Reset Password
            </a>
          </div>
          <p>If you didn't request this, please ignore this email.</p>
          <p style="color: #666; text-align: center; margin-top: 20px;">
            Sent at: ${metadata.timestamp}
          </p>
        </div>
      `,
      text: `
        Password Reset

        Hello ${options.name},

        Click the link below to reset your password:
        ${process.env.NEXT_PUBLIC_BASE_URL}/reset-password/${options.resetToken}

        If you didn't request this, please ignore this email.
        
        Sent at: ${metadata.timestamp}
      `
    });
  }
}
const emailService =
/* istanbul ignore next */
(cov_1dqtnypwma().s[34]++, new EmailService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,