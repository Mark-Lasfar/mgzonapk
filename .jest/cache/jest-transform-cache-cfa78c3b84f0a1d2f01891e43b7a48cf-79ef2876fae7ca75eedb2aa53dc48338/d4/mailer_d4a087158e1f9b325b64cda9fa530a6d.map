{"version":3,"names":["emailService","EmailService","constructor","cov_1dqtnypwma","f","s","transporter","_nodemailer","default","createTransport","service","auth","user","_email","EMAIL_CONFIG","SMTP","USER","pass","PASS","replace","pool","maxConnections","maxMessages","secure","port","debug","process","env","NODE_ENV","logger","verifyConnection","formatDate","date","toISOString","getMetadata","timestamp","Date","b","CURRENT_USER","requestId","_crypto","randomUUID","isReady","verify","metadata","_logging","info","ready","email","host","HOST","error","Error","message","String","send","options","startTime","now","result","sendMail","from","FROM","NAME","EMAIL","messageId","to","subject","duration","name","stack","smtp","sendVerificationCode","TEMPLATES","VERIFICATION","SUBJECT","html","code","text","sendOrderConfirmation","ORDER_CONFIRMATION","order","_id","items","map","item","quantity","price","toFixed","join","totalPrice","sendPasswordReset","PASSWORD_RESET","NEXT_PUBLIC_BASE_URL","resetToken"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/email/mailer.ts"],"sourcesContent":["import nodemailer from 'nodemailer';\nimport { EMAIL_CONFIG } from '@/lib/config/email';\nimport { logger } from '@/lib/api/services/logging';\nimport crypto from 'crypto';\n\n// تعريف الأنواع\ninterface EmailOptions {\n  to: string;\n  subject: string;\n  html: string;\n  text: string;\n}\n\ninterface OrderItem {\n  name: string;\n  quantity: number;\n  price: number;\n}\n\ninterface Order {\n  _id: string;\n  items: OrderItem[];\n  totalPrice: number;\n}\n\ninterface User {\n  name: string;\n}\n\ninterface EmailMetadata {\n  timestamp: string;\n  user: string;\n  requestId: string;\n}\n\nclass EmailService {\n  private transporter: nodemailer.Transporter;\n\n  constructor() {\n    this.transporter = nodemailer.createTransport({\n      service: 'gmail',\n      auth: {\n        user: EMAIL_CONFIG.SMTP.USER,\n        pass: EMAIL_CONFIG.SMTP.PASS?.replace(/\\s/g, ''),\n      },\n      pool: true,\n      maxConnections: 5,\n      maxMessages: 100,\n      secure: true,\n      port: 465,\n      debug: process.env.NODE_ENV === 'development',\n      logger: process.env.NODE_ENV === 'development',\n    });\n\n    this.verifyConnection();\n  }\n\n  private formatDate(date: Date): string {\n    return date.toISOString()\n      .replace(/T/, ' ')\n      .replace(/\\..+/, '');\n  }\n\n  private getMetadata(): EmailMetadata {\n    return {\n      timestamp: this.formatDate(new Date()),\n      user: process.env.CURRENT_USER || 'system',\n      requestId: crypto.randomUUID()\n    };\n  }\n\n  private async verifyConnection() {\n    try {\n      const isReady = await this.transporter.verify();\n      const metadata = this.getMetadata();\n\n      logger.info('SMTP Connection Status', {\n        ready: isReady,\n        email: EMAIL_CONFIG.SMTP.USER,\n        host: EMAIL_CONFIG.SMTP.HOST,\n        metadata: {\n          service: 'api',\n          ...metadata\n        }\n      });\n    } catch (error) {\n      const metadata = this.getMetadata();\n      \n      logger.error('SMTP Connection Error', {\n        error: error instanceof Error ? error.message : String(error),\n        email: EMAIL_CONFIG.SMTP.USER,\n        host: EMAIL_CONFIG.SMTP.HOST,\n        metadata: {\n          service: 'api',\n          ...metadata\n        }\n      });\n    }\n  }\n\n  private async send(options: EmailOptions) {\n    const startTime = Date.now();\n    const metadata = this.getMetadata();\n\n    try {\n      const result = await this.transporter.sendMail({\n        from: `\"${EMAIL_CONFIG.FROM.NAME}\" <${EMAIL_CONFIG.FROM.EMAIL}>`,\n        ...options,\n      });\n\n      logger.info('Email sent successfully', {\n        messageId: result.messageId,\n        to: options.to,\n        subject: options.subject,\n        duration: Date.now() - startTime,\n        metadata: {\n          service: 'api',\n          ...metadata\n        }\n      });\n\n      return result;\n    } catch (error) {\n      logger.error('Failed to send email', {\n        error: error instanceof Error ? {\n          message: error.message,\n          name: error.name,\n          stack: error.stack,\n        } : String(error),\n        to: options.to,\n        subject: options.subject,\n        duration: Date.now() - startTime,\n        metadata: {\n          service: 'api',\n          ...metadata\n        },\n        smtp: {\n          user: EMAIL_CONFIG.SMTP.USER,\n          host: EMAIL_CONFIG.SMTP.HOST,\n        },\n      });\n      throw error;\n    }\n  }\n\n  public async sendVerificationCode(options: {\n    to: string;\n    code: string;\n    name: string;\n  }) {\n    const metadata = this.getMetadata();\n    \n    return this.send({\n      to: options.to,\n      subject: EMAIL_CONFIG.TEMPLATES.VERIFICATION.SUBJECT,\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;\">\n          <h1 style=\"color: #333; text-align: center;\">Email Verification</h1>\n          <p>Hello ${options.name},</p>\n          <p>Please use the following code to verify your email address:</p>\n          <div style=\"background-color: #f4f4f4; padding: 15px; text-align: center; font-size: 24px; letter-spacing: 5px; margin: 20px 0; border-radius: 5px;\">\n            <strong>${options.code}</strong>\n          </div>\n          <p>This code will expire in 10 minutes.</p>\n          <p>If you didn't request this code, please ignore this email.</p>\n          <div style=\"margin-top: 20px; padding-top: 20px; border-top: 1px solid #eee; text-align: center; color: #666;\">\n            <p>This is an automated message from MGZon</p>\n            <p>Sent at: ${metadata.timestamp}</p>\n          </div>\n        </div>\n      `,\n      text: `\n        Hello ${options.name},\n\n        Please use the following code to verify your email address:\n\n        ${options.code}\n\n        This code will expire in 10 minutes.\n\n        If you didn't request this code, please ignore this email.\n\n        MGZon\n        Sent at: ${metadata.timestamp}\n      `,\n    });\n  }\n\n  public async sendOrderConfirmation(options: {\n    to: string;\n    order: Order;\n    user: User;\n  }) {\n    const metadata = this.getMetadata();\n    \n    return this.send({\n      to: options.to,\n      subject: EMAIL_CONFIG.TEMPLATES.ORDER_CONFIRMATION.SUBJECT,\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;\">\n          <h1>Order Confirmation</h1>\n          <p>Thank you for your order, ${options.user.name}!</p>\n          <p>Order #${options.order._id}</p>\n          <div style=\"margin: 20px 0;\">\n            ${options.order.items.map(item => `\n              <div style=\"padding: 10px; border-bottom: 1px solid #eee;\">\n                <p>${item.name} x ${item.quantity} - $${(item.price * item.quantity).toFixed(2)}</p>\n              </div>\n            `).join('')}\n          </div>\n          <p><strong>Total:</strong> $${options.order.totalPrice.toFixed(2)}</p>\n          <p>Sent at: ${metadata.timestamp}</p>\n        </div>\n      `,\n      text: `\n        Order Confirmation\n\n        Thank you for your order, ${options.user.name}!\n        Order #${options.order._id}\n\n        ${options.order.items.map(item => \n          `${item.name} x ${item.quantity} - $${(item.price * item.quantity).toFixed(2)}`\n        ).join('\\n')}\n\n        Total: $${options.order.totalPrice.toFixed(2)}\n        \n        Sent at: ${metadata.timestamp}\n      `,\n    });\n  }\n\n  public async sendPasswordReset(options: {\n    to: string;\n    resetToken: string;\n    name: string;\n  }) {\n    const metadata = this.getMetadata();\n\n    return this.send({\n      to: options.to,\n      subject: EMAIL_CONFIG.TEMPLATES.PASSWORD_RESET.SUBJECT,\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;\">\n          <h1>Password Reset</h1>\n          <p>Hello ${options.name},</p>\n          <p>Click the button below to reset your password:</p>\n          <div style=\"text-align: center; margin: 20px 0;\">\n            <a href=\"${process.env.NEXT_PUBLIC_BASE_URL}/reset-password/${options.resetToken}\"\n               style=\"background-color: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">\n              Reset Password\n            </a>\n          </div>\n          <p>If you didn't request this, please ignore this email.</p>\n          <p style=\"color: #666; text-align: center; margin-top: 20px;\">\n            Sent at: ${metadata.timestamp}\n          </p>\n        </div>\n      `,\n      text: `\n        Password Reset\n\n        Hello ${options.name},\n\n        Click the link below to reset your password:\n        ${process.env.NEXT_PUBLIC_BASE_URL}/reset-password/${options.resetToken}\n\n        If you didn't request this, please ignore this email.\n        \n        Sent at: ${metadata.timestamp}\n      `,\n    });\n  }\n}\n\n// تصدير نسخة واحدة من الخدمة\nexport const emailService = new EmailService();"],"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","ignoreList":[]}