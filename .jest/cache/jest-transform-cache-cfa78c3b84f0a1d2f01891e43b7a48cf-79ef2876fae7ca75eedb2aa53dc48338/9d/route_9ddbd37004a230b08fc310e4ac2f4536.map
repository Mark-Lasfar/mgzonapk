{"version":3,"names":["cov_uo4aymed9","actualCoverage","s","GET","metrics","_metrics","PrometheusMetrics","request","f","authError","_auth","validateApiKey","b","_db","connectToDatabase","stats","collect","_server","NextResponse","json","success","data","requests","total","totalRequests","successfulRequests","failed","failedRequests","latency","averageLatency","fulfillment","pending","pendingOrders","processing","processingOrders","completed","completedOrders","failedOrders","providers","providerMetrics","system","memory","process","memoryUsage","cpu","cpuUsage","uptime","timestamp","Date","toISOString","error","_logging","logger","status"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/v1/monitoring/metrics/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { validateApiKey } from '@/lib/api/middleware/auth';\nimport { connectToDatabase } from '@/lib/db';\nimport { logger } from '@/lib/api/services/logging';\nimport { PrometheusMetrics } from '@/lib/api/services/metrics';\n\nconst metrics = new PrometheusMetrics();\n\nexport async function GET(request: NextRequest) {\n  const authError = await validateApiKey(request);\n  if (authError) return authError;\n\n  try {\n    await connectToDatabase();\n\n    const stats = await metrics.collect();\n    \n    return NextResponse.json({\n      success: true,\n      data: {\n        requests: {\n          total: stats.totalRequests,\n          success: stats.successfulRequests,\n          failed: stats.failedRequests,\n          latency: stats.averageLatency\n        },\n        fulfillment: {\n          pending: stats.pendingOrders,\n          processing: stats.processingOrders,\n          completed: stats.completedOrders,\n          failed: stats.failedOrders\n        },\n        providers: stats.providerMetrics,\n        system: {\n          memory: process.memoryUsage(),\n          cpu: process.cpuUsage(),\n          uptime: process.uptime()\n        }\n      },\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    logger.error('Metrics collection failed', { error });\n    return NextResponse.json({\n      success: false,\n      error: 'Failed to collect metrics'\n    }, { \n      status: 500 \n    });\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMM;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;+BAEgB;;;;;;WAAAC,GAAA;;;;;iCARoB;;;iCACX;;;iCACG;;;iCACX;;;iCACW;AAElC,MAAMC,OAAA;AAAA;AAAA,CAAAJ,aAAA,GAAAE,CAAA,OAAU,IAAIG,QAAA,CAAAC,iBAAiB;AAE9B,eAAeH,IAAII,OAAoB;EAAA;EAAAP,aAAA,GAAAQ,CAAA;EAC5C,MAAMC,SAAA;EAAA;EAAA,CAAAT,aAAA,GAAAE,CAAA,OAAY,MAAM,IAAAQ,KAAA,CAAAC,cAAc,EAACJ,OAAA;EAAA;EAAAP,aAAA,GAAAE,CAAA;EACvC,IAAIO,SAAA,EAAW;IAAA;IAAAT,aAAA,GAAAY,CAAA;IAAAZ,aAAA,GAAAE,CAAA;IAAA,OAAOO,SAAA;EAAA;EAAA;EAAA;IAAAT,aAAA,GAAAY,CAAA;EAAA;EAAAZ,aAAA,GAAAE,CAAA;EAEtB,IAAI;IAAA;IAAAF,aAAA,GAAAE,CAAA;IACF,MAAM,IAAAW,GAAA,CAAAC,iBAAiB;IAEvB,MAAMC,KAAA;IAAA;IAAA,CAAAf,aAAA,GAAAE,CAAA,QAAQ,MAAME,OAAA,CAAQY,OAAO;IAAA;IAAAhB,aAAA,GAAAE,CAAA;IAEnC,OAAOe,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvBC,OAAA,EAAS;MACTC,IAAA,EAAM;QACJC,QAAA,EAAU;UACRC,KAAA,EAAOR,KAAA,CAAMS,aAAa;UAC1BJ,OAAA,EAASL,KAAA,CAAMU,kBAAkB;UACjCC,MAAA,EAAQX,KAAA,CAAMY,cAAc;UAC5BC,OAAA,EAASb,KAAA,CAAMc;QACjB;QACAC,WAAA,EAAa;UACXC,OAAA,EAAShB,KAAA,CAAMiB,aAAa;UAC5BC,UAAA,EAAYlB,KAAA,CAAMmB,gBAAgB;UAClCC,SAAA,EAAWpB,KAAA,CAAMqB,eAAe;UAChCV,MAAA,EAAQX,KAAA,CAAMsB;QAChB;QACAC,SAAA,EAAWvB,KAAA,CAAMwB,eAAe;QAChCC,MAAA,EAAQ;UACNC,MAAA,EAAQC,OAAA,CAAQC,WAAW;UAC3BC,GAAA,EAAKF,OAAA,CAAQG,QAAQ;UACrBC,MAAA,EAAQJ,OAAA,CAAQI,MAAM;QACxB;MACF;MACAC,SAAA,EAAW,IAAIC,IAAA,GAAOC,WAAW;IACnC;EAEF,EAAE,OAAOC,KAAA,EAAO;IAAA;IAAAlD,aAAA,GAAAE,CAAA;IACdiD,QAAA,CAAAC,MAAM,CAACF,KAAK,CAAC,6BAA6B;MAAEA;IAAM;IAAA;IAAAlD,aAAA,GAAAE,CAAA;IAClD,OAAOe,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvBC,OAAA,EAAS;MACT8B,KAAA,EAAO;IACT,GAAG;MACDG,MAAA,EAAQ;IACV;EACF;AACF","ignoreList":[]}