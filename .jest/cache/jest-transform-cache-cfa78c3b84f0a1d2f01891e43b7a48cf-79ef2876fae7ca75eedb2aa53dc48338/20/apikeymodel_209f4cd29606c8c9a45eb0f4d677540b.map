{"version":3,"names":["_default","apiKeySchema","cov_2rrq7paacu","s","_mongoose","Schema","name","type","String","required","trim","minlength","maxlength","key","unique","default","f","_crypto","randomBytes","toString","secret","permissions","match","isActive","Boolean","expiresAt","Date","lastUsed","createdBy","updatedBy","sellerId","Types","ObjectId","ref","timestamps","index","sparse","pre","next","isNew","b","update","getUpdate","updatedAt","methods","isExpired","hasPermission","permission","includes","updateLastUsed","save","ApiKey","models","model"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/models/api-key.model.ts"],"sourcesContent":["import mongoose, { Schema, Document, Model } from 'mongoose';\nimport crypto from 'crypto';\n\nexport interface IApiKey extends Document {\n  name: string;\n  key: string;\n  secret: string;\n  permissions: string[];\n  isActive: boolean;\n  expiresAt?: Date;\n  lastUsed?: Date;\n  createdBy: string;\n  updatedBy: string;\n  sellerId: mongoose.Types.ObjectId; // New: Reference to Seller\n  createdAt: Date;\n  updatedAt: Date;\n\n  isExpired(): boolean;\n  hasPermission(permission: string): boolean;\n  updateLastUsed(): Promise<void>;\n}\n\nconst apiKeySchema = new Schema<IApiKey>(\n  {\n    name: {\n      type: String,\n      required: [true, 'Name is required'],\n      trim: true,\n      minlength: [2, 'Name must be at least 2 characters'],\n      maxlength: [100, 'Name cannot exceed 100 characters'],\n    },\n    key: {\n      type: String,\n      required: [true, 'Key is required'],\n      unique: true,\n      default: () => crypto.randomBytes(32).toString('hex'),\n    },\n    secret: {\n      type: String,\n      required: [true, 'Secret is required'],\n      default: () => crypto.randomBytes(64).toString('hex'),\n    },\n    permissions: [\n      {\n        type: String,\n        required: [true, 'Permission is required'],\n        trim: true,\n        match: [/^[a-zA-Z]+:[a-zA-Z]+$/, 'Permission must follow the format \"scope:action\"'],\n      },\n    ],\n    isActive: {\n      type: Boolean,\n      default: true,\n    },\n    expiresAt: {\n      type: Date,\n    },\n    lastUsed: {\n      type: Date,\n    },\n    createdBy: {\n      type: String,\n      required: [true, 'Created by is required'],\n    },\n    updatedBy: {\n      type: String,\n      required: [true, 'Updated by is required'],\n    },\n    sellerId: {\n      type: Schema.Types.ObjectId,\n      ref: 'Seller',\n      required: [true, 'Seller ID is required'], // New: Links to Seller\n    },\n  },\n  {\n    timestamps: true,\n  }\n);\n\n// Indexes\napiKeySchema.index({ key: 1 }, { unique: true });\napiKeySchema.index({ isActive: 1 });\napiKeySchema.index({ expiresAt: 1 }, { sparse: true });\napiKeySchema.index({ sellerId: 1 }); // New: Index for sellerId queries\n\n// Middleware\napiKeySchema.pre('save', function (next) {\n  if (this.isNew) {\n    this.createdBy = this.createdBy || 'system';\n  }\n  this.updatedBy = this.updatedBy || 'system';\n  next();\n});\n\napiKeySchema.pre(['updateOne', 'findOneAndUpdate'], function (next) {\n  const update = this.getUpdate() as any;\n  if (update) {\n    update.updatedBy = update.updatedBy || 'system';\n    update.updatedAt = new Date();\n  }\n  next();\n});\n\n// Methods\napiKeySchema.methods.isExpired = function (): boolean {\n  if (!this.expiresAt) return false;\n  return new Date() > this.expiresAt;\n};\n\napiKeySchema.methods.hasPermission = function (permission: string): boolean {\n  return this.permissions.includes(permission);\n};\n\napiKeySchema.methods.updateLastUsed = async function (): Promise<void> {\n  this.lastUsed = new Date();\n  await this.save();\n};\n\nconst ApiKey: Model<IApiKey> =\n  mongoose.models.ApiKey || mongoose.model<IApiKey>('ApiKey', apiKeySchema);\n\nexport default ApiKey;"],"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","ignoreList":[]}