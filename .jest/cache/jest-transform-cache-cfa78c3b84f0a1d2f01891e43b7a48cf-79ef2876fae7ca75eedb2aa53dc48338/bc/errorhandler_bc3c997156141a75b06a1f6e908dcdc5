ae40060f3390705a5ff882c071d6262d
"use strict";

/* istanbul ignore next */
function cov_27awt8chkc() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/utils/error-handler.ts";
  var hash = "e89c5b7b060163fbf3b5c1c08ef363027af7c761";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/utils/error-handler.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 24
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "7": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "8": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 45
        }
      },
      "9": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 23
        }
      },
      "10": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 31
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 25
        }
      },
      "12": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 37
        }
      },
      "13": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 31
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 50
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 56
        }
      },
      "16": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 95,
          column: 1
        }
      },
      "17": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 37,
          column: 53
        }
      },
      "18": {
        start: {
          line: 38,
          column: 22
        },
        end: {
          line: 38,
          column: 46
        }
      },
      "19": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "20": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "21": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "22": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "23": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "24": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "25": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "26": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "27": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 21
        }
      },
      "28": {
        start: {
          line: 81,
          column: 25
        },
        end: {
          line: 84,
          column: 6
        }
      },
      "29": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 93,
          column: 7
        }
      },
      "30": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 24
        }
      },
      "31": {
        start: {
          line: 96,
          column: 27
        },
        end: {
          line: 107,
          column: 1
        }
      },
      "32": {
        start: {
          line: 97,
          column: 21
        },
        end: {
          line: 97,
          column: 48
        }
      },
      "33": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 106,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 14
          },
          end: {
            line: 12,
            column: 15
          }
        },
        loc: {
          start: {
            line: 12,
            column: 25
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 17
          },
          end: {
            line: 15,
            column: 18
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 25
          }
        },
        loc: {
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 80
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 35,
            column: 21
          }
        },
        loc: {
          start: {
            line: 35,
            column: 38
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 35
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 96,
            column: 27
          },
          end: {
            line: 96,
            column: 28
          }
        },
        loc: {
          start: {
            line: 96,
            column: 45
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 96
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 27
          },
          end: {
            line: 25,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 25,
            column: 50
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 52
          },
          end: {
            line: 25,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 65
          },
          end: {
            line: 25,
            column: 68
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 41
          }
        }, {
          start: {
            line: 37,
            column: 45
          },
          end: {
            line: 37,
            column: 53
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "6": {
        loc: {
          start: {
            line: 82,
            column: 17
          },
          end: {
            line: 82,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 42
          },
          end: {
            line: 82,
            column: 55
          }
        }, {
          start: {
            line: 82,
            column: 58
          },
          end: {
            line: 82,
            column: 88
          }
        }],
        line: 82
      },
      "7": {
        loc: {
          start: {
            line: 87,
            column: 15
          },
          end: {
            line: 90,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 40
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 25
          }
        }],
        line: 87
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/utils/error-handler.ts"],
      sourcesContent: ["import { customLogger as logger } from '@/lib/api/services/logging';\nimport { UnauthorizedError, ForbiddenError } from '@/types/errors';\n\nexport interface AppErrorOptions {\n  message: string;\n  code?: string;\n  statusCode?: number;\n  details?: any;\n}\n\nexport class AppError extends Error {\n  public readonly code: string;\n  public readonly statusCode: number;\n  public readonly details: any;\n  public readonly timestamp: string;\n  public readonly requestId?: string;\n\n  constructor({ message, code = 'INTERNAL_ERROR', statusCode = 500, details }: AppErrorOptions) {\n    super(message);\n    this.name = 'AppError';\n    this.code = code;\n    this.statusCode = statusCode;\n    this.details = details;\n    this.timestamp = new Date().toISOString();\n\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nexport const handleError = (error: unknown, context: string) => {\n  // Get current user information\n  const user = process.env.CURRENT_USER || 'system';\n  const timestamp = new Date().toISOString();\n\n  // Handle specific error types\n  if (error instanceof UnauthorizedError) {\n    logger.security('Unauthorized access attempt', {\n      context,\n      error: error.message,\n      user,\n      timestamp\n    });\n    return new AppError({\n      message: error.message,\n      code: 'UNAUTHORIZED',\n      statusCode: 401\n    });\n  }\n\n  if (error instanceof ForbiddenError) {\n    logger.security('Forbidden access attempt', {\n      context,\n      error: error.message,\n      user,\n      timestamp\n    });\n    return new AppError({\n      message: error.message,\n      code: 'FORBIDDEN',\n      statusCode: 403\n    });\n  }\n\n  if (error instanceof AppError) {\n    logger.error('Application error occurred', {\n      context,\n      error: {\n        message: error.message,\n        code: error.code,\n        statusCode: error.statusCode,\n        details: error.details\n      },\n      user,\n      timestamp\n    });\n    return error;\n  }\n\n  // Handle unknown errors\n  const unknownError = new AppError({\n    message: error instanceof Error ? error.message : 'An unexpected error occurred',\n    statusCode: 500\n  });\n\n  logger.error('Unhandled error occurred', {\n    context,\n    error: error instanceof Error ? {\n      message: error.message,\n      stack: error.stack\n    } : String(error),\n    user,\n    timestamp\n  });\n\n  return unknownError;\n};\n\nexport const handleRequestError = (error: unknown, context: string) => {\n  const appError = handleError(error, context);\n  \n  return {\n    success: false,\n    error: {\n      message: appError.message,\n      code: appError.code,\n      statusCode: appError.statusCode,\n      timestamp: appError.timestamp\n    }\n  };\n};"],
      names: ["AppError", "handleError", "handleRequestError", "Error", "constructor", "message", "code", "statusCode", "details", "name", "timestamp", "Date", "toISOString", "captureStackTrace", "error", "context", "user", "process", "env", "CURRENT_USER", "UnauthorizedError", "logger", "security", "ForbiddenError", "unknownError", "stack", "String", "appError", "success"],
      mappings: ";;;;;;;;;;;IAUaA,QAAQ;eAARA;;IAmBAC,WAAW;eAAXA;;IAoEAC,kBAAkB;eAAlBA;;;yBAjG0B;wBACW;AAS3C,MAAMF,iBAAiBG;IAO5BC,YAAY,EAAEC,OAAO,EAAEC,OAAO,gBAAgB,EAAEC,aAAa,GAAG,EAAEC,OAAO,EAAmB,CAAE;QAC5F,KAAK,CAACH;QACN,IAAI,CAACI,IAAI,GAAG;QACZ,IAAI,CAACH,IAAI,GAAGA;QACZ,IAAI,CAACC,UAAU,GAAGA;QAClB,IAAI,CAACC,OAAO,GAAGA;QACf,IAAI,CAACE,SAAS,GAAG,IAAIC,OAAOC,WAAW;QAEvCT,MAAMU,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACT,WAAW;IAChD;AACF;AAEO,MAAMH,cAAc,CAACa,OAAgBC;IAC1C,+BAA+B;IAC/B,MAAMC,OAAOC,QAAQC,GAAG,CAACC,YAAY,IAAI;IACzC,MAAMT,YAAY,IAAIC,OAAOC,WAAW;IAExC,8BAA8B;IAC9B,IAAIE,iBAAiBM,yBAAiB,EAAE;QACtCC,qBAAM,CAACC,QAAQ,CAAC,+BAA+B;YAC7CP;YACAD,OAAOA,MAAMT,OAAO;YACpBW;YACAN;QACF;QACA,OAAO,IAAIV,SAAS;YAClBK,SAASS,MAAMT,OAAO;YACtBC,MAAM;YACNC,YAAY;QACd;IACF;IAEA,IAAIO,iBAAiBS,sBAAc,EAAE;QACnCF,qBAAM,CAACC,QAAQ,CAAC,4BAA4B;YAC1CP;YACAD,OAAOA,MAAMT,OAAO;YACpBW;YACAN;QACF;QACA,OAAO,IAAIV,SAAS;YAClBK,SAASS,MAAMT,OAAO;YACtBC,MAAM;YACNC,YAAY;QACd;IACF;IAEA,IAAIO,iBAAiBd,UAAU;QAC7BqB,qBAAM,CAACP,KAAK,CAAC,8BAA8B;YACzCC;YACAD,OAAO;gBACLT,SAASS,MAAMT,OAAO;gBACtBC,MAAMQ,MAAMR,IAAI;gBAChBC,YAAYO,MAAMP,UAAU;gBAC5BC,SAASM,MAAMN,OAAO;YACxB;YACAQ;YACAN;QACF;QACA,OAAOI;IACT;IAEA,wBAAwB;IACxB,MAAMU,eAAe,IAAIxB,SAAS;QAChCK,SAASS,iBAAiBX,QAAQW,MAAMT,OAAO,GAAG;QAClDE,YAAY;IACd;IAEAc,qBAAM,CAACP,KAAK,CAAC,4BAA4B;QACvCC;QACAD,OAAOA,iBAAiBX,QAAQ;YAC9BE,SAASS,MAAMT,OAAO;YACtBoB,OAAOX,MAAMW,KAAK;QACpB,IAAIC,OAAOZ;QACXE;QACAN;IACF;IAEA,OAAOc;AACT;AAEO,MAAMtB,qBAAqB,CAACY,OAAgBC;IACjD,MAAMY,WAAW1B,YAAYa,OAAOC;IAEpC,OAAO;QACLa,SAAS;QACTd,OAAO;YACLT,SAASsB,SAAStB,OAAO;YACzBC,MAAMqB,SAASrB,IAAI;YACnBC,YAAYoB,SAASpB,UAAU;YAC/BG,WAAWiB,SAASjB,SAAS;QAC/B;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e89c5b7b060163fbf3b5c1c08ef363027af7c761"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27awt8chkc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_27awt8chkc();
cov_27awt8chkc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_27awt8chkc().f[0]++;
  cov_27awt8chkc().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_27awt8chkc().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_27awt8chkc().s[3]++;
_export(exports, {
  AppError: function () {
    /* istanbul ignore next */
    cov_27awt8chkc().f[1]++;
    cov_27awt8chkc().s[4]++;
    return AppError;
  },
  handleError: function () {
    /* istanbul ignore next */
    cov_27awt8chkc().f[2]++;
    cov_27awt8chkc().s[5]++;
    return handleError;
  },
  handleRequestError: function () {
    /* istanbul ignore next */
    cov_27awt8chkc().f[3]++;
    cov_27awt8chkc().s[6]++;
    return handleRequestError;
  }
});
const _logging =
/* istanbul ignore next */
(cov_27awt8chkc().s[7]++, require("../api/services/logging"));
const _errors =
/* istanbul ignore next */
(cov_27awt8chkc().s[8]++, require("../../types/errors"));
class AppError extends Error {
  constructor({
    message,
    code =
    /* istanbul ignore next */
    (cov_27awt8chkc().b[0][0]++, 'INTERNAL_ERROR'),
    statusCode =
    /* istanbul ignore next */
    (cov_27awt8chkc().b[1][0]++, 500),
    details
  }) {
    /* istanbul ignore next */
    cov_27awt8chkc().f[4]++;
    cov_27awt8chkc().s[9]++;
    super(message);
    /* istanbul ignore next */
    cov_27awt8chkc().s[10]++;
    this.name = 'AppError';
    /* istanbul ignore next */
    cov_27awt8chkc().s[11]++;
    this.code = code;
    /* istanbul ignore next */
    cov_27awt8chkc().s[12]++;
    this.statusCode = statusCode;
    /* istanbul ignore next */
    cov_27awt8chkc().s[13]++;
    this.details = details;
    /* istanbul ignore next */
    cov_27awt8chkc().s[14]++;
    this.timestamp = new Date().toISOString();
    /* istanbul ignore next */
    cov_27awt8chkc().s[15]++;
    Error.captureStackTrace(this, this.constructor);
  }
}
/* istanbul ignore next */
cov_27awt8chkc().s[16]++;
const handleError = (error, context) => {
  /* istanbul ignore next */
  cov_27awt8chkc().f[5]++;
  // Get current user information
  const user =
  /* istanbul ignore next */
  (cov_27awt8chkc().s[17]++,
  /* istanbul ignore next */
  (cov_27awt8chkc().b[2][0]++, process.env.CURRENT_USER) ||
  /* istanbul ignore next */
  (cov_27awt8chkc().b[2][1]++, 'system'));
  const timestamp =
  /* istanbul ignore next */
  (cov_27awt8chkc().s[18]++, new Date().toISOString());
  // Handle specific error types
  /* istanbul ignore next */
  cov_27awt8chkc().s[19]++;
  if (error instanceof _errors.UnauthorizedError) {
    /* istanbul ignore next */
    cov_27awt8chkc().b[3][0]++;
    cov_27awt8chkc().s[20]++;
    _logging.customLogger.security('Unauthorized access attempt', {
      context,
      error: error.message,
      user,
      timestamp
    });
    /* istanbul ignore next */
    cov_27awt8chkc().s[21]++;
    return new AppError({
      message: error.message,
      code: 'UNAUTHORIZED',
      statusCode: 401
    });
  } else
  /* istanbul ignore next */
  {
    cov_27awt8chkc().b[3][1]++;
  }
  cov_27awt8chkc().s[22]++;
  if (error instanceof _errors.ForbiddenError) {
    /* istanbul ignore next */
    cov_27awt8chkc().b[4][0]++;
    cov_27awt8chkc().s[23]++;
    _logging.customLogger.security('Forbidden access attempt', {
      context,
      error: error.message,
      user,
      timestamp
    });
    /* istanbul ignore next */
    cov_27awt8chkc().s[24]++;
    return new AppError({
      message: error.message,
      code: 'FORBIDDEN',
      statusCode: 403
    });
  } else
  /* istanbul ignore next */
  {
    cov_27awt8chkc().b[4][1]++;
  }
  cov_27awt8chkc().s[25]++;
  if (error instanceof AppError) {
    /* istanbul ignore next */
    cov_27awt8chkc().b[5][0]++;
    cov_27awt8chkc().s[26]++;
    _logging.customLogger.error('Application error occurred', {
      context,
      error: {
        message: error.message,
        code: error.code,
        statusCode: error.statusCode,
        details: error.details
      },
      user,
      timestamp
    });
    /* istanbul ignore next */
    cov_27awt8chkc().s[27]++;
    return error;
  } else
  /* istanbul ignore next */
  {
    cov_27awt8chkc().b[5][1]++;
  }
  // Handle unknown errors
  const unknownError =
  /* istanbul ignore next */
  (cov_27awt8chkc().s[28]++, new AppError({
    message: error instanceof Error ?
    /* istanbul ignore next */
    (cov_27awt8chkc().b[6][0]++, error.message) :
    /* istanbul ignore next */
    (cov_27awt8chkc().b[6][1]++, 'An unexpected error occurred'),
    statusCode: 500
  }));
  /* istanbul ignore next */
  cov_27awt8chkc().s[29]++;
  _logging.customLogger.error('Unhandled error occurred', {
    context,
    error: error instanceof Error ?
    /* istanbul ignore next */
    (cov_27awt8chkc().b[7][0]++, {
      message: error.message,
      stack: error.stack
    }) :
    /* istanbul ignore next */
    (cov_27awt8chkc().b[7][1]++, String(error)),
    user,
    timestamp
  });
  /* istanbul ignore next */
  cov_27awt8chkc().s[30]++;
  return unknownError;
};
/* istanbul ignore next */
cov_27awt8chkc().s[31]++;
const handleRequestError = (error, context) => {
  /* istanbul ignore next */
  cov_27awt8chkc().f[6]++;
  const appError =
  /* istanbul ignore next */
  (cov_27awt8chkc().s[32]++, handleError(error, context));
  /* istanbul ignore next */
  cov_27awt8chkc().s[33]++;
  return {
    success: false,
    error: {
      message: appError.message,
      code: appError.code,
      statusCode: appError.statusCode,
      timestamp: appError.timestamp
    }
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,