{"version":3,"names":["rateLimit","redis","cov_jbxza4yum","s","_redis","Redis","url","process","env","UPSTASH_REDIS_URL","token","UPSTASH_REDIS_TOKEN","RATE_LIMIT_CONFIGS","FREE","requests","window","BASIC","PRO","ENTERPRISE","request","f","apiKey","headers","get","b","_server","NextResponse","JSON","stringify","success","error","status","key","now","Date","apiKeyDoc","_apikeymodel","default","findOne","plan","permissions","includes","config","zcount","reset","zscore","zadd","toString","expire","Headers","set","console"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/middleware/rate-limit.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { Redis } from '@upstash/redis';\nimport ApiKey from '@/lib/db/models/api-key.model';\n\nconst redis = new Redis({\n  url: process.env.UPSTASH_REDIS_URL!,\n  token: process.env.UPSTASH_REDIS_TOKEN!,\n});\n\nconst RATE_LIMIT_CONFIGS = {\n  FREE: { requests: 100, window: 3600 }, // 100 requests per hour\n  BASIC: { requests: 1000, window: 3600 }, // 1000 requests per hour\n  PRO: { requests: 10000, window: 3600 }, // 10000 requests per hour\n  ENTERPRISE: { requests: 100000, window: 3600 }, // 100000 requests per hour\n};\n\nexport async function rateLimit(request: NextRequest) {\n  const apiKey = request.headers.get('x-api-key');\n  if (!apiKey) {\n    return new NextResponse(\n      JSON.stringify({\n        success: false,\n        error: 'API key required',\n      }),\n      { status: 401 }\n    );\n  }\n\n  const key = `rate-limit:${apiKey}`;\n  const now = Date.now();\n\n  try {\n    const apiKeyDoc = await ApiKey.findOne({ key: apiKey });\n    if (!apiKeyDoc) {\n      return new NextResponse(\n        JSON.stringify({\n          success: false,\n          error: 'Invalid API key',\n        }),\n        { status: 401 }\n      );\n    }\n\n    const plan = apiKeyDoc.permissions.includes('analytics:read') ? 'PRO' : 'BASIC';\n    const config = RATE_LIMIT_CONFIGS[plan];\n\n    const requests = await redis.zcount(key, now - (config.window * 1000), now);\n\n    if (requests >= config.requests) {\n      return new NextResponse(\n        JSON.stringify({\n          success: false,\n          error: 'Rate limit exceeded',\n          reset: await redis.zscore(key, 'window_expires'),\n        }),\n        { status: 429 }\n      );\n    }\n\n    await redis.zadd(key, now, Date.now().toString());\n    await redis.expire(key, config.window);\n\n    const headers = new Headers();\n    headers.set('X-RateLimit-Limit', config.requests.toString());\n    headers.set('X-RateLimit-Remaining', (config.requests - requests - 1).toString());\n    headers.set('X-RateLimit-Reset', (now + config.window * 1000).toString());\n\n    return { headers };\n  } catch (error) {\n    console.error('Rate limiting error:', error);\n    return null;\n  }\n}"],"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","ignoreList":[]}