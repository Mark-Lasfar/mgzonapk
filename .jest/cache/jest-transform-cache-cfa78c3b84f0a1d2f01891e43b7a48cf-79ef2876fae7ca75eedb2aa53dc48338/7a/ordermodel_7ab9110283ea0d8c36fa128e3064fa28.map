{"version":3,"names":["cov_ztqbhklvi","actualCoverage","s","_default","orderSchema","_mongoose","Schema","userId","type","String","required","index","sellerId","items","clientId","name","trim","slug","image","match","price","Number","min","quantity","color","size","_id","itemsPrice","status","enum","values","message","default","createdAt","Date","now","updatedAt","timestamps","Order","b","models","model"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/order.model.ts"],"sourcesContent":["import { Schema, model, models, Document } from 'mongoose'\n\nexport interface IOrder extends Document {\n  userId: string\n  sellerId: string\n  items: Array<{\n    clientId: string\n    name: string\n    slug: string\n    image: string\n    price: number\n    quantity: number\n    color: string\n    size?: string\n  }>\n  itemsPrice: number\n  status: string\n  createdAt: Date\n  updatedAt: Date\n}\n\nconst orderSchema = new Schema<IOrder>(\n  {\n    userId: {\n      type: String,\n      required: [true, 'User ID is required'],\n      index: true,\n    },\n    sellerId: {\n      type: String,\n      required: [true, 'Seller ID is required'],\n      index: true,\n    },\n    items: [\n      {\n        clientId: { type: String, required: [true, 'Client ID is required'] },\n        name: { type: String, required: [true, 'Item name is required'], trim: true },\n        slug: { type: String, required: [true, 'Item slug is required'], trim: true },\n        image: {\n          type: String,\n          required: [true, 'Item image is required'],\n          match: [/^https?:\\/\\/.*\\.(?:png|jpg|jpeg|webp)$/, 'Please provide a valid image URL'],\n        },\n        price: {\n          type: Number,\n          required: [true, 'Item price is required'],\n          min: [0, 'Price cannot be negative'],\n        },\n        quantity: {\n          type: Number,\n          required: [true, 'Item quantity is required'],\n          min: [1, 'Quantity must be at least 1'],\n        },\n        color: { type: String, required: [true, 'Item color is required'], trim: true },\n        size: { type: String, trim: true },\n        _id: false,\n      },\n    ],\n    itemsPrice: {\n      type: Number,\n      required: [true, 'Items price is required'],\n      min: [0, 'Items price cannot be negative'],\n    },\n    status: {\n      type: String,\n      enum: {\n        values: ['pending', 'processing', 'shipped', 'delivered', 'cancelled', 'returned', 'abandoned'],\n        message: '{VALUE} is not a valid status',\n      },\n      default: 'pending',\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  }\n)\n\norderSchema.index({ userId: 1, createdAt: -1 });\norderSchema.index({ sellerId: 1, status: 1 });\norderSchema.index({ status: 1 });\n\nconst Order = models.Order || model<IOrder>('Order', orderSchema)\n\nexport default Order"],"mappings":"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","ignoreList":[]}