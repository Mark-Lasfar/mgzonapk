a4c37763739143afa7bc81622d9e9ea5
'use server';
"use strict";

/* istanbul ignore next */
function cov_qxwhxjheh() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/order.actions.ts";
  var hash = "3a4b05b5d279b6c351ae09a900de1b4660d4a11c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/order.actions.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 49,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 40
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 27
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 35
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 27
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 28
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 28
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 27
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 28
        }
      },
      "14": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 31
        }
      },
      "15": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 33
        }
      },
      "16": {
        start: {
          line: 50,
          column: 15
        },
        end: {
          line: 50,
          column: 34
        }
      },
      "17": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 28
        }
      },
      "18": {
        start: {
          line: 52,
          column: 14
        },
        end: {
          line: 52,
          column: 35
        }
      },
      "19": {
        start: {
          line: 53,
          column: 19
        },
        end: {
          line: 53,
          column: 42
        }
      },
      "20": {
        start: {
          line: 54,
          column: 34
        },
        end: {
          line: 54,
          column: 95
        }
      },
      "21": {
        start: {
          line: 55,
          column: 15
        },
        end: {
          line: 55,
          column: 36
        }
      },
      "22": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 39
        }
      },
      "23": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 36
        }
      },
      "24": {
        start: {
          line: 58,
          column: 36
        },
        end: {
          line: 58,
          column: 99
        }
      },
      "25": {
        start: {
          line: 59,
          column: 33
        },
        end: {
          line: 59,
          column: 93
        }
      },
      "26": {
        start: {
          line: 60,
          column: 32
        },
        end: {
          line: 60,
          column: 77
        }
      },
      "27": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 61,
          column: 52
        }
      },
      "28": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 50
        }
      },
      "29": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 66,
          column: 6
        }
      },
      "30": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 87,
          column: 1
        }
      },
      "31": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "32": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 43
        }
      },
      "33": {
        start: {
          line: 71,
          column: 24
        },
        end: {
          line: 71,
          column: 47
        }
      },
      "34": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 64
        }
      },
      "35": {
        start: {
          line: 72,
          column: 22
        },
        end: {
          line: 72,
          column: 64
        }
      },
      "36": {
        start: {
          line: 73,
          column: 29
        },
        end: {
          line: 73,
          column: 87
        }
      },
      "37": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 80,
          column: 10
        }
      },
      "38": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 85,
          column: 10
        }
      },
      "39": {
        start: {
          line: 88,
          column: 28
        },
        end: {
          line: 114,
          column: 1
        }
      },
      "40": {
        start: {
          line: 89,
          column: 17
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "41": {
        start: {
          line: 97,
          column: 18
        },
        end: {
          line: 112,
          column: 6
        }
      },
      "42": {
        start: {
          line: 99,
          column: 39
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "43": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 113,
          column: 51
        }
      },
      "44": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 116,
          column: 69
        }
      },
      "45": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 31
        }
      },
      "46": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "47": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 43
        }
      },
      "48": {
        start: {
          line: 120,
          column: 22
        },
        end: {
          line: 120,
          column: 113
        }
      },
      "49": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 55
        }
      },
      "50": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 55
        }
      },
      "51": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 67
        }
      },
      "52": {
        start: {
          line: 122,
          column: 26
        },
        end: {
          line: 122,
          column: 67
        }
      },
      "53": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 28
        }
      },
      "54": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 34
        }
      },
      "55": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 11
        }
      },
      "56": {
        start: {
          line: 129,
          column: 25
        },
        end: {
          line: 129,
          column: 64
        }
      },
      "57": {
        start: {
          line: 130,
          column: 33
        },
        end: {
          line: 130,
          column: 57
        }
      },
      "58": {
        start: {
          line: 131,
          column: 25
        },
        end: {
          line: 131,
          column: 50
        }
      },
      "59": {
        start: {
          line: 132,
          column: 23
        },
        end: {
          line: 132,
          column: 51
        }
      },
      "60": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 122
        }
      },
      "61": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "62": {
        start: {
          line: 136,
          column: 28
        },
        end: {
          line: 136,
          column: 95
        }
      },
      "63": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "64": {
        start: {
          line: 138,
          column: 31
        },
        end: {
          line: 140,
          column: 35
        }
      },
      "65": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 143,
          column: 17
        }
      },
      "66": {
        start: {
          line: 142,
          column: 20
        },
        end: {
          line: 142,
          column: 138
        }
      },
      "67": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 118
        }
      },
      "68": {
        start: {
          line: 146,
          column: 73
        },
        end: {
          line: 146,
          column: 118
        }
      },
      "69": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "70": {
        start: {
          line: 147,
          column: 30
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "71": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 42
        }
      },
      "72": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 65
        }
      },
      "73": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 155,
          column: 10
        }
      },
      "74": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 41
        }
      },
      "75": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 161,
          column: 10
        }
      },
      "76": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 29
        }
      },
      "77": {
        start: {
          line: 166,
          column: 27
        },
        end: {
          line: 187,
          column: 1
        }
      },
      "78": {
        start: {
          line: 167,
          column: 17
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "79": {
        start: {
          line: 170,
          column: 18
        },
        end: {
          line: 175,
          column: 12
        }
      },
      "80": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 176,
          column: 51
        }
      },
      "81": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 51
        }
      },
      "82": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "83": {
        start: {
          line: 178,
          column: 24
        },
        end: {
          line: 178,
          column: 91
        }
      },
      "84": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 59
        }
      },
      "85": {
        start: {
          line: 179,
          column: 22
        },
        end: {
          line: 179,
          column: 59
        }
      },
      "86": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 46
        }
      },
      "87": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 185,
          column: 17
        }
      },
      "88": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 210,
          column: 5
        }
      },
      "89": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 43
        }
      },
      "90": {
        start: {
          line: 191,
          column: 22
        },
        end: {
          line: 191,
          column: 96
        }
      },
      "91": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 55
        }
      },
      "92": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 192,
          column: 55
        }
      },
      "93": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 64
        }
      },
      "94": {
        start: {
          line: 193,
          column: 27
        },
        end: {
          line: 193,
          column: 64
        }
      },
      "95": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 33
        }
      },
      "96": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 39
        }
      },
      "97": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 27
        }
      },
      "98": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 199,
          column: 11
        }
      },
      "99": {
        start: {
          line: 197,
          column: 30
        },
        end: {
          line: 199,
          column: 11
        }
      },
      "100": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 65
        }
      },
      "101": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 204,
          column: 10
        }
      },
      "102": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 209,
          column: 10
        }
      },
      "103": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "104": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 43
        }
      },
      "105": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 67
        }
      },
      "106": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 53
        }
      },
      "107": {
        start: {
          line: 216,
          column: 18
        },
        end: {
          line: 216,
          column: 53
        }
      },
      "108": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 52
        }
      },
      "109": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 221,
          column: 10
        }
      },
      "110": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 226,
          column: 10
        }
      },
      "111": {
        start: {
          line: 230,
          column: 37
        },
        end: {
          line: 230,
          column: 76
        }
      },
      "112": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 231,
          column: 30
        }
      },
      "113": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 232,
          column: 39
        }
      },
      "114": {
        start: {
          line: 233,
          column: 23
        },
        end: {
          line: 233,
          column: 49
        }
      },
      "115": {
        start: {
          line: 234,
          column: 19
        },
        end: {
          line: 236,
          column: 36
        }
      },
      "116": {
        start: {
          line: 237,
          column: 24
        },
        end: {
          line: 237,
          column: 66
        }
      },
      "117": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 241,
          column: 6
        }
      },
      "118": {
        start: {
          line: 244,
          column: 37
        },
        end: {
          line: 244,
          column: 76
        }
      },
      "119": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 245,
          column: 30
        }
      },
      "120": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 246,
          column: 39
        }
      },
      "121": {
        start: {
          line: 247,
          column: 20
        },
        end: {
          line: 247,
          column: 43
        }
      },
      "122": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "123": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 53
        }
      },
      "124": {
        start: {
          line: 251,
          column: 23
        },
        end: {
          line: 251,
          column: 49
        }
      },
      "125": {
        start: {
          line: 252,
          column: 19
        },
        end: {
          line: 256,
          column: 36
        }
      },
      "126": {
        start: {
          line: 257,
          column: 24
        },
        end: {
          line: 259,
          column: 6
        }
      },
      "127": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 263,
          column: 6
        }
      },
      "128": {
        start: {
          line: 266,
          column: 4
        },
        end: {
          line: 266,
          column: 39
        }
      },
      "129": {
        start: {
          line: 267,
          column: 18
        },
        end: {
          line: 267,
          column: 61
        }
      },
      "130": {
        start: {
          line: 268,
          column: 4
        },
        end: {
          line: 268,
          column: 45
        }
      },
      "131": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 271,
          column: 39
        }
      },
      "132": {
        start: {
          line: 272,
          column: 4
        },
        end: {
          line: 296,
          column: 5
        }
      },
      "133": {
        start: {
          line: 273,
          column: 22
        },
        end: {
          line: 273,
          column: 65
        }
      },
      "134": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "135": {
        start: {
          line: 275,
          column: 32
        },
        end: {
          line: 275,
          column: 82
        }
      },
      "136": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 281,
          column: 14
        }
      },
      "137": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 31
        }
      },
      "138": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 287,
          column: 14
        }
      },
      "139": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 47
        }
      },
      "140": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 295,
          column: 10
        }
      },
      "141": {
        start: {
          line: 299,
          column: 4
        },
        end: {
          line: 299,
          column: 39
        }
      },
      "142": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 327,
          column: 5
        }
      },
      "143": {
        start: {
          line: 301,
          column: 22
        },
        end: {
          line: 301,
          column: 91
        }
      },
      "144": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 55
        }
      },
      "145": {
        start: {
          line: 302,
          column: 20
        },
        end: {
          line: 302,
          column: 55
        }
      },
      "146": {
        start: {
          line: 303,
          column: 28
        },
        end: {
          line: 303,
          column: 77
        }
      },
      "147": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 153
        }
      },
      "148": {
        start: {
          line: 304,
          column: 110
        },
        end: {
          line: 304,
          column: 153
        }
      },
      "149": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 28
        }
      },
      "150": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 34
        }
      },
      "151": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 312,
          column: 10
        }
      },
      "152": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 27
        }
      },
      "153": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 316,
          column: 11
        }
      },
      "154": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 65
        }
      },
      "155": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 321,
          column: 10
        }
      },
      "156": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 326,
          column: 10
        }
      },
      "157": {
        start: {
          line: 329,
          column: 33
        },
        end: {
          line: 355,
          column: 1
        }
      },
      "158": {
        start: {
          line: 330,
          column: 39
        },
        end: {
          line: 330,
          column: 78
        }
      },
      "159": {
        start: {
          line: 331,
          column: 23
        },
        end: {
          line: 331,
          column: 105
        }
      },
      "160": {
        start: {
          line: 331,
          column: 68
        },
        end: {
          line: 331,
          column: 100
        }
      },
      "161": {
        start: {
          line: 332,
          column: 25
        },
        end: {
          line: 332,
          column: 136
        }
      },
      "162": {
        start: {
          line: 333,
          column: 26
        },
        end: {
          line: 333,
          column: 195
        }
      },
      "163": {
        start: {
          line: 334,
          column: 21
        },
        end: {
          line: 334,
          column: 89
        }
      },
      "164": {
        start: {
          line: 335,
          column: 21
        },
        end: {
          line: 335,
          column: 157
        }
      },
      "165": {
        start: {
          line: 337,
          column: 23
        },
        end: {
          line: 337,
          column: 48
        }
      },
      "166": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 344,
          column: 5
        }
      },
      "167": {
        start: {
          line: 339,
          column: 25
        },
        end: {
          line: 339,
          column: 64
        }
      },
      "168": {
        start: {
          line: 340,
          column: 33
        },
        end: {
          line: 340,
          column: 66
        }
      },
      "169": {
        start: {
          line: 341,
          column: 28
        },
        end: {
          line: 341,
          column: 60
        }
      },
      "170": {
        start: {
          line: 342,
          column: 31
        },
        end: {
          line: 342,
          column: 75
        }
      },
      "171": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 62
        }
      },
      "172": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 354,
          column: 6
        }
      },
      "173": {
        start: {
          line: 357,
          column: 18
        },
        end: {
          line: 361,
          column: 5
        }
      },
      "174": {
        start: {
          line: 362,
          column: 4
        },
        end: {
          line: 362,
          column: 35
        }
      },
      "175": {
        start: {
          line: 365,
          column: 4
        },
        end: {
          line: 365,
          column: 39
        }
      },
      "176": {
        start: {
          line: 366,
          column: 24
        },
        end: {
          line: 371,
          column: 6
        }
      },
      "177": {
        start: {
          line: 372,
          column: 26
        },
        end: {
          line: 377,
          column: 6
        }
      },
      "178": {
        start: {
          line: 378,
          column: 23
        },
        end: {
          line: 383,
          column: 6
        }
      },
      "179": {
        start: {
          line: 384,
          column: 29
        },
        end: {
          line: 411,
          column: 6
        }
      },
      "180": {
        start: {
          line: 412,
          column: 23
        },
        end: {
          line: 412,
          column: 79
        }
      },
      "181": {
        start: {
          line: 413,
          column: 18
        },
        end: {
          line: 413,
          column: 28
        }
      },
      "182": {
        start: {
          line: 414,
          column: 32
        },
        end: {
          line: 414,
          column: 86
        }
      },
      "183": {
        start: {
          line: 415,
          column: 25
        },
        end: {
          line: 448,
          column: 6
        }
      },
      "184": {
        start: {
          line: 449,
          column: 31
        },
        end: {
          line: 449,
          column: 64
        }
      },
      "185": {
        start: {
          line: 450,
          column: 29
        },
        end: {
          line: 450,
          column: 60
        }
      },
      "186": {
        start: {
          line: 451,
          column: 37
        },
        end: {
          line: 451,
          column: 76
        }
      },
      "187": {
        start: {
          line: 452,
          column: 18
        },
        end: {
          line: 452,
          column: 26
        }
      },
      "188": {
        start: {
          line: 453,
          column: 25
        },
        end: {
          line: 455,
          column: 19
        }
      },
      "189": {
        start: {
          line: 456,
          column: 4
        },
        end: {
          line: 466,
          column: 6
        }
      },
      "190": {
        start: {
          line: 469,
          column: 19
        },
        end: {
          line: 522,
          column: 6
        }
      },
      "191": {
        start: {
          line: 523,
          column: 4
        },
        end: {
          line: 523,
          column: 18
        }
      },
      "192": {
        start: {
          line: 526,
          column: 19
        },
        end: {
          line: 577,
          column: 6
        }
      },
      "193": {
        start: {
          line: 578,
          column: 4
        },
        end: {
          line: 578,
          column: 18
        }
      },
      "194": {
        start: {
          line: 581,
          column: 19
        },
        end: {
          line: 609,
          column: 6
        }
      },
      "195": {
        start: {
          line: 610,
          column: 4
        },
        end: {
          line: 610,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 25
          }
        },
        loc: {
          start: {
            line: 13,
            column: 35
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 16,
            column: 31
          }
        },
        loc: {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 17
          },
          end: {
            line: 19,
            column: 18
          }
        },
        loc: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 25
          },
          end: {
            line: 22,
            column: 26
          }
        },
        loc: {
          start: {
            line: 22,
            column: 36
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 23
          },
          end: {
            line: 25,
            column: 24
          }
        },
        loc: {
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 17
          },
          end: {
            line: 28,
            column: 18
          }
        },
        loc: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 18
          },
          end: {
            line: 31,
            column: 19
          }
        },
        loc: {
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 18
          },
          end: {
            line: 34,
            column: 19
          }
        },
        loc: {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 17
          },
          end: {
            line: 37,
            column: 18
          }
        },
        loc: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 18
          },
          end: {
            line: 40,
            column: 19
          }
        },
        loc: {
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 43,
            column: 21
          },
          end: {
            line: 43,
            column: 22
          }
        },
        loc: {
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 24
          }
        },
        loc: {
          start: {
            line: 46,
            column: 34
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      },
      "13": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 63,
            column: 9
          },
          end: {
            line: 63,
            column: 33
          }
        },
        loc: {
          start: {
            line: 63,
            column: 39
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 63
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 68,
            column: 20
          },
          end: {
            line: 68,
            column: 21
          }
        },
        loc: {
          start: {
            line: 68,
            column: 44
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 68
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 88,
            column: 28
          },
          end: {
            line: 88,
            column: 29
          }
        },
        loc: {
          start: {
            line: 88,
            column: 60
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 88
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 99,
            column: 30
          },
          end: {
            line: 99,
            column: 31
          }
        },
        loc: {
          start: {
            line: 99,
            column: 39
          },
          end: {
            line: 102,
            column: 13
          }
        },
        line: 99
      },
      "17": {
        name: "updateOrderToPaid",
        decl: {
          start: {
            line: 115,
            column: 15
          },
          end: {
            line: 115,
            column: 32
          }
        },
        loc: {
          start: {
            line: 115,
            column: 42
          },
          end: {
            line: 165,
            column: 1
          }
        },
        line: 115
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 166,
            column: 27
          },
          end: {
            line: 166,
            column: 28
          }
        },
        loc: {
          start: {
            line: 166,
            column: 53
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 166
      },
      "19": {
        name: "deliverOrder",
        decl: {
          start: {
            line: 188,
            column: 15
          },
          end: {
            line: 188,
            column: 27
          }
        },
        loc: {
          start: {
            line: 188,
            column: 37
          },
          end: {
            line: 211,
            column: 1
          }
        },
        line: 188
      },
      "20": {
        name: "deleteOrder",
        decl: {
          start: {
            line: 212,
            column: 15
          },
          end: {
            line: 212,
            column: 26
          }
        },
        loc: {
          start: {
            line: 212,
            column: 31
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 212
      },
      "21": {
        name: "getAllOrders",
        decl: {
          start: {
            line: 229,
            column: 15
          },
          end: {
            line: 229,
            column: 27
          }
        },
        loc: {
          start: {
            line: 229,
            column: 45
          },
          end: {
            line: 242,
            column: 1
          }
        },
        line: 229
      },
      "22": {
        name: "getMyOrders",
        decl: {
          start: {
            line: 243,
            column: 15
          },
          end: {
            line: 243,
            column: 26
          }
        },
        loc: {
          start: {
            line: 243,
            column: 44
          },
          end: {
            line: 264,
            column: 1
          }
        },
        line: 243
      },
      "23": {
        name: "getOrderById",
        decl: {
          start: {
            line: 265,
            column: 15
          },
          end: {
            line: 265,
            column: 27
          }
        },
        loc: {
          start: {
            line: 265,
            column: 37
          },
          end: {
            line: 269,
            column: 1
          }
        },
        line: 265
      },
      "24": {
        name: "createPayPalOrder",
        decl: {
          start: {
            line: 270,
            column: 15
          },
          end: {
            line: 270,
            column: 32
          }
        },
        loc: {
          start: {
            line: 270,
            column: 42
          },
          end: {
            line: 297,
            column: 1
          }
        },
        line: 270
      },
      "25": {
        name: "approvePayPalOrder",
        decl: {
          start: {
            line: 298,
            column: 15
          },
          end: {
            line: 298,
            column: 33
          }
        },
        loc: {
          start: {
            line: 298,
            column: 49
          },
          end: {
            line: 328,
            column: 1
          }
        },
        line: 298
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 329,
            column: 33
          },
          end: {
            line: 329,
            column: 34
          }
        },
        loc: {
          start: {
            line: 329,
            column: 88
          },
          end: {
            line: 355,
            column: 1
          }
        },
        line: 329
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 331,
            column: 55
          },
          end: {
            line: 331,
            column: 56
          }
        },
        loc: {
          start: {
            line: 331,
            column: 68
          },
          end: {
            line: 331,
            column: 100
          }
        },
        line: 331
      },
      "28": {
        name: "getPointsValue",
        decl: {
          start: {
            line: 356,
            column: 9
          },
          end: {
            line: 356,
            column: 23
          }
        },
        loc: {
          start: {
            line: 356,
            column: 34
          },
          end: {
            line: 363,
            column: 1
          }
        },
        line: 356
      },
      "29": {
        name: "getOrderSummary",
        decl: {
          start: {
            line: 364,
            column: 15
          },
          end: {
            line: 364,
            column: 30
          }
        },
        loc: {
          start: {
            line: 364,
            column: 37
          },
          end: {
            line: 467,
            column: 1
          }
        },
        line: 364
      },
      "30": {
        name: "getSalesChartData",
        decl: {
          start: {
            line: 468,
            column: 15
          },
          end: {
            line: 468,
            column: 32
          }
        },
        loc: {
          start: {
            line: 468,
            column: 39
          },
          end: {
            line: 524,
            column: 1
          }
        },
        line: 468
      },
      "31": {
        name: "getTopSalesProducts",
        decl: {
          start: {
            line: 525,
            column: 15
          },
          end: {
            line: 525,
            column: 34
          }
        },
        loc: {
          start: {
            line: 525,
            column: 41
          },
          end: {
            line: 579,
            column: 1
          }
        },
        line: 525
      },
      "32": {
        name: "getTopSalesCategories",
        decl: {
          start: {
            line: 580,
            column: 15
          },
          end: {
            line: 580,
            column: 36
          }
        },
        loc: {
          start: {
            line: 580,
            column: 54
          },
          end: {
            line: 611,
            column: 1
          }
        },
        line: 580
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 64,
            column: 11
          },
          end: {
            line: 66,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 35
          },
          end: {
            line: 64,
            column: 38
          }
        }, {
          start: {
            line: 64,
            column: 41
          },
          end: {
            line: 66,
            column: 5
          }
        }],
        line: 64
      },
      "1": {
        loc: {
          start: {
            line: 64,
            column: 11
          },
          end: {
            line: 64,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 11
          },
          end: {
            line: 64,
            column: 14
          }
        }, {
          start: {
            line: 64,
            column: 18
          },
          end: {
            line: 64,
            column: 32
          }
        }],
        line: 64
      },
      "2": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 72,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 72,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "3": {
        loc: {
          start: {
            line: 101,
            column: 23
          },
          end: {
            line: 101,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 56
          },
          end: {
            line: 101,
            column: 81
          }
        }, {
          start: {
            line: 101,
            column: 84
          },
          end: {
            line: 101,
            column: 94
          }
        }],
        line: 101
      },
      "4": {
        loc: {
          start: {
            line: 101,
            column: 56
          },
          end: {
            line: 101,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 56
          },
          end: {
            line: 101,
            column: 72
          }
        }, {
          start: {
            line: 101,
            column: 76
          },
          end: {
            line: 101,
            column: 81
          }
        }],
        line: 101
      },
      "5": {
        loc: {
          start: {
            line: 110,
            column: 20
          },
          end: {
            line: 110,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 20
          },
          end: {
            line: 110,
            column: 35
          }
        }, {
          start: {
            line: 110,
            column: 39
          },
          end: {
            line: 110,
            column: 40
          }
        }],
        line: 110
      },
      "6": {
        loc: {
          start: {
            line: 111,
            column: 24
          },
          end: {
            line: 111,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 24
          },
          end: {
            line: 111,
            column: 43
          }
        }, {
          start: {
            line: 111,
            column: 47
          },
          end: {
            line: 111,
            column: 48
          }
        }],
        line: 111
      },
      "7": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 121,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 121,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "8": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 122,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 122,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "9": {
        loc: {
          start: {
            line: 131,
            column: 25
          },
          end: {
            line: 131,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 25
          },
          end: {
            line: 131,
            column: 41
          }
        }, {
          start: {
            line: 131,
            column: 45
          },
          end: {
            line: 131,
            column: 50
          }
        }],
        line: 131
      },
      "10": {
        loc: {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "11": {
        loc: {
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 137,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 16
          },
          end: {
            line: 137,
            column: 23
          }
        }, {
          start: {
            line: 137,
            column: 27
          },
          end: {
            line: 137,
            column: 43
          }
        }],
        line: 137
      },
      "12": {
        loc: {
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 143,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 143,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "13": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 146,
            column: 118
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 146,
            column: 118
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "14": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "15": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "16": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 179,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 179,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "17": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 192,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 192,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "18": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 193,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 193,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "19": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "20": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 216,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 216,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "21": {
        loc: {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 231,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 231,
            column: 17
          }
        }, {
          start: {
            line: 231,
            column: 21
          },
          end: {
            line: 231,
            column: 29
          }
        }],
        line: 231
      },
      "22": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 245,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 245,
            column: 17
          }
        }, {
          start: {
            line: 245,
            column: 21
          },
          end: {
            line: 245,
            column: 29
          }
        }],
        line: 245
      },
      "23": {
        loc: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "24": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: 288,
            column: 15
          },
          end: {
            line: 290,
            column: 9
          }
        }],
        line: 274
      },
      "25": {
        loc: {
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 302,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 302,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "26": {
        loc: {
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 304,
            column: 153
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 304,
            column: 153
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "27": {
        loc: {
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 304,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 304,
            column: 12
          },
          end: {
            line: 304,
            column: 24
          }
        }, {
          start: {
            line: 304,
            column: 28
          },
          end: {
            line: 304,
            column: 70
          }
        }, {
          start: {
            line: 304,
            column: 74
          },
          end: {
            line: 304,
            column: 108
          }
        }],
        line: 304
      },
      "28": {
        loc: {
          start: {
            line: 332,
            column: 48
          },
          end: {
            line: 332,
            column: 135
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 332,
            column: 82
          },
          end: {
            line: 332,
            column: 115
          }
        }, {
          start: {
            line: 332,
            column: 118
          },
          end: {
            line: 332,
            column: 135
          }
        }],
        line: 332
      },
      "29": {
        loc: {
          start: {
            line: 333,
            column: 26
          },
          end: {
            line: 333,
            column: 195
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 333,
            column: 62
          },
          end: {
            line: 333,
            column: 71
          }
        }, {
          start: {
            line: 333,
            column: 74
          },
          end: {
            line: 333,
            column: 195
          }
        }],
        line: 333
      },
      "30": {
        loc: {
          start: {
            line: 333,
            column: 26
          },
          end: {
            line: 333,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 26
          },
          end: {
            line: 333,
            column: 42
          }
        }, {
          start: {
            line: 333,
            column: 46
          },
          end: {
            line: 333,
            column: 59
          }
        }],
        line: 333
      },
      "31": {
        loc: {
          start: {
            line: 333,
            column: 74
          },
          end: {
            line: 333,
            column: 195
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 333,
            column: 165
          },
          end: {
            line: 333,
            column: 166
          }
        }, {
          start: {
            line: 333,
            column: 169
          },
          end: {
            line: 333,
            column: 195
          }
        }],
        line: 333
      },
      "32": {
        loc: {
          start: {
            line: 333,
            column: 74
          },
          end: {
            line: 333,
            column: 162
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 333,
            column: 74
          },
          end: {
            line: 333,
            column: 111
          }
        }, {
          start: {
            line: 333,
            column: 115
          },
          end: {
            line: 333,
            column: 162
          }
        }],
        line: 333
      },
      "33": {
        loc: {
          start: {
            line: 334,
            column: 21
          },
          end: {
            line: 334,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 334,
            column: 40
          },
          end: {
            line: 334,
            column: 49
          }
        }, {
          start: {
            line: 334,
            column: 52
          },
          end: {
            line: 334,
            column: 89
          }
        }],
        line: 334
      },
      "34": {
        loc: {
          start: {
            line: 335,
            column: 54
          },
          end: {
            line: 335,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 335,
            column: 70
          },
          end: {
            line: 335,
            column: 103
          }
        }, {
          start: {
            line: 335,
            column: 106
          },
          end: {
            line: 335,
            column: 107
          }
        }],
        line: 335
      },
      "35": {
        loc: {
          start: {
            line: 335,
            column: 112
          },
          end: {
            line: 335,
            column: 155
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 335,
            column: 123
          },
          end: {
            line: 335,
            column: 151
          }
        }, {
          start: {
            line: 335,
            column: 154
          },
          end: {
            line: 335,
            column: 155
          }
        }],
        line: 335
      },
      "36": {
        loc: {
          start: {
            line: 337,
            column: 23
          },
          end: {
            line: 337,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 23
          },
          end: {
            line: 337,
            column: 43
          }
        }, {
          start: {
            line: 337,
            column: 47
          },
          end: {
            line: 337,
            column: 48
          }
        }],
        line: 337
      },
      "37": {
        loc: {
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 344,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "38": {
        loc: {
          start: {
            line: 340,
            column: 33
          },
          end: {
            line: 340,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 340,
            column: 33
          },
          end: {
            line: 340,
            column: 57
          }
        }, {
          start: {
            line: 340,
            column: 61
          },
          end: {
            line: 340,
            column: 66
          }
        }],
        line: 340
      },
      "39": {
        loc: {
          start: {
            line: 347,
            column: 27
          },
          end: {
            line: 347,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 347,
            column: 61
          },
          end: {
            line: 347,
            column: 94
          }
        }, {
          start: {
            line: 347,
            column: 97
          },
          end: {
            line: 347,
            column: 114
          }
        }],
        line: 347
      },
      "40": {
        loc: {
          start: {
            line: 353,
            column: 24
          },
          end: {
            line: 353,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 353,
            column: 41
          },
          end: {
            line: 353,
            column: 105
          }
        }, {
          start: {
            line: 353,
            column: 108
          },
          end: {
            line: 353,
            column: 109
          }
        }],
        line: 353
      },
      "41": {
        loc: {
          start: {
            line: 362,
            column: 11
          },
          end: {
            line: 362,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 362,
            column: 11
          },
          end: {
            line: 362,
            column: 26
          }
        }, {
          start: {
            line: 362,
            column: 30
          },
          end: {
            line: 362,
            column: 34
          }
        }],
        line: 362
      },
      "42": {
        loc: {
          start: {
            line: 412,
            column: 23
          },
          end: {
            line: 412,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 412,
            column: 45
          },
          end: {
            line: 412,
            column: 75
          }
        }, {
          start: {
            line: 412,
            column: 78
          },
          end: {
            line: 412,
            column: 79
          }
        }],
        line: 412
      },
      "43": {
        loc: {
          start: {
            line: 580,
            column: 43
          },
          end: {
            line: 580,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 580,
            column: 51
          },
          end: {
            line: 580,
            column: 52
          }
        }],
        line: 580
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/order.actions.ts"],
      sourcesContent: ["'use server'\n\nimport { Cart, IOrderList, OrderItem, ShippingAddress } from '@/types'\nimport { formatError, round2 } from '../utils'\nimport { connectToDatabase } from '../db'\nimport { auth } from '@/auth'\nimport { OrderInputSchema } from '../validator'\nimport Order, { IOrder } from '../db/models/order.model'\nimport { revalidatePath } from 'next/cache'\nimport { sendAskReviewOrderItems, sendPurchaseReceipt } from '@/emails'\nimport { paypal } from '../paypal'\nimport { DateRange } from 'react-day-picker'\nimport Product from '../db/models/product.model'\nimport User from '../db/models/user.model'\nimport mongoose from 'mongoose'\nimport { getSetting } from './setting.actions'\nimport { awardPoints, redeemPoints } from './points.actions'\n\n// CREATE\nexport const createOrder = async (clientSideCart: Cart) => {\n  try {\n    await connectToDatabase()\n    const session = await auth()\n    if (!session) throw new Error('User not authenticated')\n    const createdOrder = await createOrderFromCart(\n      clientSideCart,\n      session.user.id!\n    )\n    return {\n      success: true,\n      message: 'Order placed successfully',\n      data: { orderId: createdOrder._id.toString() },\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\n\nexport const createOrderFromCart = async (\n  clientSideCart: Cart,\n  userId: string\n) => {\n  const cart = {\n    ...clientSideCart,\n    ...calcDeliveryDateAndPrice({\n      items: clientSideCart.items,\n      shippingAddress: clientSideCart.shippingAddress,\n      deliveryDateIndex: clientSideCart.deliveryDateIndex,\n    }),\n  }\n\n  const order = OrderInputSchema.parse({\n    user: userId,\n    items: cart.items.map((item) => ({\n      ...item,\n      color: typeof item.color === 'object' ? item.color?.name || 'N/A' : item.color,\n    })),\n    shippingAddress: cart.shippingAddress,\n    paymentMethod: cart.paymentMethod,\n    itemsPrice: cart.itemsPrice,\n    shippingPrice: cart.shippingPrice,\n    taxPrice: cart.taxPrice,\n    totalPrice: cart.totalPrice,\n    expectedDeliveryDate: cart.expectedDeliveryDate,\n    pointsUsed: cart.pointsUsed || 0, // Points used for discount\n    pointsDiscount: cart.pointsDiscount || 0, // Discount from points\n  })\n  return await Order.create(order)\n}\n\nexport async function updateOrderToPaid(orderId: string) {\n  const session = await mongoose.connection.startSession()\n  session.startTransaction()\n  try {\n    await connectToDatabase()\n    const order = await Order.findById(orderId).populate<{\n      user: { email: string; name: string }\n    }>('user', 'name email').session(session)\n    if (!order) throw new Error('Order not found')\n    if (order.isPaid) throw new Error('Order is already paid')\n    order.isPaid = true\n    order.paidAt = new Date()\n    await order.save({ session })\n\n    // Award points to buyer\n    const settings = await getSetting();\n    const defaultCurrency = settings.defaultCurrency;\n    const currency = defaultCurrency || 'USD';\n    const points = Math.floor(order.totalPrice); // 1 point per $1\n    await awardPoints(order.user._id.toString(), points, `Purchase on order ${orderId}`, orderId);\n\n    // Award points to seller\n    for (const item of order.items) {\n      const product = await Product.findById(item.product).session(session);\n      if (product && product.sellerId) {\n        const seller = await User.findOne({ businessProfile: product.sellerId }).session(session);\n        if (seller) {\n          await awardPoints(seller._id.toString(), 10, `Sale of ${item.name} on order ${orderId}`, orderId);\n        }\n      }\n    }\n\n    if (!process.env.MONGODB_URI?.startsWith('mongodb://localhost'))\n      await updateProductStock(order._id, session)\n    if (order.user.email) await sendPurchaseReceipt({ order })\n    await session.commitTransaction()\n    revalidatePath(`/account/orders/${orderId}`)\n    return { success: true, message: 'Order paid successfully' }\n  } catch (err) {\n    await session.abortTransaction()\n    return { success: false, message: formatError(err) }\n  } finally {\n    session.endSession()\n  }\n}\n\nconst updateProductStock = async (orderId: string, session: mongoose.ClientSession) => {\n  const opts = { session }\n  const order = await Order.findOneAndUpdate(\n    { _id: orderId },\n    { isPaid: true, paidAt: new Date() },\n    opts\n  )\n  if (!order) throw new Error('Order not found')\n  for (const item of order.items) {\n    const product = await Product.findById(item.product).session(session)\n    if (!product) throw new Error('Product not found')\n    product.countInStock -= item.quantity\n    await Product.updateOne(\n      { _id: product._id },\n      { countInStock: product.countInStock },\n      opts\n    )\n  }\n}\n\nexport async function deliverOrder(orderId: string) {\n  try {\n    await connectToDatabase()\n    const order = await Order.findById(orderId).populate<{\n      user: { email: string; name: string }\n    }>('user', 'name email')\n    if (!order) throw new Error('Order not found')\n    if (!order.isPaid) throw new Error('Order is not paid')\n    order.isDelivered = true\n    order.deliveredAt = new Date()\n    await order.save()\n    if (order.user.email) await sendAskReviewOrderItems({ order })\n    revalidatePath(`/account/orders/${orderId}`)\n    return { success: true, message: 'Order delivered successfully' }\n  } catch (err) {\n    return { success: false, message: formatError(err) }\n  }\n}\n\n// DELETE\nexport async function deleteOrder(id: string) {\n  try {\n    await connectToDatabase()\n    const res = await Order.findByIdAndDelete(id)\n    if (!res) throw new Error('Order not found')\n    revalidatePath('/admin/orders')\n    return {\n      success: true,\n      message: 'Order deleted successfully',\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\n\n// GET ALL ORDERS\nexport async function getAllOrders({\n  limit,\n  page,\n}: {\n  limit?: number\n  page: number\n}) {\n  const {\n    common: { pageSize },\n  } = await getSetting()\n  limit = limit || pageSize\n  await connectToDatabase()\n  const skipAmount = (Number(page) - 1) * limit\n  const orders = await Order.find()\n    .populate('user', 'name')\n    .sort({ createdAt: 'desc' })\n    .skip(skipAmount)\n    .limit(limit)\n  const ordersCount = await Order.countDocuments()\n  return {\n    data: JSON.parse(JSON.stringify(orders)) as IOrderList[],\n    totalPages: Math.ceil(ordersCount / limit),\n  }\n}\n\nexport async function getMyOrders({\n  limit,\n  page,\n}: {\n  limit?: number\n  page: number\n}) {\n  const {\n    common: { pageSize },\n  } = await getSetting()\n  limit = limit || pageSize\n  await connectToDatabase()\n  const session = await auth()\n  if (!session) {\n    throw new Error('User is not authenticated')\n  }\n  const skipAmount = (Number(page) - 1) * limit\n  const orders = await Order.find({\n    user: session?.user?.id,\n  })\n    .sort({ createdAt: 'desc' })\n    .skip(skipAmount)\n    .limit(limit)\n  const ordersCount = await Order.countDocuments({ user: session?.user?.id })\n  return {\n    data: JSON.parse(JSON.stringify(orders)),\n    totalPages: Math.ceil(ordersCount / limit),\n  }\n}\n\nexport async function getOrderById(orderId: string): Promise<IOrder> {\n  await connectToDatabase()\n  const order = await Order.findById(orderId)\n  return JSON.parse(JSON.stringify(order))\n}\n\nexport async function createPayPalOrder(orderId: string) {\n  await connectToDatabase()\n  try {\n    const order = await Order.findById(orderId)\n    if (order) {\n      const paypalOrder = await paypal.createOrder(order.totalPrice)\n      order.paymentResult = {\n        id: paypalOrder.id,\n        email_address: '',\n        status: '',\n        pricePaid: '0',\n      }\n      await order.save()\n      return {\n        success: true,\n        message: 'PayPal order created successfully',\n        data: paypalOrder.id,\n      }\n    } else {\n      throw new Error('Order not found')\n    }\n  } catch (err) {\n    return { success: false, message: formatError(err) }\n  }\n}\n\nexport async function approvePayPalOrder(\n  orderId: string,\n  data: { orderID: string }\n) {\n  await connectToDatabase()\n  try {\n    const order = await Order.findById(orderId).populate('user', 'email')\n    if (!order) throw new Error('Order not found')\n    const captureData = await paypal.capturePayment(data.orderID)\n    if (\n      !captureData ||\n      captureData.id !== order.paymentResult?.id ||\n      captureData.status !== 'COMPLETED'\n    )\n      throw new Error('Error in paypal payment')\n    order.isPaid = true\n    order.paidAt = new Date()\n    order.paymentResult = {\n      id: captureData.id,\n      status: captureData.status,\n      email_address: captureData.payer.email_address,\n      pricePaid:\n        captureData.purchase_units[0]?.payments?.captures[0]?.amount?.value,\n    }\n    await order.save()\n    await sendPurchaseReceipt({ order })\n    revalidatePath(`/account/orders/${orderId}`)\n    return {\n      success: true,\n      message: 'Your order has been successfully paid by PayPal',\n    }\n  } catch (err) {\n    return { success: false, message: formatError(err) }\n  }\n}\n\nexport const calcDeliveryDateAndPrice = async ({\n  items,\n  shippingAddress,\n  deliveryDateIndex,\n}: {\n  deliveryDateIndex?: number\n  items: OrderItem[]\n  shippingAddress?: ShippingAddress\n}) => {\n  const { availableDeliveryDates } = await getSetting()\n  const itemsPrice = round2(\n    items.reduce((acc, item) => acc + item.price * item.quantity, 0)\n  )\n  const deliveryDate =\n    availableDeliveryDates[\n      deliveryDateIndex === undefined\n        ? availableDeliveryDates.length - 1\n        : deliveryDateIndex\n    ]\n  const shippingPrice =\n    !shippingAddress || !deliveryDate\n      ? undefined\n      : deliveryDate.freeShippingMinPrice > 0 &&\n        itemsPrice >= deliveryDate.freeShippingMinPrice\n      ? 0\n      : deliveryDate.shippingPrice\n  const taxPrice = !shippingAddress ? undefined : round2(itemsPrice * 0.15)\n  let totalPrice = round2(\n    itemsPrice +\n      (shippingPrice ? round2(shippingPrice) : 0) +\n      (taxPrice ? round2(taxPrice) : 0)\n  )\n\n  // Apply points discount if any\n  const pointsUsed = items[0]?.pointsUsed || 0;\n  if (pointsUsed > 0) {\n    const settings = await getSetting();\n    const defaultCurrency = settings.defaultCurrency || 'USD';\n    const pointsValue = getPointsValue(defaultCurrency);\n    const pointsDiscount = round2(pointsUsed * pointsValue);\n    totalPrice = Math.max(0, totalPrice - pointsDiscount);\n  }\n\n  return {\n    availableDeliveryDates,\n    deliveryDateIndex:\n      deliveryDateIndex === undefined\n        ? availableDeliveryDates.length - 1\n        : deliveryDateIndex,\n    itemsPrice,\n    shippingPrice,\n    taxPrice,\n    totalPrice,\n    pointsUsed,\n    pointsDiscount: pointsUsed > 0 ? round2(pointsUsed * getPointsValue(defaultCurrency)) : 0,\n  }\n}\n\nfunction getPointsValue(currency: string): number {\n  const rates = {\n    USD: 0.05,\n    EUR: 0.045,\n    EGP: 1,\n  };\n  return rates[currency] || 0.05; // Default to USD\n}\n\n// GET ORDERS BY USER\nexport async function getOrderSummary(date: DateRange) {\n  await connectToDatabase()\n  const ordersCount = await Order.countDocuments({\n    createdAt: {\n      $gte: date.from,\n      $lte: date.to,\n    },\n  })\n  const productsCount = await Product.countDocuments({\n    createdAt: {\n      $gte: date.from,\n      $lte: date.to,\n    },\n  })\n  const usersCount = await User.countDocuments({\n    createdAt: {\n      $gte: date.from,\n      $lte: date.to,\n    },\n  })\n  const totalSalesResult = await Order.aggregate([\n    {\n      $match: {\n        createdAt: {\n          $gte: date.from,\n          $lte: date.to,\n        },\n      },\n    },\n    {\n      $group: {\n        _id: null,\n        sales: { $sum: '$totalPrice' },\n      },\n    },\n    { $project: { totalSales: { $ifNull: ['$sales', 0] } } },\n  ])\n  const totalSales = totalSalesResult[0] ? totalSalesResult[0].totalSales : 0\n  const today = new Date()\n  const sixMonthEarlierDate = new Date(\n    today.getFullYear(),\n    today.getMonth() - 5,\n    1\n  )\n  const monthlySales = await Order.aggregate([\n    {\n      $match: {\n        createdAt: {\n          $gte: sixMonthEarlierDate,\n        },\n      },\n    },\n    {\n      $group: {\n        _id: { $dateToString: { format: '%Y-%m', date: '$createdAt' } },\n        totalSales: { $sum: '$totalPrice' },\n      },\n    },\n    {\n      $project: {\n        _id: 0,\n        label: '$_id',\n        value: '$totalSales',\n      },\n    },\n    { $sort: { label: -1 } },\n  ])\n  const topSalesCategories = await getTopSalesCategories(date)\n  const topSalesProducts = await getTopSalesProducts(date)\n  const {\n    common: { pageSize },\n  } = await getSetting()\n  const limit = pageSize\n  const latestOrders = await Order.find()\n    .populate('user', 'name')\n    .sort({ createdAt: 'desc' })\n    .limit(limit)\n  return {\n    ordersCount,\n    productsCount,\n    usersCount,\n    totalSales,\n    monthlySales: JSON.parse(JSON.stringify(monthlySales)),\n    salesChartData: JSON.parse(JSON.stringify(await getSalesChartData(date))),\n    topSalesCategories: JSON.parse(JSON.stringify(topSalesCategories)),\n    topSalesProducts: JSON.parse(JSON.stringify(topSalesProducts)),\n    latestOrders: JSON.parse(JSON.stringify(latestOrders)) as IOrderList[],\n  }\n}\n\nasync function getSalesChartData(date: DateRange) {\n  const result = await Order.aggregate([\n    {\n      $match: {\n        createdAt: {\n          $gte: date.from,\n          $lte: date.to,\n        },\n      },\n    },\n    {\n      $group: {\n        _id: {\n          year: { $year: '$createdAt' },\n          month: { $month: '$createdAt' },\n          day: { $dayOfMonth: '$createdAt' },\n        },\n        totalSales: { $sum: '$totalPrice' },\n      },\n    },\n    {\n      $project: {\n        _id: 0,\n        date: {\n          $concat: [\n            { $toString: '$_id.year' },\n            '/',\n            { $toString: '$_id.month' },\n            '/',\n            { $toString: '$_id.day' },\n          ],\n        },\n        totalSales: 1,\n      },\n    },\n    { $sort: { date: 1 } },\n  ])\n  return result\n}\n\nasync function getTopSalesProducts(date: DateRange) {\n  const result = await Order.aggregate([\n    {\n      $match: {\n        createdAt: {\n          $gte: date.from,\n          $lte: date.to,\n        },\n      },\n    },\n    { $unwind: '$items' },\n    {\n      $group: {\n        _id: {\n          name: '$items.name',\n          image: '$items.image',\n          _id: '$items.product',\n        },\n        totalSales: {\n          $sum: { $multiply: ['$items.quantity', '$items.price'] },\n        },\n      },\n    },\n    {\n      $sort: {\n        totalSales: -1,\n      },\n    },\n    { $limit: 6 },\n    {\n      $project: {\n        _id: 0,\n        id: '$_id._id',\n        label: '$_id.name',\n        image: '$_id.image',\n        value: '$totalSales',\n      },\n    },\n    { $sort: { _id: 1 } },\n  ])\n  return result\n}\n\nasync function getTopSalesCategories(date: DateRange, limit = 5) {\n  const result = await Order.aggregate([\n    {\n      $match: {\n        createdAt: {\n          $gte: date.from,\n          $lte: date.to,\n        },\n      },\n    },\n    { $unwind: '$items' },\n    {\n      $group: {\n        _id: '$items.category',\n        totalSales: { $sum: '$items.quantity' },\n      },\n    },\n    { $sort: { totalSales: -1 } },\n    { $limit: limit },\n  ])\n  return result\n}"],
      names: ["approvePayPalOrder", "calcDeliveryDateAndPrice", "createOrder", "createOrderFromCart", "createPayPalOrder", "deleteOrder", "deliverOrder", "getAllOrders", "getMyOrders", "getOrderById", "getOrderSummary", "updateOrderToPaid", "clientSideCart", "connectToDatabase", "session", "auth", "Error", "createdOrder", "user", "id", "success", "message", "data", "orderId", "_id", "toString", "error", "formatError", "userId", "cart", "items", "shippingAddress", "deliveryDateIndex", "order", "OrderInputSchema", "parse", "map", "item", "color", "name", "paymentMethod", "itemsPrice", "shippingPrice", "taxPrice", "totalPrice", "expectedDeliveryDate", "pointsUsed", "pointsDiscount", "Order", "create", "mongoose", "connection", "startSession", "startTransaction", "findById", "populate", "isPaid", "paidAt", "Date", "save", "settings", "getSetting", "defaultCurrency", "currency", "points", "Math", "floor", "awardPoints", "product", "Product", "sellerId", "seller", "User", "findOne", "businessProfile", "process", "env", "MONGODB_URI", "startsWith", "updateProductStock", "email", "sendPurchaseReceipt", "commitTransaction", "revalidatePath", "err", "abortTransaction", "endSession", "opts", "findOneAndUpdate", "countInStock", "quantity", "updateOne", "isDelivered", "deliveredAt", "sendAskReviewOrderItems", "res", "findByIdAndDelete", "limit", "page", "common", "pageSize", "skipAmount", "Number", "orders", "find", "sort", "createdAt", "skip", "ordersCount", "countDocuments", "JSON", "stringify", "totalPages", "ceil", "paypalOrder", "paypal", "paymentResult", "email_address", "status", "pricePaid", "captureData", "capturePayment", "orderID", "payer", "purchase_units", "payments", "captures", "amount", "value", "availableDeliveryDates", "round2", "reduce", "acc", "price", "deliveryDate", "undefined", "length", "freeShippingMinPrice", "pointsValue", "getPointsValue", "max", "rates", "USD", "EUR", "EGP", "date", "$gte", "from", "$lte", "to", "productsCount", "usersCount", "totalSalesResult", "aggregate", "$match", "$group", "sales", "$sum", "$project", "totalSales", "$ifNull", "today", "sixMonthEarlierDate", "getFullYear", "getMonth", "monthlySales", "$dateToString", "format", "label", "$sort", "topSalesCategories", "getTopSalesCategories", "topSalesProducts", "getTopSalesProducts", "latestOrders", "salesChartData", "getSalesChartData", "result", "year", "$year", "month", "$month", "day", "$dayOfMonth", "$concat", "$toString", "$unwind", "image", "$multiply", "$limit"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3a4b05b5d279b6c351ae09a900de1b4660d4a11c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qxwhxjheh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qxwhxjheh();
cov_qxwhxjheh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[0]++;
  cov_qxwhxjheh().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_qxwhxjheh().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_qxwhxjheh().s[3]++;
_export(exports, {
  approvePayPalOrder: function () {
    /* istanbul ignore next */
    cov_qxwhxjheh().f[1]++;
    cov_qxwhxjheh().s[4]++;
    return approvePayPalOrder;
  },
  calcDeliveryDateAndPrice: function () {
    /* istanbul ignore next */
    cov_qxwhxjheh().f[2]++;
    cov_qxwhxjheh().s[5]++;
    return calcDeliveryDateAndPrice;
  },
  createOrder: function () {
    /* istanbul ignore next */
    cov_qxwhxjheh().f[3]++;
    cov_qxwhxjheh().s[6]++;
    return createOrder;
  },
  createOrderFromCart: function () {
    /* istanbul ignore next */
    cov_qxwhxjheh().f[4]++;
    cov_qxwhxjheh().s[7]++;
    return createOrderFromCart;
  },
  createPayPalOrder: function () {
    /* istanbul ignore next */
    cov_qxwhxjheh().f[5]++;
    cov_qxwhxjheh().s[8]++;
    return createPayPalOrder;
  },
  deleteOrder: function () {
    /* istanbul ignore next */
    cov_qxwhxjheh().f[6]++;
    cov_qxwhxjheh().s[9]++;
    return deleteOrder;
  },
  deliverOrder: function () {
    /* istanbul ignore next */
    cov_qxwhxjheh().f[7]++;
    cov_qxwhxjheh().s[10]++;
    return deliverOrder;
  },
  getAllOrders: function () {
    /* istanbul ignore next */
    cov_qxwhxjheh().f[8]++;
    cov_qxwhxjheh().s[11]++;
    return getAllOrders;
  },
  getMyOrders: function () {
    /* istanbul ignore next */
    cov_qxwhxjheh().f[9]++;
    cov_qxwhxjheh().s[12]++;
    return getMyOrders;
  },
  getOrderById: function () {
    /* istanbul ignore next */
    cov_qxwhxjheh().f[10]++;
    cov_qxwhxjheh().s[13]++;
    return getOrderById;
  },
  getOrderSummary: function () {
    /* istanbul ignore next */
    cov_qxwhxjheh().f[11]++;
    cov_qxwhxjheh().s[14]++;
    return getOrderSummary;
  },
  updateOrderToPaid: function () {
    /* istanbul ignore next */
    cov_qxwhxjheh().f[12]++;
    cov_qxwhxjheh().s[15]++;
    return updateOrderToPaid;
  }
});
const _utils =
/* istanbul ignore next */
(cov_qxwhxjheh().s[16]++, require("../utils"));
const _db =
/* istanbul ignore next */
(cov_qxwhxjheh().s[17]++, require("../db"));
const _auth =
/* istanbul ignore next */
(cov_qxwhxjheh().s[18]++, require("../../auth"));
const _validator =
/* istanbul ignore next */
(cov_qxwhxjheh().s[19]++, require("../validator"));
const _ordermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_qxwhxjheh().s[20]++, _interop_require_default(require("../db/models/order.model")));
const _cache =
/* istanbul ignore next */
(cov_qxwhxjheh().s[21]++, require("next/cache"));
const _emails =
/* istanbul ignore next */
(cov_qxwhxjheh().s[22]++, require("../../emails"));
const _paypal =
/* istanbul ignore next */
(cov_qxwhxjheh().s[23]++, require("../paypal"));
const _productmodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_qxwhxjheh().s[24]++, _interop_require_default(require("../db/models/product.model")));
const _usermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_qxwhxjheh().s[25]++, _interop_require_default(require("../db/models/user.model")));
const _mongoose =
/* istanbul ignore next */
(/*#__PURE__*/cov_qxwhxjheh().s[26]++, _interop_require_default(require("mongoose")));
const _settingactions =
/* istanbul ignore next */
(cov_qxwhxjheh().s[27]++, require("./setting.actions"));
const _pointsactions =
/* istanbul ignore next */
(cov_qxwhxjheh().s[28]++, require("./points.actions"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[13]++;
  cov_qxwhxjheh().s[29]++;
  return /* istanbul ignore next */(cov_qxwhxjheh().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[0][1]++, {
    default: obj
  });
}
/* istanbul ignore next */
cov_qxwhxjheh().s[30]++;
const createOrder = async clientSideCart => {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[14]++;
  cov_qxwhxjheh().s[31]++;
  try {
    /* istanbul ignore next */
    cov_qxwhxjheh().s[32]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[33]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_qxwhxjheh().s[34]++;
    if (!session) {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[2][0]++;
      cov_qxwhxjheh().s[35]++;
      throw new Error('User not authenticated');
    } else
    /* istanbul ignore next */
    {
      cov_qxwhxjheh().b[2][1]++;
    }
    const createdOrder =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[36]++, await createOrderFromCart(clientSideCart, session.user.id));
    /* istanbul ignore next */
    cov_qxwhxjheh().s[37]++;
    return {
      success: true,
      message: 'Order placed successfully',
      data: {
        orderId: createdOrder._id.toString()
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_qxwhxjheh().s[38]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  }
};
/* istanbul ignore next */
cov_qxwhxjheh().s[39]++;
const createOrderFromCart = async (clientSideCart, userId) => {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[15]++;
  const cart =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[40]++, {
    ...clientSideCart,
    ...calcDeliveryDateAndPrice({
      items: clientSideCart.items,
      shippingAddress: clientSideCart.shippingAddress,
      deliveryDateIndex: clientSideCart.deliveryDateIndex
    })
  });
  const order =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[41]++, _validator.OrderInputSchema.parse({
    user: userId,
    items: cart.items.map(item => {
      /* istanbul ignore next */
      cov_qxwhxjheh().f[16]++;
      cov_qxwhxjheh().s[42]++;
      return {
        ...item,
        color: typeof item.color === 'object' ?
        /* istanbul ignore next */
        (cov_qxwhxjheh().b[3][0]++,
        /* istanbul ignore next */
        (cov_qxwhxjheh().b[4][0]++, item.color?.name) ||
        /* istanbul ignore next */
        (cov_qxwhxjheh().b[4][1]++, 'N/A')) :
        /* istanbul ignore next */
        (cov_qxwhxjheh().b[3][1]++, item.color)
      };
    }),
    shippingAddress: cart.shippingAddress,
    paymentMethod: cart.paymentMethod,
    itemsPrice: cart.itemsPrice,
    shippingPrice: cart.shippingPrice,
    taxPrice: cart.taxPrice,
    totalPrice: cart.totalPrice,
    expectedDeliveryDate: cart.expectedDeliveryDate,
    pointsUsed:
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[5][0]++, cart.pointsUsed) ||
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[5][1]++, 0),
    pointsDiscount:
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[6][0]++, cart.pointsDiscount) ||
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[6][1]++, 0)
  }));
  /* istanbul ignore next */
  cov_qxwhxjheh().s[43]++;
  return await _ordermodel.default.create(order);
};
async function updateOrderToPaid(orderId) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[17]++;
  const session =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[44]++, await _mongoose.default.connection.startSession());
  /* istanbul ignore next */
  cov_qxwhxjheh().s[45]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_qxwhxjheh().s[46]++;
  try {
    /* istanbul ignore next */
    cov_qxwhxjheh().s[47]++;
    await (0, _db.connectToDatabase)();
    const order =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[48]++, await _ordermodel.default.findById(orderId).populate('user', 'name email').session(session));
    /* istanbul ignore next */
    cov_qxwhxjheh().s[49]++;
    if (!order) {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[7][0]++;
      cov_qxwhxjheh().s[50]++;
      throw new Error('Order not found');
    } else
    /* istanbul ignore next */
    {
      cov_qxwhxjheh().b[7][1]++;
    }
    cov_qxwhxjheh().s[51]++;
    if (order.isPaid) {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[8][0]++;
      cov_qxwhxjheh().s[52]++;
      throw new Error('Order is already paid');
    } else
    /* istanbul ignore next */
    {
      cov_qxwhxjheh().b[8][1]++;
    }
    cov_qxwhxjheh().s[53]++;
    order.isPaid = true;
    /* istanbul ignore next */
    cov_qxwhxjheh().s[54]++;
    order.paidAt = new Date();
    /* istanbul ignore next */
    cov_qxwhxjheh().s[55]++;
    await order.save({
      session
    });
    // Award points to buyer
    const settings =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[56]++, await (0, _settingactions.getSetting)());
    const defaultCurrency1 =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[57]++, settings.defaultCurrency);
    const currency =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[58]++,
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[9][0]++, defaultCurrency1) ||
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[9][1]++, 'USD'));
    const points =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[59]++, Math.floor(order.totalPrice)); // 1 point per $1
    /* istanbul ignore next */
    cov_qxwhxjheh().s[60]++;
    await (0, _pointsactions.awardPoints)(order.user._id.toString(), points, `Purchase on order ${orderId}`, orderId);
    // Award points to seller
    /* istanbul ignore next */
    cov_qxwhxjheh().s[61]++;
    for (const item of order.items) {
      const product =
      /* istanbul ignore next */
      (cov_qxwhxjheh().s[62]++, await _productmodel.default.findById(item.product).session(session));
      /* istanbul ignore next */
      cov_qxwhxjheh().s[63]++;
      if (
      /* istanbul ignore next */
      (cov_qxwhxjheh().b[11][0]++, product) &&
      /* istanbul ignore next */
      (cov_qxwhxjheh().b[11][1]++, product.sellerId)) {
        /* istanbul ignore next */
        cov_qxwhxjheh().b[10][0]++;
        const seller =
        /* istanbul ignore next */
        (cov_qxwhxjheh().s[64]++, await _usermodel.default.findOne({
          businessProfile: product.sellerId
        }).session(session));
        /* istanbul ignore next */
        cov_qxwhxjheh().s[65]++;
        if (seller) {
          /* istanbul ignore next */
          cov_qxwhxjheh().b[12][0]++;
          cov_qxwhxjheh().s[66]++;
          await (0, _pointsactions.awardPoints)(seller._id.toString(), 10, `Sale of ${item.name} on order ${orderId}`, orderId);
        } else
        /* istanbul ignore next */
        {
          cov_qxwhxjheh().b[12][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_qxwhxjheh().b[10][1]++;
      }
    }
    /* istanbul ignore next */
    cov_qxwhxjheh().s[67]++;
    if (!process.env.MONGODB_URI?.startsWith('mongodb://localhost')) {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[13][0]++;
      cov_qxwhxjheh().s[68]++;
      await updateProductStock(order._id, session);
    } else
    /* istanbul ignore next */
    {
      cov_qxwhxjheh().b[13][1]++;
    }
    cov_qxwhxjheh().s[69]++;
    if (order.user.email) {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[14][0]++;
      cov_qxwhxjheh().s[70]++;
      await (0, _emails.sendPurchaseReceipt)({
        order
      });
    } else
    /* istanbul ignore next */
    {
      cov_qxwhxjheh().b[14][1]++;
    }
    cov_qxwhxjheh().s[71]++;
    await session.commitTransaction();
    /* istanbul ignore next */
    cov_qxwhxjheh().s[72]++;
    (0, _cache.revalidatePath)(`/account/orders/${orderId}`);
    /* istanbul ignore next */
    cov_qxwhxjheh().s[73]++;
    return {
      success: true,
      message: 'Order paid successfully'
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_qxwhxjheh().s[74]++;
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_qxwhxjheh().s[75]++;
    return {
      success: false,
      message: (0, _utils.formatError)(err)
    };
  } finally {
    /* istanbul ignore next */
    cov_qxwhxjheh().s[76]++;
    session.endSession();
  }
}
/* istanbul ignore next */
cov_qxwhxjheh().s[77]++;
const updateProductStock = async (orderId, session) => {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[18]++;
  const opts =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[78]++, {
    session
  });
  const order =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[79]++, await _ordermodel.default.findOneAndUpdate({
    _id: orderId
  }, {
    isPaid: true,
    paidAt: new Date()
  }, opts));
  /* istanbul ignore next */
  cov_qxwhxjheh().s[80]++;
  if (!order) {
    /* istanbul ignore next */
    cov_qxwhxjheh().b[15][0]++;
    cov_qxwhxjheh().s[81]++;
    throw new Error('Order not found');
  } else
  /* istanbul ignore next */
  {
    cov_qxwhxjheh().b[15][1]++;
  }
  cov_qxwhxjheh().s[82]++;
  for (const item of order.items) {
    const product =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[83]++, await _productmodel.default.findById(item.product).session(session));
    /* istanbul ignore next */
    cov_qxwhxjheh().s[84]++;
    if (!product) {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[16][0]++;
      cov_qxwhxjheh().s[85]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_qxwhxjheh().b[16][1]++;
    }
    cov_qxwhxjheh().s[86]++;
    product.countInStock -= item.quantity;
    /* istanbul ignore next */
    cov_qxwhxjheh().s[87]++;
    await _productmodel.default.updateOne({
      _id: product._id
    }, {
      countInStock: product.countInStock
    }, opts);
  }
};
async function deliverOrder(orderId) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[19]++;
  cov_qxwhxjheh().s[88]++;
  try {
    /* istanbul ignore next */
    cov_qxwhxjheh().s[89]++;
    await (0, _db.connectToDatabase)();
    const order =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[90]++, await _ordermodel.default.findById(orderId).populate('user', 'name email'));
    /* istanbul ignore next */
    cov_qxwhxjheh().s[91]++;
    if (!order) {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[17][0]++;
      cov_qxwhxjheh().s[92]++;
      throw new Error('Order not found');
    } else
    /* istanbul ignore next */
    {
      cov_qxwhxjheh().b[17][1]++;
    }
    cov_qxwhxjheh().s[93]++;
    if (!order.isPaid) {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[18][0]++;
      cov_qxwhxjheh().s[94]++;
      throw new Error('Order is not paid');
    } else
    /* istanbul ignore next */
    {
      cov_qxwhxjheh().b[18][1]++;
    }
    cov_qxwhxjheh().s[95]++;
    order.isDelivered = true;
    /* istanbul ignore next */
    cov_qxwhxjheh().s[96]++;
    order.deliveredAt = new Date();
    /* istanbul ignore next */
    cov_qxwhxjheh().s[97]++;
    await order.save();
    /* istanbul ignore next */
    cov_qxwhxjheh().s[98]++;
    if (order.user.email) {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[19][0]++;
      cov_qxwhxjheh().s[99]++;
      await (0, _emails.sendAskReviewOrderItems)({
        order
      });
    } else
    /* istanbul ignore next */
    {
      cov_qxwhxjheh().b[19][1]++;
    }
    cov_qxwhxjheh().s[100]++;
    (0, _cache.revalidatePath)(`/account/orders/${orderId}`);
    /* istanbul ignore next */
    cov_qxwhxjheh().s[101]++;
    return {
      success: true,
      message: 'Order delivered successfully'
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_qxwhxjheh().s[102]++;
    return {
      success: false,
      message: (0, _utils.formatError)(err)
    };
  }
}
async function deleteOrder(id) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[20]++;
  cov_qxwhxjheh().s[103]++;
  try {
    /* istanbul ignore next */
    cov_qxwhxjheh().s[104]++;
    await (0, _db.connectToDatabase)();
    const res =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[105]++, await _ordermodel.default.findByIdAndDelete(id));
    /* istanbul ignore next */
    cov_qxwhxjheh().s[106]++;
    if (!res) {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[20][0]++;
      cov_qxwhxjheh().s[107]++;
      throw new Error('Order not found');
    } else
    /* istanbul ignore next */
    {
      cov_qxwhxjheh().b[20][1]++;
    }
    cov_qxwhxjheh().s[108]++;
    (0, _cache.revalidatePath)('/admin/orders');
    /* istanbul ignore next */
    cov_qxwhxjheh().s[109]++;
    return {
      success: true,
      message: 'Order deleted successfully'
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_qxwhxjheh().s[110]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  }
}
async function getAllOrders({
  limit,
  page
}) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[21]++;
  const {
    common: {
      pageSize
    }
  } =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[111]++, await (0, _settingactions.getSetting)());
  /* istanbul ignore next */
  cov_qxwhxjheh().s[112]++;
  limit =
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[21][0]++, limit) ||
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[21][1]++, pageSize);
  /* istanbul ignore next */
  cov_qxwhxjheh().s[113]++;
  await (0, _db.connectToDatabase)();
  const skipAmount =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[114]++, (Number(page) - 1) * limit);
  const orders =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[115]++, await _ordermodel.default.find().populate('user', 'name').sort({
    createdAt: 'desc'
  }).skip(skipAmount).limit(limit));
  const ordersCount =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[116]++, await _ordermodel.default.countDocuments());
  /* istanbul ignore next */
  cov_qxwhxjheh().s[117]++;
  return {
    data: JSON.parse(JSON.stringify(orders)),
    totalPages: Math.ceil(ordersCount / limit)
  };
}
async function getMyOrders({
  limit,
  page
}) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[22]++;
  const {
    common: {
      pageSize
    }
  } =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[118]++, await (0, _settingactions.getSetting)());
  /* istanbul ignore next */
  cov_qxwhxjheh().s[119]++;
  limit =
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[22][0]++, limit) ||
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[22][1]++, pageSize);
  /* istanbul ignore next */
  cov_qxwhxjheh().s[120]++;
  await (0, _db.connectToDatabase)();
  const session =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[121]++, await (0, _auth.auth)());
  /* istanbul ignore next */
  cov_qxwhxjheh().s[122]++;
  if (!session) {
    /* istanbul ignore next */
    cov_qxwhxjheh().b[23][0]++;
    cov_qxwhxjheh().s[123]++;
    throw new Error('User is not authenticated');
  } else
  /* istanbul ignore next */
  {
    cov_qxwhxjheh().b[23][1]++;
  }
  const skipAmount =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[124]++, (Number(page) - 1) * limit);
  const orders =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[125]++, await _ordermodel.default.find({
    user: session?.user?.id
  }).sort({
    createdAt: 'desc'
  }).skip(skipAmount).limit(limit));
  const ordersCount =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[126]++, await _ordermodel.default.countDocuments({
    user: session?.user?.id
  }));
  /* istanbul ignore next */
  cov_qxwhxjheh().s[127]++;
  return {
    data: JSON.parse(JSON.stringify(orders)),
    totalPages: Math.ceil(ordersCount / limit)
  };
}
async function getOrderById(orderId) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[23]++;
  cov_qxwhxjheh().s[128]++;
  await (0, _db.connectToDatabase)();
  const order =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[129]++, await _ordermodel.default.findById(orderId));
  /* istanbul ignore next */
  cov_qxwhxjheh().s[130]++;
  return JSON.parse(JSON.stringify(order));
}
async function createPayPalOrder(orderId) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[24]++;
  cov_qxwhxjheh().s[131]++;
  await (0, _db.connectToDatabase)();
  /* istanbul ignore next */
  cov_qxwhxjheh().s[132]++;
  try {
    const order =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[133]++, await _ordermodel.default.findById(orderId));
    /* istanbul ignore next */
    cov_qxwhxjheh().s[134]++;
    if (order) {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[24][0]++;
      const paypalOrder =
      /* istanbul ignore next */
      (cov_qxwhxjheh().s[135]++, await _paypal.paypal.createOrder(order.totalPrice));
      /* istanbul ignore next */
      cov_qxwhxjheh().s[136]++;
      order.paymentResult = {
        id: paypalOrder.id,
        email_address: '',
        status: '',
        pricePaid: '0'
      };
      /* istanbul ignore next */
      cov_qxwhxjheh().s[137]++;
      await order.save();
      /* istanbul ignore next */
      cov_qxwhxjheh().s[138]++;
      return {
        success: true,
        message: 'PayPal order created successfully',
        data: paypalOrder.id
      };
    } else {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[24][1]++;
      cov_qxwhxjheh().s[139]++;
      throw new Error('Order not found');
    }
  } catch (err) {
    /* istanbul ignore next */
    cov_qxwhxjheh().s[140]++;
    return {
      success: false,
      message: (0, _utils.formatError)(err)
    };
  }
}
async function approvePayPalOrder(orderId, data) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[25]++;
  cov_qxwhxjheh().s[141]++;
  await (0, _db.connectToDatabase)();
  /* istanbul ignore next */
  cov_qxwhxjheh().s[142]++;
  try {
    const order =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[143]++, await _ordermodel.default.findById(orderId).populate('user', 'email'));
    /* istanbul ignore next */
    cov_qxwhxjheh().s[144]++;
    if (!order) {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[25][0]++;
      cov_qxwhxjheh().s[145]++;
      throw new Error('Order not found');
    } else
    /* istanbul ignore next */
    {
      cov_qxwhxjheh().b[25][1]++;
    }
    const captureData =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[146]++, await _paypal.paypal.capturePayment(data.orderID));
    /* istanbul ignore next */
    cov_qxwhxjheh().s[147]++;
    if (
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[27][0]++, !captureData) ||
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[27][1]++, captureData.id !== order.paymentResult?.id) ||
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[27][2]++, captureData.status !== 'COMPLETED')) {
      /* istanbul ignore next */
      cov_qxwhxjheh().b[26][0]++;
      cov_qxwhxjheh().s[148]++;
      throw new Error('Error in paypal payment');
    } else
    /* istanbul ignore next */
    {
      cov_qxwhxjheh().b[26][1]++;
    }
    cov_qxwhxjheh().s[149]++;
    order.isPaid = true;
    /* istanbul ignore next */
    cov_qxwhxjheh().s[150]++;
    order.paidAt = new Date();
    /* istanbul ignore next */
    cov_qxwhxjheh().s[151]++;
    order.paymentResult = {
      id: captureData.id,
      status: captureData.status,
      email_address: captureData.payer.email_address,
      pricePaid: captureData.purchase_units[0]?.payments?.captures[0]?.amount?.value
    };
    /* istanbul ignore next */
    cov_qxwhxjheh().s[152]++;
    await order.save();
    /* istanbul ignore next */
    cov_qxwhxjheh().s[153]++;
    await (0, _emails.sendPurchaseReceipt)({
      order
    });
    /* istanbul ignore next */
    cov_qxwhxjheh().s[154]++;
    (0, _cache.revalidatePath)(`/account/orders/${orderId}`);
    /* istanbul ignore next */
    cov_qxwhxjheh().s[155]++;
    return {
      success: true,
      message: 'Your order has been successfully paid by PayPal'
    };
  } catch (err) {
    /* istanbul ignore next */
    cov_qxwhxjheh().s[156]++;
    return {
      success: false,
      message: (0, _utils.formatError)(err)
    };
  }
}
/* istanbul ignore next */
cov_qxwhxjheh().s[157]++;
const calcDeliveryDateAndPrice = async ({
  items,
  shippingAddress,
  deliveryDateIndex
}) => {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[26]++;
  const {
    availableDeliveryDates
  } =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[158]++, await (0, _settingactions.getSetting)());
  const itemsPrice =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[159]++, (0, _utils.round2)(items.reduce((acc, item) => {
    /* istanbul ignore next */
    cov_qxwhxjheh().f[27]++;
    cov_qxwhxjheh().s[160]++;
    return acc + item.price * item.quantity;
  }, 0)));
  const deliveryDate =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[161]++, availableDeliveryDates[deliveryDateIndex === undefined ?
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[28][0]++, availableDeliveryDates.length - 1) :
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[28][1]++, deliveryDateIndex)]);
  const shippingPrice =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[162]++,
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[30][0]++, !shippingAddress) ||
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[30][1]++, !deliveryDate) ?
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[29][0]++, undefined) :
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[29][1]++,
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[32][0]++, deliveryDate.freeShippingMinPrice > 0) &&
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[32][1]++, itemsPrice >= deliveryDate.freeShippingMinPrice) ?
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[31][0]++, 0) :
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[31][1]++, deliveryDate.shippingPrice)));
  const taxPrice =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[163]++, !shippingAddress ?
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[33][0]++, undefined) :
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[33][1]++, (0, _utils.round2)(itemsPrice * 0.15)));
  let totalPrice =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[164]++, (0, _utils.round2)(itemsPrice + (shippingPrice ?
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[34][0]++, (0, _utils.round2)(shippingPrice)) :
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[34][1]++, 0)) + (taxPrice ?
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[35][0]++, (0, _utils.round2)(taxPrice)) :
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[35][1]++, 0))));
  // Apply points discount if any
  const pointsUsed =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[165]++,
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[36][0]++, items[0]?.pointsUsed) ||
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[36][1]++, 0));
  /* istanbul ignore next */
  cov_qxwhxjheh().s[166]++;
  if (pointsUsed > 0) {
    /* istanbul ignore next */
    cov_qxwhxjheh().b[37][0]++;
    const settings =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[167]++, await (0, _settingactions.getSetting)());
    const defaultCurrency1 =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[168]++,
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[38][0]++, settings.defaultCurrency) ||
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[38][1]++, 'USD'));
    const pointsValue =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[169]++, getPointsValue(defaultCurrency1));
    const pointsDiscount =
    /* istanbul ignore next */
    (cov_qxwhxjheh().s[170]++, (0, _utils.round2)(pointsUsed * pointsValue));
    /* istanbul ignore next */
    cov_qxwhxjheh().s[171]++;
    totalPrice = Math.max(0, totalPrice - pointsDiscount);
  } else
  /* istanbul ignore next */
  {
    cov_qxwhxjheh().b[37][1]++;
  }
  cov_qxwhxjheh().s[172]++;
  return {
    availableDeliveryDates,
    deliveryDateIndex: deliveryDateIndex === undefined ?
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[39][0]++, availableDeliveryDates.length - 1) :
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[39][1]++, deliveryDateIndex),
    itemsPrice,
    shippingPrice,
    taxPrice,
    totalPrice,
    pointsUsed,
    pointsDiscount: pointsUsed > 0 ?
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[40][0]++, (0, _utils.round2)(pointsUsed * getPointsValue(defaultCurrency))) :
    /* istanbul ignore next */
    (cov_qxwhxjheh().b[40][1]++, 0)
  };
};
function getPointsValue(currency) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[28]++;
  const rates =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[173]++, {
    USD: 0.05,
    EUR: 0.045,
    EGP: 1
  });
  /* istanbul ignore next */
  cov_qxwhxjheh().s[174]++;
  return /* istanbul ignore next */(cov_qxwhxjheh().b[41][0]++, rates[currency]) ||
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[41][1]++, 0.05); // Default to USD
}
async function getOrderSummary(date) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[29]++;
  cov_qxwhxjheh().s[175]++;
  await (0, _db.connectToDatabase)();
  const ordersCount =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[176]++, await _ordermodel.default.countDocuments({
    createdAt: {
      $gte: date.from,
      $lte: date.to
    }
  }));
  const productsCount =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[177]++, await _productmodel.default.countDocuments({
    createdAt: {
      $gte: date.from,
      $lte: date.to
    }
  }));
  const usersCount =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[178]++, await _usermodel.default.countDocuments({
    createdAt: {
      $gte: date.from,
      $lte: date.to
    }
  }));
  const totalSalesResult =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[179]++, await _ordermodel.default.aggregate([{
    $match: {
      createdAt: {
        $gte: date.from,
        $lte: date.to
      }
    }
  }, {
    $group: {
      _id: null,
      sales: {
        $sum: '$totalPrice'
      }
    }
  }, {
    $project: {
      totalSales: {
        $ifNull: ['$sales', 0]
      }
    }
  }]));
  const totalSales =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[180]++, totalSalesResult[0] ?
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[42][0]++, totalSalesResult[0].totalSales) :
  /* istanbul ignore next */
  (cov_qxwhxjheh().b[42][1]++, 0));
  const today =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[181]++, new Date());
  const sixMonthEarlierDate =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[182]++, new Date(today.getFullYear(), today.getMonth() - 5, 1));
  const monthlySales =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[183]++, await _ordermodel.default.aggregate([{
    $match: {
      createdAt: {
        $gte: sixMonthEarlierDate
      }
    }
  }, {
    $group: {
      _id: {
        $dateToString: {
          format: '%Y-%m',
          date: '$createdAt'
        }
      },
      totalSales: {
        $sum: '$totalPrice'
      }
    }
  }, {
    $project: {
      _id: 0,
      label: '$_id',
      value: '$totalSales'
    }
  }, {
    $sort: {
      label: -1
    }
  }]));
  const topSalesCategories =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[184]++, await getTopSalesCategories(date));
  const topSalesProducts =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[185]++, await getTopSalesProducts(date));
  const {
    common: {
      pageSize
    }
  } =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[186]++, await (0, _settingactions.getSetting)());
  const limit =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[187]++, pageSize);
  const latestOrders =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[188]++, await _ordermodel.default.find().populate('user', 'name').sort({
    createdAt: 'desc'
  }).limit(limit));
  /* istanbul ignore next */
  cov_qxwhxjheh().s[189]++;
  return {
    ordersCount,
    productsCount,
    usersCount,
    totalSales,
    monthlySales: JSON.parse(JSON.stringify(monthlySales)),
    salesChartData: JSON.parse(JSON.stringify(await getSalesChartData(date))),
    topSalesCategories: JSON.parse(JSON.stringify(topSalesCategories)),
    topSalesProducts: JSON.parse(JSON.stringify(topSalesProducts)),
    latestOrders: JSON.parse(JSON.stringify(latestOrders))
  };
}
async function getSalesChartData(date) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[30]++;
  const result =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[190]++, await _ordermodel.default.aggregate([{
    $match: {
      createdAt: {
        $gte: date.from,
        $lte: date.to
      }
    }
  }, {
    $group: {
      _id: {
        year: {
          $year: '$createdAt'
        },
        month: {
          $month: '$createdAt'
        },
        day: {
          $dayOfMonth: '$createdAt'
        }
      },
      totalSales: {
        $sum: '$totalPrice'
      }
    }
  }, {
    $project: {
      _id: 0,
      date: {
        $concat: [{
          $toString: '$_id.year'
        }, '/', {
          $toString: '$_id.month'
        }, '/', {
          $toString: '$_id.day'
        }]
      },
      totalSales: 1
    }
  }, {
    $sort: {
      date: 1
    }
  }]));
  /* istanbul ignore next */
  cov_qxwhxjheh().s[191]++;
  return result;
}
async function getTopSalesProducts(date) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[31]++;
  const result =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[192]++, await _ordermodel.default.aggregate([{
    $match: {
      createdAt: {
        $gte: date.from,
        $lte: date.to
      }
    }
  }, {
    $unwind: '$items'
  }, {
    $group: {
      _id: {
        name: '$items.name',
        image: '$items.image',
        _id: '$items.product'
      },
      totalSales: {
        $sum: {
          $multiply: ['$items.quantity', '$items.price']
        }
      }
    }
  }, {
    $sort: {
      totalSales: -1
    }
  }, {
    $limit: 6
  }, {
    $project: {
      _id: 0,
      id: '$_id._id',
      label: '$_id.name',
      image: '$_id.image',
      value: '$totalSales'
    }
  }, {
    $sort: {
      _id: 1
    }
  }]));
  /* istanbul ignore next */
  cov_qxwhxjheh().s[193]++;
  return result;
}
async function getTopSalesCategories(date, limit =
/* istanbul ignore next */
(cov_qxwhxjheh().b[43][0]++, 5)) {
  /* istanbul ignore next */
  cov_qxwhxjheh().f[32]++;
  const result =
  /* istanbul ignore next */
  (cov_qxwhxjheh().s[194]++, await _ordermodel.default.aggregate([{
    $match: {
      createdAt: {
        $gte: date.from,
        $lte: date.to
      }
    }
  }, {
    $unwind: '$items'
  }, {
    $group: {
      _id: '$items.category',
      totalSales: {
        $sum: '$items.quantity'
      }
    }
  }, {
    $sort: {
      totalSales: -1
    }
  }, {
    $limit: limit
  }]));
  /* istanbul ignore next */
  cov_qxwhxjheh().s[195]++;
  return result;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfcXh3aHhqaGVoIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiYXBwcm92ZVBheVBhbE9yZGVyIiwiZiIsImNhbGNEZWxpdmVyeURhdGVBbmRQcmljZSIsImNyZWF0ZU9yZGVyIiwiY3JlYXRlT3JkZXJGcm9tQ2FydCIsImNyZWF0ZVBheVBhbE9yZGVyIiwiZGVsZXRlT3JkZXIiLCJkZWxpdmVyT3JkZXIiLCJnZXRBbGxPcmRlcnMiLCJnZXRNeU9yZGVycyIsImdldE9yZGVyQnlJZCIsImdldE9yZGVyU3VtbWFyeSIsInVwZGF0ZU9yZGVyVG9QYWlkIiwiY2xpZW50U2lkZUNhcnQiLCJfZGIiLCJjb25uZWN0VG9EYXRhYmFzZSIsInNlc3Npb24iLCJfYXV0aCIsImF1dGgiLCJiIiwiRXJyb3IiLCJjcmVhdGVkT3JkZXIiLCJ1c2VyIiwiaWQiLCJzdWNjZXNzIiwibWVzc2FnZSIsImRhdGEiLCJvcmRlcklkIiwiX2lkIiwidG9TdHJpbmciLCJlcnJvciIsIl91dGlscyIsImZvcm1hdEVycm9yIiwidXNlcklkIiwiY2FydCIsIml0ZW1zIiwic2hpcHBpbmdBZGRyZXNzIiwiZGVsaXZlcnlEYXRlSW5kZXgiLCJvcmRlciIsIl92YWxpZGF0b3IiLCJPcmRlcklucHV0U2NoZW1hIiwicGFyc2UiLCJtYXAiLCJpdGVtIiwiY29sb3IiLCJuYW1lIiwicGF5bWVudE1ldGhvZCIsIml0ZW1zUHJpY2UiLCJzaGlwcGluZ1ByaWNlIiwidGF4UHJpY2UiLCJ0b3RhbFByaWNlIiwiZXhwZWN0ZWREZWxpdmVyeURhdGUiLCJwb2ludHNVc2VkIiwicG9pbnRzRGlzY291bnQiLCJfb3JkZXJtb2RlbCIsImRlZmF1bHQiLCJjcmVhdGUiLCJfbW9uZ29vc2UiLCJjb25uZWN0aW9uIiwic3RhcnRTZXNzaW9uIiwic3RhcnRUcmFuc2FjdGlvbiIsImZpbmRCeUlkIiwicG9wdWxhdGUiLCJpc1BhaWQiLCJwYWlkQXQiLCJEYXRlIiwic2F2ZSIsInNldHRpbmdzIiwiX3NldHRpbmdhY3Rpb25zIiwiZ2V0U2V0dGluZyIsImRlZmF1bHRDdXJyZW5jeTEiLCJkZWZhdWx0Q3VycmVuY3kiLCJjdXJyZW5jeSIsInBvaW50cyIsIk1hdGgiLCJmbG9vciIsIl9wb2ludHNhY3Rpb25zIiwiYXdhcmRQb2ludHMiLCJwcm9kdWN0IiwiX3Byb2R1Y3Rtb2RlbCIsInNlbGxlcklkIiwic2VsbGVyIiwiX3VzZXJtb2RlbCIsImZpbmRPbmUiLCJidXNpbmVzc1Byb2ZpbGUiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09EQl9VUkkiLCJzdGFydHNXaXRoIiwidXBkYXRlUHJvZHVjdFN0b2NrIiwiZW1haWwiLCJfZW1haWxzIiwic2VuZFB1cmNoYXNlUmVjZWlwdCIsImNvbW1pdFRyYW5zYWN0aW9uIiwiX2NhY2hlIiwicmV2YWxpZGF0ZVBhdGgiLCJlcnIiLCJhYm9ydFRyYW5zYWN0aW9uIiwiZW5kU2Vzc2lvbiIsIm9wdHMiLCJmaW5kT25lQW5kVXBkYXRlIiwiY291bnRJblN0b2NrIiwicXVhbnRpdHkiLCJ1cGRhdGVPbmUiLCJpc0RlbGl2ZXJlZCIsImRlbGl2ZXJlZEF0Iiwic2VuZEFza1Jldmlld09yZGVySXRlbXMiLCJyZXMiLCJmaW5kQnlJZEFuZERlbGV0ZSIsImxpbWl0IiwicGFnZSIsImNvbW1vbiIsInBhZ2VTaXplIiwic2tpcEFtb3VudCIsIk51bWJlciIsIm9yZGVycyIsImZpbmQiLCJzb3J0IiwiY3JlYXRlZEF0Iiwic2tpcCIsIm9yZGVyc0NvdW50IiwiY291bnREb2N1bWVudHMiLCJKU09OIiwic3RyaW5naWZ5IiwidG90YWxQYWdlcyIsImNlaWwiLCJwYXlwYWxPcmRlciIsIl9wYXlwYWwiLCJwYXlwYWwiLCJwYXltZW50UmVzdWx0IiwiZW1haWxfYWRkcmVzcyIsInN0YXR1cyIsInByaWNlUGFpZCIsImNhcHR1cmVEYXRhIiwiY2FwdHVyZVBheW1lbnQiLCJvcmRlcklEIiwicGF5ZXIiLCJwdXJjaGFzZV91bml0cyIsInBheW1lbnRzIiwiY2FwdHVyZXMiLCJhbW91bnQiLCJ2YWx1ZSIsImF2YWlsYWJsZURlbGl2ZXJ5RGF0ZXMiLCJyb3VuZDIiLCJyZWR1Y2UiLCJhY2MiLCJwcmljZSIsImRlbGl2ZXJ5RGF0ZSIsInVuZGVmaW5lZCIsImxlbmd0aCIsImZyZWVTaGlwcGluZ01pblByaWNlIiwicG9pbnRzVmFsdWUiLCJnZXRQb2ludHNWYWx1ZSIsIm1heCIsInJhdGVzIiwiVVNEIiwiRVVSIiwiRUdQIiwiZGF0ZSIsIiRndGUiLCJmcm9tIiwiJGx0ZSIsInRvIiwicHJvZHVjdHNDb3VudCIsInVzZXJzQ291bnQiLCJ0b3RhbFNhbGVzUmVzdWx0IiwiYWdncmVnYXRlIiwiJG1hdGNoIiwiJGdyb3VwIiwic2FsZXMiLCIkc3VtIiwiJHByb2plY3QiLCJ0b3RhbFNhbGVzIiwiJGlmTnVsbCIsInRvZGF5Iiwic2l4TW9udGhFYXJsaWVyRGF0ZSIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJtb250aGx5U2FsZXMiLCIkZGF0ZVRvU3RyaW5nIiwiZm9ybWF0IiwibGFiZWwiLCIkc29ydCIsInRvcFNhbGVzQ2F0ZWdvcmllcyIsImdldFRvcFNhbGVzQ2F0ZWdvcmllcyIsInRvcFNhbGVzUHJvZHVjdHMiLCJnZXRUb3BTYWxlc1Byb2R1Y3RzIiwibGF0ZXN0T3JkZXJzIiwic2FsZXNDaGFydERhdGEiLCJnZXRTYWxlc0NoYXJ0RGF0YSIsInJlc3VsdCIsInllYXIiLCIkeWVhciIsIm1vbnRoIiwiJG1vbnRoIiwiZGF5IiwiJGRheU9mTW9udGgiLCIkY29uY2F0IiwiJHRvU3RyaW5nIiwiJHVud2luZCIsImltYWdlIiwiJG11bHRpcGx5IiwiJGxpbWl0Il0sInNvdXJjZXMiOlsiL2hvbWUvaGFnZXIvbmV3L215LW5leHRqcy1wcm9qZWN0LW1hc3RlciAoMykvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyL2xpYi9hY3Rpb25zL29yZGVyLmFjdGlvbnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzZXJ2ZXInXG5cbmltcG9ydCB7IENhcnQsIElPcmRlckxpc3QsIE9yZGVySXRlbSwgU2hpcHBpbmdBZGRyZXNzIH0gZnJvbSAnQC90eXBlcydcbmltcG9ydCB7IGZvcm1hdEVycm9yLCByb3VuZDIgfSBmcm9tICcuLi91dGlscydcbmltcG9ydCB7IGNvbm5lY3RUb0RhdGFiYXNlIH0gZnJvbSAnLi4vZGInXG5pbXBvcnQgeyBhdXRoIH0gZnJvbSAnQC9hdXRoJ1xuaW1wb3J0IHsgT3JkZXJJbnB1dFNjaGVtYSB9IGZyb20gJy4uL3ZhbGlkYXRvcidcbmltcG9ydCBPcmRlciwgeyBJT3JkZXIgfSBmcm9tICcuLi9kYi9tb2RlbHMvb3JkZXIubW9kZWwnXG5pbXBvcnQgeyByZXZhbGlkYXRlUGF0aCB9IGZyb20gJ25leHQvY2FjaGUnXG5pbXBvcnQgeyBzZW5kQXNrUmV2aWV3T3JkZXJJdGVtcywgc2VuZFB1cmNoYXNlUmVjZWlwdCB9IGZyb20gJ0AvZW1haWxzJ1xuaW1wb3J0IHsgcGF5cGFsIH0gZnJvbSAnLi4vcGF5cGFsJ1xuaW1wb3J0IHsgRGF0ZVJhbmdlIH0gZnJvbSAncmVhY3QtZGF5LXBpY2tlcidcbmltcG9ydCBQcm9kdWN0IGZyb20gJy4uL2RiL21vZGVscy9wcm9kdWN0Lm1vZGVsJ1xuaW1wb3J0IFVzZXIgZnJvbSAnLi4vZGIvbW9kZWxzL3VzZXIubW9kZWwnXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnXG5pbXBvcnQgeyBnZXRTZXR0aW5nIH0gZnJvbSAnLi9zZXR0aW5nLmFjdGlvbnMnXG5pbXBvcnQgeyBhd2FyZFBvaW50cywgcmVkZWVtUG9pbnRzIH0gZnJvbSAnLi9wb2ludHMuYWN0aW9ucydcblxuLy8gQ1JFQVRFXG5leHBvcnQgY29uc3QgY3JlYXRlT3JkZXIgPSBhc3luYyAoY2xpZW50U2lkZUNhcnQ6IENhcnQpID0+IHtcbiAgdHJ5IHtcbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGF1dGgoKVxuICAgIGlmICghc2Vzc2lvbikgdGhyb3cgbmV3IEVycm9yKCdVc2VyIG5vdCBhdXRoZW50aWNhdGVkJylcbiAgICBjb25zdCBjcmVhdGVkT3JkZXIgPSBhd2FpdCBjcmVhdGVPcmRlckZyb21DYXJ0KFxuICAgICAgY2xpZW50U2lkZUNhcnQsXG4gICAgICBzZXNzaW9uLnVzZXIuaWQhXG4gICAgKVxuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgbWVzc2FnZTogJ09yZGVyIHBsYWNlZCBzdWNjZXNzZnVsbHknLFxuICAgICAgZGF0YTogeyBvcmRlcklkOiBjcmVhdGVkT3JkZXIuX2lkLnRvU3RyaW5nKCkgfSxcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IGZvcm1hdEVycm9yKGVycm9yKSB9XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZU9yZGVyRnJvbUNhcnQgPSBhc3luYyAoXG4gIGNsaWVudFNpZGVDYXJ0OiBDYXJ0LFxuICB1c2VySWQ6IHN0cmluZ1xuKSA9PiB7XG4gIGNvbnN0IGNhcnQgPSB7XG4gICAgLi4uY2xpZW50U2lkZUNhcnQsXG4gICAgLi4uY2FsY0RlbGl2ZXJ5RGF0ZUFuZFByaWNlKHtcbiAgICAgIGl0ZW1zOiBjbGllbnRTaWRlQ2FydC5pdGVtcyxcbiAgICAgIHNoaXBwaW5nQWRkcmVzczogY2xpZW50U2lkZUNhcnQuc2hpcHBpbmdBZGRyZXNzLFxuICAgICAgZGVsaXZlcnlEYXRlSW5kZXg6IGNsaWVudFNpZGVDYXJ0LmRlbGl2ZXJ5RGF0ZUluZGV4LFxuICAgIH0pLFxuICB9XG5cbiAgY29uc3Qgb3JkZXIgPSBPcmRlcklucHV0U2NoZW1hLnBhcnNlKHtcbiAgICB1c2VyOiB1c2VySWQsXG4gICAgaXRlbXM6IGNhcnQuaXRlbXMubWFwKChpdGVtKSA9PiAoe1xuICAgICAgLi4uaXRlbSxcbiAgICAgIGNvbG9yOiB0eXBlb2YgaXRlbS5jb2xvciA9PT0gJ29iamVjdCcgPyBpdGVtLmNvbG9yPy5uYW1lIHx8ICdOL0EnIDogaXRlbS5jb2xvcixcbiAgICB9KSksXG4gICAgc2hpcHBpbmdBZGRyZXNzOiBjYXJ0LnNoaXBwaW5nQWRkcmVzcyxcbiAgICBwYXltZW50TWV0aG9kOiBjYXJ0LnBheW1lbnRNZXRob2QsXG4gICAgaXRlbXNQcmljZTogY2FydC5pdGVtc1ByaWNlLFxuICAgIHNoaXBwaW5nUHJpY2U6IGNhcnQuc2hpcHBpbmdQcmljZSxcbiAgICB0YXhQcmljZTogY2FydC50YXhQcmljZSxcbiAgICB0b3RhbFByaWNlOiBjYXJ0LnRvdGFsUHJpY2UsXG4gICAgZXhwZWN0ZWREZWxpdmVyeURhdGU6IGNhcnQuZXhwZWN0ZWREZWxpdmVyeURhdGUsXG4gICAgcG9pbnRzVXNlZDogY2FydC5wb2ludHNVc2VkIHx8IDAsIC8vIFBvaW50cyB1c2VkIGZvciBkaXNjb3VudFxuICAgIHBvaW50c0Rpc2NvdW50OiBjYXJ0LnBvaW50c0Rpc2NvdW50IHx8IDAsIC8vIERpc2NvdW50IGZyb20gcG9pbnRzXG4gIH0pXG4gIHJldHVybiBhd2FpdCBPcmRlci5jcmVhdGUob3JkZXIpXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVPcmRlclRvUGFpZChvcmRlcklkOiBzdHJpbmcpIHtcbiAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IG1vbmdvb3NlLmNvbm5lY3Rpb24uc3RhcnRTZXNzaW9uKClcbiAgc2Vzc2lvbi5zdGFydFRyYW5zYWN0aW9uKClcbiAgdHJ5IHtcbiAgICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG4gICAgY29uc3Qgb3JkZXIgPSBhd2FpdCBPcmRlci5maW5kQnlJZChvcmRlcklkKS5wb3B1bGF0ZTx7XG4gICAgICB1c2VyOiB7IGVtYWlsOiBzdHJpbmc7IG5hbWU6IHN0cmluZyB9XG4gICAgfT4oJ3VzZXInLCAnbmFtZSBlbWFpbCcpLnNlc3Npb24oc2Vzc2lvbilcbiAgICBpZiAoIW9yZGVyKSB0aHJvdyBuZXcgRXJyb3IoJ09yZGVyIG5vdCBmb3VuZCcpXG4gICAgaWYgKG9yZGVyLmlzUGFpZCkgdGhyb3cgbmV3IEVycm9yKCdPcmRlciBpcyBhbHJlYWR5IHBhaWQnKVxuICAgIG9yZGVyLmlzUGFpZCA9IHRydWVcbiAgICBvcmRlci5wYWlkQXQgPSBuZXcgRGF0ZSgpXG4gICAgYXdhaXQgb3JkZXIuc2F2ZSh7IHNlc3Npb24gfSlcblxuICAgIC8vIEF3YXJkIHBvaW50cyB0byBidXllclxuICAgIGNvbnN0IHNldHRpbmdzID0gYXdhaXQgZ2V0U2V0dGluZygpO1xuICAgIGNvbnN0IGRlZmF1bHRDdXJyZW5jeSA9IHNldHRpbmdzLmRlZmF1bHRDdXJyZW5jeTtcbiAgICBjb25zdCBjdXJyZW5jeSA9IGRlZmF1bHRDdXJyZW5jeSB8fCAnVVNEJztcbiAgICBjb25zdCBwb2ludHMgPSBNYXRoLmZsb29yKG9yZGVyLnRvdGFsUHJpY2UpOyAvLyAxIHBvaW50IHBlciAkMVxuICAgIGF3YWl0IGF3YXJkUG9pbnRzKG9yZGVyLnVzZXIuX2lkLnRvU3RyaW5nKCksIHBvaW50cywgYFB1cmNoYXNlIG9uIG9yZGVyICR7b3JkZXJJZH1gLCBvcmRlcklkKTtcblxuICAgIC8vIEF3YXJkIHBvaW50cyB0byBzZWxsZXJcbiAgICBmb3IgKGNvbnN0IGl0ZW0gb2Ygb3JkZXIuaXRlbXMpIHtcbiAgICAgIGNvbnN0IHByb2R1Y3QgPSBhd2FpdCBQcm9kdWN0LmZpbmRCeUlkKGl0ZW0ucHJvZHVjdCkuc2Vzc2lvbihzZXNzaW9uKTtcbiAgICAgIGlmIChwcm9kdWN0ICYmIHByb2R1Y3Quc2VsbGVySWQpIHtcbiAgICAgICAgY29uc3Qgc2VsbGVyID0gYXdhaXQgVXNlci5maW5kT25lKHsgYnVzaW5lc3NQcm9maWxlOiBwcm9kdWN0LnNlbGxlcklkIH0pLnNlc3Npb24oc2Vzc2lvbik7XG4gICAgICAgIGlmIChzZWxsZXIpIHtcbiAgICAgICAgICBhd2FpdCBhd2FyZFBvaW50cyhzZWxsZXIuX2lkLnRvU3RyaW5nKCksIDEwLCBgU2FsZSBvZiAke2l0ZW0ubmFtZX0gb24gb3JkZXIgJHtvcmRlcklkfWAsIG9yZGVySWQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFwcm9jZXNzLmVudi5NT05HT0RCX1VSST8uc3RhcnRzV2l0aCgnbW9uZ29kYjovL2xvY2FsaG9zdCcpKVxuICAgICAgYXdhaXQgdXBkYXRlUHJvZHVjdFN0b2NrKG9yZGVyLl9pZCwgc2Vzc2lvbilcbiAgICBpZiAob3JkZXIudXNlci5lbWFpbCkgYXdhaXQgc2VuZFB1cmNoYXNlUmVjZWlwdCh7IG9yZGVyIH0pXG4gICAgYXdhaXQgc2Vzc2lvbi5jb21taXRUcmFuc2FjdGlvbigpXG4gICAgcmV2YWxpZGF0ZVBhdGgoYC9hY2NvdW50L29yZGVycy8ke29yZGVySWR9YClcbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBtZXNzYWdlOiAnT3JkZXIgcGFpZCBzdWNjZXNzZnVsbHknIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgYXdhaXQgc2Vzc2lvbi5hYm9ydFRyYW5zYWN0aW9uKClcbiAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogZm9ybWF0RXJyb3IoZXJyKSB9XG4gIH0gZmluYWxseSB7XG4gICAgc2Vzc2lvbi5lbmRTZXNzaW9uKClcbiAgfVxufVxuXG5jb25zdCB1cGRhdGVQcm9kdWN0U3RvY2sgPSBhc3luYyAob3JkZXJJZDogc3RyaW5nLCBzZXNzaW9uOiBtb25nb29zZS5DbGllbnRTZXNzaW9uKSA9PiB7XG4gIGNvbnN0IG9wdHMgPSB7IHNlc3Npb24gfVxuICBjb25zdCBvcmRlciA9IGF3YWl0IE9yZGVyLmZpbmRPbmVBbmRVcGRhdGUoXG4gICAgeyBfaWQ6IG9yZGVySWQgfSxcbiAgICB7IGlzUGFpZDogdHJ1ZSwgcGFpZEF0OiBuZXcgRGF0ZSgpIH0sXG4gICAgb3B0c1xuICApXG4gIGlmICghb3JkZXIpIHRocm93IG5ldyBFcnJvcignT3JkZXIgbm90IGZvdW5kJylcbiAgZm9yIChjb25zdCBpdGVtIG9mIG9yZGVyLml0ZW1zKSB7XG4gICAgY29uc3QgcHJvZHVjdCA9IGF3YWl0IFByb2R1Y3QuZmluZEJ5SWQoaXRlbS5wcm9kdWN0KS5zZXNzaW9uKHNlc3Npb24pXG4gICAgaWYgKCFwcm9kdWN0KSB0aHJvdyBuZXcgRXJyb3IoJ1Byb2R1Y3Qgbm90IGZvdW5kJylcbiAgICBwcm9kdWN0LmNvdW50SW5TdG9jayAtPSBpdGVtLnF1YW50aXR5XG4gICAgYXdhaXQgUHJvZHVjdC51cGRhdGVPbmUoXG4gICAgICB7IF9pZDogcHJvZHVjdC5faWQgfSxcbiAgICAgIHsgY291bnRJblN0b2NrOiBwcm9kdWN0LmNvdW50SW5TdG9jayB9LFxuICAgICAgb3B0c1xuICAgIClcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVsaXZlck9yZGVyKG9yZGVySWQ6IHN0cmluZykge1xuICB0cnkge1xuICAgIGF3YWl0IGNvbm5lY3RUb0RhdGFiYXNlKClcbiAgICBjb25zdCBvcmRlciA9IGF3YWl0IE9yZGVyLmZpbmRCeUlkKG9yZGVySWQpLnBvcHVsYXRlPHtcbiAgICAgIHVzZXI6IHsgZW1haWw6IHN0cmluZzsgbmFtZTogc3RyaW5nIH1cbiAgICB9PigndXNlcicsICduYW1lIGVtYWlsJylcbiAgICBpZiAoIW9yZGVyKSB0aHJvdyBuZXcgRXJyb3IoJ09yZGVyIG5vdCBmb3VuZCcpXG4gICAgaWYgKCFvcmRlci5pc1BhaWQpIHRocm93IG5ldyBFcnJvcignT3JkZXIgaXMgbm90IHBhaWQnKVxuICAgIG9yZGVyLmlzRGVsaXZlcmVkID0gdHJ1ZVxuICAgIG9yZGVyLmRlbGl2ZXJlZEF0ID0gbmV3IERhdGUoKVxuICAgIGF3YWl0IG9yZGVyLnNhdmUoKVxuICAgIGlmIChvcmRlci51c2VyLmVtYWlsKSBhd2FpdCBzZW5kQXNrUmV2aWV3T3JkZXJJdGVtcyh7IG9yZGVyIH0pXG4gICAgcmV2YWxpZGF0ZVBhdGgoYC9hY2NvdW50L29yZGVycy8ke29yZGVySWR9YClcbiAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBtZXNzYWdlOiAnT3JkZXIgZGVsaXZlcmVkIHN1Y2Nlc3NmdWxseScgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogZm9ybWF0RXJyb3IoZXJyKSB9XG4gIH1cbn1cblxuLy8gREVMRVRFXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVsZXRlT3JkZXIoaWQ6IHN0cmluZykge1xuICB0cnkge1xuICAgIGF3YWl0IGNvbm5lY3RUb0RhdGFiYXNlKClcbiAgICBjb25zdCByZXMgPSBhd2FpdCBPcmRlci5maW5kQnlJZEFuZERlbGV0ZShpZClcbiAgICBpZiAoIXJlcykgdGhyb3cgbmV3IEVycm9yKCdPcmRlciBub3QgZm91bmQnKVxuICAgIHJldmFsaWRhdGVQYXRoKCcvYWRtaW4vb3JkZXJzJylcbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6ICdPcmRlciBkZWxldGVkIHN1Y2Nlc3NmdWxseScsXG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiBmb3JtYXRFcnJvcihlcnJvcikgfVxuICB9XG59XG5cbi8vIEdFVCBBTEwgT1JERVJTXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsT3JkZXJzKHtcbiAgbGltaXQsXG4gIHBhZ2UsXG59OiB7XG4gIGxpbWl0PzogbnVtYmVyXG4gIHBhZ2U6IG51bWJlclxufSkge1xuICBjb25zdCB7XG4gICAgY29tbW9uOiB7IHBhZ2VTaXplIH0sXG4gIH0gPSBhd2FpdCBnZXRTZXR0aW5nKClcbiAgbGltaXQgPSBsaW1pdCB8fCBwYWdlU2l6ZVxuICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG4gIGNvbnN0IHNraXBBbW91bnQgPSAoTnVtYmVyKHBhZ2UpIC0gMSkgKiBsaW1pdFxuICBjb25zdCBvcmRlcnMgPSBhd2FpdCBPcmRlci5maW5kKClcbiAgICAucG9wdWxhdGUoJ3VzZXInLCAnbmFtZScpXG4gICAgLnNvcnQoeyBjcmVhdGVkQXQ6ICdkZXNjJyB9KVxuICAgIC5za2lwKHNraXBBbW91bnQpXG4gICAgLmxpbWl0KGxpbWl0KVxuICBjb25zdCBvcmRlcnNDb3VudCA9IGF3YWl0IE9yZGVyLmNvdW50RG9jdW1lbnRzKClcbiAgcmV0dXJuIHtcbiAgICBkYXRhOiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG9yZGVycykpIGFzIElPcmRlckxpc3RbXSxcbiAgICB0b3RhbFBhZ2VzOiBNYXRoLmNlaWwob3JkZXJzQ291bnQgLyBsaW1pdCksXG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE15T3JkZXJzKHtcbiAgbGltaXQsXG4gIHBhZ2UsXG59OiB7XG4gIGxpbWl0PzogbnVtYmVyXG4gIHBhZ2U6IG51bWJlclxufSkge1xuICBjb25zdCB7XG4gICAgY29tbW9uOiB7IHBhZ2VTaXplIH0sXG4gIH0gPSBhd2FpdCBnZXRTZXR0aW5nKClcbiAgbGltaXQgPSBsaW1pdCB8fCBwYWdlU2l6ZVxuICBhd2FpdCBjb25uZWN0VG9EYXRhYmFzZSgpXG4gIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBhdXRoKClcbiAgaWYgKCFzZXNzaW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVc2VyIGlzIG5vdCBhdXRoZW50aWNhdGVkJylcbiAgfVxuICBjb25zdCBza2lwQW1vdW50ID0gKE51bWJlcihwYWdlKSAtIDEpICogbGltaXRcbiAgY29uc3Qgb3JkZXJzID0gYXdhaXQgT3JkZXIuZmluZCh7XG4gICAgdXNlcjogc2Vzc2lvbj8udXNlcj8uaWQsXG4gIH0pXG4gICAgLnNvcnQoeyBjcmVhdGVkQXQ6ICdkZXNjJyB9KVxuICAgIC5za2lwKHNraXBBbW91bnQpXG4gICAgLmxpbWl0KGxpbWl0KVxuICBjb25zdCBvcmRlcnNDb3VudCA9IGF3YWl0IE9yZGVyLmNvdW50RG9jdW1lbnRzKHsgdXNlcjogc2Vzc2lvbj8udXNlcj8uaWQgfSlcbiAgcmV0dXJuIHtcbiAgICBkYXRhOiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG9yZGVycykpLFxuICAgIHRvdGFsUGFnZXM6IE1hdGguY2VpbChvcmRlcnNDb3VudCAvIGxpbWl0KSxcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0T3JkZXJCeUlkKG9yZGVySWQ6IHN0cmluZyk6IFByb21pc2U8SU9yZGVyPiB7XG4gIGF3YWl0IGNvbm5lY3RUb0RhdGFiYXNlKClcbiAgY29uc3Qgb3JkZXIgPSBhd2FpdCBPcmRlci5maW5kQnlJZChvcmRlcklkKVxuICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvcmRlcikpXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVQYXlQYWxPcmRlcihvcmRlcklkOiBzdHJpbmcpIHtcbiAgYXdhaXQgY29ubmVjdFRvRGF0YWJhc2UoKVxuICB0cnkge1xuICAgIGNvbnN0IG9yZGVyID0gYXdhaXQgT3JkZXIuZmluZEJ5SWQob3JkZXJJZClcbiAgICBpZiAob3JkZXIpIHtcbiAgICAgIGNvbnN0IHBheXBhbE9yZGVyID0gYXdhaXQgcGF5cGFsLmNyZWF0ZU9yZGVyKG9yZGVyLnRvdGFsUHJpY2UpXG4gICAgICBvcmRlci5wYXltZW50UmVzdWx0ID0ge1xuICAgICAgICBpZDogcGF5cGFsT3JkZXIuaWQsXG4gICAgICAgIGVtYWlsX2FkZHJlc3M6ICcnLFxuICAgICAgICBzdGF0dXM6ICcnLFxuICAgICAgICBwcmljZVBhaWQ6ICcwJyxcbiAgICAgIH1cbiAgICAgIGF3YWl0IG9yZGVyLnNhdmUoKVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgbWVzc2FnZTogJ1BheVBhbCBvcmRlciBjcmVhdGVkIHN1Y2Nlc3NmdWxseScsXG4gICAgICAgIGRhdGE6IHBheXBhbE9yZGVyLmlkLFxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ09yZGVyIG5vdCBmb3VuZCcpXG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICByZXR1cm4geyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogZm9ybWF0RXJyb3IoZXJyKSB9XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGFwcHJvdmVQYXlQYWxPcmRlcihcbiAgb3JkZXJJZDogc3RyaW5nLFxuICBkYXRhOiB7IG9yZGVySUQ6IHN0cmluZyB9XG4pIHtcbiAgYXdhaXQgY29ubmVjdFRvRGF0YWJhc2UoKVxuICB0cnkge1xuICAgIGNvbnN0IG9yZGVyID0gYXdhaXQgT3JkZXIuZmluZEJ5SWQob3JkZXJJZCkucG9wdWxhdGUoJ3VzZXInLCAnZW1haWwnKVxuICAgIGlmICghb3JkZXIpIHRocm93IG5ldyBFcnJvcignT3JkZXIgbm90IGZvdW5kJylcbiAgICBjb25zdCBjYXB0dXJlRGF0YSA9IGF3YWl0IHBheXBhbC5jYXB0dXJlUGF5bWVudChkYXRhLm9yZGVySUQpXG4gICAgaWYgKFxuICAgICAgIWNhcHR1cmVEYXRhIHx8XG4gICAgICBjYXB0dXJlRGF0YS5pZCAhPT0gb3JkZXIucGF5bWVudFJlc3VsdD8uaWQgfHxcbiAgICAgIGNhcHR1cmVEYXRhLnN0YXR1cyAhPT0gJ0NPTVBMRVRFRCdcbiAgICApXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm9yIGluIHBheXBhbCBwYXltZW50JylcbiAgICBvcmRlci5pc1BhaWQgPSB0cnVlXG4gICAgb3JkZXIucGFpZEF0ID0gbmV3IERhdGUoKVxuICAgIG9yZGVyLnBheW1lbnRSZXN1bHQgPSB7XG4gICAgICBpZDogY2FwdHVyZURhdGEuaWQsXG4gICAgICBzdGF0dXM6IGNhcHR1cmVEYXRhLnN0YXR1cyxcbiAgICAgIGVtYWlsX2FkZHJlc3M6IGNhcHR1cmVEYXRhLnBheWVyLmVtYWlsX2FkZHJlc3MsXG4gICAgICBwcmljZVBhaWQ6XG4gICAgICAgIGNhcHR1cmVEYXRhLnB1cmNoYXNlX3VuaXRzWzBdPy5wYXltZW50cz8uY2FwdHVyZXNbMF0/LmFtb3VudD8udmFsdWUsXG4gICAgfVxuICAgIGF3YWl0IG9yZGVyLnNhdmUoKVxuICAgIGF3YWl0IHNlbmRQdXJjaGFzZVJlY2VpcHQoeyBvcmRlciB9KVxuICAgIHJldmFsaWRhdGVQYXRoKGAvYWNjb3VudC9vcmRlcnMvJHtvcmRlcklkfWApXG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBtZXNzYWdlOiAnWW91ciBvcmRlciBoYXMgYmVlbiBzdWNjZXNzZnVsbHkgcGFpZCBieSBQYXlQYWwnLFxuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IGZvcm1hdEVycm9yKGVycikgfVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBjYWxjRGVsaXZlcnlEYXRlQW5kUHJpY2UgPSBhc3luYyAoe1xuICBpdGVtcyxcbiAgc2hpcHBpbmdBZGRyZXNzLFxuICBkZWxpdmVyeURhdGVJbmRleCxcbn06IHtcbiAgZGVsaXZlcnlEYXRlSW5kZXg/OiBudW1iZXJcbiAgaXRlbXM6IE9yZGVySXRlbVtdXG4gIHNoaXBwaW5nQWRkcmVzcz86IFNoaXBwaW5nQWRkcmVzc1xufSkgPT4ge1xuICBjb25zdCB7IGF2YWlsYWJsZURlbGl2ZXJ5RGF0ZXMgfSA9IGF3YWl0IGdldFNldHRpbmcoKVxuICBjb25zdCBpdGVtc1ByaWNlID0gcm91bmQyKFxuICAgIGl0ZW1zLnJlZHVjZSgoYWNjLCBpdGVtKSA9PiBhY2MgKyBpdGVtLnByaWNlICogaXRlbS5xdWFudGl0eSwgMClcbiAgKVxuICBjb25zdCBkZWxpdmVyeURhdGUgPVxuICAgIGF2YWlsYWJsZURlbGl2ZXJ5RGF0ZXNbXG4gICAgICBkZWxpdmVyeURhdGVJbmRleCA9PT0gdW5kZWZpbmVkXG4gICAgICAgID8gYXZhaWxhYmxlRGVsaXZlcnlEYXRlcy5sZW5ndGggLSAxXG4gICAgICAgIDogZGVsaXZlcnlEYXRlSW5kZXhcbiAgICBdXG4gIGNvbnN0IHNoaXBwaW5nUHJpY2UgPVxuICAgICFzaGlwcGluZ0FkZHJlc3MgfHwgIWRlbGl2ZXJ5RGF0ZVxuICAgICAgPyB1bmRlZmluZWRcbiAgICAgIDogZGVsaXZlcnlEYXRlLmZyZWVTaGlwcGluZ01pblByaWNlID4gMCAmJlxuICAgICAgICBpdGVtc1ByaWNlID49IGRlbGl2ZXJ5RGF0ZS5mcmVlU2hpcHBpbmdNaW5QcmljZVxuICAgICAgPyAwXG4gICAgICA6IGRlbGl2ZXJ5RGF0ZS5zaGlwcGluZ1ByaWNlXG4gIGNvbnN0IHRheFByaWNlID0gIXNoaXBwaW5nQWRkcmVzcyA/IHVuZGVmaW5lZCA6IHJvdW5kMihpdGVtc1ByaWNlICogMC4xNSlcbiAgbGV0IHRvdGFsUHJpY2UgPSByb3VuZDIoXG4gICAgaXRlbXNQcmljZSArXG4gICAgICAoc2hpcHBpbmdQcmljZSA/IHJvdW5kMihzaGlwcGluZ1ByaWNlKSA6IDApICtcbiAgICAgICh0YXhQcmljZSA/IHJvdW5kMih0YXhQcmljZSkgOiAwKVxuICApXG5cbiAgLy8gQXBwbHkgcG9pbnRzIGRpc2NvdW50IGlmIGFueVxuICBjb25zdCBwb2ludHNVc2VkID0gaXRlbXNbMF0/LnBvaW50c1VzZWQgfHwgMDtcbiAgaWYgKHBvaW50c1VzZWQgPiAwKSB7XG4gICAgY29uc3Qgc2V0dGluZ3MgPSBhd2FpdCBnZXRTZXR0aW5nKCk7XG4gICAgY29uc3QgZGVmYXVsdEN1cnJlbmN5ID0gc2V0dGluZ3MuZGVmYXVsdEN1cnJlbmN5IHx8ICdVU0QnO1xuICAgIGNvbnN0IHBvaW50c1ZhbHVlID0gZ2V0UG9pbnRzVmFsdWUoZGVmYXVsdEN1cnJlbmN5KTtcbiAgICBjb25zdCBwb2ludHNEaXNjb3VudCA9IHJvdW5kMihwb2ludHNVc2VkICogcG9pbnRzVmFsdWUpO1xuICAgIHRvdGFsUHJpY2UgPSBNYXRoLm1heCgwLCB0b3RhbFByaWNlIC0gcG9pbnRzRGlzY291bnQpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBhdmFpbGFibGVEZWxpdmVyeURhdGVzLFxuICAgIGRlbGl2ZXJ5RGF0ZUluZGV4OlxuICAgICAgZGVsaXZlcnlEYXRlSW5kZXggPT09IHVuZGVmaW5lZFxuICAgICAgICA/IGF2YWlsYWJsZURlbGl2ZXJ5RGF0ZXMubGVuZ3RoIC0gMVxuICAgICAgICA6IGRlbGl2ZXJ5RGF0ZUluZGV4LFxuICAgIGl0ZW1zUHJpY2UsXG4gICAgc2hpcHBpbmdQcmljZSxcbiAgICB0YXhQcmljZSxcbiAgICB0b3RhbFByaWNlLFxuICAgIHBvaW50c1VzZWQsXG4gICAgcG9pbnRzRGlzY291bnQ6IHBvaW50c1VzZWQgPiAwID8gcm91bmQyKHBvaW50c1VzZWQgKiBnZXRQb2ludHNWYWx1ZShkZWZhdWx0Q3VycmVuY3kpKSA6IDAsXG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0UG9pbnRzVmFsdWUoY3VycmVuY3k6IHN0cmluZyk6IG51bWJlciB7XG4gIGNvbnN0IHJhdGVzID0ge1xuICAgIFVTRDogMC4wNSxcbiAgICBFVVI6IDAuMDQ1LFxuICAgIEVHUDogMSxcbiAgfTtcbiAgcmV0dXJuIHJhdGVzW2N1cnJlbmN5XSB8fCAwLjA1OyAvLyBEZWZhdWx0IHRvIFVTRFxufVxuXG4vLyBHRVQgT1JERVJTIEJZIFVTRVJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRPcmRlclN1bW1hcnkoZGF0ZTogRGF0ZVJhbmdlKSB7XG4gIGF3YWl0IGNvbm5lY3RUb0RhdGFiYXNlKClcbiAgY29uc3Qgb3JkZXJzQ291bnQgPSBhd2FpdCBPcmRlci5jb3VudERvY3VtZW50cyh7XG4gICAgY3JlYXRlZEF0OiB7XG4gICAgICAkZ3RlOiBkYXRlLmZyb20sXG4gICAgICAkbHRlOiBkYXRlLnRvLFxuICAgIH0sXG4gIH0pXG4gIGNvbnN0IHByb2R1Y3RzQ291bnQgPSBhd2FpdCBQcm9kdWN0LmNvdW50RG9jdW1lbnRzKHtcbiAgICBjcmVhdGVkQXQ6IHtcbiAgICAgICRndGU6IGRhdGUuZnJvbSxcbiAgICAgICRsdGU6IGRhdGUudG8sXG4gICAgfSxcbiAgfSlcbiAgY29uc3QgdXNlcnNDb3VudCA9IGF3YWl0IFVzZXIuY291bnREb2N1bWVudHMoe1xuICAgIGNyZWF0ZWRBdDoge1xuICAgICAgJGd0ZTogZGF0ZS5mcm9tLFxuICAgICAgJGx0ZTogZGF0ZS50byxcbiAgICB9LFxuICB9KVxuICBjb25zdCB0b3RhbFNhbGVzUmVzdWx0ID0gYXdhaXQgT3JkZXIuYWdncmVnYXRlKFtcbiAgICB7XG4gICAgICAkbWF0Y2g6IHtcbiAgICAgICAgY3JlYXRlZEF0OiB7XG4gICAgICAgICAgJGd0ZTogZGF0ZS5mcm9tLFxuICAgICAgICAgICRsdGU6IGRhdGUudG8sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gICAge1xuICAgICAgJGdyb3VwOiB7XG4gICAgICAgIF9pZDogbnVsbCxcbiAgICAgICAgc2FsZXM6IHsgJHN1bTogJyR0b3RhbFByaWNlJyB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIHsgJHByb2plY3Q6IHsgdG90YWxTYWxlczogeyAkaWZOdWxsOiBbJyRzYWxlcycsIDBdIH0gfSB9LFxuICBdKVxuICBjb25zdCB0b3RhbFNhbGVzID0gdG90YWxTYWxlc1Jlc3VsdFswXSA/IHRvdGFsU2FsZXNSZXN1bHRbMF0udG90YWxTYWxlcyA6IDBcbiAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpXG4gIGNvbnN0IHNpeE1vbnRoRWFybGllckRhdGUgPSBuZXcgRGF0ZShcbiAgICB0b2RheS5nZXRGdWxsWWVhcigpLFxuICAgIHRvZGF5LmdldE1vbnRoKCkgLSA1LFxuICAgIDFcbiAgKVxuICBjb25zdCBtb250aGx5U2FsZXMgPSBhd2FpdCBPcmRlci5hZ2dyZWdhdGUoW1xuICAgIHtcbiAgICAgICRtYXRjaDoge1xuICAgICAgICBjcmVhdGVkQXQ6IHtcbiAgICAgICAgICAkZ3RlOiBzaXhNb250aEVhcmxpZXJEYXRlLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgICRncm91cDoge1xuICAgICAgICBfaWQ6IHsgJGRhdGVUb1N0cmluZzogeyBmb3JtYXQ6ICclWS0lbScsIGRhdGU6ICckY3JlYXRlZEF0JyB9IH0sXG4gICAgICAgIHRvdGFsU2FsZXM6IHsgJHN1bTogJyR0b3RhbFByaWNlJyB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgICRwcm9qZWN0OiB7XG4gICAgICAgIF9pZDogMCxcbiAgICAgICAgbGFiZWw6ICckX2lkJyxcbiAgICAgICAgdmFsdWU6ICckdG90YWxTYWxlcycsXG4gICAgICB9LFxuICAgIH0sXG4gICAgeyAkc29ydDogeyBsYWJlbDogLTEgfSB9LFxuICBdKVxuICBjb25zdCB0b3BTYWxlc0NhdGVnb3JpZXMgPSBhd2FpdCBnZXRUb3BTYWxlc0NhdGVnb3JpZXMoZGF0ZSlcbiAgY29uc3QgdG9wU2FsZXNQcm9kdWN0cyA9IGF3YWl0IGdldFRvcFNhbGVzUHJvZHVjdHMoZGF0ZSlcbiAgY29uc3Qge1xuICAgIGNvbW1vbjogeyBwYWdlU2l6ZSB9LFxuICB9ID0gYXdhaXQgZ2V0U2V0dGluZygpXG4gIGNvbnN0IGxpbWl0ID0gcGFnZVNpemVcbiAgY29uc3QgbGF0ZXN0T3JkZXJzID0gYXdhaXQgT3JkZXIuZmluZCgpXG4gICAgLnBvcHVsYXRlKCd1c2VyJywgJ25hbWUnKVxuICAgIC5zb3J0KHsgY3JlYXRlZEF0OiAnZGVzYycgfSlcbiAgICAubGltaXQobGltaXQpXG4gIHJldHVybiB7XG4gICAgb3JkZXJzQ291bnQsXG4gICAgcHJvZHVjdHNDb3VudCxcbiAgICB1c2Vyc0NvdW50LFxuICAgIHRvdGFsU2FsZXMsXG4gICAgbW9udGhseVNhbGVzOiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG1vbnRobHlTYWxlcykpLFxuICAgIHNhbGVzQ2hhcnREYXRhOiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGF3YWl0IGdldFNhbGVzQ2hhcnREYXRhKGRhdGUpKSksXG4gICAgdG9wU2FsZXNDYXRlZ29yaWVzOiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRvcFNhbGVzQ2F0ZWdvcmllcykpLFxuICAgIHRvcFNhbGVzUHJvZHVjdHM6IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodG9wU2FsZXNQcm9kdWN0cykpLFxuICAgIGxhdGVzdE9yZGVyczogSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShsYXRlc3RPcmRlcnMpKSBhcyBJT3JkZXJMaXN0W10sXG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0U2FsZXNDaGFydERhdGEoZGF0ZTogRGF0ZVJhbmdlKSB7XG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IE9yZGVyLmFnZ3JlZ2F0ZShbXG4gICAge1xuICAgICAgJG1hdGNoOiB7XG4gICAgICAgIGNyZWF0ZWRBdDoge1xuICAgICAgICAgICRndGU6IGRhdGUuZnJvbSxcbiAgICAgICAgICAkbHRlOiBkYXRlLnRvLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgICRncm91cDoge1xuICAgICAgICBfaWQ6IHtcbiAgICAgICAgICB5ZWFyOiB7ICR5ZWFyOiAnJGNyZWF0ZWRBdCcgfSxcbiAgICAgICAgICBtb250aDogeyAkbW9udGg6ICckY3JlYXRlZEF0JyB9LFxuICAgICAgICAgIGRheTogeyAkZGF5T2ZNb250aDogJyRjcmVhdGVkQXQnIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHRvdGFsU2FsZXM6IHsgJHN1bTogJyR0b3RhbFByaWNlJyB9LFxuICAgICAgfSxcbiAgICB9LFxuICAgIHtcbiAgICAgICRwcm9qZWN0OiB7XG4gICAgICAgIF9pZDogMCxcbiAgICAgICAgZGF0ZToge1xuICAgICAgICAgICRjb25jYXQ6IFtcbiAgICAgICAgICAgIHsgJHRvU3RyaW5nOiAnJF9pZC55ZWFyJyB9LFxuICAgICAgICAgICAgJy8nLFxuICAgICAgICAgICAgeyAkdG9TdHJpbmc6ICckX2lkLm1vbnRoJyB9LFxuICAgICAgICAgICAgJy8nLFxuICAgICAgICAgICAgeyAkdG9TdHJpbmc6ICckX2lkLmRheScgfSxcbiAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICB0b3RhbFNhbGVzOiAxLFxuICAgICAgfSxcbiAgICB9LFxuICAgIHsgJHNvcnQ6IHsgZGF0ZTogMSB9IH0sXG4gIF0pXG4gIHJldHVybiByZXN1bHRcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0VG9wU2FsZXNQcm9kdWN0cyhkYXRlOiBEYXRlUmFuZ2UpIHtcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgT3JkZXIuYWdncmVnYXRlKFtcbiAgICB7XG4gICAgICAkbWF0Y2g6IHtcbiAgICAgICAgY3JlYXRlZEF0OiB7XG4gICAgICAgICAgJGd0ZTogZGF0ZS5mcm9tLFxuICAgICAgICAgICRsdGU6IGRhdGUudG8sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gICAgeyAkdW53aW5kOiAnJGl0ZW1zJyB9LFxuICAgIHtcbiAgICAgICRncm91cDoge1xuICAgICAgICBfaWQ6IHtcbiAgICAgICAgICBuYW1lOiAnJGl0ZW1zLm5hbWUnLFxuICAgICAgICAgIGltYWdlOiAnJGl0ZW1zLmltYWdlJyxcbiAgICAgICAgICBfaWQ6ICckaXRlbXMucHJvZHVjdCcsXG4gICAgICAgIH0sXG4gICAgICAgIHRvdGFsU2FsZXM6IHtcbiAgICAgICAgICAkc3VtOiB7ICRtdWx0aXBseTogWyckaXRlbXMucXVhbnRpdHknLCAnJGl0ZW1zLnByaWNlJ10gfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICB7XG4gICAgICAkc29ydDoge1xuICAgICAgICB0b3RhbFNhbGVzOiAtMSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICB7ICRsaW1pdDogNiB9LFxuICAgIHtcbiAgICAgICRwcm9qZWN0OiB7XG4gICAgICAgIF9pZDogMCxcbiAgICAgICAgaWQ6ICckX2lkLl9pZCcsXG4gICAgICAgIGxhYmVsOiAnJF9pZC5uYW1lJyxcbiAgICAgICAgaW1hZ2U6ICckX2lkLmltYWdlJyxcbiAgICAgICAgdmFsdWU6ICckdG90YWxTYWxlcycsXG4gICAgICB9LFxuICAgIH0sXG4gICAgeyAkc29ydDogeyBfaWQ6IDEgfSB9LFxuICBdKVxuICByZXR1cm4gcmVzdWx0XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGdldFRvcFNhbGVzQ2F0ZWdvcmllcyhkYXRlOiBEYXRlUmFuZ2UsIGxpbWl0ID0gNSkge1xuICBjb25zdCByZXN1bHQgPSBhd2FpdCBPcmRlci5hZ2dyZWdhdGUoW1xuICAgIHtcbiAgICAgICRtYXRjaDoge1xuICAgICAgICBjcmVhdGVkQXQ6IHtcbiAgICAgICAgICAkZ3RlOiBkYXRlLmZyb20sXG4gICAgICAgICAgJGx0ZTogZGF0ZS50byxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICB7ICR1bndpbmQ6ICckaXRlbXMnIH0sXG4gICAge1xuICAgICAgJGdyb3VwOiB7XG4gICAgICAgIF9pZDogJyRpdGVtcy5jYXRlZ29yeScsXG4gICAgICAgIHRvdGFsU2FsZXM6IHsgJHN1bTogJyRpdGVtcy5xdWFudGl0eScgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICB7ICRzb3J0OiB7IHRvdGFsU2FsZXM6IC0xIH0gfSxcbiAgICB7ICRsaW1pdDogbGltaXQgfSxcbiAgXSlcbiAgcmV0dXJuIHJlc3VsdFxufSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUF1U2E7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQUFBQSxhQUFBLEdBQUFFLENBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBcENTQyxrQkFBa0IsV0FBQUEsQ0FBQTtJQUFBO0lBQUFILGFBQUEsR0FBQUksQ0FBQTtJQUFBSixhQUFBLEdBQUFFLENBQUE7V0FBbEJDLGtCQUFBOztFQW9DVEUsd0JBQXdCLFdBQUFBLENBQUE7SUFBQTtJQUFBTCxhQUFBLEdBQUFJLENBQUE7SUFBQUosYUFBQSxHQUFBRSxDQUFBO1dBQXhCRyx3QkFBQTs7RUFwUkFDLFdBQVcsV0FBQUEsQ0FBQTtJQUFBO0lBQUFOLGFBQUEsR0FBQUksQ0FBQTtJQUFBSixhQUFBLEdBQUFFLENBQUE7V0FBWEksV0FBQTs7RUFtQkFDLG1CQUFtQixXQUFBQSxDQUFBO0lBQUE7SUFBQVAsYUFBQSxHQUFBSSxDQUFBO0lBQUFKLGFBQUEsR0FBQUUsQ0FBQTtXQUFuQkssbUJBQUE7O0VBbU1TQyxpQkFBaUIsV0FBQUEsQ0FBQTtJQUFBO0lBQUFSLGFBQUEsR0FBQUksQ0FBQTtJQUFBSixhQUFBLEdBQUFFLENBQUE7V0FBakJNLGlCQUFBOztFQTdFQUMsV0FBVyxXQUFBQSxDQUFBO0lBQUE7SUFBQVQsYUFBQSxHQUFBSSxDQUFBO0lBQUFKLGFBQUEsR0FBQUUsQ0FBQTtXQUFYTyxXQUFBOztFQXBCQUMsWUFBWSxXQUFBQSxDQUFBO0lBQUE7SUFBQVYsYUFBQSxHQUFBSSxDQUFBO0lBQUFKLGFBQUEsR0FBQUUsQ0FBQTtXQUFaUSxZQUFBOztFQW9DQUMsWUFBWSxXQUFBQSxDQUFBO0lBQUE7SUFBQVgsYUFBQSxHQUFBSSxDQUFBO0lBQUFKLGFBQUEsR0FBQUUsQ0FBQTtXQUFaUyxZQUFBOztFQXlCQUMsV0FBVyxXQUFBQSxDQUFBO0lBQUE7SUFBQVosYUFBQSxHQUFBSSxDQUFBO0lBQUFKLGFBQUEsR0FBQUUsQ0FBQTtXQUFYVSxXQUFBOztFQThCQUMsWUFBWSxXQUFBQSxDQUFBO0lBQUE7SUFBQWIsYUFBQSxHQUFBSSxDQUFBO0lBQUFKLGFBQUEsR0FBQUUsQ0FBQTtXQUFaVyxZQUFBOztFQXdJQUMsZUFBZSxXQUFBQSxDQUFBO0lBQUE7SUFBQWQsYUFBQSxHQUFBSSxDQUFBO0lBQUFKLGFBQUEsR0FBQUUsQ0FBQTtXQUFmWSxlQUFBOztFQXJTQUMsaUJBQWlCLFdBQUFBLENBQUE7SUFBQTtJQUFBZixhQUFBLEdBQUFJLENBQUE7SUFBQUosYUFBQSxHQUFBRSxDQUFBO1dBQWpCYSxpQkFBQTs7Ozs7a0NBbkVjOzs7a0NBQ0Y7OztrQ0FDYjs7O2tDQUNZOzs7d0VBQ0g7OztrQ0FDQzs7O2tDQUM4Qjs7O2tDQUN0Qzs7O3dFQUVIOzs7d0VBQ0g7Ozt3RUFDSTs7O2tDQUNNOzs7a0NBQ2U7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR25DLE1BQU1ULFdBQUEsR0FBYyxNQUFPVSxjQUFBO0VBQUE7RUFBQWhCLGFBQUEsR0FBQUksQ0FBQTtFQUFBSixhQUFBLEdBQUFFLENBQUE7RUFDaEMsSUFBSTtJQUFBO0lBQUFGLGFBQUEsR0FBQUUsQ0FBQTtJQUNGLE1BQU0sSUFBQWUsR0FBQSxDQUFBQyxpQkFBaUI7SUFDdkIsTUFBTUMsT0FBQTtJQUFBO0lBQUEsQ0FBQW5CLGFBQUEsR0FBQUUsQ0FBQSxRQUFVLE1BQU0sSUFBQWtCLEtBQUEsQ0FBQUMsSUFBSTtJQUFBO0lBQUFyQixhQUFBLEdBQUFFLENBQUE7SUFDMUIsSUFBSSxDQUFDaUIsT0FBQSxFQUFTO01BQUE7TUFBQW5CLGFBQUEsR0FBQXNCLENBQUE7TUFBQXRCLGFBQUEsR0FBQUUsQ0FBQTtNQUFBLE1BQU0sSUFBSXFCLEtBQUEsQ0FBTTtJQUFBO0lBQUE7SUFBQTtNQUFBdkIsYUFBQSxHQUFBc0IsQ0FBQTtJQUFBO0lBQzlCLE1BQU1FLFlBQUE7SUFBQTtJQUFBLENBQUF4QixhQUFBLEdBQUFFLENBQUEsUUFBZSxNQUFNSyxtQkFBQSxDQUN6QlMsY0FBQSxFQUNBRyxPQUFBLENBQVFNLElBQUksQ0FBQ0MsRUFBRTtJQUFBO0lBQUExQixhQUFBLEdBQUFFLENBQUE7SUFFakIsT0FBTztNQUNMeUIsT0FBQSxFQUFTO01BQ1RDLE9BQUEsRUFBUztNQUNUQyxJQUFBLEVBQU07UUFBRUMsT0FBQSxFQUFTTixZQUFBLENBQWFPLEdBQUcsQ0FBQ0MsUUFBUTtNQUFHO0lBQy9DO0VBQ0YsRUFBRSxPQUFPQyxLQUFBLEVBQU87SUFBQTtJQUFBakMsYUFBQSxHQUFBRSxDQUFBO0lBQ2QsT0FBTztNQUFFeUIsT0FBQSxFQUFTO01BQU9DLE9BQUEsRUFBUyxJQUFBTSxNQUFBLENBQUFDLFdBQVcsRUFBQ0YsS0FBQTtJQUFPO0VBQ3ZEO0FBQ0Y7QUFBQTtBQUFBakMsYUFBQSxHQUFBRSxDQUFBO0FBRU8sTUFBTUssbUJBQUEsR0FBc0IsTUFBQUEsQ0FDakNTLGNBQUEsRUFDQW9CLE1BQUE7RUFBQTtFQUFBcEMsYUFBQSxHQUFBSSxDQUFBO0VBRUEsTUFBTWlDLElBQUE7RUFBQTtFQUFBLENBQUFyQyxhQUFBLEdBQUFFLENBQUEsUUFBTztJQUNYLEdBQUdjLGNBQWM7SUFDakIsR0FBR1gsd0JBQUEsQ0FBeUI7TUFDMUJpQyxLQUFBLEVBQU90QixjQUFBLENBQWVzQixLQUFLO01BQzNCQyxlQUFBLEVBQWlCdkIsY0FBQSxDQUFldUIsZUFBZTtNQUMvQ0MsaUJBQUEsRUFBbUJ4QixjQUFBLENBQWV3QjtJQUNwQztFQUNGO0VBRUEsTUFBTUMsS0FBQTtFQUFBO0VBQUEsQ0FBQXpDLGFBQUEsR0FBQUUsQ0FBQSxRQUFRd0MsVUFBQSxDQUFBQyxnQkFBZ0IsQ0FBQ0MsS0FBSyxDQUFDO0lBQ25DbkIsSUFBQSxFQUFNVyxNQUFBO0lBQ05FLEtBQUEsRUFBT0QsSUFBQSxDQUFLQyxLQUFLLENBQUNPLEdBQUcsQ0FBRUMsSUFBQSxJQUFVO01BQUE7TUFBQTlDLGFBQUEsR0FBQUksQ0FBQTtNQUFBSixhQUFBLEdBQUFFLENBQUE7TUFBQTtRQUMvQixHQUFHNEMsSUFBSTtRQUNQQyxLQUFBLEVBQU8sT0FBT0QsSUFBQSxDQUFLQyxLQUFLLEtBQUs7UUFBQTtRQUFBLENBQUEvQyxhQUFBLEdBQUFzQixDQUFBO1FBQVc7UUFBQSxDQUFBdEIsYUFBQSxHQUFBc0IsQ0FBQSxVQUFBd0IsSUFBQSxDQUFLQyxLQUFLLEVBQUVDLElBQUE7UUFBQTtRQUFBLENBQUFoRCxhQUFBLEdBQUFzQixDQUFBLFVBQVE7UUFBQTtRQUFBLENBQUF0QixhQUFBLEdBQUFzQixDQUFBLFVBQVF3QixJQUFBLENBQUtDLEtBQUs7TUFDaEY7SUFBQTtJQUNBUixlQUFBLEVBQWlCRixJQUFBLENBQUtFLGVBQWU7SUFDckNVLGFBQUEsRUFBZVosSUFBQSxDQUFLWSxhQUFhO0lBQ2pDQyxVQUFBLEVBQVliLElBQUEsQ0FBS2EsVUFBVTtJQUMzQkMsYUFBQSxFQUFlZCxJQUFBLENBQUtjLGFBQWE7SUFDakNDLFFBQUEsRUFBVWYsSUFBQSxDQUFLZSxRQUFRO0lBQ3ZCQyxVQUFBLEVBQVloQixJQUFBLENBQUtnQixVQUFVO0lBQzNCQyxvQkFBQSxFQUFzQmpCLElBQUEsQ0FBS2lCLG9CQUFvQjtJQUMvQ0MsVUFBQTtJQUFZO0lBQUEsQ0FBQXZELGFBQUEsR0FBQXNCLENBQUEsVUFBQWUsSUFBQSxDQUFLa0IsVUFBVTtJQUFBO0lBQUEsQ0FBQXZELGFBQUEsR0FBQXNCLENBQUEsVUFBSTtJQUMvQmtDLGNBQUE7SUFBZ0I7SUFBQSxDQUFBeEQsYUFBQSxHQUFBc0IsQ0FBQSxVQUFBZSxJQUFBLENBQUttQixjQUFjO0lBQUE7SUFBQSxDQUFBeEQsYUFBQSxHQUFBc0IsQ0FBQSxVQUFJO0VBQ3pDO0VBQUE7RUFBQXRCLGFBQUEsR0FBQUUsQ0FBQTtFQUNBLE9BQU8sTUFBTXVELFdBQUEsQ0FBQUMsT0FBSyxDQUFDQyxNQUFNLENBQUNsQixLQUFBO0FBQzVCO0FBRU8sZUFBZTFCLGtCQUFrQmUsT0FBZTtFQUFBO0VBQUE5QixhQUFBLEdBQUFJLENBQUE7RUFDckQsTUFBTWUsT0FBQTtFQUFBO0VBQUEsQ0FBQW5CLGFBQUEsR0FBQUUsQ0FBQSxRQUFVLE1BQU0wRCxTQUFBLENBQUFGLE9BQVEsQ0FBQ0csVUFBVSxDQUFDQyxZQUFZO0VBQUE7RUFBQTlELGFBQUEsR0FBQUUsQ0FBQTtFQUN0RGlCLE9BQUEsQ0FBUTRDLGdCQUFnQjtFQUFBO0VBQUEvRCxhQUFBLEdBQUFFLENBQUE7RUFDeEIsSUFBSTtJQUFBO0lBQUFGLGFBQUEsR0FBQUUsQ0FBQTtJQUNGLE1BQU0sSUFBQWUsR0FBQSxDQUFBQyxpQkFBaUI7SUFDdkIsTUFBTXVCLEtBQUE7SUFBQTtJQUFBLENBQUF6QyxhQUFBLEdBQUFFLENBQUEsUUFBUSxNQUFNdUQsV0FBQSxDQUFBQyxPQUFLLENBQUNNLFFBQVEsQ0FBQ2xDLE9BQUEsRUFBU21DLFFBQVEsQ0FFakQsUUFBUSxjQUFjOUMsT0FBTyxDQUFDQSxPQUFBO0lBQUE7SUFBQW5CLGFBQUEsR0FBQUUsQ0FBQTtJQUNqQyxJQUFJLENBQUN1QyxLQUFBLEVBQU87TUFBQTtNQUFBekMsYUFBQSxHQUFBc0IsQ0FBQTtNQUFBdEIsYUFBQSxHQUFBRSxDQUFBO01BQUEsTUFBTSxJQUFJcUIsS0FBQSxDQUFNO0lBQUE7SUFBQTtJQUFBO01BQUF2QixhQUFBLEdBQUFzQixDQUFBO0lBQUE7SUFBQXRCLGFBQUEsR0FBQUUsQ0FBQTtJQUM1QixJQUFJdUMsS0FBQSxDQUFNeUIsTUFBTSxFQUFFO01BQUE7TUFBQWxFLGFBQUEsR0FBQXNCLENBQUE7TUFBQXRCLGFBQUEsR0FBQUUsQ0FBQTtNQUFBLE1BQU0sSUFBSXFCLEtBQUEsQ0FBTTtJQUFBO0lBQUE7SUFBQTtNQUFBdkIsYUFBQSxHQUFBc0IsQ0FBQTtJQUFBO0lBQUF0QixhQUFBLEdBQUFFLENBQUE7SUFDbEN1QyxLQUFBLENBQU15QixNQUFNLEdBQUc7SUFBQTtJQUFBbEUsYUFBQSxHQUFBRSxDQUFBO0lBQ2Z1QyxLQUFBLENBQU0wQixNQUFNLEdBQUcsSUFBSUMsSUFBQTtJQUFBO0lBQUFwRSxhQUFBLEdBQUFFLENBQUE7SUFDbkIsTUFBTXVDLEtBQUEsQ0FBTTRCLElBQUksQ0FBQztNQUFFbEQ7SUFBUTtJQUUzQjtJQUNBLE1BQU1tRCxRQUFBO0lBQUE7SUFBQSxDQUFBdEUsYUFBQSxHQUFBRSxDQUFBLFFBQVcsTUFBTSxJQUFBcUUsZUFBQSxDQUFBQyxVQUFVO0lBQ2pDLE1BQU1DLGdCQUFBO0lBQUE7SUFBQSxDQUFBekUsYUFBQSxHQUFBRSxDQUFBLFFBQWtCb0UsUUFBQSxDQUFTSSxlQUFlO0lBQ2hELE1BQU1DLFFBQUE7SUFBQTtJQUFBLENBQUEzRSxhQUFBLEdBQUFFLENBQUE7SUFBVztJQUFBLENBQUFGLGFBQUEsR0FBQXNCLENBQUEsVUFBQW1ELGdCQUFBO0lBQUE7SUFBQSxDQUFBekUsYUFBQSxHQUFBc0IsQ0FBQSxVQUFtQjtJQUNwQyxNQUFNc0QsTUFBQTtJQUFBO0lBQUEsQ0FBQTVFLGFBQUEsR0FBQUUsQ0FBQSxRQUFTMkUsSUFBQSxDQUFLQyxLQUFLLENBQUNyQyxLQUFBLENBQU1ZLFVBQVUsSUFBRztJQUFBO0lBQUFyRCxhQUFBLEdBQUFFLENBQUE7SUFDN0MsTUFBTSxJQUFBNkUsY0FBQSxDQUFBQyxXQUFXLEVBQUN2QyxLQUFBLENBQU1oQixJQUFJLENBQUNNLEdBQUcsQ0FBQ0MsUUFBUSxJQUFJNEMsTUFBQSxFQUFRLHFCQUFxQjlDLE9BQUEsRUFBUyxFQUFFQSxPQUFBO0lBRXJGO0lBQUE7SUFBQTlCLGFBQUEsR0FBQUUsQ0FBQTtJQUNBLEtBQUssTUFBTTRDLElBQUEsSUFBUUwsS0FBQSxDQUFNSCxLQUFLLEVBQUU7TUFDOUIsTUFBTTJDLE9BQUE7TUFBQTtNQUFBLENBQUFqRixhQUFBLEdBQUFFLENBQUEsUUFBVSxNQUFNZ0YsYUFBQSxDQUFBeEIsT0FBTyxDQUFDTSxRQUFRLENBQUNsQixJQUFBLENBQUttQyxPQUFPLEVBQUU5RCxPQUFPLENBQUNBLE9BQUE7TUFBQTtNQUFBbkIsYUFBQSxHQUFBRSxDQUFBO01BQzdEO01BQUk7TUFBQSxDQUFBRixhQUFBLEdBQUFzQixDQUFBLFdBQUEyRCxPQUFBO01BQUE7TUFBQSxDQUFBakYsYUFBQSxHQUFBc0IsQ0FBQSxXQUFXMkQsT0FBQSxDQUFRRSxRQUFRLEdBQUU7UUFBQTtRQUFBbkYsYUFBQSxHQUFBc0IsQ0FBQTtRQUMvQixNQUFNOEQsTUFBQTtRQUFBO1FBQUEsQ0FBQXBGLGFBQUEsR0FBQUUsQ0FBQSxRQUFTLE1BQU1tRixVQUFBLENBQUEzQixPQUFJLENBQUM0QixPQUFPLENBQUM7VUFBRUMsZUFBQSxFQUFpQk4sT0FBQSxDQUFRRTtRQUFTLEdBQUdoRSxPQUFPLENBQUNBLE9BQUE7UUFBQTtRQUFBbkIsYUFBQSxHQUFBRSxDQUFBO1FBQ2pGLElBQUlrRixNQUFBLEVBQVE7VUFBQTtVQUFBcEYsYUFBQSxHQUFBc0IsQ0FBQTtVQUFBdEIsYUFBQSxHQUFBRSxDQUFBO1VBQ1YsTUFBTSxJQUFBNkUsY0FBQSxDQUFBQyxXQUFXLEVBQUNJLE1BQUEsQ0FBT3JELEdBQUcsQ0FBQ0MsUUFBUSxJQUFJLElBQUksV0FBV2MsSUFBQSxDQUFLRSxJQUFJLGFBQWFsQixPQUFBLEVBQVMsRUFBRUEsT0FBQTtRQUMzRjtRQUFBO1FBQUE7VUFBQTlCLGFBQUEsR0FBQXNCLENBQUE7UUFBQTtNQUNGO01BQUE7TUFBQTtRQUFBdEIsYUFBQSxHQUFBc0IsQ0FBQTtNQUFBO0lBQ0Y7SUFBQTtJQUFBdEIsYUFBQSxHQUFBRSxDQUFBO0lBRUEsSUFBSSxDQUFDc0YsT0FBQSxDQUFRQyxHQUFHLENBQUNDLFdBQVcsRUFBRUMsVUFBQSxDQUFXLHdCQUN2QztNQUFBO01BQUEzRixhQUFBLEdBQUFzQixDQUFBO01BQUF0QixhQUFBLEdBQUFFLENBQUE7TUFBQSxNQUFNMEYsa0JBQUEsQ0FBbUJuRCxLQUFBLENBQU1WLEdBQUcsRUFBRVosT0FBQTtJQUFBO0lBQUE7SUFBQTtNQUFBbkIsYUFBQSxHQUFBc0IsQ0FBQTtJQUFBO0lBQUF0QixhQUFBLEdBQUFFLENBQUE7SUFDdEMsSUFBSXVDLEtBQUEsQ0FBTWhCLElBQUksQ0FBQ29FLEtBQUssRUFBRTtNQUFBO01BQUE3RixhQUFBLEdBQUFzQixDQUFBO01BQUF0QixhQUFBLEdBQUFFLENBQUE7TUFBQSxNQUFNLElBQUE0RixPQUFBLENBQUFDLG1CQUFtQixFQUFDO1FBQUV0RDtNQUFNO0lBQUE7SUFBQTtJQUFBO01BQUF6QyxhQUFBLEdBQUFzQixDQUFBO0lBQUE7SUFBQXRCLGFBQUEsR0FBQUUsQ0FBQTtJQUN4RCxNQUFNaUIsT0FBQSxDQUFRNkUsaUJBQWlCO0lBQUE7SUFBQWhHLGFBQUEsR0FBQUUsQ0FBQTtJQUMvQixJQUFBK0YsTUFBQSxDQUFBQyxjQUFjLEVBQUMsbUJBQW1CcEUsT0FBQSxFQUFTO0lBQUE7SUFBQTlCLGFBQUEsR0FBQUUsQ0FBQTtJQUMzQyxPQUFPO01BQUV5QixPQUFBLEVBQVM7TUFBTUMsT0FBQSxFQUFTO0lBQTBCO0VBQzdELEVBQUUsT0FBT3VFLEdBQUEsRUFBSztJQUFBO0lBQUFuRyxhQUFBLEdBQUFFLENBQUE7SUFDWixNQUFNaUIsT0FBQSxDQUFRaUYsZ0JBQWdCO0lBQUE7SUFBQXBHLGFBQUEsR0FBQUUsQ0FBQTtJQUM5QixPQUFPO01BQUV5QixPQUFBLEVBQVM7TUFBT0MsT0FBQSxFQUFTLElBQUFNLE1BQUEsQ0FBQUMsV0FBVyxFQUFDZ0UsR0FBQTtJQUFLO0VBQ3JELFVBQVU7SUFBQTtJQUFBbkcsYUFBQSxHQUFBRSxDQUFBO0lBQ1JpQixPQUFBLENBQVFrRixVQUFVO0VBQ3BCO0FBQ0Y7QUFBQTtBQUFBckcsYUFBQSxHQUFBRSxDQUFBO0FBRUEsTUFBTTBGLGtCQUFBLEdBQXFCLE1BQUFBLENBQU85RCxPQUFBLEVBQWlCWCxPQUFBO0VBQUE7RUFBQW5CLGFBQUEsR0FBQUksQ0FBQTtFQUNqRCxNQUFNa0csSUFBQTtFQUFBO0VBQUEsQ0FBQXRHLGFBQUEsR0FBQUUsQ0FBQSxRQUFPO0lBQUVpQjtFQUFRO0VBQ3ZCLE1BQU1zQixLQUFBO0VBQUE7RUFBQSxDQUFBekMsYUFBQSxHQUFBRSxDQUFBLFFBQVEsTUFBTXVELFdBQUEsQ0FBQUMsT0FBSyxDQUFDNkMsZ0JBQWdCLENBQ3hDO0lBQUV4RSxHQUFBLEVBQUtEO0VBQVEsR0FDZjtJQUFFb0MsTUFBQSxFQUFRO0lBQU1DLE1BQUEsRUFBUSxJQUFJQyxJQUFBO0VBQU8sR0FDbkNrQyxJQUFBO0VBQUE7RUFBQXRHLGFBQUEsR0FBQUUsQ0FBQTtFQUVGLElBQUksQ0FBQ3VDLEtBQUEsRUFBTztJQUFBO0lBQUF6QyxhQUFBLEdBQUFzQixDQUFBO0lBQUF0QixhQUFBLEdBQUFFLENBQUE7SUFBQSxNQUFNLElBQUlxQixLQUFBLENBQU07RUFBQTtFQUFBO0VBQUE7SUFBQXZCLGFBQUEsR0FBQXNCLENBQUE7RUFBQTtFQUFBdEIsYUFBQSxHQUFBRSxDQUFBO0VBQzVCLEtBQUssTUFBTTRDLElBQUEsSUFBUUwsS0FBQSxDQUFNSCxLQUFLLEVBQUU7SUFDOUIsTUFBTTJDLE9BQUE7SUFBQTtJQUFBLENBQUFqRixhQUFBLEdBQUFFLENBQUEsUUFBVSxNQUFNZ0YsYUFBQSxDQUFBeEIsT0FBTyxDQUFDTSxRQUFRLENBQUNsQixJQUFBLENBQUttQyxPQUFPLEVBQUU5RCxPQUFPLENBQUNBLE9BQUE7SUFBQTtJQUFBbkIsYUFBQSxHQUFBRSxDQUFBO0lBQzdELElBQUksQ0FBQytFLE9BQUEsRUFBUztNQUFBO01BQUFqRixhQUFBLEdBQUFzQixDQUFBO01BQUF0QixhQUFBLEdBQUFFLENBQUE7TUFBQSxNQUFNLElBQUlxQixLQUFBLENBQU07SUFBQTtJQUFBO0lBQUE7TUFBQXZCLGFBQUEsR0FBQXNCLENBQUE7SUFBQTtJQUFBdEIsYUFBQSxHQUFBRSxDQUFBO0lBQzlCK0UsT0FBQSxDQUFRdUIsWUFBWSxJQUFJMUQsSUFBQSxDQUFLMkQsUUFBUTtJQUFBO0lBQUF6RyxhQUFBLEdBQUFFLENBQUE7SUFDckMsTUFBTWdGLGFBQUEsQ0FBQXhCLE9BQU8sQ0FBQ2dELFNBQVMsQ0FDckI7TUFBRTNFLEdBQUEsRUFBS2tELE9BQUEsQ0FBUWxEO0lBQUksR0FDbkI7TUFBRXlFLFlBQUEsRUFBY3ZCLE9BQUEsQ0FBUXVCO0lBQWEsR0FDckNGLElBQUE7RUFFSjtBQUNGO0FBRU8sZUFBZTVGLGFBQWFvQixPQUFlO0VBQUE7RUFBQTlCLGFBQUEsR0FBQUksQ0FBQTtFQUFBSixhQUFBLEdBQUFFLENBQUE7RUFDaEQsSUFBSTtJQUFBO0lBQUFGLGFBQUEsR0FBQUUsQ0FBQTtJQUNGLE1BQU0sSUFBQWUsR0FBQSxDQUFBQyxpQkFBaUI7SUFDdkIsTUFBTXVCLEtBQUE7SUFBQTtJQUFBLENBQUF6QyxhQUFBLEdBQUFFLENBQUEsUUFBUSxNQUFNdUQsV0FBQSxDQUFBQyxPQUFLLENBQUNNLFFBQVEsQ0FBQ2xDLE9BQUEsRUFBU21DLFFBQVEsQ0FFakQsUUFBUTtJQUFBO0lBQUFqRSxhQUFBLEdBQUFFLENBQUE7SUFDWCxJQUFJLENBQUN1QyxLQUFBLEVBQU87TUFBQTtNQUFBekMsYUFBQSxHQUFBc0IsQ0FBQTtNQUFBdEIsYUFBQSxHQUFBRSxDQUFBO01BQUEsTUFBTSxJQUFJcUIsS0FBQSxDQUFNO0lBQUE7SUFBQTtJQUFBO01BQUF2QixhQUFBLEdBQUFzQixDQUFBO0lBQUE7SUFBQXRCLGFBQUEsR0FBQUUsQ0FBQTtJQUM1QixJQUFJLENBQUN1QyxLQUFBLENBQU15QixNQUFNLEVBQUU7TUFBQTtNQUFBbEUsYUFBQSxHQUFBc0IsQ0FBQTtNQUFBdEIsYUFBQSxHQUFBRSxDQUFBO01BQUEsTUFBTSxJQUFJcUIsS0FBQSxDQUFNO0lBQUE7SUFBQTtJQUFBO01BQUF2QixhQUFBLEdBQUFzQixDQUFBO0lBQUE7SUFBQXRCLGFBQUEsR0FBQUUsQ0FBQTtJQUNuQ3VDLEtBQUEsQ0FBTWtFLFdBQVcsR0FBRztJQUFBO0lBQUEzRyxhQUFBLEdBQUFFLENBQUE7SUFDcEJ1QyxLQUFBLENBQU1tRSxXQUFXLEdBQUcsSUFBSXhDLElBQUE7SUFBQTtJQUFBcEUsYUFBQSxHQUFBRSxDQUFBO0lBQ3hCLE1BQU11QyxLQUFBLENBQU00QixJQUFJO0lBQUE7SUFBQXJFLGFBQUEsR0FBQUUsQ0FBQTtJQUNoQixJQUFJdUMsS0FBQSxDQUFNaEIsSUFBSSxDQUFDb0UsS0FBSyxFQUFFO01BQUE7TUFBQTdGLGFBQUEsR0FBQXNCLENBQUE7TUFBQXRCLGFBQUEsR0FBQUUsQ0FBQTtNQUFBLE1BQU0sSUFBQTRGLE9BQUEsQ0FBQWUsdUJBQXVCLEVBQUM7UUFBRXBFO01BQU07SUFBQTtJQUFBO0lBQUE7TUFBQXpDLGFBQUEsR0FBQXNCLENBQUE7SUFBQTtJQUFBdEIsYUFBQSxHQUFBRSxDQUFBO0lBQzVELElBQUErRixNQUFBLENBQUFDLGNBQWMsRUFBQyxtQkFBbUJwRSxPQUFBLEVBQVM7SUFBQTtJQUFBOUIsYUFBQSxHQUFBRSxDQUFBO0lBQzNDLE9BQU87TUFBRXlCLE9BQUEsRUFBUztNQUFNQyxPQUFBLEVBQVM7SUFBK0I7RUFDbEUsRUFBRSxPQUFPdUUsR0FBQSxFQUFLO0lBQUE7SUFBQW5HLGFBQUEsR0FBQUUsQ0FBQTtJQUNaLE9BQU87TUFBRXlCLE9BQUEsRUFBUztNQUFPQyxPQUFBLEVBQVMsSUFBQU0sTUFBQSxDQUFBQyxXQUFXLEVBQUNnRSxHQUFBO0lBQUs7RUFDckQ7QUFDRjtBQUdPLGVBQWUxRixZQUFZaUIsRUFBVTtFQUFBO0VBQUExQixhQUFBLEdBQUFJLENBQUE7RUFBQUosYUFBQSxHQUFBRSxDQUFBO0VBQzFDLElBQUk7SUFBQTtJQUFBRixhQUFBLEdBQUFFLENBQUE7SUFDRixNQUFNLElBQUFlLEdBQUEsQ0FBQUMsaUJBQWlCO0lBQ3ZCLE1BQU00RixHQUFBO0lBQUE7SUFBQSxDQUFBOUcsYUFBQSxHQUFBRSxDQUFBLFNBQU0sTUFBTXVELFdBQUEsQ0FBQUMsT0FBSyxDQUFDcUQsaUJBQWlCLENBQUNyRixFQUFBO0lBQUE7SUFBQTFCLGFBQUEsR0FBQUUsQ0FBQTtJQUMxQyxJQUFJLENBQUM0RyxHQUFBLEVBQUs7TUFBQTtNQUFBOUcsYUFBQSxHQUFBc0IsQ0FBQTtNQUFBdEIsYUFBQSxHQUFBRSxDQUFBO01BQUEsTUFBTSxJQUFJcUIsS0FBQSxDQUFNO0lBQUE7SUFBQTtJQUFBO01BQUF2QixhQUFBLEdBQUFzQixDQUFBO0lBQUE7SUFBQXRCLGFBQUEsR0FBQUUsQ0FBQTtJQUMxQixJQUFBK0YsTUFBQSxDQUFBQyxjQUFjLEVBQUM7SUFBQTtJQUFBbEcsYUFBQSxHQUFBRSxDQUFBO0lBQ2YsT0FBTztNQUNMeUIsT0FBQSxFQUFTO01BQ1RDLE9BQUEsRUFBUztJQUNYO0VBQ0YsRUFBRSxPQUFPSyxLQUFBLEVBQU87SUFBQTtJQUFBakMsYUFBQSxHQUFBRSxDQUFBO0lBQ2QsT0FBTztNQUFFeUIsT0FBQSxFQUFTO01BQU9DLE9BQUEsRUFBUyxJQUFBTSxNQUFBLENBQUFDLFdBQVcsRUFBQ0YsS0FBQTtJQUFPO0VBQ3ZEO0FBQ0Y7QUFHTyxlQUFldEIsYUFBYTtFQUNqQ3FHLEtBQUs7RUFDTEM7QUFBSSxDQUlMO0VBQUE7RUFBQWpILGFBQUEsR0FBQUksQ0FBQTtFQUNDLE1BQU07SUFDSjhHLE1BQUEsRUFBUTtNQUFFQztJQUFRO0VBQUUsQ0FDckI7RUFBQTtFQUFBLENBQUFuSCxhQUFBLEdBQUFFLENBQUEsU0FBRyxNQUFNLElBQUFxRSxlQUFBLENBQUFDLFVBQVU7RUFBQTtFQUFBeEUsYUFBQSxHQUFBRSxDQUFBO0VBQ3BCOEcsS0FBQTtFQUFRO0VBQUEsQ0FBQWhILGFBQUEsR0FBQXNCLENBQUEsV0FBQTBGLEtBQUE7RUFBQTtFQUFBLENBQUFoSCxhQUFBLEdBQUFzQixDQUFBLFdBQVM2RixRQUFBO0VBQUE7RUFBQW5ILGFBQUEsR0FBQUUsQ0FBQTtFQUNqQixNQUFNLElBQUFlLEdBQUEsQ0FBQUMsaUJBQWlCO0VBQ3ZCLE1BQU1rRyxVQUFBO0VBQUE7RUFBQSxDQUFBcEgsYUFBQSxHQUFBRSxDQUFBLFNBQWEsQ0FBQ21ILE1BQUEsQ0FBT0osSUFBQSxJQUFRLEtBQUtELEtBQUE7RUFDeEMsTUFBTU0sTUFBQTtFQUFBO0VBQUEsQ0FBQXRILGFBQUEsR0FBQUUsQ0FBQSxTQUFTLE1BQU11RCxXQUFBLENBQUFDLE9BQUssQ0FBQzZELElBQUksR0FDNUJ0RCxRQUFRLENBQUMsUUFBUSxRQUNqQnVELElBQUksQ0FBQztJQUFFQyxTQUFBLEVBQVc7RUFBTyxHQUN6QkMsSUFBSSxDQUFDTixVQUFBLEVBQ0xKLEtBQUssQ0FBQ0EsS0FBQTtFQUNULE1BQU1XLFdBQUE7RUFBQTtFQUFBLENBQUEzSCxhQUFBLEdBQUFFLENBQUEsU0FBYyxNQUFNdUQsV0FBQSxDQUFBQyxPQUFLLENBQUNrRSxjQUFjO0VBQUE7RUFBQTVILGFBQUEsR0FBQUUsQ0FBQTtFQUM5QyxPQUFPO0lBQ0wyQixJQUFBLEVBQU1nRyxJQUFBLENBQUtqRixLQUFLLENBQUNpRixJQUFBLENBQUtDLFNBQVMsQ0FBQ1IsTUFBQTtJQUNoQ1MsVUFBQSxFQUFZbEQsSUFBQSxDQUFLbUQsSUFBSSxDQUFDTCxXQUFBLEdBQWNYLEtBQUE7RUFDdEM7QUFDRjtBQUVPLGVBQWVwRyxZQUFZO0VBQ2hDb0csS0FBSztFQUNMQztBQUFJLENBSUw7RUFBQTtFQUFBakgsYUFBQSxHQUFBSSxDQUFBO0VBQ0MsTUFBTTtJQUNKOEcsTUFBQSxFQUFRO01BQUVDO0lBQVE7RUFBRSxDQUNyQjtFQUFBO0VBQUEsQ0FBQW5ILGFBQUEsR0FBQUUsQ0FBQSxTQUFHLE1BQU0sSUFBQXFFLGVBQUEsQ0FBQUMsVUFBVTtFQUFBO0VBQUF4RSxhQUFBLEdBQUFFLENBQUE7RUFDcEI4RyxLQUFBO0VBQVE7RUFBQSxDQUFBaEgsYUFBQSxHQUFBc0IsQ0FBQSxXQUFBMEYsS0FBQTtFQUFBO0VBQUEsQ0FBQWhILGFBQUEsR0FBQXNCLENBQUEsV0FBUzZGLFFBQUE7RUFBQTtFQUFBbkgsYUFBQSxHQUFBRSxDQUFBO0VBQ2pCLE1BQU0sSUFBQWUsR0FBQSxDQUFBQyxpQkFBaUI7RUFDdkIsTUFBTUMsT0FBQTtFQUFBO0VBQUEsQ0FBQW5CLGFBQUEsR0FBQUUsQ0FBQSxTQUFVLE1BQU0sSUFBQWtCLEtBQUEsQ0FBQUMsSUFBSTtFQUFBO0VBQUFyQixhQUFBLEdBQUFFLENBQUE7RUFDMUIsSUFBSSxDQUFDaUIsT0FBQSxFQUFTO0lBQUE7SUFBQW5CLGFBQUEsR0FBQXNCLENBQUE7SUFBQXRCLGFBQUEsR0FBQUUsQ0FBQTtJQUNaLE1BQU0sSUFBSXFCLEtBQUEsQ0FBTTtFQUNsQjtFQUFBO0VBQUE7SUFBQXZCLGFBQUEsR0FBQXNCLENBQUE7RUFBQTtFQUNBLE1BQU04RixVQUFBO0VBQUE7RUFBQSxDQUFBcEgsYUFBQSxHQUFBRSxDQUFBLFNBQWEsQ0FBQ21ILE1BQUEsQ0FBT0osSUFBQSxJQUFRLEtBQUtELEtBQUE7RUFDeEMsTUFBTU0sTUFBQTtFQUFBO0VBQUEsQ0FBQXRILGFBQUEsR0FBQUUsQ0FBQSxTQUFTLE1BQU11RCxXQUFBLENBQUFDLE9BQUssQ0FBQzZELElBQUksQ0FBQztJQUM5QjlGLElBQUEsRUFBTU4sT0FBQSxFQUFTTSxJQUFBLEVBQU1DO0VBQ3ZCLEdBQ0c4RixJQUFJLENBQUM7SUFBRUMsU0FBQSxFQUFXO0VBQU8sR0FDekJDLElBQUksQ0FBQ04sVUFBQSxFQUNMSixLQUFLLENBQUNBLEtBQUE7RUFDVCxNQUFNVyxXQUFBO0VBQUE7RUFBQSxDQUFBM0gsYUFBQSxHQUFBRSxDQUFBLFNBQWMsTUFBTXVELFdBQUEsQ0FBQUMsT0FBSyxDQUFDa0UsY0FBYyxDQUFDO0lBQUVuRyxJQUFBLEVBQU1OLE9BQUEsRUFBU00sSUFBQSxFQUFNQztFQUFHO0VBQUE7RUFBQTFCLGFBQUEsR0FBQUUsQ0FBQTtFQUN6RSxPQUFPO0lBQ0wyQixJQUFBLEVBQU1nRyxJQUFBLENBQUtqRixLQUFLLENBQUNpRixJQUFBLENBQUtDLFNBQVMsQ0FBQ1IsTUFBQTtJQUNoQ1MsVUFBQSxFQUFZbEQsSUFBQSxDQUFLbUQsSUFBSSxDQUFDTCxXQUFBLEdBQWNYLEtBQUE7RUFDdEM7QUFDRjtBQUVPLGVBQWVuRyxhQUFhaUIsT0FBZTtFQUFBO0VBQUE5QixhQUFBLEdBQUFJLENBQUE7RUFBQUosYUFBQSxHQUFBRSxDQUFBO0VBQ2hELE1BQU0sSUFBQWUsR0FBQSxDQUFBQyxpQkFBaUI7RUFDdkIsTUFBTXVCLEtBQUE7RUFBQTtFQUFBLENBQUF6QyxhQUFBLEdBQUFFLENBQUEsU0FBUSxNQUFNdUQsV0FBQSxDQUFBQyxPQUFLLENBQUNNLFFBQVEsQ0FBQ2xDLE9BQUE7RUFBQTtFQUFBOUIsYUFBQSxHQUFBRSxDQUFBO0VBQ25DLE9BQU8ySCxJQUFBLENBQUtqRixLQUFLLENBQUNpRixJQUFBLENBQUtDLFNBQVMsQ0FBQ3JGLEtBQUE7QUFDbkM7QUFFTyxlQUFlakMsa0JBQWtCc0IsT0FBZTtFQUFBO0VBQUE5QixhQUFBLEdBQUFJLENBQUE7RUFBQUosYUFBQSxHQUFBRSxDQUFBO0VBQ3JELE1BQU0sSUFBQWUsR0FBQSxDQUFBQyxpQkFBaUI7RUFBQTtFQUFBbEIsYUFBQSxHQUFBRSxDQUFBO0VBQ3ZCLElBQUk7SUFDRixNQUFNdUMsS0FBQTtJQUFBO0lBQUEsQ0FBQXpDLGFBQUEsR0FBQUUsQ0FBQSxTQUFRLE1BQU11RCxXQUFBLENBQUFDLE9BQUssQ0FBQ00sUUFBUSxDQUFDbEMsT0FBQTtJQUFBO0lBQUE5QixhQUFBLEdBQUFFLENBQUE7SUFDbkMsSUFBSXVDLEtBQUEsRUFBTztNQUFBO01BQUF6QyxhQUFBLEdBQUFzQixDQUFBO01BQ1QsTUFBTTJHLFdBQUE7TUFBQTtNQUFBLENBQUFqSSxhQUFBLEdBQUFFLENBQUEsU0FBYyxNQUFNZ0ksT0FBQSxDQUFBQyxNQUFNLENBQUM3SCxXQUFXLENBQUNtQyxLQUFBLENBQU1ZLFVBQVU7TUFBQTtNQUFBckQsYUFBQSxHQUFBRSxDQUFBO01BQzdEdUMsS0FBQSxDQUFNMkYsYUFBYSxHQUFHO1FBQ3BCMUcsRUFBQSxFQUFJdUcsV0FBQSxDQUFZdkcsRUFBRTtRQUNsQjJHLGFBQUEsRUFBZTtRQUNmQyxNQUFBLEVBQVE7UUFDUkMsU0FBQSxFQUFXO01BQ2I7TUFBQTtNQUFBdkksYUFBQSxHQUFBRSxDQUFBO01BQ0EsTUFBTXVDLEtBQUEsQ0FBTTRCLElBQUk7TUFBQTtNQUFBckUsYUFBQSxHQUFBRSxDQUFBO01BQ2hCLE9BQU87UUFDTHlCLE9BQUEsRUFBUztRQUNUQyxPQUFBLEVBQVM7UUFDVEMsSUFBQSxFQUFNb0csV0FBQSxDQUFZdkc7TUFDcEI7SUFDRixPQUFPO01BQUE7TUFBQTFCLGFBQUEsR0FBQXNCLENBQUE7TUFBQXRCLGFBQUEsR0FBQUUsQ0FBQTtNQUNMLE1BQU0sSUFBSXFCLEtBQUEsQ0FBTTtJQUNsQjtFQUNGLEVBQUUsT0FBTzRFLEdBQUEsRUFBSztJQUFBO0lBQUFuRyxhQUFBLEdBQUFFLENBQUE7SUFDWixPQUFPO01BQUV5QixPQUFBLEVBQVM7TUFBT0MsT0FBQSxFQUFTLElBQUFNLE1BQUEsQ0FBQUMsV0FBVyxFQUFDZ0UsR0FBQTtJQUFLO0VBQ3JEO0FBQ0Y7QUFFTyxlQUFlaEcsbUJBQ3BCMkIsT0FBZSxFQUNmRCxJQUF5QjtFQUFBO0VBQUE3QixhQUFBLEdBQUFJLENBQUE7RUFBQUosYUFBQSxHQUFBRSxDQUFBO0VBRXpCLE1BQU0sSUFBQWUsR0FBQSxDQUFBQyxpQkFBaUI7RUFBQTtFQUFBbEIsYUFBQSxHQUFBRSxDQUFBO0VBQ3ZCLElBQUk7SUFDRixNQUFNdUMsS0FBQTtJQUFBO0lBQUEsQ0FBQXpDLGFBQUEsR0FBQUUsQ0FBQSxTQUFRLE1BQU11RCxXQUFBLENBQUFDLE9BQUssQ0FBQ00sUUFBUSxDQUFDbEMsT0FBQSxFQUFTbUMsUUFBUSxDQUFDLFFBQVE7SUFBQTtJQUFBakUsYUFBQSxHQUFBRSxDQUFBO0lBQzdELElBQUksQ0FBQ3VDLEtBQUEsRUFBTztNQUFBO01BQUF6QyxhQUFBLEdBQUFzQixDQUFBO01BQUF0QixhQUFBLEdBQUFFLENBQUE7TUFBQSxNQUFNLElBQUlxQixLQUFBLENBQU07SUFBQTtJQUFBO0lBQUE7TUFBQXZCLGFBQUEsR0FBQXNCLENBQUE7SUFBQTtJQUM1QixNQUFNa0gsV0FBQTtJQUFBO0lBQUEsQ0FBQXhJLGFBQUEsR0FBQUUsQ0FBQSxTQUFjLE1BQU1nSSxPQUFBLENBQUFDLE1BQU0sQ0FBQ00sY0FBYyxDQUFDNUcsSUFBQSxDQUFLNkcsT0FBTztJQUFBO0lBQUExSSxhQUFBLEdBQUFFLENBQUE7SUFDNUQ7SUFDRTtJQUFBLENBQUFGLGFBQUEsR0FBQXNCLENBQUEsWUFBQ2tILFdBQUE7SUFBQTtJQUFBLENBQUF4SSxhQUFBLEdBQUFzQixDQUFBLFdBQ0RrSCxXQUFBLENBQVk5RyxFQUFFLEtBQUtlLEtBQUEsQ0FBTTJGLGFBQWEsRUFBRTFHLEVBQUE7SUFBQTtJQUFBLENBQUExQixhQUFBLEdBQUFzQixDQUFBLFdBQ3hDa0gsV0FBQSxDQUFZRixNQUFNLEtBQUssY0FFdkI7TUFBQTtNQUFBdEksYUFBQSxHQUFBc0IsQ0FBQTtNQUFBdEIsYUFBQSxHQUFBRSxDQUFBO01BQUEsTUFBTSxJQUFJcUIsS0FBQSxDQUFNO0lBQUE7SUFBQTtJQUFBO01BQUF2QixhQUFBLEdBQUFzQixDQUFBO0lBQUE7SUFBQXRCLGFBQUEsR0FBQUUsQ0FBQTtJQUNsQnVDLEtBQUEsQ0FBTXlCLE1BQU0sR0FBRztJQUFBO0lBQUFsRSxhQUFBLEdBQUFFLENBQUE7SUFDZnVDLEtBQUEsQ0FBTTBCLE1BQU0sR0FBRyxJQUFJQyxJQUFBO0lBQUE7SUFBQXBFLGFBQUEsR0FBQUUsQ0FBQTtJQUNuQnVDLEtBQUEsQ0FBTTJGLGFBQWEsR0FBRztNQUNwQjFHLEVBQUEsRUFBSThHLFdBQUEsQ0FBWTlHLEVBQUU7TUFDbEI0RyxNQUFBLEVBQVFFLFdBQUEsQ0FBWUYsTUFBTTtNQUMxQkQsYUFBQSxFQUFlRyxXQUFBLENBQVlHLEtBQUssQ0FBQ04sYUFBYTtNQUM5Q0UsU0FBQSxFQUNFQyxXQUFBLENBQVlJLGNBQWMsQ0FBQyxFQUFFLEVBQUVDLFFBQUEsRUFBVUMsUUFBUSxDQUFDLEVBQUUsRUFBRUMsTUFBQSxFQUFRQztJQUNsRTtJQUFBO0lBQUFoSixhQUFBLEdBQUFFLENBQUE7SUFDQSxNQUFNdUMsS0FBQSxDQUFNNEIsSUFBSTtJQUFBO0lBQUFyRSxhQUFBLEdBQUFFLENBQUE7SUFDaEIsTUFBTSxJQUFBNEYsT0FBQSxDQUFBQyxtQkFBbUIsRUFBQztNQUFFdEQ7SUFBTTtJQUFBO0lBQUF6QyxhQUFBLEdBQUFFLENBQUE7SUFDbEMsSUFBQStGLE1BQUEsQ0FBQUMsY0FBYyxFQUFDLG1CQUFtQnBFLE9BQUEsRUFBUztJQUFBO0lBQUE5QixhQUFBLEdBQUFFLENBQUE7SUFDM0MsT0FBTztNQUNMeUIsT0FBQSxFQUFTO01BQ1RDLE9BQUEsRUFBUztJQUNYO0VBQ0YsRUFBRSxPQUFPdUUsR0FBQSxFQUFLO0lBQUE7SUFBQW5HLGFBQUEsR0FBQUUsQ0FBQTtJQUNaLE9BQU87TUFBRXlCLE9BQUEsRUFBUztNQUFPQyxPQUFBLEVBQVMsSUFBQU0sTUFBQSxDQUFBQyxXQUFXLEVBQUNnRSxHQUFBO0lBQUs7RUFDckQ7QUFDRjtBQUFBO0FBQUFuRyxhQUFBLEdBQUFFLENBQUE7QUFFTyxNQUFNRyx3QkFBQSxHQUEyQixNQUFBQSxDQUFPO0VBQzdDaUMsS0FBSztFQUNMQyxlQUFlO0VBQ2ZDO0FBQWlCLENBS2xCO0VBQUE7RUFBQXhDLGFBQUEsR0FBQUksQ0FBQTtFQUNDLE1BQU07SUFBRTZJO0VBQXNCLENBQUU7RUFBQTtFQUFBLENBQUFqSixhQUFBLEdBQUFFLENBQUEsU0FBRyxNQUFNLElBQUFxRSxlQUFBLENBQUFDLFVBQVU7RUFDbkQsTUFBTXRCLFVBQUE7RUFBQTtFQUFBLENBQUFsRCxhQUFBLEdBQUFFLENBQUEsU0FBYSxJQUFBZ0MsTUFBQSxDQUFBZ0gsTUFBTSxFQUN2QjVHLEtBQUEsQ0FBTTZHLE1BQU0sQ0FBQyxDQUFDQyxHQUFBLEVBQUt0RyxJQUFBLEtBQVM7SUFBQTtJQUFBOUMsYUFBQSxHQUFBSSxDQUFBO0lBQUFKLGFBQUEsR0FBQUUsQ0FBQTtJQUFBLE9BQUFrSixHQUFBLEdBQU10RyxJQUFBLENBQUt1RyxLQUFLLEdBQUd2RyxJQUFBLENBQUsyRCxRQUFRO0VBQVIsQ0FBUSxFQUFFO0VBRWhFLE1BQU02QyxZQUFBO0VBQUE7RUFBQSxDQUFBdEosYUFBQSxHQUFBRSxDQUFBLFNBQ0orSSxzQkFBc0IsQ0FDcEJ6RyxpQkFBQSxLQUFzQitHLFNBQUE7RUFBQTtFQUFBLENBQUF2SixhQUFBLEdBQUFzQixDQUFBLFdBQ2xCMkgsc0JBQUEsQ0FBdUJPLE1BQU0sR0FBRztFQUFBO0VBQUEsQ0FBQXhKLGFBQUEsR0FBQXNCLENBQUEsV0FDaENrQixpQkFBQSxFQUNMO0VBQ0gsTUFBTVcsYUFBQTtFQUFBO0VBQUEsQ0FBQW5ELGFBQUEsR0FBQUUsQ0FBQTtFQUNKO0VBQUEsQ0FBQUYsYUFBQSxHQUFBc0IsQ0FBQSxZQUFDaUIsZUFBQTtFQUFBO0VBQUEsQ0FBQXZDLGFBQUEsR0FBQXNCLENBQUEsV0FBbUIsQ0FBQ2dJLFlBQUE7RUFBQTtFQUFBLENBQUF0SixhQUFBLEdBQUFzQixDQUFBLFdBQ2pCaUksU0FBQTtFQUFBO0VBQUEsQ0FBQXZKLGFBQUEsR0FBQXNCLENBQUE7RUFDQTtFQUFBLENBQUF0QixhQUFBLEdBQUFzQixDQUFBLFdBQUFnSSxZQUFBLENBQWFHLG9CQUFvQixHQUFHO0VBQUE7RUFBQSxDQUFBekosYUFBQSxHQUFBc0IsQ0FBQSxXQUNwQzRCLFVBQUEsSUFBY29HLFlBQUEsQ0FBYUcsb0JBQW9CO0VBQUE7RUFBQSxDQUFBekosYUFBQSxHQUFBc0IsQ0FBQSxXQUMvQztFQUFBO0VBQUEsQ0FBQXRCLGFBQUEsR0FBQXNCLENBQUEsV0FDQWdJLFlBQUEsQ0FBYW5HLGFBQWE7RUFDaEMsTUFBTUMsUUFBQTtFQUFBO0VBQUEsQ0FBQXBELGFBQUEsR0FBQUUsQ0FBQSxTQUFXLENBQUNxQyxlQUFBO0VBQUE7RUFBQSxDQUFBdkMsYUFBQSxHQUFBc0IsQ0FBQSxXQUFrQmlJLFNBQUE7RUFBQTtFQUFBLENBQUF2SixhQUFBLEdBQUFzQixDQUFBLFdBQVksSUFBQVksTUFBQSxDQUFBZ0gsTUFBTSxFQUFDaEcsVUFBQSxHQUFhO0VBQ3BFLElBQUlHLFVBQUE7RUFBQTtFQUFBLENBQUFyRCxhQUFBLEdBQUFFLENBQUEsU0FBYSxJQUFBZ0MsTUFBQSxDQUFBZ0gsTUFBTSxFQUNyQmhHLFVBQUEsSUFDR0MsYUFBQTtFQUFBO0VBQUEsQ0FBQW5ELGFBQUEsR0FBQXNCLENBQUEsV0FBZ0IsSUFBQVksTUFBQSxDQUFBZ0gsTUFBTSxFQUFDL0YsYUFBQTtFQUFBO0VBQUEsQ0FBQW5ELGFBQUEsR0FBQXNCLENBQUEsV0FBaUIsT0FDeEM4QixRQUFBO0VBQUE7RUFBQSxDQUFBcEQsYUFBQSxHQUFBc0IsQ0FBQSxXQUFXLElBQUFZLE1BQUEsQ0FBQWdILE1BQU0sRUFBQzlGLFFBQUE7RUFBQTtFQUFBLENBQUFwRCxhQUFBLEdBQUFzQixDQUFBLFdBQVk7RUFHbkM7RUFDQSxNQUFNaUMsVUFBQTtFQUFBO0VBQUEsQ0FBQXZELGFBQUEsR0FBQUUsQ0FBQTtFQUFhO0VBQUEsQ0FBQUYsYUFBQSxHQUFBc0IsQ0FBQSxXQUFBZ0IsS0FBSyxDQUFDLEVBQUUsRUFBRWlCLFVBQUE7RUFBQTtFQUFBLENBQUF2RCxhQUFBLEdBQUFzQixDQUFBLFdBQWM7RUFBQTtFQUFBdEIsYUFBQSxHQUFBRSxDQUFBO0VBQzNDLElBQUlxRCxVQUFBLEdBQWEsR0FBRztJQUFBO0lBQUF2RCxhQUFBLEdBQUFzQixDQUFBO0lBQ2xCLE1BQU1nRCxRQUFBO0lBQUE7SUFBQSxDQUFBdEUsYUFBQSxHQUFBRSxDQUFBLFNBQVcsTUFBTSxJQUFBcUUsZUFBQSxDQUFBQyxVQUFVO0lBQ2pDLE1BQU1DLGdCQUFBO0lBQUE7SUFBQSxDQUFBekUsYUFBQSxHQUFBRSxDQUFBO0lBQWtCO0lBQUEsQ0FBQUYsYUFBQSxHQUFBc0IsQ0FBQSxXQUFBZ0QsUUFBQSxDQUFTSSxlQUFlO0lBQUE7SUFBQSxDQUFBMUUsYUFBQSxHQUFBc0IsQ0FBQSxXQUFJO0lBQ3BELE1BQU1vSSxXQUFBO0lBQUE7SUFBQSxDQUFBMUosYUFBQSxHQUFBRSxDQUFBLFNBQWN5SixjQUFBLENBQWVsRixnQkFBQTtJQUNuQyxNQUFNakIsY0FBQTtJQUFBO0lBQUEsQ0FBQXhELGFBQUEsR0FBQUUsQ0FBQSxTQUFpQixJQUFBZ0MsTUFBQSxDQUFBZ0gsTUFBTSxFQUFDM0YsVUFBQSxHQUFhbUcsV0FBQTtJQUFBO0lBQUExSixhQUFBLEdBQUFFLENBQUE7SUFDM0NtRCxVQUFBLEdBQWF3QixJQUFBLENBQUsrRSxHQUFHLENBQUMsR0FBR3ZHLFVBQUEsR0FBYUcsY0FBQTtFQUN4QztFQUFBO0VBQUE7SUFBQXhELGFBQUEsR0FBQXNCLENBQUE7RUFBQTtFQUFBdEIsYUFBQSxHQUFBRSxDQUFBO0VBRUEsT0FBTztJQUNMK0ksc0JBQUE7SUFDQXpHLGlCQUFBLEVBQ0VBLGlCQUFBLEtBQXNCK0csU0FBQTtJQUFBO0lBQUEsQ0FBQXZKLGFBQUEsR0FBQXNCLENBQUEsV0FDbEIySCxzQkFBQSxDQUF1Qk8sTUFBTSxHQUFHO0lBQUE7SUFBQSxDQUFBeEosYUFBQSxHQUFBc0IsQ0FBQSxXQUNoQ2tCLGlCQUFBO0lBQ05VLFVBQUE7SUFDQUMsYUFBQTtJQUNBQyxRQUFBO0lBQ0FDLFVBQUE7SUFDQUUsVUFBQTtJQUNBQyxjQUFBLEVBQWdCRCxVQUFBLEdBQWE7SUFBQTtJQUFBLENBQUF2RCxhQUFBLEdBQUFzQixDQUFBLFdBQUksSUFBQVksTUFBQSxDQUFBZ0gsTUFBTSxFQUFDM0YsVUFBQSxHQUFhb0csY0FBQSxDQUFlakYsZUFBQTtJQUFBO0lBQUEsQ0FBQTFFLGFBQUEsR0FBQXNCLENBQUEsV0FBb0I7RUFDMUY7QUFDRjtBQUVBLFNBQVNxSSxlQUFlaEYsUUFBZ0I7RUFBQTtFQUFBM0UsYUFBQSxHQUFBSSxDQUFBO0VBQ3RDLE1BQU15SixLQUFBO0VBQUE7RUFBQSxDQUFBN0osYUFBQSxHQUFBRSxDQUFBLFNBQVE7SUFDWjRKLEdBQUEsRUFBSztJQUNMQyxHQUFBLEVBQUs7SUFDTEMsR0FBQSxFQUFLO0VBQ1A7RUFBQTtFQUFBaEssYUFBQSxHQUFBRSxDQUFBO0VBQ0EsT0FBTywyQkFBQUYsYUFBQSxHQUFBc0IsQ0FBQSxXQUFBdUksS0FBSyxDQUFDbEYsUUFBQSxDQUFTO0VBQUE7RUFBQSxDQUFBM0UsYUFBQSxHQUFBc0IsQ0FBQSxXQUFJLE9BQU07QUFDbEM7QUFHTyxlQUFlUixnQkFBZ0JtSixJQUFlO0VBQUE7RUFBQWpLLGFBQUEsR0FBQUksQ0FBQTtFQUFBSixhQUFBLEdBQUFFLENBQUE7RUFDbkQsTUFBTSxJQUFBZSxHQUFBLENBQUFDLGlCQUFpQjtFQUN2QixNQUFNeUcsV0FBQTtFQUFBO0VBQUEsQ0FBQTNILGFBQUEsR0FBQUUsQ0FBQSxTQUFjLE1BQU11RCxXQUFBLENBQUFDLE9BQUssQ0FBQ2tFLGNBQWMsQ0FBQztJQUM3Q0gsU0FBQSxFQUFXO01BQ1R5QyxJQUFBLEVBQU1ELElBQUEsQ0FBS0UsSUFBSTtNQUNmQyxJQUFBLEVBQU1ILElBQUEsQ0FBS0k7SUFDYjtFQUNGO0VBQ0EsTUFBTUMsYUFBQTtFQUFBO0VBQUEsQ0FBQXRLLGFBQUEsR0FBQUUsQ0FBQSxTQUFnQixNQUFNZ0YsYUFBQSxDQUFBeEIsT0FBTyxDQUFDa0UsY0FBYyxDQUFDO0lBQ2pESCxTQUFBLEVBQVc7TUFDVHlDLElBQUEsRUFBTUQsSUFBQSxDQUFLRSxJQUFJO01BQ2ZDLElBQUEsRUFBTUgsSUFBQSxDQUFLSTtJQUNiO0VBQ0Y7RUFDQSxNQUFNRSxVQUFBO0VBQUE7RUFBQSxDQUFBdkssYUFBQSxHQUFBRSxDQUFBLFNBQWEsTUFBTW1GLFVBQUEsQ0FBQTNCLE9BQUksQ0FBQ2tFLGNBQWMsQ0FBQztJQUMzQ0gsU0FBQSxFQUFXO01BQ1R5QyxJQUFBLEVBQU1ELElBQUEsQ0FBS0UsSUFBSTtNQUNmQyxJQUFBLEVBQU1ILElBQUEsQ0FBS0k7SUFDYjtFQUNGO0VBQ0EsTUFBTUcsZ0JBQUE7RUFBQTtFQUFBLENBQUF4SyxhQUFBLEdBQUFFLENBQUEsU0FBbUIsTUFBTXVELFdBQUEsQ0FBQUMsT0FBSyxDQUFDK0csU0FBUyxDQUFDLENBQzdDO0lBQ0VDLE1BQUEsRUFBUTtNQUNOakQsU0FBQSxFQUFXO1FBQ1R5QyxJQUFBLEVBQU1ELElBQUEsQ0FBS0UsSUFBSTtRQUNmQyxJQUFBLEVBQU1ILElBQUEsQ0FBS0k7TUFDYjtJQUNGO0VBQ0YsR0FDQTtJQUNFTSxNQUFBLEVBQVE7TUFDTjVJLEdBQUEsRUFBSztNQUNMNkksS0FBQSxFQUFPO1FBQUVDLElBQUEsRUFBTTtNQUFjO0lBQy9CO0VBQ0YsR0FDQTtJQUFFQyxRQUFBLEVBQVU7TUFBRUMsVUFBQSxFQUFZO1FBQUVDLE9BQUEsRUFBUyxDQUFDLFVBQVU7TUFBRztJQUFFO0VBQUUsRUFDeEQ7RUFDRCxNQUFNRCxVQUFBO0VBQUE7RUFBQSxDQUFBL0ssYUFBQSxHQUFBRSxDQUFBLFNBQWFzSyxnQkFBZ0IsQ0FBQyxFQUFFO0VBQUE7RUFBQSxDQUFBeEssYUFBQSxHQUFBc0IsQ0FBQSxXQUFHa0osZ0JBQWdCLENBQUMsRUFBRSxDQUFDTyxVQUFVO0VBQUE7RUFBQSxDQUFBL0ssYUFBQSxHQUFBc0IsQ0FBQSxXQUFHO0VBQzFFLE1BQU0ySixLQUFBO0VBQUE7RUFBQSxDQUFBakwsYUFBQSxHQUFBRSxDQUFBLFNBQVEsSUFBSWtFLElBQUE7RUFDbEIsTUFBTThHLG1CQUFBO0VBQUE7RUFBQSxDQUFBbEwsYUFBQSxHQUFBRSxDQUFBLFNBQXNCLElBQUlrRSxJQUFBLENBQzlCNkcsS0FBQSxDQUFNRSxXQUFXLElBQ2pCRixLQUFBLENBQU1HLFFBQVEsS0FBSyxHQUNuQjtFQUVGLE1BQU1DLFlBQUE7RUFBQTtFQUFBLENBQUFyTCxhQUFBLEdBQUFFLENBQUEsU0FBZSxNQUFNdUQsV0FBQSxDQUFBQyxPQUFLLENBQUMrRyxTQUFTLENBQUMsQ0FDekM7SUFDRUMsTUFBQSxFQUFRO01BQ05qRCxTQUFBLEVBQVc7UUFDVHlDLElBQUEsRUFBTWdCO01BQ1I7SUFDRjtFQUNGLEdBQ0E7SUFDRVAsTUFBQSxFQUFRO01BQ041SSxHQUFBLEVBQUs7UUFBRXVKLGFBQUEsRUFBZTtVQUFFQyxNQUFBLEVBQVE7VUFBU3RCLElBQUEsRUFBTTtRQUFhO01BQUU7TUFDOURjLFVBQUEsRUFBWTtRQUFFRixJQUFBLEVBQU07TUFBYztJQUNwQztFQUNGLEdBQ0E7SUFDRUMsUUFBQSxFQUFVO01BQ1IvSSxHQUFBLEVBQUs7TUFDTHlKLEtBQUEsRUFBTztNQUNQeEMsS0FBQSxFQUFPO0lBQ1Q7RUFDRixHQUNBO0lBQUV5QyxLQUFBLEVBQU87TUFBRUQsS0FBQSxFQUFPLENBQUM7SUFBRTtFQUFFLEVBQ3hCO0VBQ0QsTUFBTUUsa0JBQUE7RUFBQTtFQUFBLENBQUExTCxhQUFBLEdBQUFFLENBQUEsU0FBcUIsTUFBTXlMLHFCQUFBLENBQXNCMUIsSUFBQTtFQUN2RCxNQUFNMkIsZ0JBQUE7RUFBQTtFQUFBLENBQUE1TCxhQUFBLEdBQUFFLENBQUEsU0FBbUIsTUFBTTJMLG1CQUFBLENBQW9CNUIsSUFBQTtFQUNuRCxNQUFNO0lBQ0ovQyxNQUFBLEVBQVE7TUFBRUM7SUFBUTtFQUFFLENBQ3JCO0VBQUE7RUFBQSxDQUFBbkgsYUFBQSxHQUFBRSxDQUFBLFNBQUcsTUFBTSxJQUFBcUUsZUFBQSxDQUFBQyxVQUFVO0VBQ3BCLE1BQU13QyxLQUFBO0VBQUE7RUFBQSxDQUFBaEgsYUFBQSxHQUFBRSxDQUFBLFNBQVFpSCxRQUFBO0VBQ2QsTUFBTTJFLFlBQUE7RUFBQTtFQUFBLENBQUE5TCxhQUFBLEdBQUFFLENBQUEsU0FBZSxNQUFNdUQsV0FBQSxDQUFBQyxPQUFLLENBQUM2RCxJQUFJLEdBQ2xDdEQsUUFBUSxDQUFDLFFBQVEsUUFDakJ1RCxJQUFJLENBQUM7SUFBRUMsU0FBQSxFQUFXO0VBQU8sR0FDekJULEtBQUssQ0FBQ0EsS0FBQTtFQUFBO0VBQUFoSCxhQUFBLEdBQUFFLENBQUE7RUFDVCxPQUFPO0lBQ0x5SCxXQUFBO0lBQ0EyQyxhQUFBO0lBQ0FDLFVBQUE7SUFDQVEsVUFBQTtJQUNBTSxZQUFBLEVBQWN4RCxJQUFBLENBQUtqRixLQUFLLENBQUNpRixJQUFBLENBQUtDLFNBQVMsQ0FBQ3VELFlBQUE7SUFDeENVLGNBQUEsRUFBZ0JsRSxJQUFBLENBQUtqRixLQUFLLENBQUNpRixJQUFBLENBQUtDLFNBQVMsQ0FBQyxNQUFNa0UsaUJBQUEsQ0FBa0IvQixJQUFBO0lBQ2xFeUIsa0JBQUEsRUFBb0I3RCxJQUFBLENBQUtqRixLQUFLLENBQUNpRixJQUFBLENBQUtDLFNBQVMsQ0FBQzRELGtCQUFBO0lBQzlDRSxnQkFBQSxFQUFrQi9ELElBQUEsQ0FBS2pGLEtBQUssQ0FBQ2lGLElBQUEsQ0FBS0MsU0FBUyxDQUFDOEQsZ0JBQUE7SUFDNUNFLFlBQUEsRUFBY2pFLElBQUEsQ0FBS2pGLEtBQUssQ0FBQ2lGLElBQUEsQ0FBS0MsU0FBUyxDQUFDZ0UsWUFBQTtFQUMxQztBQUNGO0FBRUEsZUFBZUUsa0JBQWtCL0IsSUFBZTtFQUFBO0VBQUFqSyxhQUFBLEdBQUFJLENBQUE7RUFDOUMsTUFBTTZMLE1BQUE7RUFBQTtFQUFBLENBQUFqTSxhQUFBLEdBQUFFLENBQUEsU0FBUyxNQUFNdUQsV0FBQSxDQUFBQyxPQUFLLENBQUMrRyxTQUFTLENBQUMsQ0FDbkM7SUFDRUMsTUFBQSxFQUFRO01BQ05qRCxTQUFBLEVBQVc7UUFDVHlDLElBQUEsRUFBTUQsSUFBQSxDQUFLRSxJQUFJO1FBQ2ZDLElBQUEsRUFBTUgsSUFBQSxDQUFLSTtNQUNiO0lBQ0Y7RUFDRixHQUNBO0lBQ0VNLE1BQUEsRUFBUTtNQUNONUksR0FBQSxFQUFLO1FBQ0htSyxJQUFBLEVBQU07VUFBRUMsS0FBQSxFQUFPO1FBQWE7UUFDNUJDLEtBQUEsRUFBTztVQUFFQyxNQUFBLEVBQVE7UUFBYTtRQUM5QkMsR0FBQSxFQUFLO1VBQUVDLFdBQUEsRUFBYTtRQUFhO01BQ25DO01BQ0F4QixVQUFBLEVBQVk7UUFBRUYsSUFBQSxFQUFNO01BQWM7SUFDcEM7RUFDRixHQUNBO0lBQ0VDLFFBQUEsRUFBVTtNQUNSL0ksR0FBQSxFQUFLO01BQ0xrSSxJQUFBLEVBQU07UUFDSnVDLE9BQUEsRUFBUyxDQUNQO1VBQUVDLFNBQUEsRUFBVztRQUFZLEdBQ3pCLEtBQ0E7VUFBRUEsU0FBQSxFQUFXO1FBQWEsR0FDMUIsS0FDQTtVQUFFQSxTQUFBLEVBQVc7UUFBVztNQUU1QjtNQUNBMUIsVUFBQSxFQUFZO0lBQ2Q7RUFDRixHQUNBO0lBQUVVLEtBQUEsRUFBTztNQUFFeEIsSUFBQSxFQUFNO0lBQUU7RUFBRSxFQUN0QjtFQUFBO0VBQUFqSyxhQUFBLEdBQUFFLENBQUE7RUFDRCxPQUFPK0wsTUFBQTtBQUNUO0FBRUEsZUFBZUosb0JBQW9CNUIsSUFBZTtFQUFBO0VBQUFqSyxhQUFBLEdBQUFJLENBQUE7RUFDaEQsTUFBTTZMLE1BQUE7RUFBQTtFQUFBLENBQUFqTSxhQUFBLEdBQUFFLENBQUEsU0FBUyxNQUFNdUQsV0FBQSxDQUFBQyxPQUFLLENBQUMrRyxTQUFTLENBQUMsQ0FDbkM7SUFDRUMsTUFBQSxFQUFRO01BQ05qRCxTQUFBLEVBQVc7UUFDVHlDLElBQUEsRUFBTUQsSUFBQSxDQUFLRSxJQUFJO1FBQ2ZDLElBQUEsRUFBTUgsSUFBQSxDQUFLSTtNQUNiO0lBQ0Y7RUFDRixHQUNBO0lBQUVxQyxPQUFBLEVBQVM7RUFBUyxHQUNwQjtJQUNFL0IsTUFBQSxFQUFRO01BQ041SSxHQUFBLEVBQUs7UUFDSGlCLElBQUEsRUFBTTtRQUNOMkosS0FBQSxFQUFPO1FBQ1A1SyxHQUFBLEVBQUs7TUFDUDtNQUNBZ0osVUFBQSxFQUFZO1FBQ1ZGLElBQUEsRUFBTTtVQUFFK0IsU0FBQSxFQUFXLENBQUMsbUJBQW1CO1FBQWdCO01BQ3pEO0lBQ0Y7RUFDRixHQUNBO0lBQ0VuQixLQUFBLEVBQU87TUFDTFYsVUFBQSxFQUFZLENBQUM7SUFDZjtFQUNGLEdBQ0E7SUFBRThCLE1BQUEsRUFBUTtFQUFFLEdBQ1o7SUFDRS9CLFFBQUEsRUFBVTtNQUNSL0ksR0FBQSxFQUFLO01BQ0xMLEVBQUEsRUFBSTtNQUNKOEosS0FBQSxFQUFPO01BQ1BtQixLQUFBLEVBQU87TUFDUDNELEtBQUEsRUFBTztJQUNUO0VBQ0YsR0FDQTtJQUFFeUMsS0FBQSxFQUFPO01BQUUxSixHQUFBLEVBQUs7SUFBRTtFQUFFLEVBQ3JCO0VBQUE7RUFBQS9CLGFBQUEsR0FBQUUsQ0FBQTtFQUNELE9BQU8rTCxNQUFBO0FBQ1Q7QUFFQSxlQUFlTixzQkFBc0IxQixJQUFlLEVBQUVqRCxLQUFBO0FBQUE7QUFBQSxDQUFBaEgsYUFBQSxHQUFBc0IsQ0FBQSxXQUFRLENBQUM7RUFBQTtFQUFBdEIsYUFBQSxHQUFBSSxDQUFBO0VBQzdELE1BQU02TCxNQUFBO0VBQUE7RUFBQSxDQUFBak0sYUFBQSxHQUFBRSxDQUFBLFNBQVMsTUFBTXVELFdBQUEsQ0FBQUMsT0FBSyxDQUFDK0csU0FBUyxDQUFDLENBQ25DO0lBQ0VDLE1BQUEsRUFBUTtNQUNOakQsU0FBQSxFQUFXO1FBQ1R5QyxJQUFBLEVBQU1ELElBQUEsQ0FBS0UsSUFBSTtRQUNmQyxJQUFBLEVBQU1ILElBQUEsQ0FBS0k7TUFDYjtJQUNGO0VBQ0YsR0FDQTtJQUFFcUMsT0FBQSxFQUFTO0VBQVMsR0FDcEI7SUFDRS9CLE1BQUEsRUFBUTtNQUNONUksR0FBQSxFQUFLO01BQ0xnSixVQUFBLEVBQVk7UUFBRUYsSUFBQSxFQUFNO01BQWtCO0lBQ3hDO0VBQ0YsR0FDQTtJQUFFWSxLQUFBLEVBQU87TUFBRVYsVUFBQSxFQUFZLENBQUM7SUFBRTtFQUFFLEdBQzVCO0lBQUU4QixNQUFBLEVBQVE3RjtFQUFNLEVBQ2pCO0VBQUE7RUFBQWhILGFBQUEsR0FBQUUsQ0FBQTtFQUNELE9BQU8rTCxNQUFBO0FBQ1QiLCJpZ25vcmVMaXN0IjpbXX0=