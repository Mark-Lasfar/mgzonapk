8dfbd956f01dab76c64ddbbc2b7a3de1
"use strict";

/* istanbul ignore next */
function cov_2duro7e25t() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/v1/inventory/schedule/route.ts";
  var hash = "c249c4a76918d7cf32f6bd5d5d26f2368a629fc4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/v1/inventory/schedule/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 14
        },
        end: {
          line: 20,
          column: 63
        }
      },
      "8": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 74
        }
      },
      "9": {
        start: {
          line: 22,
          column: 25
        },
        end: {
          line: 22,
          column: 84
        }
      },
      "10": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 67
        }
      },
      "11": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 44
        }
      },
      "12": {
        start: {
          line: 25,
          column: 37
        },
        end: {
          line: 25,
          column: 117
        }
      },
      "13": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "14": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 6
        }
      },
      "15": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 118
        }
      },
      "16": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 67,
          column: 2
        }
      },
      "17": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "18": {
        start: {
          line: 70,
          column: 26
        },
        end: {
          line: 70,
          column: 66
        }
      },
      "19": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 40
        }
      },
      "20": {
        start: {
          line: 71,
          column: 23
        },
        end: {
          line: 71,
          column: 40
        }
      },
      "21": {
        start: {
          line: 72,
          column: 32
        },
        end: {
          line: 72,
          column: 72
        }
      },
      "22": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 84
        }
      },
      "23": {
        start: {
          line: 73,
          column: 61
        },
        end: {
          line: 73,
          column: 84
        }
      },
      "24": {
        start: {
          line: 74,
          column: 21
        },
        end: {
          line: 74,
          column: 41
        }
      },
      "25": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 76,
          column: 53
        }
      },
      "26": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "27": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 84,
          column: 15
        }
      },
      "28": {
        start: {
          line: 86,
          column: 25
        },
        end: {
          line: 89,
          column: 10
        }
      },
      "29": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "30": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 97,
          column: 11
        }
      },
      "31": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "32": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "33": {
        start: {
          line: 108,
          column: 26
        },
        end: {
          line: 108,
          column: 66
        }
      },
      "34": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 40
        }
      },
      "35": {
        start: {
          line: 109,
          column: 23
        },
        end: {
          line: 109,
          column: 40
        }
      },
      "36": {
        start: {
          line: 110,
          column: 32
        },
        end: {
          line: 110,
          column: 72
        }
      },
      "37": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 84
        }
      },
      "38": {
        start: {
          line: 111,
          column: 61
        },
        end: {
          line: 111,
          column: 84
        }
      },
      "39": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 43
        }
      },
      "40": {
        start: {
          line: 113,
          column: 33
        },
        end: {
          line: 113,
          column: 53
        }
      },
      "41": {
        start: {
          line: 114,
          column: 27
        },
        end: {
          line: 114,
          column: 57
        }
      },
      "42": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "43": {
        start: {
          line: 116,
          column: 29
        },
        end: {
          line: 116,
          column: 78
        }
      },
      "44": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "45": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 123,
          column: 19
        }
      },
      "46": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 128,
          column: 15
        }
      },
      "47": {
        start: {
          line: 130,
          column: 26
        },
        end: {
          line: 132,
          column: 21
        }
      },
      "48": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 136,
          column: 11
        }
      },
      "49": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "50": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 146,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 10
          },
          end: {
            line: 15,
            column: 11
          }
        },
        loc: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 27
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 68,
            column: 15
          },
          end: {
            line: 68,
            column: 19
          }
        },
        loc: {
          start: {
            line: 68,
            column: 29
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 68
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 106,
            column: 15
          },
          end: {
            line: 106,
            column: 18
          }
        },
        loc: {
          start: {
            line: 106,
            column: 28
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 106
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 28,
            column: 38
          }
        }, {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 30,
            column: 5
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 14
          }
        }, {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 28,
            column: 32
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "3": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 73,
            column: 84
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 73,
            column: 84
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "4": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "5": {
        loc: {
          start: {
            line: 88,
            column: 23
          },
          end: {
            line: 88,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 23
          },
          end: {
            line: 88,
            column: 55
          }
        }, {
          start: {
            line: 88,
            column: 59
          },
          end: {
            line: 88,
            column: 67
          }
        }],
        line: 88
      },
      "6": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 109,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 109,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "7": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 111,
            column: 84
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 111,
            column: 84
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "8": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "9": {
        loc: {
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/v1/inventory/schedule/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { validateApiKey } from '@/lib/api/middleware/auth';\nimport { rateLimit } from '@/lib/api/middleware/rate-limit';\nimport { ScheduleManager } from '@/lib/api/services/schedule-manager';\nimport { logger } from '@/lib/api/services/logging';\nimport { connectToDatabase } from '@/lib/db';\nimport ScheduleModel from '@/lib/db/models/schedule.model';\nimport { z } from 'zod';\n\nconst scheduleManager = new ScheduleManager(\n  fulfillmentService,\n  progressTracker,\n  notificationService\n);\n\n// Validation schema\nconst scheduleSchema = z.object({\n  name: z.string(),\n  provider: z.string(),\n  enabled: z.boolean(),\n  frequency: z.object({\n    type: z.enum(['interval', 'cron']),\n    value: z.string(),\n    hours: z.array(z.number()).optional(),\n    daysOfWeek: z.array(z.number()).optional(),\n    daysOfMonth: z.array(z.number()).optional(),\n  }),\n  timezone: z.string(),\n  settings: z.object({\n    retryOnFailure: z.boolean(),\n    maxRetries: z.number(),\n    notifyOnCompletion: z.boolean(),\n    notifyOnFailure: z.boolean(),\n    skipWeekends: z.boolean().optional(),\n    skipHolidays: z.boolean().optional(),\n  }),\n  filters: z.object({\n    warehouses: z.array(z.string()).optional(),\n    productTypes: z.array(z.string()).optional(),\n    categories: z.array(z.string()).optional(),\n  }).optional(),\n  notifications: z.object({\n    email: z.array(z.string()).optional(),\n    slack: z.string().optional(),\n    webhook: z.string().optional(),\n  }),\n});\n\nexport async function POST(request: NextRequest) {\n  try {\n    const authError = await validateApiKey(request);\n    if (authError) return authError;\n\n    const rateLimitResult = await rateLimit(request);\n    if (rateLimitResult instanceof NextResponse) return rateLimitResult;\n\n    const data = await request.json();\n    \n    // Validate request body\n    const parsed = scheduleSchema.safeParse(data);\n    if (!parsed.success) {\n      return NextResponse.json(\n        { \n          success: false, \n          error: 'Invalid schedule configuration',\n          details: parsed.error.issues,\n        },\n        { status: 400 }\n      );\n    }\n\n    const schedule = await scheduleManager.createSchedule({\n      ...parsed.data,\n      createdBy: request.headers.get('x-user-id') || 'system',\n    });\n\n    return NextResponse.json({\n      success: true,\n      data: schedule,\n    });\n\n  } catch (error) {\n    logger.error('Create schedule failed', { error });\n    return NextResponse.json(\n      { success: false, error: error.message },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const authError = await validateApiKey(request);\n    if (authError) return authError;\n\n    const rateLimitResult = await rateLimit(request);\n    if (rateLimitResult instanceof NextResponse) return rateLimitResult;\n\n    await connectToDatabase();\n\n    const { searchParams } = new URL(request.url);\n    const scheduleId = searchParams.get('scheduleId');\n\n    if (scheduleId) {\n      const schedule = await ScheduleModel.findById(scheduleId);\n      if (!schedule) {\n        return NextResponse.json(\n          { success: false, error: 'Schedule not found' },\n          { status: 404 }\n        );\n      }\n      return NextResponse.json({ success: true, data: schedule });\n    }\n\n    const schedules = await ScheduleModel.find({})\n      .sort({ createdAt: -1 })\n      .limit(100);\n\n    return NextResponse.json({\n      success: true,\n      data: schedules,\n    });\n\n  } catch (error) {\n    logger.error('Get schedules failed', { error });\n    return NextResponse.json(\n      { success: false, error: error.message },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["GET", "POST", "scheduleManager", "ScheduleManager", "fulfillmentService", "progressTracker", "notificationService", "scheduleSchema", "z", "object", "name", "string", "provider", "enabled", "boolean", "frequency", "type", "enum", "value", "hours", "array", "number", "optional", "daysOfWeek", "daysOfMonth", "timezone", "settings", "retryOnFailure", "maxRetries", "notifyOnCompletion", "notifyOnFailure", "skipWeekends", "skipHolidays", "filters", "warehouses", "productTypes", "categories", "notifications", "email", "slack", "webhook", "request", "authError", "validateApiKey", "rateLimitResult", "rateLimit", "NextResponse", "data", "json", "parsed", "safeParse", "success", "error", "details", "issues", "status", "schedule", "createSchedule", "createdBy", "headers", "get", "logger", "message", "connectToDatabase", "searchParams", "URL", "url", "scheduleId", "ScheduleModel", "findById", "schedules", "find", "sort", "createdAt", "limit"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c249c4a76918d7cf32f6bd5d5d26f2368a629fc4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2duro7e25t = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2duro7e25t();
cov_2duro7e25t().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2duro7e25t().f[0]++;
  cov_2duro7e25t().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2duro7e25t().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2duro7e25t().s[3]++;
_export(exports, {
  GET: function () {
    /* istanbul ignore next */
    cov_2duro7e25t().f[1]++;
    cov_2duro7e25t().s[4]++;
    return GET;
  },
  POST: function () {
    /* istanbul ignore next */
    cov_2duro7e25t().f[2]++;
    cov_2duro7e25t().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_2duro7e25t().s[6]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_2duro7e25t().s[7]++, require("../../../../../lib/api/middleware/auth"));
const _ratelimit =
/* istanbul ignore next */
(cov_2duro7e25t().s[8]++, require("../../../../../lib/api/middleware/rate-limit"));
const _schedulemanager =
/* istanbul ignore next */
(cov_2duro7e25t().s[9]++, require("../../../../../lib/api/services/schedule-manager"));
const _logging =
/* istanbul ignore next */
(cov_2duro7e25t().s[10]++, require("../../../../../lib/api/services/logging"));
const _db =
/* istanbul ignore next */
(cov_2duro7e25t().s[11]++, require("../../../../../lib/db"));
const _schedulemodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_2duro7e25t().s[12]++, _interop_require_default(require("../../../../../lib/db/models/schedule.model")));
const _zod =
/* istanbul ignore next */
(cov_2duro7e25t().s[13]++, require("zod"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2duro7e25t().f[3]++;
  cov_2duro7e25t().s[14]++;
  return /* istanbul ignore next */(cov_2duro7e25t().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2duro7e25t().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2duro7e25t().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2duro7e25t().b[0][1]++, {
    default: obj
  });
}
const scheduleManager =
/* istanbul ignore next */
(cov_2duro7e25t().s[15]++, new _schedulemanager.ScheduleManager(fulfillmentService, progressTracker, notificationService));
// Validation schema
const scheduleSchema =
/* istanbul ignore next */
(cov_2duro7e25t().s[16]++, _zod.z.object({
  name: _zod.z.string(),
  provider: _zod.z.string(),
  enabled: _zod.z.boolean(),
  frequency: _zod.z.object({
    type: _zod.z.enum(['interval', 'cron']),
    value: _zod.z.string(),
    hours: _zod.z.array(_zod.z.number()).optional(),
    daysOfWeek: _zod.z.array(_zod.z.number()).optional(),
    daysOfMonth: _zod.z.array(_zod.z.number()).optional()
  }),
  timezone: _zod.z.string(),
  settings: _zod.z.object({
    retryOnFailure: _zod.z.boolean(),
    maxRetries: _zod.z.number(),
    notifyOnCompletion: _zod.z.boolean(),
    notifyOnFailure: _zod.z.boolean(),
    skipWeekends: _zod.z.boolean().optional(),
    skipHolidays: _zod.z.boolean().optional()
  }),
  filters: _zod.z.object({
    warehouses: _zod.z.array(_zod.z.string()).optional(),
    productTypes: _zod.z.array(_zod.z.string()).optional(),
    categories: _zod.z.array(_zod.z.string()).optional()
  }).optional(),
  notifications: _zod.z.object({
    email: _zod.z.array(_zod.z.string()).optional(),
    slack: _zod.z.string().optional(),
    webhook: _zod.z.string().optional()
  })
}));
async function POST(request) {
  /* istanbul ignore next */
  cov_2duro7e25t().f[4]++;
  cov_2duro7e25t().s[17]++;
  try {
    const authError =
    /* istanbul ignore next */
    (cov_2duro7e25t().s[18]++, await (0, _auth.validateApiKey)(request));
    /* istanbul ignore next */
    cov_2duro7e25t().s[19]++;
    if (authError) {
      /* istanbul ignore next */
      cov_2duro7e25t().b[2][0]++;
      cov_2duro7e25t().s[20]++;
      return authError;
    } else
    /* istanbul ignore next */
    {
      cov_2duro7e25t().b[2][1]++;
    }
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_2duro7e25t().s[21]++, await (0, _ratelimit.rateLimit)(request));
    /* istanbul ignore next */
    cov_2duro7e25t().s[22]++;
    if (rateLimitResult instanceof _server.NextResponse) {
      /* istanbul ignore next */
      cov_2duro7e25t().b[3][0]++;
      cov_2duro7e25t().s[23]++;
      return rateLimitResult;
    } else
    /* istanbul ignore next */
    {
      cov_2duro7e25t().b[3][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_2duro7e25t().s[24]++, await request.json());
    // Validate request body
    const parsed =
    /* istanbul ignore next */
    (cov_2duro7e25t().s[25]++, scheduleSchema.safeParse(data));
    /* istanbul ignore next */
    cov_2duro7e25t().s[26]++;
    if (!parsed.success) {
      /* istanbul ignore next */
      cov_2duro7e25t().b[4][0]++;
      cov_2duro7e25t().s[27]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Invalid schedule configuration',
        details: parsed.error.issues
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2duro7e25t().b[4][1]++;
    }
    const schedule =
    /* istanbul ignore next */
    (cov_2duro7e25t().s[28]++, await scheduleManager.createSchedule({
      ...parsed.data,
      createdBy:
      /* istanbul ignore next */
      (cov_2duro7e25t().b[5][0]++, request.headers.get('x-user-id')) ||
      /* istanbul ignore next */
      (cov_2duro7e25t().b[5][1]++, 'system')
    }));
    /* istanbul ignore next */
    cov_2duro7e25t().s[29]++;
    return _server.NextResponse.json({
      success: true,
      data: schedule
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2duro7e25t().s[30]++;
    _logging.logger.error('Create schedule failed', {
      error
    });
    /* istanbul ignore next */
    cov_2duro7e25t().s[31]++;
    return _server.NextResponse.json({
      success: false,
      error: error.message
    }, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_2duro7e25t().f[5]++;
  cov_2duro7e25t().s[32]++;
  try {
    const authError =
    /* istanbul ignore next */
    (cov_2duro7e25t().s[33]++, await (0, _auth.validateApiKey)(request));
    /* istanbul ignore next */
    cov_2duro7e25t().s[34]++;
    if (authError) {
      /* istanbul ignore next */
      cov_2duro7e25t().b[6][0]++;
      cov_2duro7e25t().s[35]++;
      return authError;
    } else
    /* istanbul ignore next */
    {
      cov_2duro7e25t().b[6][1]++;
    }
    const rateLimitResult =
    /* istanbul ignore next */
    (cov_2duro7e25t().s[36]++, await (0, _ratelimit.rateLimit)(request));
    /* istanbul ignore next */
    cov_2duro7e25t().s[37]++;
    if (rateLimitResult instanceof _server.NextResponse) {
      /* istanbul ignore next */
      cov_2duro7e25t().b[7][0]++;
      cov_2duro7e25t().s[38]++;
      return rateLimitResult;
    } else
    /* istanbul ignore next */
    {
      cov_2duro7e25t().b[7][1]++;
    }
    cov_2duro7e25t().s[39]++;
    await (0, _db.connectToDatabase)();
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2duro7e25t().s[40]++, new URL(request.url));
    const scheduleId =
    /* istanbul ignore next */
    (cov_2duro7e25t().s[41]++, searchParams.get('scheduleId'));
    /* istanbul ignore next */
    cov_2duro7e25t().s[42]++;
    if (scheduleId) {
      /* istanbul ignore next */
      cov_2duro7e25t().b[8][0]++;
      const schedule =
      /* istanbul ignore next */
      (cov_2duro7e25t().s[43]++, await _schedulemodel.default.findById(scheduleId));
      /* istanbul ignore next */
      cov_2duro7e25t().s[44]++;
      if (!schedule) {
        /* istanbul ignore next */
        cov_2duro7e25t().b[9][0]++;
        cov_2duro7e25t().s[45]++;
        return _server.NextResponse.json({
          success: false,
          error: 'Schedule not found'
        }, {
          status: 404
        });
      } else
      /* istanbul ignore next */
      {
        cov_2duro7e25t().b[9][1]++;
      }
      cov_2duro7e25t().s[46]++;
      return _server.NextResponse.json({
        success: true,
        data: schedule
      });
    } else
    /* istanbul ignore next */
    {
      cov_2duro7e25t().b[8][1]++;
    }
    const schedules =
    /* istanbul ignore next */
    (cov_2duro7e25t().s[47]++, await _schedulemodel.default.find({}).sort({
      createdAt: -1
    }).limit(100));
    /* istanbul ignore next */
    cov_2duro7e25t().s[48]++;
    return _server.NextResponse.json({
      success: true,
      data: schedules
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2duro7e25t().s[49]++;
    _logging.logger.error('Get schedules failed', {
      error
    });
    /* istanbul ignore next */
    cov_2duro7e25t().s[50]++;
    return _server.NextResponse.json({
      success: false,
      error: error.message
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,