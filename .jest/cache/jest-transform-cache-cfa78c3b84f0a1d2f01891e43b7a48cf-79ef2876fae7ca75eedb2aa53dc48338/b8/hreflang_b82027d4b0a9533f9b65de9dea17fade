26907758a17fcc6df50009a0f8f13527
"use strict";

/* istanbul ignore next */
function cov_6w0p6dde6() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/seo/hreflang.ts";
  var hash = "67c3a9a3823cf66bce5487e3df4d2a77b2b07117";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/seo/hreflang.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 36
        }
      },
      "6": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 46
        }
      },
      "7": {
        start: {
          line: 20,
          column: 24
        },
        end: {
          line: 20,
          column: 61
        }
      },
      "8": {
        start: {
          line: 22,
          column: 30
        },
        end: {
          line: 22,
          column: 69
        }
      },
      "9": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 57
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 28,
          column: 12
        }
      },
      "11": {
        start: {
          line: 24,
          column: 51
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "12": {
        start: {
          line: 31,
          column: 18
        },
        end: {
          line: 31,
          column: 51
        }
      },
      "13": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 39,
          column: 12
        }
      },
      "14": {
        start: {
          line: 32,
          column: 30
        },
        end: {
          line: 39,
          column: 9
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 27
          },
          end: {
            line: 12,
            column: 28
          }
        },
        loc: {
          start: {
            line: 12,
            column: 38
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 26
          },
          end: {
            line: 15,
            column: 27
          }
        },
        loc: {
          start: {
            line: 15,
            column: 37
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "generateHreflangLinks",
        decl: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 36
          }
        },
        loc: {
          start: {
            line: 21,
            column: 43
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 40
          },
          end: {
            line: 24,
            column: 41
          }
        },
        loc: {
          start: {
            line: 24,
            column: 51
          },
          end: {
            line: 28,
            column: 9
          }
        },
        line: 24
      },
      "5": {
        name: "generateHreflangTags",
        decl: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 35
          }
        },
        loc: {
          start: {
            line: 30,
            column: 42
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 21
          },
          end: {
            line: 32,
            column: 22
          }
        },
        loc: {
          start: {
            line: 32,
            column: 30
          },
          end: {
            line: 39,
            column: 9
          }
        },
        line: 32
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 20
          },
          end: {
            line: 23,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 20
          },
          end: {
            line: 23,
            column: 23
          }
        }, {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 57
          }
        }],
        line: 23
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/seo/hreflang.ts"],
      sourcesContent: ["import { routing } from '@/i18n/routing'\nimport { getSetting } from '../actions/setting.actions'\n\nexport async function generateHreflangLinks(path: string) {\n  const {\n    site: { url },\n  } = await getSetting()\n  const baseUrl = url || 'https://hager-zon.vercel.app'\n\n  return routing.locales.map((locale) => ({\n    rel: 'alternate',\n    hrefLang: locale,\n    href: `${baseUrl}/${locale}${path}`,\n  }))\n}\n\nexport async function generateHreflangTags(path: string) {\n  const links = await generateHreflangLinks(path)\n\n  return links.map((link) => ({\n    tag: 'link',\n    props: {\n      rel: link.rel,\n      hrefLang: link.hrefLang,\n      href: link.href,\n    },\n  }))\n}\n"],
      names: ["generateHreflangLinks", "generateHreflangTags", "path", "site", "url", "getSetting", "baseUrl", "routing", "locales", "map", "locale", "rel", "hrefLang", "href", "links", "link", "tag", "props"],
      mappings: ";;;;;;;;;;;IAGsBA,qBAAqB;eAArBA;;IAaAC,oBAAoB;eAApBA;;;yBAhBE;gCACG;AAEpB,eAAeD,sBAAsBE,IAAY;IACtD,MAAM,EACJC,MAAM,EAAEC,GAAG,EAAE,EACd,GAAG,MAAMC,IAAAA,0BAAU;IACpB,MAAMC,UAAUF,OAAO;IAEvB,OAAOG,gBAAO,CAACC,OAAO,CAACC,GAAG,CAAC,CAACC,SAAY,CAAA;YACtCC,KAAK;YACLC,UAAUF;YACVG,MAAM,GAAGP,QAAQ,CAAC,EAAEI,SAASR,MAAM;QACrC,CAAA;AACF;AAEO,eAAeD,qBAAqBC,IAAY;IACrD,MAAMY,QAAQ,MAAMd,sBAAsBE;IAE1C,OAAOY,MAAML,GAAG,CAAC,CAACM,OAAU,CAAA;YAC1BC,KAAK;YACLC,OAAO;gBACLN,KAAKI,KAAKJ,GAAG;gBACbC,UAAUG,KAAKH,QAAQ;gBACvBC,MAAME,KAAKF,IAAI;YACjB;QACF,CAAA;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "67c3a9a3823cf66bce5487e3df4d2a77b2b07117"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6w0p6dde6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6w0p6dde6();
cov_6w0p6dde6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_6w0p6dde6().f[0]++;
  cov_6w0p6dde6().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_6w0p6dde6().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_6w0p6dde6().s[3]++;
_export(exports, {
  generateHreflangLinks: function () {
    /* istanbul ignore next */
    cov_6w0p6dde6().f[1]++;
    cov_6w0p6dde6().s[4]++;
    return generateHreflangLinks;
  },
  generateHreflangTags: function () {
    /* istanbul ignore next */
    cov_6w0p6dde6().f[2]++;
    cov_6w0p6dde6().s[5]++;
    return generateHreflangTags;
  }
});
const _routing =
/* istanbul ignore next */
(cov_6w0p6dde6().s[6]++, require("../../i18n/routing"));
const _settingactions =
/* istanbul ignore next */
(cov_6w0p6dde6().s[7]++, require("../actions/setting.actions"));
async function generateHreflangLinks(path) {
  /* istanbul ignore next */
  cov_6w0p6dde6().f[3]++;
  const {
    site: {
      url
    }
  } =
  /* istanbul ignore next */
  (cov_6w0p6dde6().s[8]++, await (0, _settingactions.getSetting)());
  const baseUrl =
  /* istanbul ignore next */
  (cov_6w0p6dde6().s[9]++,
  /* istanbul ignore next */
  (cov_6w0p6dde6().b[0][0]++, url) ||
  /* istanbul ignore next */
  (cov_6w0p6dde6().b[0][1]++, 'https://hager-zon.vercel.app'));
  /* istanbul ignore next */
  cov_6w0p6dde6().s[10]++;
  return _routing.routing.locales.map(locale => {
    /* istanbul ignore next */
    cov_6w0p6dde6().f[4]++;
    cov_6w0p6dde6().s[11]++;
    return {
      rel: 'alternate',
      hrefLang: locale,
      href: `${baseUrl}/${locale}${path}`
    };
  });
}
async function generateHreflangTags(path) {
  /* istanbul ignore next */
  cov_6w0p6dde6().f[5]++;
  const links =
  /* istanbul ignore next */
  (cov_6w0p6dde6().s[12]++, await generateHreflangLinks(path));
  /* istanbul ignore next */
  cov_6w0p6dde6().s[13]++;
  return links.map(link => {
    /* istanbul ignore next */
    cov_6w0p6dde6().f[6]++;
    cov_6w0p6dde6().s[14]++;
    return {
      tag: 'link',
      props: {
        rel: link.rel,
        hrefLang: link.hrefLang,
        href: link.href
      }
    };
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZW5lcmF0ZUhyZWZsYW5nTGlua3MiLCJjb3ZfNncwcDZkZGU2IiwiZiIsInMiLCJnZW5lcmF0ZUhyZWZsYW5nVGFncyIsInBhdGgiLCJzaXRlIiwidXJsIiwiX3NldHRpbmdhY3Rpb25zIiwiZ2V0U2V0dGluZyIsImJhc2VVcmwiLCJiIiwiX3JvdXRpbmciLCJyb3V0aW5nIiwibG9jYWxlcyIsIm1hcCIsImxvY2FsZSIsInJlbCIsImhyZWZMYW5nIiwiaHJlZiIsImxpbmtzIiwibGluayIsInRhZyIsInByb3BzIl0sInNvdXJjZXMiOlsiL2hvbWUvaGFnZXIvbmV3L215LW5leHRqcy1wcm9qZWN0LW1hc3RlciAoMykvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyL2xpYi9zZW8vaHJlZmxhbmcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcm91dGluZyB9IGZyb20gJ0AvaTE4bi9yb3V0aW5nJ1xuaW1wb3J0IHsgZ2V0U2V0dGluZyB9IGZyb20gJy4uL2FjdGlvbnMvc2V0dGluZy5hY3Rpb25zJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVIcmVmbGFuZ0xpbmtzKHBhdGg6IHN0cmluZykge1xuICBjb25zdCB7XG4gICAgc2l0ZTogeyB1cmwgfSxcbiAgfSA9IGF3YWl0IGdldFNldHRpbmcoKVxuICBjb25zdCBiYXNlVXJsID0gdXJsIHx8ICdodHRwczovL2hhZ2VyLXpvbi52ZXJjZWwuYXBwJ1xuXG4gIHJldHVybiByb3V0aW5nLmxvY2FsZXMubWFwKChsb2NhbGUpID0+ICh7XG4gICAgcmVsOiAnYWx0ZXJuYXRlJyxcbiAgICBocmVmTGFuZzogbG9jYWxlLFxuICAgIGhyZWY6IGAke2Jhc2VVcmx9LyR7bG9jYWxlfSR7cGF0aH1gLFxuICB9KSlcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlSHJlZmxhbmdUYWdzKHBhdGg6IHN0cmluZykge1xuICBjb25zdCBsaW5rcyA9IGF3YWl0IGdlbmVyYXRlSHJlZmxhbmdMaW5rcyhwYXRoKVxuXG4gIHJldHVybiBsaW5rcy5tYXAoKGxpbmspID0+ICh7XG4gICAgdGFnOiAnbGluaycsXG4gICAgcHJvcHM6IHtcbiAgICAgIHJlbDogbGluay5yZWwsXG4gICAgICBocmVmTGFuZzogbGluay5ocmVmTGFuZyxcbiAgICAgIGhyZWY6IGxpbmsuaHJlZixcbiAgICB9LFxuICB9KSlcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFHc0JBLHFCQUFxQixXQUFBQSxDQUFBO0lBQUE7SUFBQUMsYUFBQSxHQUFBQyxDQUFBO0lBQUFELGFBQUEsR0FBQUUsQ0FBQTtXQUFyQkgscUJBQUE7O0VBYUFJLG9CQUFvQixXQUFBQSxDQUFBO0lBQUE7SUFBQUgsYUFBQSxHQUFBQyxDQUFBO0lBQUFELGFBQUEsR0FBQUUsQ0FBQTtXQUFwQkMsb0JBQUE7Ozs7O2lDQWhCRTs7O2lDQUNHO0FBRXBCLGVBQWVKLHNCQUFzQkssSUFBWTtFQUFBO0VBQUFKLGFBQUEsR0FBQUMsQ0FBQTtFQUN0RCxNQUFNO0lBQ0pJLElBQUEsRUFBTTtNQUFFQztJQUFHO0VBQUUsQ0FDZDtFQUFBO0VBQUEsQ0FBQU4sYUFBQSxHQUFBRSxDQUFBLE9BQUcsTUFBTSxJQUFBSyxlQUFBLENBQUFDLFVBQVU7RUFDcEIsTUFBTUMsT0FBQTtFQUFBO0VBQUEsQ0FBQVQsYUFBQSxHQUFBRSxDQUFBO0VBQVU7RUFBQSxDQUFBRixhQUFBLEdBQUFVLENBQUEsVUFBQUosR0FBQTtFQUFBO0VBQUEsQ0FBQU4sYUFBQSxHQUFBVSxDQUFBLFVBQU87RUFBQTtFQUFBVixhQUFBLEdBQUFFLENBQUE7RUFFdkIsT0FBT1MsUUFBQSxDQUFBQyxPQUFPLENBQUNDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFFQyxNQUFBLElBQVk7SUFBQTtJQUFBZixhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO0lBQUE7TUFDdENjLEdBQUEsRUFBSztNQUNMQyxRQUFBLEVBQVVGLE1BQUE7TUFDVkcsSUFBQSxFQUFNLEdBQUdULE9BQUEsSUFBV00sTUFBQSxHQUFTWCxJQUFBO0lBQy9CO0VBQUE7QUFDRjtBQUVPLGVBQWVELHFCQUFxQkMsSUFBWTtFQUFBO0VBQUFKLGFBQUEsR0FBQUMsQ0FBQTtFQUNyRCxNQUFNa0IsS0FBQTtFQUFBO0VBQUEsQ0FBQW5CLGFBQUEsR0FBQUUsQ0FBQSxRQUFRLE1BQU1ILHFCQUFBLENBQXNCSyxJQUFBO0VBQUE7RUFBQUosYUFBQSxHQUFBRSxDQUFBO0VBRTFDLE9BQU9pQixLQUFBLENBQU1MLEdBQUcsQ0FBRU0sSUFBQSxJQUFVO0lBQUE7SUFBQXBCLGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7SUFBQTtNQUMxQm1CLEdBQUEsRUFBSztNQUNMQyxLQUFBLEVBQU87UUFDTE4sR0FBQSxFQUFLSSxJQUFBLENBQUtKLEdBQUc7UUFDYkMsUUFBQSxFQUFVRyxJQUFBLENBQUtILFFBQVE7UUFDdkJDLElBQUEsRUFBTUUsSUFBQSxDQUFLRjtNQUNiO0lBQ0Y7RUFBQTtBQUNGIiwiaWdub3JlTGlzdCI6W119