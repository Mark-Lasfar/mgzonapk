{"version":3,"names":["authOptions","cov_8bzam91mk","f","s","default","_default","adapter","_mongodbadapter","MongoDBAdapter","_client","providers","_google","clientId","process","env","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","_credentials","name","credentials","email","label","type","password","authorize","b","_db","connectToDatabase","user","_usermodel","findOne","_bcryptjs","compare","id","_id","toString","role","points","session","strategy","maxAge","callbacks","jwt","token","dbUser","sub","pages","signIn","_nextauth"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/auth.ts"],"sourcesContent":["import NextAuth, { type NextAuthOptions } from 'next-auth';\nimport GoogleProvider from 'next-auth/providers/google';\nimport CredentialsProvider from 'next-auth/providers/credentials';\nimport { MongoDBAdapter } from '@auth/mongodb-adapter';\nimport clientPromise from './db/client';\nimport bcrypt from 'bcryptjs';\nimport User from './db/models/user.model';\nimport { connectToDatabase } from './db';\n\nexport const authOptions: NextAuthOptions = {\n  adapter: MongoDBAdapter(clientPromise),\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n    }),\n    CredentialsProvider({\n      name: 'Credentials',\n      credentials: {\n        email: { label: 'Email', type: 'email' },\n        password: { label: 'Password', type: 'password' },\n      },\n      async authorize(credentials) {\n        if (!credentials?.email || !credentials?.password) {\n          return null;\n        }\n        await connectToDatabase();\n        const user = await User.findOne({ email: credentials.email });\n        if (!user || !(await bcrypt.compare(credentials.password, user.password))) {\n          return null;\n        }\n        return {\n          id: user._id.toString(),\n          name: user.name,\n          email: user.email,\n          role: user.role,\n          points: user.points,\n        };\n      },\n    }),\n  ],\n  session: {\n    strategy: 'jwt',\n    maxAge: 30 * 24 * 60 * 60, // 30 days\n  },\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.role = user.role;\n        token.points = user.points;\n      }\n      // Sync role and points from DB\n      await connectToDatabase();\n      const dbUser = await User.findOne({ email: token.email });\n      if (dbUser) {\n        token.role = dbUser.role;\n        token.points = dbUser.points;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (token) {\n        session.user.id = token.sub as string;\n        session.user.role = token.role as string;\n        session.user.points = token.points as number;\n      }\n      return session;\n    },\n  },\n  pages: {\n    signIn: '/[locale]/sign-in',\n  },\n};\n\nexport default NextAuth(authOptions);"],"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","ignoreList":[]}