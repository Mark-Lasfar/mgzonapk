55da833f5a01bf28aebdab07ffe241d4
"use strict";

/* istanbul ignore next */
function cov_8bzam91mk() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/auth.ts";
  var hash = "5320a7f981291da3baf44f69e849f272f0a47a2c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 32
        },
        end: {
          line: 19,
          column: 78
        }
      },
      "7": {
        start: {
          line: 20,
          column: 30
        },
        end: {
          line: 20,
          column: 93
        }
      },
      "8": {
        start: {
          line: 21,
          column: 35
        },
        end: {
          line: 21,
          column: 103
        }
      },
      "9": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 56
        }
      },
      "10": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 23,
          column: 78
        }
      },
      "11": {
        start: {
          line: 24,
          column: 32
        },
        end: {
          line: 24,
          column: 77
        }
      },
      "12": {
        start: {
          line: 25,
          column: 33
        },
        end: {
          line: 25,
          column: 92
        }
      },
      "13": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "14": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 6
        }
      },
      "15": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 105,
          column: 1
        }
      },
      "16": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 54,
          column: 17
        }
      },
      "17": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 32
        }
      },
      "18": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 51
        }
      },
      "19": {
        start: {
          line: 56,
          column: 29
        },
        end: {
          line: 58,
          column: 18
        }
      },
      "20": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 61,
          column: 17
        }
      },
      "21": {
        start: {
          line: 60,
          column: 20
        },
        end: {
          line: 60,
          column: 32
        }
      },
      "22": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 68,
          column: 18
        }
      },
      "23": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "24": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 39
        }
      },
      "25": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 43
        }
      },
      "26": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 47
        }
      },
      "27": {
        start: {
          line: 84,
          column: 27
        },
        end: {
          line: 86,
          column: 14
        }
      },
      "28": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "29": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 41
        }
      },
      "30": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 45
        }
      },
      "31": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 25
        }
      },
      "32": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "33": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 44
        }
      },
      "34": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 47
        }
      },
      "35": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 51
        }
      },
      "36": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 27
        }
      },
      "37": {
        start: {
          line: 106,
          column: 17
        },
        end: {
          line: 106,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 17
          },
          end: {
            line: 12,
            column: 18
          }
        },
        loc: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 13
          },
          end: {
            line: 15,
            column: 14
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        loc: {
          start: {
            line: 51,
            column: 42
          },
          end: {
            line: 69,
            column: 13
          }
        },
        line: 51
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        loc: {
          start: {
            line: 77,
            column: 36
          },
          end: {
            line: 92,
            column: 9
          }
        },
        line: 77
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        loc: {
          start: {
            line: 93,
            column: 43
          },
          end: {
            line: 100,
            column: 9
          }
        },
        line: 93
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 28,
            column: 38
          }
        }, {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 30,
            column: 5
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 14
          }
        }, {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 28,
            column: 32
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 39
          }
        }, {
          start: {
            line: 52,
            column: 43
          },
          end: {
            line: 52,
            column: 65
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 25
          }
        }, {
          start: {
            line: 59,
            column: 29
          },
          end: {
            line: 59,
            column: 98
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "7": {
        loc: {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "8": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/auth.ts"],
      sourcesContent: ["import NextAuth, { type NextAuthOptions } from 'next-auth';\nimport GoogleProvider from 'next-auth/providers/google';\nimport CredentialsProvider from 'next-auth/providers/credentials';\nimport { MongoDBAdapter } from '@auth/mongodb-adapter';\nimport clientPromise from './db/client';\nimport bcrypt from 'bcryptjs';\nimport User from './db/models/user.model';\nimport { connectToDatabase } from './db';\n\nexport const authOptions: NextAuthOptions = {\n  adapter: MongoDBAdapter(clientPromise),\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n    }),\n    CredentialsProvider({\n      name: 'Credentials',\n      credentials: {\n        email: { label: 'Email', type: 'email' },\n        password: { label: 'Password', type: 'password' },\n      },\n      async authorize(credentials) {\n        if (!credentials?.email || !credentials?.password) {\n          return null;\n        }\n        await connectToDatabase();\n        const user = await User.findOne({ email: credentials.email });\n        if (!user || !(await bcrypt.compare(credentials.password, user.password))) {\n          return null;\n        }\n        return {\n          id: user._id.toString(),\n          name: user.name,\n          email: user.email,\n          role: user.role,\n          points: user.points,\n        };\n      },\n    }),\n  ],\n  session: {\n    strategy: 'jwt',\n    maxAge: 30 * 24 * 60 * 60, // 30 days\n  },\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.role = user.role;\n        token.points = user.points;\n      }\n      // Sync role and points from DB\n      await connectToDatabase();\n      const dbUser = await User.findOne({ email: token.email });\n      if (dbUser) {\n        token.role = dbUser.role;\n        token.points = dbUser.points;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (token) {\n        session.user.id = token.sub as string;\n        session.user.role = token.role as string;\n        session.user.points = token.points as number;\n      }\n      return session;\n    },\n  },\n  pages: {\n    signIn: '/[locale]/sign-in',\n  },\n};\n\nexport default NextAuth(authOptions);"],
      names: ["authOptions", "adapter", "MongoDBAdapter", "clientPromise", "providers", "GoogleProvider", "clientId", "process", "env", "GOOGLE_CLIENT_ID", "clientSecret", "GOOGLE_CLIENT_SECRET", "CredentialsProvider", "name", "credentials", "email", "label", "type", "password", "authorize", "connectToDatabase", "user", "User", "findOne", "bcrypt", "compare", "id", "_id", "toString", "role", "points", "session", "strategy", "maxAge", "callbacks", "jwt", "token", "dbUser", "sub", "pages", "signIn", "NextAuth"],
      mappings: ";;;;;;;;;;;IASaA,WAAW;eAAXA;;IAiEb,OAAqC;eAArC;;;iEA1E+C;+DACpB;oEACK;gCACD;+DACL;iEACP;kEACF;oBACiB;;;;;;AAE3B,MAAMA,cAA+B;IAC1CC,SAASC,IAAAA,8BAAc,EAACC,eAAa;IACrCC,WAAW;QACTC,IAAAA,eAAc,EAAC;YACbC,UAAUC,QAAQC,GAAG,CAACC,gBAAgB;YACtCC,cAAcH,QAAQC,GAAG,CAACG,oBAAoB;QAChD;QACAC,IAAAA,oBAAmB,EAAC;YAClBC,MAAM;YACNC,aAAa;gBACXC,OAAO;oBAAEC,OAAO;oBAASC,MAAM;gBAAQ;gBACvCC,UAAU;oBAAEF,OAAO;oBAAYC,MAAM;gBAAW;YAClD;YACA,MAAME,WAAUL,WAAW;gBACzB,IAAI,CAACA,aAAaC,SAAS,CAACD,aAAaI,UAAU;oBACjD,OAAO;gBACT;gBACA,MAAME,IAAAA,qBAAiB;gBACvB,MAAMC,OAAO,MAAMC,kBAAI,CAACC,OAAO,CAAC;oBAAER,OAAOD,YAAYC,KAAK;gBAAC;gBAC3D,IAAI,CAACM,QAAQ,CAAE,MAAMG,iBAAM,CAACC,OAAO,CAACX,YAAYI,QAAQ,EAAEG,KAAKH,QAAQ,GAAI;oBACzE,OAAO;gBACT;gBACA,OAAO;oBACLQ,IAAIL,KAAKM,GAAG,CAACC,QAAQ;oBACrBf,MAAMQ,KAAKR,IAAI;oBACfE,OAAOM,KAAKN,KAAK;oBACjBc,MAAMR,KAAKQ,IAAI;oBACfC,QAAQT,KAAKS,MAAM;gBACrB;YACF;QACF;KACD;IACDC,SAAS;QACPC,UAAU;QACVC,QAAQ,KAAK,KAAK,KAAK;IACzB;IACAC,WAAW;QACT,MAAMC,KAAI,EAAEC,KAAK,EAAEf,IAAI,EAAE;YACvB,IAAIA,MAAM;gBACRe,MAAMP,IAAI,GAAGR,KAAKQ,IAAI;gBACtBO,MAAMN,MAAM,GAAGT,KAAKS,MAAM;YAC5B;YACA,+BAA+B;YAC/B,MAAMV,IAAAA,qBAAiB;YACvB,MAAMiB,SAAS,MAAMf,kBAAI,CAACC,OAAO,CAAC;gBAAER,OAAOqB,MAAMrB,KAAK;YAAC;YACvD,IAAIsB,QAAQ;gBACVD,MAAMP,IAAI,GAAGQ,OAAOR,IAAI;gBACxBO,MAAMN,MAAM,GAAGO,OAAOP,MAAM;YAC9B;YACA,OAAOM;QACT;QACA,MAAML,SAAQ,EAAEA,OAAO,EAAEK,KAAK,EAAE;YAC9B,IAAIA,OAAO;gBACTL,QAAQV,IAAI,CAACK,EAAE,GAAGU,MAAME,GAAG;gBAC3BP,QAAQV,IAAI,CAACQ,IAAI,GAAGO,MAAMP,IAAI;gBAC9BE,QAAQV,IAAI,CAACS,MAAM,GAAGM,MAAMN,MAAM;YACpC;YACA,OAAOC;QACT;IACF;IACAQ,OAAO;QACLC,QAAQ;IACV;AACF;MAEA,WAAeC,IAAAA,iBAAQ,EAACzC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5320a7f981291da3baf44f69e849f272f0a47a2c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8bzam91mk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8bzam91mk();
cov_8bzam91mk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_8bzam91mk().f[0]++;
  cov_8bzam91mk().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_8bzam91mk().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_8bzam91mk().s[3]++;
_export(exports, {
  authOptions: function () {
    /* istanbul ignore next */
    cov_8bzam91mk().f[1]++;
    cov_8bzam91mk().s[4]++;
    return authOptions;
  },
  default: function () {
    /* istanbul ignore next */
    cov_8bzam91mk().f[2]++;
    cov_8bzam91mk().s[5]++;
    return _default;
  }
});
const _nextauth =
/* istanbul ignore next */
(/*#__PURE__*/cov_8bzam91mk().s[6]++, _interop_require_default(require("next-auth")));
const _google =
/* istanbul ignore next */
(/*#__PURE__*/cov_8bzam91mk().s[7]++, _interop_require_default(require("next-auth/providers/google")));
const _credentials =
/* istanbul ignore next */
(/*#__PURE__*/cov_8bzam91mk().s[8]++, _interop_require_default(require("next-auth/providers/credentials")));
const _mongodbadapter =
/* istanbul ignore next */
(cov_8bzam91mk().s[9]++, require("@auth/mongodb-adapter"));
const _client =
/* istanbul ignore next */
(/*#__PURE__*/cov_8bzam91mk().s[10]++, _interop_require_default(require("./db/client")));
const _bcryptjs =
/* istanbul ignore next */
(/*#__PURE__*/cov_8bzam91mk().s[11]++, _interop_require_default(require("bcryptjs")));
const _usermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_8bzam91mk().s[12]++, _interop_require_default(require("./db/models/user.model")));
const _db =
/* istanbul ignore next */
(cov_8bzam91mk().s[13]++, require("./db"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_8bzam91mk().f[3]++;
  cov_8bzam91mk().s[14]++;
  return /* istanbul ignore next */(cov_8bzam91mk().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_8bzam91mk().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_8bzam91mk().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_8bzam91mk().b[0][1]++, {
    default: obj
  });
}
const authOptions =
/* istanbul ignore next */
(cov_8bzam91mk().s[15]++, {
  adapter: (0, _mongodbadapter.MongoDBAdapter)(_client.default),
  providers: [(0, _google.default)({
    clientId: process.env.GOOGLE_CLIENT_ID,
    clientSecret: process.env.GOOGLE_CLIENT_SECRET
  }), (0, _credentials.default)({
    name: 'Credentials',
    credentials: {
      email: {
        label: 'Email',
        type: 'email'
      },
      password: {
        label: 'Password',
        type: 'password'
      }
    },
    async authorize(credentials) {
      /* istanbul ignore next */
      cov_8bzam91mk().f[4]++;
      cov_8bzam91mk().s[16]++;
      if (
      /* istanbul ignore next */
      (cov_8bzam91mk().b[3][0]++, !credentials?.email) ||
      /* istanbul ignore next */
      (cov_8bzam91mk().b[3][1]++, !credentials?.password)) {
        /* istanbul ignore next */
        cov_8bzam91mk().b[2][0]++;
        cov_8bzam91mk().s[17]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_8bzam91mk().b[2][1]++;
      }
      cov_8bzam91mk().s[18]++;
      await (0, _db.connectToDatabase)();
      const user =
      /* istanbul ignore next */
      (cov_8bzam91mk().s[19]++, await _usermodel.default.findOne({
        email: credentials.email
      }));
      /* istanbul ignore next */
      cov_8bzam91mk().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_8bzam91mk().b[5][0]++, !user) ||
      /* istanbul ignore next */
      (cov_8bzam91mk().b[5][1]++, !(await _bcryptjs.default.compare(credentials.password, user.password)))) {
        /* istanbul ignore next */
        cov_8bzam91mk().b[4][0]++;
        cov_8bzam91mk().s[21]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_8bzam91mk().b[4][1]++;
      }
      cov_8bzam91mk().s[22]++;
      return {
        id: user._id.toString(),
        name: user.name,
        email: user.email,
        role: user.role,
        points: user.points
      };
    }
  })],
  session: {
    strategy: 'jwt',
    maxAge: 30 * 24 * 60 * 60
  },
  callbacks: {
    async jwt({
      token,
      user
    }) {
      /* istanbul ignore next */
      cov_8bzam91mk().f[5]++;
      cov_8bzam91mk().s[23]++;
      if (user) {
        /* istanbul ignore next */
        cov_8bzam91mk().b[6][0]++;
        cov_8bzam91mk().s[24]++;
        token.role = user.role;
        /* istanbul ignore next */
        cov_8bzam91mk().s[25]++;
        token.points = user.points;
      } else
      /* istanbul ignore next */
      {
        cov_8bzam91mk().b[6][1]++;
      }
      // Sync role and points from DB
      cov_8bzam91mk().s[26]++;
      await (0, _db.connectToDatabase)();
      const dbUser =
      /* istanbul ignore next */
      (cov_8bzam91mk().s[27]++, await _usermodel.default.findOne({
        email: token.email
      }));
      /* istanbul ignore next */
      cov_8bzam91mk().s[28]++;
      if (dbUser) {
        /* istanbul ignore next */
        cov_8bzam91mk().b[7][0]++;
        cov_8bzam91mk().s[29]++;
        token.role = dbUser.role;
        /* istanbul ignore next */
        cov_8bzam91mk().s[30]++;
        token.points = dbUser.points;
      } else
      /* istanbul ignore next */
      {
        cov_8bzam91mk().b[7][1]++;
      }
      cov_8bzam91mk().s[31]++;
      return token;
    },
    async session({
      session,
      token
    }) {
      /* istanbul ignore next */
      cov_8bzam91mk().f[6]++;
      cov_8bzam91mk().s[32]++;
      if (token) {
        /* istanbul ignore next */
        cov_8bzam91mk().b[8][0]++;
        cov_8bzam91mk().s[33]++;
        session.user.id = token.sub;
        /* istanbul ignore next */
        cov_8bzam91mk().s[34]++;
        session.user.role = token.role;
        /* istanbul ignore next */
        cov_8bzam91mk().s[35]++;
        session.user.points = token.points;
      } else
      /* istanbul ignore next */
      {
        cov_8bzam91mk().b[8][1]++;
      }
      cov_8bzam91mk().s[36]++;
      return session;
    }
  },
  pages: {
    signIn: '/[locale]/sign-in'
  }
});
const _default =
/* istanbul ignore next */
(cov_8bzam91mk().s[37]++, (0, _nextauth.default)(authOptions));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,