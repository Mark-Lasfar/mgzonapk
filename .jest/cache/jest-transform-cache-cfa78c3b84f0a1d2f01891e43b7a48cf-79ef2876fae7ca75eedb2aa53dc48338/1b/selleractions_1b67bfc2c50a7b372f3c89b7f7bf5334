73d1842b8e0bd5bebf22bedd7cbef094
'use server';
"use strict";

/* istanbul ignore next */
function cov_15fuuzsb0u() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/seller.actions.ts";
  var hash = "514af79493b9f37511c1d54d08e38e56ade95460";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/seller.actions.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 106,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 39
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 47
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 35
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 37
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 38
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 36
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 28
        }
      },
      "14": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 34
        }
      },
      "15": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 38
        }
      },
      "16": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 28
        }
      },
      "17": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 29
        }
      },
      "18": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 38
        }
      },
      "19": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 27
        }
      },
      "20": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 32
        }
      },
      "21": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 39
        }
      },
      "22": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 40
        }
      },
      "23": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 29
        }
      },
      "24": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 33
        }
      },
      "25": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 32
        }
      },
      "26": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 31
        }
      },
      "27": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 26
        }
      },
      "28": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 34
        }
      },
      "29": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 29
        }
      },
      "30": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 28
        }
      },
      "31": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 35
        }
      },
      "32": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 36
        }
      },
      "33": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 40
        }
      },
      "34": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 36
        }
      },
      "35": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 28
        }
      },
      "36": {
        start: {
          line: 108,
          column: 35
        },
        end: {
          line: 108,
          column: 97
        }
      },
      "37": {
        start: {
          line: 109,
          column: 33
        },
        end: {
          line: 109,
          column: 93
        }
      },
      "38": {
        start: {
          line: 110,
          column: 34
        },
        end: {
          line: 110,
          column: 95
        }
      },
      "39": {
        start: {
          line: 111,
          column: 36
        },
        end: {
          line: 111,
          column: 99
        }
      },
      "40": {
        start: {
          line: 112,
          column: 32
        },
        end: {
          line: 112,
          column: 77
        }
      },
      "41": {
        start: {
          line: 113,
          column: 15
        },
        end: {
          line: 113,
          column: 36
        }
      },
      "42": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 34
        }
      },
      "43": {
        start: {
          line: 115,
          column: 22
        },
        end: {
          line: 115,
          column: 54
        }
      },
      "44": {
        start: {
          line: 116,
          column: 22
        },
        end: {
          line: 116,
          column: 54
        }
      },
      "45": {
        start: {
          line: 117,
          column: 15
        },
        end: {
          line: 117,
          column: 31
        }
      },
      "46": {
        start: {
          line: 118,
          column: 24
        },
        end: {
          line: 118,
          column: 52
        }
      },
      "47": {
        start: {
          line: 119,
          column: 15
        },
        end: {
          line: 119,
          column: 34
        }
      },
      "48": {
        start: {
          line: 120,
          column: 30
        },
        end: {
          line: 120,
          column: 73
        }
      },
      "49": {
        start: {
          line: 121,
          column: 14
        },
        end: {
          line: 121,
          column: 35
        }
      },
      "50": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 43
        }
      },
      "51": {
        start: {
          line: 123,
          column: 41
        },
        end: {
          line: 123,
          column: 105
        }
      },
      "52": {
        start: {
          line: 124,
          column: 19
        },
        end: {
          line: 124,
          column: 42
        }
      },
      "53": {
        start: {
          line: 125,
          column: 23
        },
        end: {
          line: 125,
          column: 65
        }
      },
      "54": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 129,
          column: 6
        }
      },
      "55": {
        start: {
          line: 131,
          column: 15
        },
        end: {
          line: 133,
          column: 2
        }
      },
      "56": {
        start: {
          line: 134,
          column: 21
        },
        end: {
          line: 134,
          column: 205
        }
      },
      "57": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 41
        }
      },
      "58": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 34
        }
      },
      "59": {
        start: {
          line: 141,
          column: 28
        },
        end: {
          line: 144,
          column: 1
        }
      },
      "60": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 146,
          column: 56
        }
      },
      "61": {
        start: {
          line: 149,
          column: 20
        },
        end: {
          line: 149,
          column: 106
        }
      },
      "62": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 150,
          column: 31
        }
      },
      "63": {
        start: {
          line: 151,
          column: 18
        },
        end: {
          line: 151,
          column: 19
        }
      },
      "64": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "65": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 48
        }
      },
      "66": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 18
        }
      },
      "67": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 158,
          column: 25
        }
      },
      "68": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "69": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 65
        }
      },
      "70": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 213,
          column: 5
        }
      },
      "71": {
        start: {
          line: 165,
          column: 23
        },
        end: {
          line: 203,
          column: 10
        }
      },
      "72": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 209,
          column: 10
        }
      },
      "73": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 57
        }
      },
      "74": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 82
        }
      },
      "75": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "76": {
        start: {
          line: 217,
          column: 27
        },
        end: {
          line: 217,
          column: 44
        }
      },
      "77": {
        start: {
          line: 218,
          column: 26
        },
        end: {
          line: 218,
          column: 40
        }
      },
      "78": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 48
        }
      },
      "79": {
        start: {
          line: 219,
          column: 36
        },
        end: {
          line: 219,
          column: 48
        }
      },
      "80": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 51
        }
      },
      "81": {
        start: {
          line: 220,
          column: 37
        },
        end: {
          line: 220,
          column: 51
        }
      },
      "82": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 24
        }
      },
      "83": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 55
        }
      },
      "84": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 24
        }
      },
      "85": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 234,
          column: 5
        }
      },
      "86": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 57
        }
      },
      "87": {
        start: {
          line: 229,
          column: 28
        },
        end: {
          line: 229,
          column: 57
        }
      },
      "88": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 73
        }
      },
      "89": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 67
        }
      },
      "90": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 17
        }
      },
      "91": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 318,
          column: 5
        }
      },
      "92": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "93": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 69
        }
      },
      "94": {
        start: {
          line: 241,
          column: 22
        },
        end: {
          line: 300,
          column: 10
        }
      },
      "95": {
        start: {
          line: 301,
          column: 23
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "96": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 314,
          column: 10
        }
      },
      "97": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 61
        }
      },
      "98": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 86
        }
      },
      "99": {
        start: {
          line: 321,
          column: 4
        },
        end: {
          line: 420,
          column: 5
        }
      },
      "100": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 324,
          column: 9
        }
      },
      "101": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 69
        }
      },
      "102": {
        start: {
          line: 325,
          column: 41
        },
        end: {
          line: 405,
          column: 10
        }
      },
      "103": {
        start: {
          line: 406,
          column: 22
        },
        end: {
          line: 410,
          column: 9
        }
      },
      "104": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 416,
          column: 10
        }
      },
      "105": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 418,
          column: 63
        }
      },
      "106": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 419,
          column: 88
        }
      },
      "107": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 504,
          column: 5
        }
      },
      "108": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 426,
          column: 9
        }
      },
      "109": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 425,
          column: 69
        }
      },
      "110": {
        start: {
          line: 427,
          column: 42
        },
        end: {
          line: 484,
          column: 10
        }
      },
      "111": {
        start: {
          line: 485,
          column: 23
        },
        end: {
          line: 485,
          column: 53
        }
      },
      "112": {
        start: {
          line: 486,
          column: 23
        },
        end: {
          line: 491,
          column: 9
        }
      },
      "113": {
        start: {
          line: 492,
          column: 27
        },
        end: {
          line: 492,
          column: 124
        }
      },
      "114": {
        start: {
          line: 493,
          column: 32
        },
        end: {
          line: 493,
          column: 152
        }
      },
      "115": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 500,
          column: 10
        }
      },
      "116": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 502,
          column: 67
        }
      },
      "117": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 503,
          column: 92
        }
      },
      "118": {
        start: {
          line: 507,
          column: 4
        },
        end: {
          line: 593,
          column: 5
        }
      },
      "119": {
        start: {
          line: 508,
          column: 8
        },
        end: {
          line: 510,
          column: 9
        }
      },
      "120": {
        start: {
          line: 509,
          column: 12
        },
        end: {
          line: 509,
          column: 69
        }
      },
      "121": {
        start: {
          line: 511,
          column: 22
        },
        end: {
          line: 571,
          column: 10
        }
      },
      "122": {
        start: {
          line: 572,
          column: 21
        },
        end: {
          line: 578,
          column: 9
        }
      },
      "123": {
        start: {
          line: 579,
          column: 30
        },
        end: {
          line: 579,
          column: 48
        }
      },
      "124": {
        start: {
          line: 580,
          column: 31
        },
        end: {
          line: 580,
          column: 113
        }
      },
      "125": {
        start: {
          line: 581,
          column: 34
        },
        end: {
          line: 581,
          column: 149
        }
      },
      "126": {
        start: {
          line: 582,
          column: 37
        },
        end: {
          line: 582,
          column: 64
        }
      },
      "127": {
        start: {
          line: 583,
          column: 35
        },
        end: {
          line: 583,
          column: 135
        }
      },
      "128": {
        start: {
          line: 584,
          column: 8
        },
        end: {
          line: 589,
          column: 10
        }
      },
      "129": {
        start: {
          line: 591,
          column: 8
        },
        end: {
          line: 591,
          column: 65
        }
      },
      "130": {
        start: {
          line: 592,
          column: 8
        },
        end: {
          line: 592,
          column: 90
        }
      },
      "131": {
        start: {
          line: 596,
          column: 4
        },
        end: {
          line: 625,
          column: 5
        }
      },
      "132": {
        start: {
          line: 597,
          column: 8
        },
        end: {
          line: 599,
          column: 9
        }
      },
      "133": {
        start: {
          line: 598,
          column: 12
        },
        end: {
          line: 598,
          column: 69
        }
      },
      "134": {
        start: {
          line: 600,
          column: 23
        },
        end: {
          line: 600,
          column: 111
        }
      },
      "135": {
        start: {
          line: 601,
          column: 8
        },
        end: {
          line: 603,
          column: 9
        }
      },
      "136": {
        start: {
          line: 602,
          column: 12
        },
        end: {
          line: 602,
          column: 67
        }
      },
      "137": {
        start: {
          line: 604,
          column: 29
        },
        end: {
          line: 604,
          column: 67
        }
      },
      "138": {
        start: {
          line: 605,
          column: 28
        },
        end: {
          line: 607,
          column: 13
        }
      },
      "139": {
        start: {
          line: 606,
          column: 12
        },
        end: {
          line: 606,
          column: 62
        }
      },
      "140": {
        start: {
          line: 608,
          column: 30
        },
        end: {
          line: 610,
          column: 13
        }
      },
      "141": {
        start: {
          line: 609,
          column: 12
        },
        end: {
          line: 609,
          column: 64
        }
      },
      "142": {
        start: {
          line: 611,
          column: 8
        },
        end: {
          line: 621,
          column: 10
        }
      },
      "143": {
        start: {
          line: 615,
          column: 56
        },
        end: {
          line: 620,
          column: 17
        }
      },
      "144": {
        start: {
          line: 623,
          column: 8
        },
        end: {
          line: 623,
          column: 62
        }
      },
      "145": {
        start: {
          line: 624,
          column: 8
        },
        end: {
          line: 624,
          column: 87
        }
      },
      "146": {
        start: {
          line: 629,
          column: 4
        },
        end: {
          line: 637,
          column: 5
        }
      },
      "147": {
        start: {
          line: 630,
          column: 8
        },
        end: {
          line: 633,
          column: 11
        }
      },
      "148": {
        start: {
          line: 635,
          column: 8
        },
        end: {
          line: 635,
          column: 61
        }
      },
      "149": {
        start: {
          line: 636,
          column: 8
        },
        end: {
          line: 636,
          column: 23
        }
      },
      "150": {
        start: {
          line: 636,
          column: 19
        },
        end: {
          line: 636,
          column: 22
        }
      },
      "151": {
        start: {
          line: 638,
          column: 4
        },
        end: {
          line: 664,
          column: 5
        }
      },
      "152": {
        start: {
          line: 639,
          column: 8
        },
        end: {
          line: 639,
          column: 43
        }
      },
      "153": {
        start: {
          line: 640,
          column: 8
        },
        end: {
          line: 642,
          column: 9
        }
      },
      "154": {
        start: {
          line: 641,
          column: 12
        },
        end: {
          line: 641,
          column: 72
        }
      },
      "155": {
        start: {
          line: 643,
          column: 23
        },
        end: {
          line: 645,
          column: 51
        }
      },
      "156": {
        start: {
          line: 646,
          column: 8
        },
        end: {
          line: 649,
          column: 9
        }
      },
      "157": {
        start: {
          line: 647,
          column: 12
        },
        end: {
          line: 647,
          column: 63
        }
      },
      "158": {
        start: {
          line: 648,
          column: 12
        },
        end: {
          line: 648,
          column: 68
        }
      },
      "159": {
        start: {
          line: 650,
          column: 8
        },
        end: {
          line: 652,
          column: 9
        }
      },
      "160": {
        start: {
          line: 651,
          column: 12
        },
        end: {
          line: 651,
          column: 82
        }
      },
      "161": {
        start: {
          line: 653,
          column: 8
        },
        end: {
          line: 656,
          column: 10
        }
      },
      "162": {
        start: {
          line: 658,
          column: 8
        },
        end: {
          line: 658,
          column: 50
        }
      },
      "163": {
        start: {
          line: 659,
          column: 8
        },
        end: {
          line: 663,
          column: 10
        }
      },
      "164": {
        start: {
          line: 668,
          column: 4
        },
        end: {
          line: 676,
          column: 5
        }
      },
      "165": {
        start: {
          line: 669,
          column: 8
        },
        end: {
          line: 672,
          column: 11
        }
      },
      "166": {
        start: {
          line: 674,
          column: 8
        },
        end: {
          line: 674,
          column: 61
        }
      },
      "167": {
        start: {
          line: 675,
          column: 8
        },
        end: {
          line: 675,
          column: 23
        }
      },
      "168": {
        start: {
          line: 675,
          column: 19
        },
        end: {
          line: 675,
          column: 22
        }
      },
      "169": {
        start: {
          line: 677,
          column: 4
        },
        end: {
          line: 703,
          column: 5
        }
      },
      "170": {
        start: {
          line: 678,
          column: 8
        },
        end: {
          line: 678,
          column: 43
        }
      },
      "171": {
        start: {
          line: 679,
          column: 23
        },
        end: {
          line: 688,
          column: 51
        }
      },
      "172": {
        start: {
          line: 689,
          column: 8
        },
        end: {
          line: 691,
          column: 9
        }
      },
      "173": {
        start: {
          line: 690,
          column: 12
        },
        end: {
          line: 690,
          column: 68
        }
      },
      "174": {
        start: {
          line: 692,
          column: 8
        },
        end: {
          line: 695,
          column: 10
        }
      },
      "175": {
        start: {
          line: 697,
          column: 8
        },
        end: {
          line: 697,
          column: 56
        }
      },
      "176": {
        start: {
          line: 698,
          column: 8
        },
        end: {
          line: 702,
          column: 10
        }
      },
      "177": {
        start: {
          line: 707,
          column: 4
        },
        end: {
          line: 715,
          column: 5
        }
      },
      "178": {
        start: {
          line: 708,
          column: 8
        },
        end: {
          line: 711,
          column: 11
        }
      },
      "179": {
        start: {
          line: 713,
          column: 8
        },
        end: {
          line: 713,
          column: 61
        }
      },
      "180": {
        start: {
          line: 714,
          column: 8
        },
        end: {
          line: 714,
          column: 23
        }
      },
      "181": {
        start: {
          line: 714,
          column: 19
        },
        end: {
          line: 714,
          column: 22
        }
      },
      "182": {
        start: {
          line: 716,
          column: 4
        },
        end: {
          line: 735,
          column: 5
        }
      },
      "183": {
        start: {
          line: 717,
          column: 8
        },
        end: {
          line: 717,
          column: 43
        }
      },
      "184": {
        start: {
          line: 718,
          column: 23
        },
        end: {
          line: 720,
          column: 51
        }
      },
      "185": {
        start: {
          line: 721,
          column: 8
        },
        end: {
          line: 723,
          column: 9
        }
      },
      "186": {
        start: {
          line: 722,
          column: 12
        },
        end: {
          line: 722,
          column: 68
        }
      },
      "187": {
        start: {
          line: 724,
          column: 8
        },
        end: {
          line: 727,
          column: 10
        }
      },
      "188": {
        start: {
          line: 729,
          column: 8
        },
        end: {
          line: 729,
          column: 67
        }
      },
      "189": {
        start: {
          line: 730,
          column: 8
        },
        end: {
          line: 734,
          column: 10
        }
      },
      "190": {
        start: {
          line: 739,
          column: 4
        },
        end: {
          line: 747,
          column: 5
        }
      },
      "191": {
        start: {
          line: 740,
          column: 8
        },
        end: {
          line: 743,
          column: 11
        }
      },
      "192": {
        start: {
          line: 745,
          column: 8
        },
        end: {
          line: 745,
          column: 61
        }
      },
      "193": {
        start: {
          line: 746,
          column: 8
        },
        end: {
          line: 746,
          column: 23
        }
      },
      "194": {
        start: {
          line: 746,
          column: 19
        },
        end: {
          line: 746,
          column: 22
        }
      },
      "195": {
        start: {
          line: 748,
          column: 4
        },
        end: {
          line: 951,
          column: 5
        }
      },
      "196": {
        start: {
          line: 749,
          column: 8
        },
        end: {
          line: 749,
          column: 43
        }
      },
      "197": {
        start: {
          line: 750,
          column: 24
        },
        end: {
          line: 750,
          column: 62
        }
      },
      "198": {
        start: {
          line: 751,
          column: 8
        },
        end: {
          line: 751,
          column: 35
        }
      },
      "199": {
        start: {
          line: 752,
          column: 8
        },
        end: {
          line: 943,
          column: 9
        }
      },
      "200": {
        start: {
          line: 753,
          column: 12
        },
        end: {
          line: 755,
          column: 13
        }
      },
      "201": {
        start: {
          line: 754,
          column: 16
        },
        end: {
          line: 754,
          column: 83
        }
      },
      "202": {
        start: {
          line: 756,
          column: 25
        },
        end: {
          line: 756,
          column: 83
        }
      },
      "203": {
        start: {
          line: 757,
          column: 12
        },
        end: {
          line: 759,
          column: 13
        }
      },
      "204": {
        start: {
          line: 758,
          column: 16
        },
        end: {
          line: 758,
          column: 82
        }
      },
      "205": {
        start: {
          line: 760,
          column: 35
        },
        end: {
          line: 772,
          column: 31
        }
      },
      "206": {
        start: {
          line: 773,
          column: 12
        },
        end: {
          line: 776,
          column: 13
        }
      },
      "207": {
        start: {
          line: 774,
          column: 16
        },
        end: {
          line: 774,
          column: 71
        }
      },
      "208": {
        start: {
          line: 775,
          column: 16
        },
        end: {
          line: 775,
          column: 86
        }
      },
      "209": {
        start: {
          line: 777,
          column: 12
        },
        end: {
          line: 779,
          column: 13
        }
      },
      "210": {
        start: {
          line: 778,
          column: 16
        },
        end: {
          line: 778,
          column: 90
        }
      },
      "211": {
        start: {
          line: 780,
          column: 34
        },
        end: {
          line: 780,
          column: 102
        }
      },
      "212": {
        start: {
          line: 782,
          column: 12
        },
        end: {
          line: 792,
          column: 13
        }
      },
      "213": {
        start: {
          line: 783,
          column: 16
        },
        end: {
          line: 791,
          column: 19
        }
      },
      "214": {
        start: {
          line: 793,
          column: 33
        },
        end: {
          line: 793,
          column: 79
        }
      },
      "215": {
        start: {
          line: 794,
          column: 27
        },
        end: {
          line: 884,
          column: 14
        }
      },
      "216": {
        start: {
          line: 885,
          column: 32
        },
        end: {
          line: 891,
          column: 14
        }
      },
      "217": {
        start: {
          line: 892,
          column: 12
        },
        end: {
          line: 894,
          column: 13
        }
      },
      "218": {
        start: {
          line: 893,
          column: 16
        },
        end: {
          line: 893,
          column: 96
        }
      },
      "219": {
        start: {
          line: 895,
          column: 12
        },
        end: {
          line: 895,
          column: 46
        }
      },
      "220": {
        start: {
          line: 896,
          column: 12
        },
        end: {
          line: 896,
          column: 77
        }
      },
      "221": {
        start: {
          line: 897,
          column: 12
        },
        end: {
          line: 897,
          column: 68
        }
      },
      "222": {
        start: {
          line: 898,
          column: 12
        },
        end: {
          line: 932,
          column: 15
        }
      },
      "223": {
        start: {
          line: 933,
          column: 12
        },
        end: {
          line: 937,
          column: 14
        }
      },
      "224": {
        start: {
          line: 939,
          column: 12
        },
        end: {
          line: 939,
          column: 45
        }
      },
      "225": {
        start: {
          line: 940,
          column: 12
        },
        end: {
          line: 940,
          column: 24
        }
      },
      "226": {
        start: {
          line: 942,
          column: 12
        },
        end: {
          line: 942,
          column: 33
        }
      },
      "227": {
        start: {
          line: 945,
          column: 8
        },
        end: {
          line: 945,
          column: 53
        }
      },
      "228": {
        start: {
          line: 946,
          column: 8
        },
        end: {
          line: 950,
          column: 10
        }
      },
      "229": {
        start: {
          line: 957,
          column: 4
        },
        end: {
          line: 965,
          column: 5
        }
      },
      "230": {
        start: {
          line: 958,
          column: 8
        },
        end: {
          line: 961,
          column: 11
        }
      },
      "231": {
        start: {
          line: 963,
          column: 8
        },
        end: {
          line: 963,
          column: 61
        }
      },
      "232": {
        start: {
          line: 964,
          column: 8
        },
        end: {
          line: 964,
          column: 23
        }
      },
      "233": {
        start: {
          line: 964,
          column: 19
        },
        end: {
          line: 964,
          column: 22
        }
      },
      "234": {
        start: {
          line: 966,
          column: 4
        },
        end: {
          line: 1045,
          column: 5
        }
      },
      "235": {
        start: {
          line: 967,
          column: 8
        },
        end: {
          line: 967,
          column: 43
        }
      },
      "236": {
        start: {
          line: 968,
          column: 24
        },
        end: {
          line: 968,
          column: 62
        }
      },
      "237": {
        start: {
          line: 969,
          column: 8
        },
        end: {
          line: 969,
          column: 35
        }
      },
      "238": {
        start: {
          line: 970,
          column: 8
        },
        end: {
          line: 1037,
          column: 9
        }
      },
      "239": {
        start: {
          line: 971,
          column: 12
        },
        end: {
          line: 973,
          column: 13
        }
      },
      "240": {
        start: {
          line: 972,
          column: 16
        },
        end: {
          line: 972,
          column: 76
        }
      },
      "241": {
        start: {
          line: 974,
          column: 35
        },
        end: {
          line: 976,
          column: 31
        }
      },
      "242": {
        start: {
          line: 977,
          column: 12
        },
        end: {
          line: 979,
          column: 13
        }
      },
      "243": {
        start: {
          line: 978,
          column: 16
        },
        end: {
          line: 978,
          column: 72
        }
      },
      "244": {
        start: {
          line: 980,
          column: 26
        },
        end: {
          line: 980,
          column: 45
        }
      },
      "245": {
        start: {
          line: 981,
          column: 12
        },
        end: {
          line: 994,
          column: 13
        }
      },
      "246": {
        start: {
          line: 982,
          column: 16
        },
        end: {
          line: 984,
          column: 17
        }
      },
      "247": {
        start: {
          line: 983,
          column: 20
        },
        end: {
          line: 983,
          column: 74
        }
      },
      "248": {
        start: {
          line: 985,
          column: 16
        },
        end: {
          line: 993,
          column: 19
        }
      },
      "249": {
        start: {
          line: 995,
          column: 12
        },
        end: {
          line: 1005,
          column: 13
        }
      },
      "250": {
        start: {
          line: 996,
          column: 34
        },
        end: {
          line: 1001,
          column: 18
        }
      },
      "251": {
        start: {
          line: 1002,
          column: 16
        },
        end: {
          line: 1004,
          column: 17
        }
      },
      "252": {
        start: {
          line: 1003,
          column: 20
        },
        end: {
          line: 1003,
          column: 85
        }
      },
      "253": {
        start: {
          line: 1006,
          column: 31
        },
        end: {
          line: 1010,
          column: 13
        }
      },
      "254": {
        start: {
          line: 1011,
          column: 12
        },
        end: {
          line: 1011,
          column: 44
        }
      },
      "255": {
        start: {
          line: 1012,
          column: 27
        },
        end: {
          line: 1019,
          column: 48
        }
      },
      "256": {
        start: {
          line: 1020,
          column: 12
        },
        end: {
          line: 1022,
          column: 13
        }
      },
      "257": {
        start: {
          line: 1021,
          column: 16
        },
        end: {
          line: 1021,
          column: 82
        }
      },
      "258": {
        start: {
          line: 1023,
          column: 12
        },
        end: {
          line: 1023,
          column: 46
        }
      },
      "259": {
        start: {
          line: 1024,
          column: 12
        },
        end: {
          line: 1027,
          column: 13
        }
      },
      "260": {
        start: {
          line: 1025,
          column: 16
        },
        end: {
          line: 1025,
          column: 81
        }
      },
      "261": {
        start: {
          line: 1026,
          column: 16
        },
        end: {
          line: 1026,
          column: 72
        }
      },
      "262": {
        start: {
          line: 1028,
          column: 12
        },
        end: {
          line: 1031,
          column: 14
        }
      },
      "263": {
        start: {
          line: 1033,
          column: 12
        },
        end: {
          line: 1033,
          column: 45
        }
      },
      "264": {
        start: {
          line: 1034,
          column: 12
        },
        end: {
          line: 1034,
          column: 24
        }
      },
      "265": {
        start: {
          line: 1036,
          column: 12
        },
        end: {
          line: 1036,
          column: 33
        }
      },
      "266": {
        start: {
          line: 1039,
          column: 8
        },
        end: {
          line: 1039,
          column: 53
        }
      },
      "267": {
        start: {
          line: 1040,
          column: 8
        },
        end: {
          line: 1044,
          column: 10
        }
      },
      "268": {
        start: {
          line: 1049,
          column: 4
        },
        end: {
          line: 1057,
          column: 5
        }
      },
      "269": {
        start: {
          line: 1050,
          column: 8
        },
        end: {
          line: 1053,
          column: 11
        }
      },
      "270": {
        start: {
          line: 1055,
          column: 8
        },
        end: {
          line: 1055,
          column: 61
        }
      },
      "271": {
        start: {
          line: 1056,
          column: 8
        },
        end: {
          line: 1056,
          column: 23
        }
      },
      "272": {
        start: {
          line: 1056,
          column: 19
        },
        end: {
          line: 1056,
          column: 22
        }
      },
      "273": {
        start: {
          line: 1058,
          column: 4
        },
        end: {
          line: 1167,
          column: 5
        }
      },
      "274": {
        start: {
          line: 1059,
          column: 8
        },
        end: {
          line: 1059,
          column: 43
        }
      },
      "275": {
        start: {
          line: 1060,
          column: 24
        },
        end: {
          line: 1060,
          column: 62
        }
      },
      "276": {
        start: {
          line: 1061,
          column: 8
        },
        end: {
          line: 1061,
          column: 35
        }
      },
      "277": {
        start: {
          line: 1062,
          column: 8
        },
        end: {
          line: 1159,
          column: 9
        }
      },
      "278": {
        start: {
          line: 1063,
          column: 12
        },
        end: {
          line: 1065,
          column: 13
        }
      },
      "279": {
        start: {
          line: 1064,
          column: 16
        },
        end: {
          line: 1064,
          column: 83
        }
      },
      "280": {
        start: {
          line: 1066,
          column: 27
        },
        end: {
          line: 1068,
          column: 31
        }
      },
      "281": {
        start: {
          line: 1069,
          column: 12
        },
        end: {
          line: 1071,
          column: 13
        }
      },
      "282": {
        start: {
          line: 1070,
          column: 16
        },
        end: {
          line: 1070,
          column: 79
        }
      },
      "283": {
        start: {
          line: 1073,
          column: 12
        },
        end: {
          line: 1075,
          column: 13
        }
      },
      "284": {
        start: {
          line: 1074,
          column: 16
        },
        end: {
          line: 1074,
          column: 97
        }
      },
      "285": {
        start: {
          line: 1077,
          column: 12
        },
        end: {
          line: 1085,
          column: 13
        }
      },
      "286": {
        start: {
          line: 1078,
          column: 35
        },
        end: {
          line: 1078,
          column: 110
        }
      },
      "287": {
        start: {
          line: 1078,
          column: 74
        },
        end: {
          line: 1078,
          column: 109
        }
      },
      "288": {
        start: {
          line: 1079,
          column: 30
        },
        end: {
          line: 1079,
          column: 75
        }
      },
      "289": {
        start: {
          line: 1080,
          column: 16
        },
        end: {
          line: 1084,
          column: 17
        }
      },
      "290": {
        start: {
          line: 1081,
          column: 20
        },
        end: {
          line: 1083,
          column: 49
        }
      },
      "291": {
        start: {
          line: 1086,
          column: 28
        },
        end: {
          line: 1086,
          column: 67
        }
      },
      "292": {
        start: {
          line: 1087,
          column: 12
        },
        end: {
          line: 1100,
          column: 13
        }
      },
      "293": {
        start: {
          line: 1088,
          column: 16
        },
        end: {
          line: 1090,
          column: 17
        }
      },
      "294": {
        start: {
          line: 1089,
          column: 20
        },
        end: {
          line: 1089,
          column: 93
        }
      },
      "295": {
        start: {
          line: 1091,
          column: 16
        },
        end: {
          line: 1099,
          column: 19
        }
      },
      "296": {
        start: {
          line: 1101,
          column: 12
        },
        end: {
          line: 1112,
          column: 13
        }
      },
      "297": {
        start: {
          line: 1102,
          column: 34
        },
        end: {
          line: 1107,
          column: 18
        }
      },
      "298": {
        start: {
          line: 1108,
          column: 16
        },
        end: {
          line: 1110,
          column: 17
        }
      },
      "299": {
        start: {
          line: 1109,
          column: 20
        },
        end: {
          line: 1109,
          column: 92
        }
      },
      "300": {
        start: {
          line: 1111,
          column: 16
        },
        end: {
          line: 1111,
          column: 58
        }
      },
      "301": {
        start: {
          line: 1113,
          column: 12
        },
        end: {
          line: 1113,
          column: 75
        }
      },
      "302": {
        start: {
          line: 1114,
          column: 12
        },
        end: {
          line: 1114,
          column: 72
        }
      },
      "303": {
        start: {
          line: 1115,
          column: 12
        },
        end: {
          line: 1115,
          column: 54
        }
      },
      "304": {
        start: {
          line: 1116,
          column: 12
        },
        end: {
          line: 1116,
          column: 60
        }
      },
      "305": {
        start: {
          line: 1117,
          column: 12
        },
        end: {
          line: 1123,
          column: 13
        }
      },
      "306": {
        start: {
          line: 1118,
          column: 16
        },
        end: {
          line: 1122,
          column: 18
        }
      },
      "307": {
        start: {
          line: 1124,
          column: 12
        },
        end: {
          line: 1134,
          column: 14
        }
      },
      "308": {
        start: {
          line: 1135,
          column: 12
        },
        end: {
          line: 1137,
          column: 15
        }
      },
      "309": {
        start: {
          line: 1138,
          column: 12
        },
        end: {
          line: 1138,
          column: 46
        }
      },
      "310": {
        start: {
          line: 1139,
          column: 12
        },
        end: {
          line: 1139,
          column: 86
        }
      },
      "311": {
        start: {
          line: 1140,
          column: 12
        },
        end: {
          line: 1140,
          column: 84
        }
      },
      "312": {
        start: {
          line: 1141,
          column: 12
        },
        end: {
          line: 1149,
          column: 15
        }
      },
      "313": {
        start: {
          line: 1150,
          column: 12
        },
        end: {
          line: 1153,
          column: 14
        }
      },
      "314": {
        start: {
          line: 1155,
          column: 12
        },
        end: {
          line: 1155,
          column: 45
        }
      },
      "315": {
        start: {
          line: 1156,
          column: 12
        },
        end: {
          line: 1156,
          column: 24
        }
      },
      "316": {
        start: {
          line: 1158,
          column: 12
        },
        end: {
          line: 1158,
          column: 33
        }
      },
      "317": {
        start: {
          line: 1161,
          column: 8
        },
        end: {
          line: 1161,
          column: 62
        }
      },
      "318": {
        start: {
          line: 1162,
          column: 8
        },
        end: {
          line: 1166,
          column: 10
        }
      },
      "319": {
        start: {
          line: 1171,
          column: 4
        },
        end: {
          line: 1179,
          column: 5
        }
      },
      "320": {
        start: {
          line: 1172,
          column: 8
        },
        end: {
          line: 1175,
          column: 11
        }
      },
      "321": {
        start: {
          line: 1177,
          column: 8
        },
        end: {
          line: 1177,
          column: 61
        }
      },
      "322": {
        start: {
          line: 1178,
          column: 8
        },
        end: {
          line: 1178,
          column: 23
        }
      },
      "323": {
        start: {
          line: 1178,
          column: 19
        },
        end: {
          line: 1178,
          column: 22
        }
      },
      "324": {
        start: {
          line: 1180,
          column: 4
        },
        end: {
          line: 1329,
          column: 5
        }
      },
      "325": {
        start: {
          line: 1181,
          column: 8
        },
        end: {
          line: 1181,
          column: 43
        }
      },
      "326": {
        start: {
          line: 1182,
          column: 24
        },
        end: {
          line: 1182,
          column: 62
        }
      },
      "327": {
        start: {
          line: 1183,
          column: 8
        },
        end: {
          line: 1183,
          column: 35
        }
      },
      "328": {
        start: {
          line: 1184,
          column: 8
        },
        end: {
          line: 1321,
          column: 9
        }
      },
      "329": {
        start: {
          line: 1185,
          column: 12
        },
        end: {
          line: 1187,
          column: 13
        }
      },
      "330": {
        start: {
          line: 1186,
          column: 16
        },
        end: {
          line: 1186,
          column: 83
        }
      },
      "331": {
        start: {
          line: 1188,
          column: 27
        },
        end: {
          line: 1190,
          column: 31
        }
      },
      "332": {
        start: {
          line: 1191,
          column: 12
        },
        end: {
          line: 1193,
          column: 13
        }
      },
      "333": {
        start: {
          line: 1192,
          column: 16
        },
        end: {
          line: 1192,
          column: 79
        }
      },
      "334": {
        start: {
          line: 1194,
          column: 12
        },
        end: {
          line: 1196,
          column: 13
        }
      },
      "335": {
        start: {
          line: 1195,
          column: 16
        },
        end: {
          line: 1195,
          column: 92
        }
      },
      "336": {
        start: {
          line: 1197,
          column: 29
        },
        end: {
          line: 1197,
          column: 68
        }
      },
      "337": {
        start: {
          line: 1198,
          column: 31
        },
        end: {
          line: 1203,
          column: 13
        }
      },
      "338": {
        start: {
          line: 1204,
          column: 12
        },
        end: {
          line: 1206,
          column: 13
        }
      },
      "339": {
        start: {
          line: 1205,
          column: 16
        },
        end: {
          line: 1205,
          column: 79
        }
      },
      "340": {
        start: {
          line: 1207,
          column: 31
        },
        end: {
          line: 1207,
          column: 86
        }
      },
      "341": {
        start: {
          line: 1207,
          column: 70
        },
        end: {
          line: 1207,
          column: 85
        }
      },
      "342": {
        start: {
          line: 1208,
          column: 12
        },
        end: {
          line: 1210,
          column: 13
        }
      },
      "343": {
        start: {
          line: 1209,
          column: 16
        },
        end: {
          line: 1209,
          column: 92
        }
      },
      "344": {
        start: {
          line: 1211,
          column: 28
        },
        end: {
          line: 1211,
          column: 44
        }
      },
      "345": {
        start: {
          line: 1212,
          column: 33
        },
        end: {
          line: 1212,
          column: 50
        }
      },
      "346": {
        start: {
          line: 1213,
          column: 28
        },
        end: {
          line: 1213,
          column: 85
        }
      },
      "347": {
        start: {
          line: 1214,
          column: 12
        },
        end: {
          line: 1216,
          column: 13
        }
      },
      "348": {
        start: {
          line: 1215,
          column: 16
        },
        end: {
          line: 1215,
          column: 85
        }
      },
      "349": {
        start: {
          line: 1217,
          column: 28
        },
        end: {
          line: 1217,
          column: 44
        }
      },
      "350": {
        start: {
          line: 1219,
          column: 12
        },
        end: {
          line: 1236,
          column: 13
        }
      },
      "351": {
        start: {
          line: 1220,
          column: 16
        },
        end: {
          line: 1222,
          column: 17
        }
      },
      "352": {
        start: {
          line: 1221,
          column: 20
        },
        end: {
          line: 1221,
          column: 97
        }
      },
      "353": {
        start: {
          line: 1223,
          column: 36
        },
        end: {
          line: 1223,
          column: 72
        }
      },
      "354": {
        start: {
          line: 1224,
          column: 33
        },
        end: {
          line: 1224,
          column: 81
        }
      },
      "355": {
        start: {
          line: 1225,
          column: 16
        },
        end: {
          line: 1227,
          column: 17
        }
      },
      "356": {
        start: {
          line: 1226,
          column: 20
        },
        end: {
          line: 1226,
          column: 95
        }
      },
      "357": {
        start: {
          line: 1228,
          column: 16
        },
        end: {
          line: 1228,
          column: 38
        }
      },
      "358": {
        start: {
          line: 1229,
          column: 16
        },
        end: {
          line: 1229,
          column: 55
        }
      },
      "359": {
        start: {
          line: 1230,
          column: 16
        },
        end: {
          line: 1235,
          column: 19
        }
      },
      "360": {
        start: {
          line: 1237,
          column: 12
        },
        end: {
          line: 1259,
          column: 13
        }
      },
      "361": {
        start: {
          line: 1238,
          column: 16
        },
        end: {
          line: 1240,
          column: 17
        }
      },
      "362": {
        start: {
          line: 1239,
          column: 20
        },
        end: {
          line: 1239,
          column: 89
        }
      },
      "363": {
        start: {
          line: 1241,
          column: 16
        },
        end: {
          line: 1258,
          column: 17
        }
      },
      "364": {
        start: {
          line: 1242,
          column: 42
        },
        end: {
          line: 1242,
          column: 113
        }
      },
      "365": {
        start: {
          line: 1243,
          column: 20
        },
        end: {
          line: 1246,
          column: 21
        }
      },
      "366": {
        start: {
          line: 1244,
          column: 24
        },
        end: {
          line: 1244,
          column: 142
        }
      },
      "367": {
        start: {
          line: 1245,
          column: 24
        },
        end: {
          line: 1245,
          column: 91
        }
      },
      "368": {
        start: {
          line: 1247,
          column: 20
        },
        end: {
          line: 1247,
          column: 61
        }
      },
      "369": {
        start: {
          line: 1248,
          column: 23
        },
        end: {
          line: 1258,
          column: 17
        }
      },
      "370": {
        start: {
          line: 1249,
          column: 36
        },
        end: {
          line: 1249,
          column: 120
        }
      },
      "371": {
        start: {
          line: 1250,
          column: 34
        },
        end: {
          line: 1250,
          column: 69
        }
      },
      "372": {
        start: {
          line: 1251,
          column: 20
        },
        end: {
          line: 1254,
          column: 21
        }
      },
      "373": {
        start: {
          line: 1252,
          column: 24
        },
        end: {
          line: 1252,
          column: 129
        }
      },
      "374": {
        start: {
          line: 1253,
          column: 24
        },
        end: {
          line: 1253,
          column: 91
        }
      },
      "375": {
        start: {
          line: 1255,
          column: 20
        },
        end: {
          line: 1255,
          column: 61
        }
      },
      "376": {
        start: {
          line: 1256,
          column: 23
        },
        end: {
          line: 1258,
          column: 17
        }
      },
      "377": {
        start: {
          line: 1257,
          column: 20
        },
        end: {
          line: 1257,
          column: 89
        }
      },
      "378": {
        start: {
          line: 1260,
          column: 12
        },
        end: {
          line: 1269,
          column: 14
        }
      },
      "379": {
        start: {
          line: 1270,
          column: 12
        },
        end: {
          line: 1277,
          column: 13
        }
      },
      "380": {
        start: {
          line: 1271,
          column: 16
        },
        end: {
          line: 1271,
          column: 75
        }
      },
      "381": {
        start: {
          line: 1272,
          column: 16
        },
        end: {
          line: 1272,
          column: 46
        }
      },
      "382": {
        start: {
          line: 1273,
          column: 16
        },
        end: {
          line: 1273,
          column: 50
        }
      },
      "383": {
        start: {
          line: 1275,
          column: 16
        },
        end: {
          line: 1275,
          column: 47
        }
      },
      "384": {
        start: {
          line: 1276,
          column: 16
        },
        end: {
          line: 1276,
          column: 52
        }
      },
      "385": {
        start: {
          line: 1278,
          column: 12
        },
        end: {
          line: 1280,
          column: 15
        }
      },
      "386": {
        start: {
          line: 1281,
          column: 12
        },
        end: {
          line: 1281,
          column: 46
        }
      },
      "387": {
        start: {
          line: 1282,
          column: 12
        },
        end: {
          line: 1282,
          column: 77
        }
      },
      "388": {
        start: {
          line: 1283,
          column: 12
        },
        end: {
          line: 1283,
          column: 82
        }
      },
      "389": {
        start: {
          line: 1284,
          column: 12
        },
        end: {
          line: 1311,
          column: 31
        }
      },
      "390": {
        start: {
          line: 1312,
          column: 12
        },
        end: {
          line: 1315,
          column: 14
        }
      },
      "391": {
        start: {
          line: 1317,
          column: 12
        },
        end: {
          line: 1317,
          column: 45
        }
      },
      "392": {
        start: {
          line: 1318,
          column: 12
        },
        end: {
          line: 1318,
          column: 24
        }
      },
      "393": {
        start: {
          line: 1320,
          column: 12
        },
        end: {
          line: 1320,
          column: 33
        }
      },
      "394": {
        start: {
          line: 1323,
          column: 8
        },
        end: {
          line: 1323,
          column: 59
        }
      },
      "395": {
        start: {
          line: 1324,
          column: 8
        },
        end: {
          line: 1328,
          column: 10
        }
      },
      "396": {
        start: {
          line: 1333,
          column: 4
        },
        end: {
          line: 1341,
          column: 5
        }
      },
      "397": {
        start: {
          line: 1334,
          column: 8
        },
        end: {
          line: 1337,
          column: 11
        }
      },
      "398": {
        start: {
          line: 1339,
          column: 8
        },
        end: {
          line: 1339,
          column: 61
        }
      },
      "399": {
        start: {
          line: 1340,
          column: 8
        },
        end: {
          line: 1340,
          column: 23
        }
      },
      "400": {
        start: {
          line: 1340,
          column: 19
        },
        end: {
          line: 1340,
          column: 22
        }
      },
      "401": {
        start: {
          line: 1342,
          column: 4
        },
        end: {
          line: 1395,
          column: 5
        }
      },
      "402": {
        start: {
          line: 1343,
          column: 8
        },
        end: {
          line: 1343,
          column: 43
        }
      },
      "403": {
        start: {
          line: 1344,
          column: 24
        },
        end: {
          line: 1344,
          column: 62
        }
      },
      "404": {
        start: {
          line: 1345,
          column: 8
        },
        end: {
          line: 1345,
          column: 35
        }
      },
      "405": {
        start: {
          line: 1346,
          column: 8
        },
        end: {
          line: 1387,
          column: 9
        }
      },
      "406": {
        start: {
          line: 1347,
          column: 12
        },
        end: {
          line: 1349,
          column: 13
        }
      },
      "407": {
        start: {
          line: 1348,
          column: 16
        },
        end: {
          line: 1348,
          column: 83
        }
      },
      "408": {
        start: {
          line: 1350,
          column: 12
        },
        end: {
          line: 1352,
          column: 13
        }
      },
      "409": {
        start: {
          line: 1351,
          column: 16
        },
        end: {
          line: 1351,
          column: 83
        }
      },
      "410": {
        start: {
          line: 1353,
          column: 27
        },
        end: {
          line: 1355,
          column: 31
        }
      },
      "411": {
        start: {
          line: 1356,
          column: 12
        },
        end: {
          line: 1358,
          column: 13
        }
      },
      "412": {
        start: {
          line: 1357,
          column: 16
        },
        end: {
          line: 1357,
          column: 79
        }
      },
      "413": {
        start: {
          line: 1359,
          column: 12
        },
        end: {
          line: 1359,
          column: 65
        }
      },
      "414": {
        start: {
          line: 1360,
          column: 12
        },
        end: {
          line: 1360,
          column: 46
        }
      },
      "415": {
        start: {
          line: 1361,
          column: 12
        },
        end: {
          line: 1361,
          column: 77
        }
      },
      "416": {
        start: {
          line: 1362,
          column: 12
        },
        end: {
          line: 1362,
          column: 68
        }
      },
      "417": {
        start: {
          line: 1363,
          column: 12
        },
        end: {
          line: 1375,
          column: 15
        }
      },
      "418": {
        start: {
          line: 1376,
          column: 12
        },
        end: {
          line: 1381,
          column: 14
        }
      },
      "419": {
        start: {
          line: 1383,
          column: 12
        },
        end: {
          line: 1383,
          column: 45
        }
      },
      "420": {
        start: {
          line: 1384,
          column: 12
        },
        end: {
          line: 1384,
          column: 24
        }
      },
      "421": {
        start: {
          line: 1386,
          column: 12
        },
        end: {
          line: 1386,
          column: 33
        }
      },
      "422": {
        start: {
          line: 1389,
          column: 8
        },
        end: {
          line: 1389,
          column: 52
        }
      },
      "423": {
        start: {
          line: 1390,
          column: 8
        },
        end: {
          line: 1394,
          column: 10
        }
      },
      "424": {
        start: {
          line: 1398,
          column: 4
        },
        end: {
          line: 1398,
          column: 48
        }
      },
      "425": {
        start: {
          line: 1400,
          column: 4
        },
        end: {
          line: 1408,
          column: 5
        }
      },
      "426": {
        start: {
          line: 1401,
          column: 8
        },
        end: {
          line: 1404,
          column: 11
        }
      },
      "427": {
        start: {
          line: 1406,
          column: 8
        },
        end: {
          line: 1406,
          column: 61
        }
      },
      "428": {
        start: {
          line: 1407,
          column: 8
        },
        end: {
          line: 1407,
          column: 23
        }
      },
      "429": {
        start: {
          line: 1407,
          column: 19
        },
        end: {
          line: 1407,
          column: 22
        }
      },
      "430": {
        start: {
          line: 1409,
          column: 4
        },
        end: {
          line: 1459,
          column: 5
        }
      },
      "431": {
        start: {
          line: 1410,
          column: 8
        },
        end: {
          line: 1410,
          column: 43
        }
      },
      "432": {
        start: {
          line: 1411,
          column: 8
        },
        end: {
          line: 1413,
          column: 9
        }
      },
      "433": {
        start: {
          line: 1412,
          column: 12
        },
        end: {
          line: 1412,
          column: 72
        }
      },
      "434": {
        start: {
          line: 1414,
          column: 23
        },
        end: {
          line: 1416,
          column: 51
        }
      },
      "435": {
        start: {
          line: 1417,
          column: 8
        },
        end: {
          line: 1419,
          column: 9
        }
      },
      "436": {
        start: {
          line: 1418,
          column: 12
        },
        end: {
          line: 1418,
          column: 68
        }
      },
      "437": {
        start: {
          line: 1420,
          column: 20
        },
        end: {
          line: 1420,
          column: 30
        }
      },
      "438": {
        start: {
          line: 1421,
          column: 25
        },
        end: {
          line: 1421,
          column: 59
        }
      },
      "439": {
        start: {
          line: 1422,
          column: 26
        },
        end: {
          line: 1422,
          column: 66
        }
      },
      "440": {
        start: {
          line: 1423,
          column: 27
        },
        end: {
          line: 1423,
          column: 73
        }
      },
      "441": {
        start: {
          line: 1424,
          column: 26
        },
        end: {
          line: 1424,
          column: 59
        }
      },
      "442": {
        start: {
          line: 1425,
          column: 150
        },
        end: {
          line: 1435,
          column: 10
        }
      },
      "443": {
        start: {
          line: 1436,
          column: 22
        },
        end: {
          line: 1436,
          column: 91
        }
      },
      "444": {
        start: {
          line: 1437,
          column: 27
        },
        end: {
          line: 1437,
          column: 111
        }
      },
      "445": {
        start: {
          line: 1438,
          column: 24
        },
        end: {
          line: 1452,
          column: 9
        }
      },
      "446": {
        start: {
          line: 1453,
          column: 8
        },
        end: {
          line: 1453,
          column: 50
        }
      },
      "447": {
        start: {
          line: 1454,
          column: 8
        },
        end: {
          line: 1454,
          column: 109
        }
      },
      "448": {
        start: {
          line: 1455,
          column: 8
        },
        end: {
          line: 1455,
          column: 23
        }
      },
      "449": {
        start: {
          line: 1457,
          column: 8
        },
        end: {
          line: 1457,
          column: 58
        }
      },
      "450": {
        start: {
          line: 1458,
          column: 8
        },
        end: {
          line: 1458,
          column: 169
        }
      },
      "451": {
        start: {
          line: 1461,
          column: 31
        },
        end: {
          line: 1463,
          column: 2
        }
      },
      "452": {
        start: {
          line: 1462,
          column: 4
        },
        end: {
          line: 1462,
          column: 44
        }
      },
      "453": {
        start: {
          line: 1466,
          column: 4
        },
        end: {
          line: 1474,
          column: 5
        }
      },
      "454": {
        start: {
          line: 1467,
          column: 8
        },
        end: {
          line: 1470,
          column: 11
        }
      },
      "455": {
        start: {
          line: 1472,
          column: 8
        },
        end: {
          line: 1472,
          column: 61
        }
      },
      "456": {
        start: {
          line: 1473,
          column: 8
        },
        end: {
          line: 1473,
          column: 23
        }
      },
      "457": {
        start: {
          line: 1473,
          column: 19
        },
        end: {
          line: 1473,
          column: 22
        }
      },
      "458": {
        start: {
          line: 1475,
          column: 4
        },
        end: {
          line: 1543,
          column: 5
        }
      },
      "459": {
        start: {
          line: 1476,
          column: 8
        },
        end: {
          line: 1476,
          column: 43
        }
      },
      "460": {
        start: {
          line: 1477,
          column: 8
        },
        end: {
          line: 1479,
          column: 9
        }
      },
      "461": {
        start: {
          line: 1478,
          column: 12
        },
        end: {
          line: 1478,
          column: 72
        }
      },
      "462": {
        start: {
          line: 1480,
          column: 23
        },
        end: {
          line: 1482,
          column: 10
        }
      },
      "463": {
        start: {
          line: 1483,
          column: 8
        },
        end: {
          line: 1485,
          column: 9
        }
      },
      "464": {
        start: {
          line: 1484,
          column: 12
        },
        end: {
          line: 1484,
          column: 68
        }
      },
      "465": {
        start: {
          line: 1486,
          column: 22
        },
        end: {
          line: 1488,
          column: 9
        }
      },
      "466": {
        start: {
          line: 1489,
          column: 8
        },
        end: {
          line: 1504,
          column: 9
        }
      },
      "467": {
        start: {
          line: 1490,
          column: 12
        },
        end: {
          line: 1503,
          column: 14
        }
      },
      "468": {
        start: {
          line: 1505,
          column: 8
        },
        end: {
          line: 1507,
          column: 9
        }
      },
      "469": {
        start: {
          line: 1506,
          column: 12
        },
        end: {
          line: 1506,
          column: 42
        }
      },
      "470": {
        start: {
          line: 1508,
          column: 8
        },
        end: {
          line: 1510,
          column: 9
        }
      },
      "471": {
        start: {
          line: 1509,
          column: 12
        },
        end: {
          line: 1509,
          column: 46
        }
      },
      "472": {
        start: {
          line: 1511,
          column: 21
        },
        end: {
          line: 1511,
          column: 23
        }
      },
      "473": {
        start: {
          line: 1512,
          column: 8
        },
        end: {
          line: 1516,
          column: 9
        }
      },
      "474": {
        start: {
          line: 1513,
          column: 12
        },
        end: {
          line: 1513,
          column: 73
        }
      },
      "475": {
        start: {
          line: 1515,
          column: 12
        },
        end: {
          line: 1515,
          column: 32
        }
      },
      "476": {
        start: {
          line: 1517,
          column: 21
        },
        end: {
          line: 1517,
          column: 51
        }
      },
      "477": {
        start: {
          line: 1518,
          column: 22
        },
        end: {
          line: 1518,
          column: 55
        }
      },
      "478": {
        start: {
          line: 1519,
          column: 21
        },
        end: {
          line: 1519,
          column: 39
        }
      },
      "479": {
        start: {
          line: 1520,
          column: 34
        },
        end: {
          line: 1523,
          column: 10
        }
      },
      "480": {
        start: {
          line: 1524,
          column: 8
        },
        end: {
          line: 1535,
          column: 10
        }
      },
      "481": {
        start: {
          line: 1537,
          column: 8
        },
        end: {
          line: 1537,
          column: 52
        }
      },
      "482": {
        start: {
          line: 1538,
          column: 8
        },
        end: {
          line: 1542,
          column: 10
        }
      },
      "483": {
        start: {
          line: 1547,
          column: 4
        },
        end: {
          line: 1555,
          column: 5
        }
      },
      "484": {
        start: {
          line: 1548,
          column: 8
        },
        end: {
          line: 1551,
          column: 11
        }
      },
      "485": {
        start: {
          line: 1553,
          column: 8
        },
        end: {
          line: 1553,
          column: 61
        }
      },
      "486": {
        start: {
          line: 1554,
          column: 8
        },
        end: {
          line: 1554,
          column: 23
        }
      },
      "487": {
        start: {
          line: 1554,
          column: 19
        },
        end: {
          line: 1554,
          column: 22
        }
      },
      "488": {
        start: {
          line: 1556,
          column: 4
        },
        end: {
          line: 1611,
          column: 5
        }
      },
      "489": {
        start: {
          line: 1557,
          column: 8
        },
        end: {
          line: 1557,
          column: 43
        }
      },
      "490": {
        start: {
          line: 1558,
          column: 8
        },
        end: {
          line: 1560,
          column: 9
        }
      },
      "491": {
        start: {
          line: 1559,
          column: 12
        },
        end: {
          line: 1559,
          column: 72
        }
      },
      "492": {
        start: {
          line: 1561,
          column: 23
        },
        end: {
          line: 1563,
          column: 10
        }
      },
      "493": {
        start: {
          line: 1564,
          column: 8
        },
        end: {
          line: 1566,
          column: 9
        }
      },
      "494": {
        start: {
          line: 1565,
          column: 12
        },
        end: {
          line: 1565,
          column: 68
        }
      },
      "495": {
        start: {
          line: 1567,
          column: 22
        },
        end: {
          line: 1569,
          column: 9
        }
      },
      "496": {
        start: {
          line: 1570,
          column: 8
        },
        end: {
          line: 1572,
          column: 9
        }
      },
      "497": {
        start: {
          line: 1571,
          column: 12
        },
        end: {
          line: 1571,
          column: 42
        }
      },
      "498": {
        start: {
          line: 1573,
          column: 8
        },
        end: {
          line: 1581,
          column: 9
        }
      },
      "499": {
        start: {
          line: 1574,
          column: 12
        },
        end: {
          line: 1574,
          column: 33
        }
      },
      "500": {
        start: {
          line: 1575,
          column: 12
        },
        end: {
          line: 1577,
          column: 13
        }
      },
      "501": {
        start: {
          line: 1576,
          column: 16
        },
        end: {
          line: 1576,
          column: 57
        }
      },
      "502": {
        start: {
          line: 1578,
          column: 12
        },
        end: {
          line: 1580,
          column: 13
        }
      },
      "503": {
        start: {
          line: 1579,
          column: 16
        },
        end: {
          line: 1579,
          column: 55
        }
      },
      "504": {
        start: {
          line: 1582,
          column: 21
        },
        end: {
          line: 1582,
          column: 23
        }
      },
      "505": {
        start: {
          line: 1583,
          column: 8
        },
        end: {
          line: 1587,
          column: 9
        }
      },
      "506": {
        start: {
          line: 1584,
          column: 12
        },
        end: {
          line: 1584,
          column: 38
        }
      },
      "507": {
        start: {
          line: 1586,
          column: 12
        },
        end: {
          line: 1586,
          column: 32
        }
      },
      "508": {
        start: {
          line: 1588,
          column: 21
        },
        end: {
          line: 1588,
          column: 51
        }
      },
      "509": {
        start: {
          line: 1589,
          column: 22
        },
        end: {
          line: 1589,
          column: 55
        }
      },
      "510": {
        start: {
          line: 1590,
          column: 21
        },
        end: {
          line: 1590,
          column: 39
        }
      },
      "511": {
        start: {
          line: 1591,
          column: 38
        },
        end: {
          line: 1594,
          column: 10
        }
      },
      "512": {
        start: {
          line: 1595,
          column: 8
        },
        end: {
          line: 1603,
          column: 10
        }
      },
      "513": {
        start: {
          line: 1605,
          column: 8
        },
        end: {
          line: 1605,
          column: 57
        }
      },
      "514": {
        start: {
          line: 1606,
          column: 8
        },
        end: {
          line: 1610,
          column: 10
        }
      },
      "515": {
        start: {
          line: 1615,
          column: 4
        },
        end: {
          line: 1623,
          column: 5
        }
      },
      "516": {
        start: {
          line: 1616,
          column: 8
        },
        end: {
          line: 1619,
          column: 11
        }
      },
      "517": {
        start: {
          line: 1621,
          column: 8
        },
        end: {
          line: 1621,
          column: 61
        }
      },
      "518": {
        start: {
          line: 1622,
          column: 8
        },
        end: {
          line: 1622,
          column: 23
        }
      },
      "519": {
        start: {
          line: 1622,
          column: 19
        },
        end: {
          line: 1622,
          column: 22
        }
      },
      "520": {
        start: {
          line: 1624,
          column: 4
        },
        end: {
          line: 1686,
          column: 5
        }
      },
      "521": {
        start: {
          line: 1625,
          column: 8
        },
        end: {
          line: 1625,
          column: 43
        }
      },
      "522": {
        start: {
          line: 1626,
          column: 24
        },
        end: {
          line: 1626,
          column: 62
        }
      },
      "523": {
        start: {
          line: 1627,
          column: 8
        },
        end: {
          line: 1627,
          column: 35
        }
      },
      "524": {
        start: {
          line: 1628,
          column: 8
        },
        end: {
          line: 1678,
          column: 9
        }
      },
      "525": {
        start: {
          line: 1629,
          column: 12
        },
        end: {
          line: 1631,
          column: 13
        }
      },
      "526": {
        start: {
          line: 1630,
          column: 16
        },
        end: {
          line: 1630,
          column: 76
        }
      },
      "527": {
        start: {
          line: 1632,
          column: 27
        },
        end: {
          line: 1632,
          column: 89
        }
      },
      "528": {
        start: {
          line: 1633,
          column: 12
        },
        end: {
          line: 1635,
          column: 13
        }
      },
      "529": {
        start: {
          line: 1634,
          column: 16
        },
        end: {
          line: 1634,
          column: 72
        }
      },
      "530": {
        start: {
          line: 1636,
          column: 31
        },
        end: {
          line: 1638,
          column: 13
        }
      },
      "531": {
        start: {
          line: 1639,
          column: 12
        },
        end: {
          line: 1641,
          column: 13
        }
      },
      "532": {
        start: {
          line: 1640,
          column: 16
        },
        end: {
          line: 1640,
          column: 86
        }
      },
      "533": {
        start: {
          line: 1642,
          column: 12
        },
        end: {
          line: 1655,
          column: 13
        }
      },
      "534": {
        start: {
          line: 1643,
          column: 16
        },
        end: {
          line: 1643,
          column: 97
        }
      },
      "535": {
        start: {
          line: 1644,
          column: 16
        },
        end: {
          line: 1644,
          column: 97
        }
      },
      "536": {
        start: {
          line: 1645,
          column: 16
        },
        end: {
          line: 1645,
          column: 99
        }
      },
      "537": {
        start: {
          line: 1646,
          column: 19
        },
        end: {
          line: 1655,
          column: 13
        }
      },
      "538": {
        start: {
          line: 1647,
          column: 16
        },
        end: {
          line: 1647,
          column: 110
        }
      },
      "539": {
        start: {
          line: 1648,
          column: 16
        },
        end: {
          line: 1648,
          column: 112
        }
      },
      "540": {
        start: {
          line: 1649,
          column: 19
        },
        end: {
          line: 1655,
          column: 13
        }
      },
      "541": {
        start: {
          line: 1650,
          column: 16
        },
        end: {
          line: 1650,
          column: 112
        }
      },
      "542": {
        start: {
          line: 1651,
          column: 16
        },
        end: {
          line: 1651,
          column: 107
        }
      },
      "543": {
        start: {
          line: 1652,
          column: 19
        },
        end: {
          line: 1655,
          column: 13
        }
      },
      "544": {
        start: {
          line: 1653,
          column: 16
        },
        end: {
          line: 1653,
          column: 99
        }
      },
      "545": {
        start: {
          line: 1654,
          column: 16
        },
        end: {
          line: 1654,
          column: 120
        }
      },
      "546": {
        start: {
          line: 1656,
          column: 34
        },
        end: {
          line: 1661,
          column: 48
        }
      },
      "547": {
        start: {
          line: 1662,
          column: 12
        },
        end: {
          line: 1664,
          column: 13
        }
      },
      "548": {
        start: {
          line: 1663,
          column: 16
        },
        end: {
          line: 1663,
          column: 83
        }
      },
      "549": {
        start: {
          line: 1665,
          column: 12
        },
        end: {
          line: 1665,
          column: 46
        }
      },
      "550": {
        start: {
          line: 1666,
          column: 12
        },
        end: {
          line: 1666,
          column: 77
        }
      },
      "551": {
        start: {
          line: 1667,
          column: 12
        },
        end: {
          line: 1667,
          column: 86
        }
      },
      "552": {
        start: {
          line: 1668,
          column: 12
        },
        end: {
          line: 1668,
          column: 74
        }
      },
      "553": {
        start: {
          line: 1669,
          column: 12
        },
        end: {
          line: 1672,
          column: 14
        }
      },
      "554": {
        start: {
          line: 1674,
          column: 12
        },
        end: {
          line: 1674,
          column: 45
        }
      },
      "555": {
        start: {
          line: 1675,
          column: 12
        },
        end: {
          line: 1675,
          column: 24
        }
      },
      "556": {
        start: {
          line: 1677,
          column: 12
        },
        end: {
          line: 1677,
          column: 33
        }
      },
      "557": {
        start: {
          line: 1680,
          column: 8
        },
        end: {
          line: 1680,
          column: 61
        }
      },
      "558": {
        start: {
          line: 1681,
          column: 8
        },
        end: {
          line: 1685,
          column: 10
        }
      },
      "559": {
        start: {
          line: 1690,
          column: 4
        },
        end: {
          line: 1698,
          column: 5
        }
      },
      "560": {
        start: {
          line: 1691,
          column: 8
        },
        end: {
          line: 1694,
          column: 11
        }
      },
      "561": {
        start: {
          line: 1696,
          column: 8
        },
        end: {
          line: 1696,
          column: 61
        }
      },
      "562": {
        start: {
          line: 1697,
          column: 8
        },
        end: {
          line: 1697,
          column: 23
        }
      },
      "563": {
        start: {
          line: 1697,
          column: 19
        },
        end: {
          line: 1697,
          column: 22
        }
      },
      "564": {
        start: {
          line: 1699,
          column: 4
        },
        end: {
          line: 1771,
          column: 5
        }
      },
      "565": {
        start: {
          line: 1700,
          column: 8
        },
        end: {
          line: 1700,
          column: 43
        }
      },
      "566": {
        start: {
          line: 1701,
          column: 24
        },
        end: {
          line: 1701,
          column: 62
        }
      },
      "567": {
        start: {
          line: 1702,
          column: 8
        },
        end: {
          line: 1702,
          column: 35
        }
      },
      "568": {
        start: {
          line: 1703,
          column: 8
        },
        end: {
          line: 1763,
          column: 9
        }
      },
      "569": {
        start: {
          line: 1704,
          column: 12
        },
        end: {
          line: 1706,
          column: 13
        }
      },
      "570": {
        start: {
          line: 1705,
          column: 16
        },
        end: {
          line: 1705,
          column: 83
        }
      },
      "571": {
        start: {
          line: 1707,
          column: 27
        },
        end: {
          line: 1709,
          column: 31
        }
      },
      "572": {
        start: {
          line: 1710,
          column: 12
        },
        end: {
          line: 1712,
          column: 13
        }
      },
      "573": {
        start: {
          line: 1711,
          column: 16
        },
        end: {
          line: 1711,
          column: 79
        }
      },
      "574": {
        start: {
          line: 1713,
          column: 12
        },
        end: {
          line: 1715,
          column: 13
        }
      },
      "575": {
        start: {
          line: 1714,
          column: 16
        },
        end: {
          line: 1714,
          column: 79
        }
      },
      "576": {
        start: {
          line: 1716,
          column: 32
        },
        end: {
          line: 1724,
          column: 14
        }
      },
      "577": {
        start: {
          line: 1725,
          column: 39
        },
        end: {
          line: 1725,
          column: 106
        }
      },
      "578": {
        start: {
          line: 1726,
          column: 12
        },
        end: {
          line: 1731,
          column: 15
        }
      },
      "579": {
        start: {
          line: 1732,
          column: 12
        },
        end: {
          line: 1735,
          column: 13
        }
      },
      "580": {
        start: {
          line: 1733,
          column: 16
        },
        end: {
          line: 1733,
          column: 56
        }
      },
      "581": {
        start: {
          line: 1734,
          column: 16
        },
        end: {
          line: 1734,
          column: 63
        }
      },
      "582": {
        start: {
          line: 1736,
          column: 12
        },
        end: {
          line: 1738,
          column: 15
        }
      },
      "583": {
        start: {
          line: 1739,
          column: 12
        },
        end: {
          line: 1739,
          column: 46
        }
      },
      "584": {
        start: {
          line: 1740,
          column: 12
        },
        end: {
          line: 1740,
          column: 90
        }
      },
      "585": {
        start: {
          line: 1741,
          column: 12
        },
        end: {
          line: 1753,
          column: 15
        }
      },
      "586": {
        start: {
          line: 1754,
          column: 12
        },
        end: {
          line: 1757,
          column: 14
        }
      },
      "587": {
        start: {
          line: 1759,
          column: 12
        },
        end: {
          line: 1759,
          column: 45
        }
      },
      "588": {
        start: {
          line: 1760,
          column: 12
        },
        end: {
          line: 1760,
          column: 24
        }
      },
      "589": {
        start: {
          line: 1762,
          column: 12
        },
        end: {
          line: 1762,
          column: 33
        }
      },
      "590": {
        start: {
          line: 1765,
          column: 8
        },
        end: {
          line: 1765,
          column: 55
        }
      },
      "591": {
        start: {
          line: 1766,
          column: 8
        },
        end: {
          line: 1770,
          column: 10
        }
      },
      "592": {
        start: {
          line: 1775,
          column: 4
        },
        end: {
          line: 1783,
          column: 5
        }
      },
      "593": {
        start: {
          line: 1776,
          column: 8
        },
        end: {
          line: 1779,
          column: 11
        }
      },
      "594": {
        start: {
          line: 1781,
          column: 8
        },
        end: {
          line: 1781,
          column: 61
        }
      },
      "595": {
        start: {
          line: 1782,
          column: 8
        },
        end: {
          line: 1782,
          column: 23
        }
      },
      "596": {
        start: {
          line: 1782,
          column: 19
        },
        end: {
          line: 1782,
          column: 22
        }
      },
      "597": {
        start: {
          line: 1784,
          column: 4
        },
        end: {
          line: 1843,
          column: 5
        }
      },
      "598": {
        start: {
          line: 1785,
          column: 8
        },
        end: {
          line: 1785,
          column: 43
        }
      },
      "599": {
        start: {
          line: 1786,
          column: 24
        },
        end: {
          line: 1786,
          column: 62
        }
      },
      "600": {
        start: {
          line: 1787,
          column: 8
        },
        end: {
          line: 1787,
          column: 35
        }
      },
      "601": {
        start: {
          line: 1788,
          column: 8
        },
        end: {
          line: 1835,
          column: 9
        }
      },
      "602": {
        start: {
          line: 1789,
          column: 12
        },
        end: {
          line: 1791,
          column: 13
        }
      },
      "603": {
        start: {
          line: 1790,
          column: 16
        },
        end: {
          line: 1790,
          column: 83
        }
      },
      "604": {
        start: {
          line: 1792,
          column: 34
        },
        end: {
          line: 1792,
          column: 57
        }
      },
      "605": {
        start: {
          line: 1793,
          column: 12
        },
        end: {
          line: 1795,
          column: 13
        }
      },
      "606": {
        start: {
          line: 1794,
          column: 16
        },
        end: {
          line: 1794,
          column: 80
        }
      },
      "607": {
        start: {
          line: 1796,
          column: 27
        },
        end: {
          line: 1798,
          column: 31
        }
      },
      "608": {
        start: {
          line: 1799,
          column: 12
        },
        end: {
          line: 1801,
          column: 13
        }
      },
      "609": {
        start: {
          line: 1800,
          column: 16
        },
        end: {
          line: 1800,
          column: 79
        }
      },
      "610": {
        start: {
          line: 1802,
          column: 12
        },
        end: {
          line: 1812,
          column: 15
        }
      },
      "611": {
        start: {
          line: 1811,
          column: 81
        },
        end: {
          line: 1811,
          column: 127
        }
      },
      "612": {
        start: {
          line: 1813,
          column: 12
        },
        end: {
          line: 1815,
          column: 32
        }
      },
      "613": {
        start: {
          line: 1816,
          column: 12
        },
        end: {
          line: 1821,
          column: 15
        }
      },
      "614": {
        start: {
          line: 1822,
          column: 12
        },
        end: {
          line: 1822,
          column: 46
        }
      },
      "615": {
        start: {
          line: 1823,
          column: 12
        },
        end: {
          line: 1823,
          column: 77
        }
      },
      "616": {
        start: {
          line: 1824,
          column: 12
        },
        end: {
          line: 1824,
          column: 68
        }
      },
      "617": {
        start: {
          line: 1825,
          column: 12
        },
        end: {
          line: 1825,
          column: 74
        }
      },
      "618": {
        start: {
          line: 1826,
          column: 12
        },
        end: {
          line: 1829,
          column: 14
        }
      },
      "619": {
        start: {
          line: 1831,
          column: 12
        },
        end: {
          line: 1831,
          column: 45
        }
      },
      "620": {
        start: {
          line: 1832,
          column: 12
        },
        end: {
          line: 1832,
          column: 24
        }
      },
      "621": {
        start: {
          line: 1834,
          column: 12
        },
        end: {
          line: 1834,
          column: 33
        }
      },
      "622": {
        start: {
          line: 1837,
          column: 8
        },
        end: {
          line: 1837,
          column: 53
        }
      },
      "623": {
        start: {
          line: 1838,
          column: 8
        },
        end: {
          line: 1842,
          column: 10
        }
      },
      "624": {
        start: {
          line: 1847,
          column: 4
        },
        end: {
          line: 1855,
          column: 5
        }
      },
      "625": {
        start: {
          line: 1848,
          column: 8
        },
        end: {
          line: 1851,
          column: 11
        }
      },
      "626": {
        start: {
          line: 1853,
          column: 8
        },
        end: {
          line: 1853,
          column: 61
        }
      },
      "627": {
        start: {
          line: 1854,
          column: 8
        },
        end: {
          line: 1854,
          column: 23
        }
      },
      "628": {
        start: {
          line: 1854,
          column: 19
        },
        end: {
          line: 1854,
          column: 22
        }
      },
      "629": {
        start: {
          line: 1856,
          column: 4
        },
        end: {
          line: 1909,
          column: 5
        }
      },
      "630": {
        start: {
          line: 1857,
          column: 8
        },
        end: {
          line: 1857,
          column: 43
        }
      },
      "631": {
        start: {
          line: 1858,
          column: 24
        },
        end: {
          line: 1858,
          column: 62
        }
      },
      "632": {
        start: {
          line: 1859,
          column: 8
        },
        end: {
          line: 1859,
          column: 35
        }
      },
      "633": {
        start: {
          line: 1860,
          column: 8
        },
        end: {
          line: 1901,
          column: 9
        }
      },
      "634": {
        start: {
          line: 1861,
          column: 12
        },
        end: {
          line: 1863,
          column: 13
        }
      },
      "635": {
        start: {
          line: 1862,
          column: 16
        },
        end: {
          line: 1862,
          column: 83
        }
      },
      "636": {
        start: {
          line: 1864,
          column: 34
        },
        end: {
          line: 1864,
          column: 57
        }
      },
      "637": {
        start: {
          line: 1865,
          column: 12
        },
        end: {
          line: 1867,
          column: 13
        }
      },
      "638": {
        start: {
          line: 1866,
          column: 16
        },
        end: {
          line: 1866,
          column: 80
        }
      },
      "639": {
        start: {
          line: 1868,
          column: 27
        },
        end: {
          line: 1868,
          column: 89
        }
      },
      "640": {
        start: {
          line: 1869,
          column: 12
        },
        end: {
          line: 1871,
          column: 13
        }
      },
      "641": {
        start: {
          line: 1870,
          column: 16
        },
        end: {
          line: 1870,
          column: 79
        }
      },
      "642": {
        start: {
          line: 1872,
          column: 12
        },
        end: {
          line: 1872,
          column: 53
        }
      },
      "643": {
        start: {
          line: 1873,
          column: 12
        },
        end: {
          line: 1873,
          column: 42
        }
      },
      "644": {
        start: {
          line: 1874,
          column: 12
        },
        end: {
          line: 1876,
          column: 15
        }
      },
      "645": {
        start: {
          line: 1877,
          column: 12
        },
        end: {
          line: 1877,
          column: 46
        }
      },
      "646": {
        start: {
          line: 1878,
          column: 12
        },
        end: {
          line: 1878,
          column: 77
        }
      },
      "647": {
        start: {
          line: 1879,
          column: 12
        },
        end: {
          line: 1879,
          column: 74
        }
      },
      "648": {
        start: {
          line: 1880,
          column: 12
        },
        end: {
          line: 1891,
          column: 15
        }
      },
      "649": {
        start: {
          line: 1892,
          column: 12
        },
        end: {
          line: 1895,
          column: 14
        }
      },
      "650": {
        start: {
          line: 1897,
          column: 12
        },
        end: {
          line: 1897,
          column: 45
        }
      },
      "651": {
        start: {
          line: 1898,
          column: 12
        },
        end: {
          line: 1898,
          column: 24
        }
      },
      "652": {
        start: {
          line: 1900,
          column: 12
        },
        end: {
          line: 1900,
          column: 33
        }
      },
      "653": {
        start: {
          line: 1903,
          column: 8
        },
        end: {
          line: 1903,
          column: 54
        }
      },
      "654": {
        start: {
          line: 1904,
          column: 8
        },
        end: {
          line: 1908,
          column: 10
        }
      },
      "655": {
        start: {
          line: 1913,
          column: 4
        },
        end: {
          line: 1921,
          column: 5
        }
      },
      "656": {
        start: {
          line: 1914,
          column: 8
        },
        end: {
          line: 1917,
          column: 11
        }
      },
      "657": {
        start: {
          line: 1919,
          column: 8
        },
        end: {
          line: 1919,
          column: 61
        }
      },
      "658": {
        start: {
          line: 1920,
          column: 8
        },
        end: {
          line: 1920,
          column: 23
        }
      },
      "659": {
        start: {
          line: 1920,
          column: 19
        },
        end: {
          line: 1920,
          column: 22
        }
      },
      "660": {
        start: {
          line: 1922,
          column: 4
        },
        end: {
          line: 1984,
          column: 5
        }
      },
      "661": {
        start: {
          line: 1923,
          column: 8
        },
        end: {
          line: 1923,
          column: 43
        }
      },
      "662": {
        start: {
          line: 1924,
          column: 30
        },
        end: {
          line: 1924,
          column: 53
        }
      },
      "663": {
        start: {
          line: 1925,
          column: 8
        },
        end: {
          line: 1927,
          column: 9
        }
      },
      "664": {
        start: {
          line: 1926,
          column: 12
        },
        end: {
          line: 1926,
          column: 69
        }
      },
      "665": {
        start: {
          line: 1928,
          column: 22
        },
        end: {
          line: 1928,
          column: 24
        }
      },
      "666": {
        start: {
          line: 1929,
          column: 8
        },
        end: {
          line: 1950,
          column: 9
        }
      },
      "667": {
        start: {
          line: 1930,
          column: 12
        },
        end: {
          line: 1949,
          column: 14
        }
      },
      "668": {
        start: {
          line: 1951,
          column: 8
        },
        end: {
          line: 1953,
          column: 9
        }
      },
      "669": {
        start: {
          line: 1952,
          column: 12
        },
        end: {
          line: 1952,
          column: 50
        }
      },
      "670": {
        start: {
          line: 1954,
          column: 21
        },
        end: {
          line: 1954,
          column: 23
        }
      },
      "671": {
        start: {
          line: 1955,
          column: 8
        },
        end: {
          line: 1959,
          column: 9
        }
      },
      "672": {
        start: {
          line: 1956,
          column: 12
        },
        end: {
          line: 1956,
          column: 57
        }
      },
      "673": {
        start: {
          line: 1958,
          column: 12
        },
        end: {
          line: 1958,
          column: 32
        }
      },
      "674": {
        start: {
          line: 1960,
          column: 21
        },
        end: {
          line: 1960,
          column: 39
        }
      },
      "675": {
        start: {
          line: 1961,
          column: 33
        },
        end: {
          line: 1964,
          column: 10
        }
      },
      "676": {
        start: {
          line: 1965,
          column: 8
        },
        end: {
          line: 1976,
          column: 10
        }
      },
      "677": {
        start: {
          line: 1978,
          column: 8
        },
        end: {
          line: 1978,
          column: 55
        }
      },
      "678": {
        start: {
          line: 1979,
          column: 8
        },
        end: {
          line: 1983,
          column: 10
        }
      },
      "679": {
        start: {
          line: 1988,
          column: 4
        },
        end: {
          line: 1996,
          column: 5
        }
      },
      "680": {
        start: {
          line: 1989,
          column: 8
        },
        end: {
          line: 1992,
          column: 11
        }
      },
      "681": {
        start: {
          line: 1994,
          column: 8
        },
        end: {
          line: 1994,
          column: 61
        }
      },
      "682": {
        start: {
          line: 1995,
          column: 8
        },
        end: {
          line: 1995,
          column: 23
        }
      },
      "683": {
        start: {
          line: 1995,
          column: 19
        },
        end: {
          line: 1995,
          column: 22
        }
      },
      "684": {
        start: {
          line: 1997,
          column: 4
        },
        end: {
          line: 2041,
          column: 5
        }
      },
      "685": {
        start: {
          line: 1998,
          column: 8
        },
        end: {
          line: 1998,
          column: 43
        }
      },
      "686": {
        start: {
          line: 1999,
          column: 30
        },
        end: {
          line: 1999,
          column: 53
        }
      },
      "687": {
        start: {
          line: 2000,
          column: 8
        },
        end: {
          line: 2002,
          column: 9
        }
      },
      "688": {
        start: {
          line: 2001,
          column: 12
        },
        end: {
          line: 2001,
          column: 69
        }
      },
      "689": {
        start: {
          line: 2003,
          column: 22
        },
        end: {
          line: 2003,
          column: 24
        }
      },
      "690": {
        start: {
          line: 2004,
          column: 8
        },
        end: {
          line: 2025,
          column: 9
        }
      },
      "691": {
        start: {
          line: 2005,
          column: 12
        },
        end: {
          line: 2024,
          column: 14
        }
      },
      "692": {
        start: {
          line: 2026,
          column: 21
        },
        end: {
          line: 2028,
          column: 9
        }
      },
      "693": {
        start: {
          line: 2029,
          column: 21
        },
        end: {
          line: 2029,
          column: 42
        }
      },
      "694": {
        start: {
          line: 2030,
          column: 33
        },
        end: {
          line: 2033,
          column: 10
        }
      },
      "695": {
        start: {
          line: 2034,
          column: 8
        },
        end: {
          line: 2037,
          column: 10
        }
      },
      "696": {
        start: {
          line: 2039,
          column: 8
        },
        end: {
          line: 2039,
          column: 51
        }
      },
      "697": {
        start: {
          line: 2040,
          column: 8
        },
        end: {
          line: 2040,
          column: 157
        }
      },
      "698": {
        start: {
          line: 2045,
          column: 4
        },
        end: {
          line: 2053,
          column: 5
        }
      },
      "699": {
        start: {
          line: 2046,
          column: 8
        },
        end: {
          line: 2049,
          column: 11
        }
      },
      "700": {
        start: {
          line: 2051,
          column: 8
        },
        end: {
          line: 2051,
          column: 61
        }
      },
      "701": {
        start: {
          line: 2052,
          column: 8
        },
        end: {
          line: 2052,
          column: 23
        }
      },
      "702": {
        start: {
          line: 2052,
          column: 19
        },
        end: {
          line: 2052,
          column: 22
        }
      },
      "703": {
        start: {
          line: 2054,
          column: 4
        },
        end: {
          line: 2124,
          column: 5
        }
      },
      "704": {
        start: {
          line: 2055,
          column: 8
        },
        end: {
          line: 2055,
          column: 43
        }
      },
      "705": {
        start: {
          line: 2056,
          column: 24
        },
        end: {
          line: 2056,
          column: 62
        }
      },
      "706": {
        start: {
          line: 2057,
          column: 8
        },
        end: {
          line: 2057,
          column: 35
        }
      },
      "707": {
        start: {
          line: 2058,
          column: 8
        },
        end: {
          line: 2116,
          column: 9
        }
      },
      "708": {
        start: {
          line: 2059,
          column: 12
        },
        end: {
          line: 2061,
          column: 13
        }
      },
      "709": {
        start: {
          line: 2060,
          column: 16
        },
        end: {
          line: 2060,
          column: 83
        }
      },
      "710": {
        start: {
          line: 2062,
          column: 27
        },
        end: {
          line: 2064,
          column: 31
        }
      },
      "711": {
        start: {
          line: 2065,
          column: 12
        },
        end: {
          line: 2067,
          column: 13
        }
      },
      "712": {
        start: {
          line: 2066,
          column: 16
        },
        end: {
          line: 2066,
          column: 79
        }
      },
      "713": {
        start: {
          line: 2068,
          column: 31
        },
        end: {
          line: 2068,
          column: 106
        }
      },
      "714": {
        start: {
          line: 2068,
          column: 70
        },
        end: {
          line: 2068,
          column: 105
        }
      },
      "715": {
        start: {
          line: 2069,
          column: 28
        },
        end: {
          line: 2069,
          column: 64
        }
      },
      "716": {
        start: {
          line: 2070,
          column: 29
        },
        end: {
          line: 2072,
          column: 14
        }
      },
      "717": {
        start: {
          line: 2073,
          column: 12
        },
        end: {
          line: 2077,
          column: 13
        }
      },
      "718": {
        start: {
          line: 2074,
          column: 16
        },
        end: {
          line: 2076,
          column: 37
        }
      },
      "719": {
        start: {
          line: 2078,
          column: 34
        },
        end: {
          line: 2078,
          column: 57
        }
      },
      "720": {
        start: {
          line: 2079,
          column: 32
        },
        end: {
          line: 2079,
          column: 67
        }
      },
      "721": {
        start: {
          line: 2080,
          column: 27
        },
        end: {
          line: 2088,
          column: 14
        }
      },
      "722": {
        start: {
          line: 2089,
          column: 12
        },
        end: {
          line: 2089,
          column: 44
        }
      },
      "723": {
        start: {
          line: 2090,
          column: 12
        },
        end: {
          line: 2092,
          column: 15
        }
      },
      "724": {
        start: {
          line: 2093,
          column: 12
        },
        end: {
          line: 2093,
          column: 46
        }
      },
      "725": {
        start: {
          line: 2094,
          column: 12
        },
        end: {
          line: 2094,
          column: 95
        }
      },
      "726": {
        start: {
          line: 2095,
          column: 12
        },
        end: {
          line: 2106,
          column: 15
        }
      },
      "727": {
        start: {
          line: 2107,
          column: 12
        },
        end: {
          line: 2110,
          column: 14
        }
      },
      "728": {
        start: {
          line: 2112,
          column: 12
        },
        end: {
          line: 2112,
          column: 45
        }
      },
      "729": {
        start: {
          line: 2113,
          column: 12
        },
        end: {
          line: 2113,
          column: 24
        }
      },
      "730": {
        start: {
          line: 2115,
          column: 12
        },
        end: {
          line: 2115,
          column: 33
        }
      },
      "731": {
        start: {
          line: 2118,
          column: 8
        },
        end: {
          line: 2118,
          column: 54
        }
      },
      "732": {
        start: {
          line: 2119,
          column: 8
        },
        end: {
          line: 2123,
          column: 10
        }
      },
      "733": {
        start: {
          line: 2128,
          column: 4
        },
        end: {
          line: 2136,
          column: 5
        }
      },
      "734": {
        start: {
          line: 2129,
          column: 8
        },
        end: {
          line: 2132,
          column: 11
        }
      },
      "735": {
        start: {
          line: 2134,
          column: 8
        },
        end: {
          line: 2134,
          column: 61
        }
      },
      "736": {
        start: {
          line: 2135,
          column: 8
        },
        end: {
          line: 2135,
          column: 23
        }
      },
      "737": {
        start: {
          line: 2135,
          column: 19
        },
        end: {
          line: 2135,
          column: 22
        }
      },
      "738": {
        start: {
          line: 2137,
          column: 4
        },
        end: {
          line: 2162,
          column: 5
        }
      },
      "739": {
        start: {
          line: 2138,
          column: 8
        },
        end: {
          line: 2138,
          column: 43
        }
      },
      "740": {
        start: {
          line: 2139,
          column: 8
        },
        end: {
          line: 2141,
          column: 9
        }
      },
      "741": {
        start: {
          line: 2140,
          column: 12
        },
        end: {
          line: 2140,
          column: 72
        }
      },
      "742": {
        start: {
          line: 2142,
          column: 23
        },
        end: {
          line: 2144,
          column: 10
        }
      },
      "743": {
        start: {
          line: 2145,
          column: 8
        },
        end: {
          line: 2147,
          column: 9
        }
      },
      "744": {
        start: {
          line: 2146,
          column: 12
        },
        end: {
          line: 2146,
          column: 68
        }
      },
      "745": {
        start: {
          line: 2148,
          column: 24
        },
        end: {
          line: 2150,
          column: 79
        }
      },
      "746": {
        start: {
          line: 2151,
          column: 8
        },
        end: {
          line: 2154,
          column: 10
        }
      },
      "747": {
        start: {
          line: 2156,
          column: 8
        },
        end: {
          line: 2156,
          column: 52
        }
      },
      "748": {
        start: {
          line: 2157,
          column: 8
        },
        end: {
          line: 2161,
          column: 10
        }
      },
      "749": {
        start: {
          line: 2166,
          column: 4
        },
        end: {
          line: 2174,
          column: 5
        }
      },
      "750": {
        start: {
          line: 2167,
          column: 8
        },
        end: {
          line: 2170,
          column: 11
        }
      },
      "751": {
        start: {
          line: 2172,
          column: 8
        },
        end: {
          line: 2172,
          column: 61
        }
      },
      "752": {
        start: {
          line: 2173,
          column: 8
        },
        end: {
          line: 2173,
          column: 23
        }
      },
      "753": {
        start: {
          line: 2173,
          column: 19
        },
        end: {
          line: 2173,
          column: 22
        }
      },
      "754": {
        start: {
          line: 2175,
          column: 4
        },
        end: {
          line: 2232,
          column: 5
        }
      },
      "755": {
        start: {
          line: 2176,
          column: 8
        },
        end: {
          line: 2176,
          column: 43
        }
      },
      "756": {
        start: {
          line: 2177,
          column: 24
        },
        end: {
          line: 2177,
          column: 62
        }
      },
      "757": {
        start: {
          line: 2178,
          column: 8
        },
        end: {
          line: 2178,
          column: 35
        }
      },
      "758": {
        start: {
          line: 2179,
          column: 8
        },
        end: {
          line: 2224,
          column: 9
        }
      },
      "759": {
        start: {
          line: 2180,
          column: 12
        },
        end: {
          line: 2182,
          column: 13
        }
      },
      "760": {
        start: {
          line: 2181,
          column: 16
        },
        end: {
          line: 2181,
          column: 77
        }
      },
      "761": {
        start: {
          line: 2183,
          column: 27
        },
        end: {
          line: 2185,
          column: 31
        }
      },
      "762": {
        start: {
          line: 2186,
          column: 12
        },
        end: {
          line: 2188,
          column: 13
        }
      },
      "763": {
        start: {
          line: 2187,
          column: 16
        },
        end: {
          line: 2187,
          column: 79
        }
      },
      "764": {
        start: {
          line: 2189,
          column: 27
        },
        end: {
          line: 2192,
          column: 14
        }
      },
      "765": {
        start: {
          line: 2193,
          column: 12
        },
        end: {
          line: 2195,
          column: 13
        }
      },
      "766": {
        start: {
          line: 2194,
          column: 16
        },
        end: {
          line: 2194,
          column: 87
        }
      },
      "767": {
        start: {
          line: 2196,
          column: 34
        },
        end: {
          line: 2196,
          column: 57
        }
      },
      "768": {
        start: {
          line: 2197,
          column: 32
        },
        end: {
          line: 2197,
          column: 67
        }
      },
      "769": {
        start: {
          line: 2198,
          column: 34
        },
        end: {
          line: 2200,
          column: 14
        }
      },
      "770": {
        start: {
          line: 2201,
          column: 12
        },
        end: {
          line: 2201,
          column: 46
        }
      },
      "771": {
        start: {
          line: 2202,
          column: 12
        },
        end: {
          line: 2202,
          column: 95
        }
      },
      "772": {
        start: {
          line: 2203,
          column: 12
        },
        end: {
          line: 2214,
          column: 15
        }
      },
      "773": {
        start: {
          line: 2215,
          column: 12
        },
        end: {
          line: 2218,
          column: 14
        }
      },
      "774": {
        start: {
          line: 2220,
          column: 12
        },
        end: {
          line: 2220,
          column: 45
        }
      },
      "775": {
        start: {
          line: 2221,
          column: 12
        },
        end: {
          line: 2221,
          column: 24
        }
      },
      "776": {
        start: {
          line: 2223,
          column: 12
        },
        end: {
          line: 2223,
          column: 33
        }
      },
      "777": {
        start: {
          line: 2226,
          column: 8
        },
        end: {
          line: 2226,
          column: 54
        }
      },
      "778": {
        start: {
          line: 2227,
          column: 8
        },
        end: {
          line: 2231,
          column: 10
        }
      },
      "779": {
        start: {
          line: 2236,
          column: 4
        },
        end: {
          line: 2244,
          column: 5
        }
      },
      "780": {
        start: {
          line: 2237,
          column: 8
        },
        end: {
          line: 2240,
          column: 11
        }
      },
      "781": {
        start: {
          line: 2242,
          column: 8
        },
        end: {
          line: 2242,
          column: 61
        }
      },
      "782": {
        start: {
          line: 2243,
          column: 8
        },
        end: {
          line: 2243,
          column: 23
        }
      },
      "783": {
        start: {
          line: 2243,
          column: 19
        },
        end: {
          line: 2243,
          column: 22
        }
      },
      "784": {
        start: {
          line: 2245,
          column: 4
        },
        end: {
          line: 2302,
          column: 5
        }
      },
      "785": {
        start: {
          line: 2246,
          column: 8
        },
        end: {
          line: 2246,
          column: 43
        }
      },
      "786": {
        start: {
          line: 2247,
          column: 24
        },
        end: {
          line: 2247,
          column: 62
        }
      },
      "787": {
        start: {
          line: 2248,
          column: 8
        },
        end: {
          line: 2248,
          column: 35
        }
      },
      "788": {
        start: {
          line: 2249,
          column: 8
        },
        end: {
          line: 2294,
          column: 9
        }
      },
      "789": {
        start: {
          line: 2250,
          column: 12
        },
        end: {
          line: 2252,
          column: 13
        }
      },
      "790": {
        start: {
          line: 2251,
          column: 16
        },
        end: {
          line: 2251,
          column: 77
        }
      },
      "791": {
        start: {
          line: 2253,
          column: 27
        },
        end: {
          line: 2255,
          column: 31
        }
      },
      "792": {
        start: {
          line: 2256,
          column: 12
        },
        end: {
          line: 2258,
          column: 13
        }
      },
      "793": {
        start: {
          line: 2257,
          column: 16
        },
        end: {
          line: 2257,
          column: 79
        }
      },
      "794": {
        start: {
          line: 2259,
          column: 27
        },
        end: {
          line: 2262,
          column: 14
        }
      },
      "795": {
        start: {
          line: 2263,
          column: 12
        },
        end: {
          line: 2265,
          column: 13
        }
      },
      "796": {
        start: {
          line: 2264,
          column: 16
        },
        end: {
          line: 2264,
          column: 87
        }
      },
      "797": {
        start: {
          line: 2266,
          column: 34
        },
        end: {
          line: 2266,
          column: 57
        }
      },
      "798": {
        start: {
          line: 2267,
          column: 32
        },
        end: {
          line: 2267,
          column: 67
        }
      },
      "799": {
        start: {
          line: 2268,
          column: 12
        },
        end: {
          line: 2270,
          column: 15
        }
      },
      "800": {
        start: {
          line: 2271,
          column: 12
        },
        end: {
          line: 2271,
          column: 46
        }
      },
      "801": {
        start: {
          line: 2272,
          column: 12
        },
        end: {
          line: 2272,
          column: 95
        }
      },
      "802": {
        start: {
          line: 2273,
          column: 12
        },
        end: {
          line: 2284,
          column: 15
        }
      },
      "803": {
        start: {
          line: 2285,
          column: 12
        },
        end: {
          line: 2288,
          column: 14
        }
      },
      "804": {
        start: {
          line: 2290,
          column: 12
        },
        end: {
          line: 2290,
          column: 45
        }
      },
      "805": {
        start: {
          line: 2291,
          column: 12
        },
        end: {
          line: 2291,
          column: 24
        }
      },
      "806": {
        start: {
          line: 2293,
          column: 12
        },
        end: {
          line: 2293,
          column: 33
        }
      },
      "807": {
        start: {
          line: 2296,
          column: 8
        },
        end: {
          line: 2296,
          column: 58
        }
      },
      "808": {
        start: {
          line: 2297,
          column: 8
        },
        end: {
          line: 2301,
          column: 10
        }
      },
      "809": {
        start: {
          line: 2306,
          column: 4
        },
        end: {
          line: 2314,
          column: 5
        }
      },
      "810": {
        start: {
          line: 2307,
          column: 8
        },
        end: {
          line: 2310,
          column: 11
        }
      },
      "811": {
        start: {
          line: 2312,
          column: 8
        },
        end: {
          line: 2312,
          column: 61
        }
      },
      "812": {
        start: {
          line: 2313,
          column: 8
        },
        end: {
          line: 2313,
          column: 23
        }
      },
      "813": {
        start: {
          line: 2313,
          column: 19
        },
        end: {
          line: 2313,
          column: 22
        }
      },
      "814": {
        start: {
          line: 2315,
          column: 4
        },
        end: {
          line: 2334,
          column: 5
        }
      },
      "815": {
        start: {
          line: 2316,
          column: 8
        },
        end: {
          line: 2316,
          column: 43
        }
      },
      "816": {
        start: {
          line: 2317,
          column: 23
        },
        end: {
          line: 2319,
          column: 51
        }
      },
      "817": {
        start: {
          line: 2320,
          column: 8
        },
        end: {
          line: 2322,
          column: 9
        }
      },
      "818": {
        start: {
          line: 2321,
          column: 12
        },
        end: {
          line: 2321,
          column: 68
        }
      },
      "819": {
        start: {
          line: 2323,
          column: 8
        },
        end: {
          line: 2326,
          column: 10
        }
      },
      "820": {
        start: {
          line: 2328,
          column: 8
        },
        end: {
          line: 2328,
          column: 69
        }
      },
      "821": {
        start: {
          line: 2329,
          column: 8
        },
        end: {
          line: 2333,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 23
          },
          end: {
            line: 13,
            column: 24
          }
        },
        loc: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 16,
            column: 30
          }
        },
        loc: {
          start: {
            line: 16,
            column: 40
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 37
          },
          end: {
            line: 19,
            column: 38
          }
        },
        loc: {
          start: {
            line: 19,
            column: 48
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 25
          },
          end: {
            line: 22,
            column: 26
          }
        },
        loc: {
          start: {
            line: 22,
            column: 36
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 32
          }
        },
        loc: {
          start: {
            line: 25,
            column: 42
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 26
          },
          end: {
            line: 28,
            column: 27
          }
        },
        loc: {
          start: {
            line: 28,
            column: 37
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 27
          },
          end: {
            line: 31,
            column: 28
          }
        },
        loc: {
          start: {
            line: 31,
            column: 38
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 28
          },
          end: {
            line: 34,
            column: 29
          }
        },
        loc: {
          start: {
            line: 34,
            column: 39
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 26
          },
          end: {
            line: 37,
            column: 27
          }
        },
        loc: {
          start: {
            line: 37,
            column: 37
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 18
          },
          end: {
            line: 40,
            column: 19
          }
        },
        loc: {
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 43,
            column: 24
          },
          end: {
            line: 43,
            column: 25
          }
        },
        loc: {
          start: {
            line: 43,
            column: 35
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 46,
            column: 28
          },
          end: {
            line: 46,
            column: 29
          }
        },
        loc: {
          start: {
            line: 46,
            column: 39
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 49,
            column: 18
          },
          end: {
            line: 49,
            column: 19
          }
        },
        loc: {
          start: {
            line: 49,
            column: 29
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 49
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 52,
            column: 20
          }
        },
        loc: {
          start: {
            line: 52,
            column: 30
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 52
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 55,
            column: 28
          },
          end: {
            line: 55,
            column: 29
          }
        },
        loc: {
          start: {
            line: 55,
            column: 39
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 55
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 58,
            column: 17
          },
          end: {
            line: 58,
            column: 18
          }
        },
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 58
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 61,
            column: 22
          },
          end: {
            line: 61,
            column: 23
          }
        },
        loc: {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 61
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 64,
            column: 29
          },
          end: {
            line: 64,
            column: 30
          }
        },
        loc: {
          start: {
            line: 64,
            column: 40
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 64
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 67,
            column: 30
          },
          end: {
            line: 67,
            column: 31
          }
        },
        loc: {
          start: {
            line: 67,
            column: 41
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 67
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 70,
            column: 20
          }
        },
        loc: {
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 70
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 73,
            column: 23
          },
          end: {
            line: 73,
            column: 24
          }
        },
        loc: {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 73
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 76,
            column: 22
          },
          end: {
            line: 76,
            column: 23
          }
        },
        loc: {
          start: {
            line: 76,
            column: 33
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 76
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 79,
            column: 21
          },
          end: {
            line: 79,
            column: 22
          }
        },
        loc: {
          start: {
            line: 79,
            column: 32
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 79
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 82,
            column: 17
          }
        },
        loc: {
          start: {
            line: 82,
            column: 27
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 82
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 85,
            column: 24
          },
          end: {
            line: 85,
            column: 25
          }
        },
        loc: {
          start: {
            line: 85,
            column: 35
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 85
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 88,
            column: 19
          },
          end: {
            line: 88,
            column: 20
          }
        },
        loc: {
          start: {
            line: 88,
            column: 30
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 88
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 91,
            column: 18
          },
          end: {
            line: 91,
            column: 19
          }
        },
        loc: {
          start: {
            line: 91,
            column: 29
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 91
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 94,
            column: 25
          },
          end: {
            line: 94,
            column: 26
          }
        },
        loc: {
          start: {
            line: 94,
            column: 36
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 94
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 97,
            column: 26
          },
          end: {
            line: 97,
            column: 27
          }
        },
        loc: {
          start: {
            line: 97,
            column: 37
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 97
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 100,
            column: 30
          },
          end: {
            line: 100,
            column: 31
          }
        },
        loc: {
          start: {
            line: 100,
            column: 41
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 100
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 103,
            column: 26
          },
          end: {
            line: 103,
            column: 27
          }
        },
        loc: {
          start: {
            line: 103,
            column: 37
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 103
      },
      "32": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 126,
            column: 9
          },
          end: {
            line: 126,
            column: 33
          }
        },
        loc: {
          start: {
            line: 126,
            column: 39
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 126
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        loc: {
          start: {
            line: 136,
            column: 30
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 136
      },
      "34": {
        name: "isValidObjectId",
        decl: {
          start: {
            line: 145,
            column: 9
          },
          end: {
            line: 145,
            column: 24
          }
        },
        loc: {
          start: {
            line: 145,
            column: 29
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 145
      },
      "35": {
        name: "generateCustomSiteUrl",
        decl: {
          start: {
            line: 148,
            column: 15
          },
          end: {
            line: 148,
            column: 36
          }
        },
        loc: {
          start: {
            line: 148,
            column: 51
          },
          end: {
            line: 159,
            column: 1
          }
        },
        line: 148
      },
      "36": {
        name: "calculateRevenueHelper",
        decl: {
          start: {
            line: 160,
            column: 15
          },
          end: {
            line: 160,
            column: 37
          }
        },
        loc: {
          start: {
            line: 160,
            column: 59
          },
          end: {
            line: 214,
            column: 1
          }
        },
        line: 160
      },
      "37": {
        name: "calculateTrendHelper",
        decl: {
          start: {
            line: 215,
            column: 15
          },
          end: {
            line: 215,
            column: 35
          }
        },
        loc: {
          start: {
            line: 215,
            column: 54
          },
          end: {
            line: 226,
            column: 1
          }
        },
        line: 215
      },
      "38": {
        name: "calculateGrowthPercentageHelper",
        decl: {
          start: {
            line: 227,
            column: 15
          },
          end: {
            line: 227,
            column: 46
          }
        },
        loc: {
          start: {
            line: 227,
            column: 66
          },
          end: {
            line: 235,
            column: 1
          }
        },
        line: 227
      },
      "39": {
        name: "calculateOrderStats",
        decl: {
          start: {
            line: 236,
            column: 15
          },
          end: {
            line: 236,
            column: 34
          }
        },
        loc: {
          start: {
            line: 236,
            column: 45
          },
          end: {
            line: 319,
            column: 1
          }
        },
        line: 236
      },
      "40": {
        name: "calculateProductStats",
        decl: {
          start: {
            line: 320,
            column: 15
          },
          end: {
            line: 320,
            column: 36
          }
        },
        loc: {
          start: {
            line: 320,
            column: 47
          },
          end: {
            line: 421,
            column: 1
          }
        },
        line: 320
      },
      "41": {
        name: "calculatePerformanceStats",
        decl: {
          start: {
            line: 422,
            column: 15
          },
          end: {
            line: 422,
            column: 40
          }
        },
        loc: {
          start: {
            line: 422,
            column: 51
          },
          end: {
            line: 505,
            column: 1
          }
        },
        line: 422
      },
      "42": {
        name: "calculateAnalyticsStats",
        decl: {
          start: {
            line: 506,
            column: 15
          },
          end: {
            line: 506,
            column: 38
          }
        },
        loc: {
          start: {
            line: 506,
            column: 49
          },
          end: {
            line: 594,
            column: 1
          }
        },
        line: 506
      },
      "43": {
        name: "calculatePointsStats",
        decl: {
          start: {
            line: 595,
            column: 15
          },
          end: {
            line: 595,
            column: 35
          }
        },
        loc: {
          start: {
            line: 595,
            column: 46
          },
          end: {
            line: 626,
            column: 1
          }
        },
        line: 595
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 605,
            column: 61
          },
          end: {
            line: 605,
            column: 62
          }
        },
        loc: {
          start: {
            line: 605,
            column: 72
          },
          end: {
            line: 607,
            column: 9
          }
        },
        line: 605
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 608,
            column: 63
          },
          end: {
            line: 608,
            column: 64
          }
        },
        loc: {
          start: {
            line: 608,
            column: 74
          },
          end: {
            line: 610,
            column: 9
          }
        },
        line: 608
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 615,
            column: 49
          },
          end: {
            line: 615,
            column: 50
          }
        },
        loc: {
          start: {
            line: 615,
            column: 56
          },
          end: {
            line: 620,
            column: 17
          }
        },
        line: 615
      },
      "47": {
        name: "getSellerByUserId",
        decl: {
          start: {
            line: 627,
            column: 15
          },
          end: {
            line: 627,
            column: 32
          }
        },
        loc: {
          start: {
            line: 627,
            column: 56
          },
          end: {
            line: 665,
            column: 1
          }
        },
        line: 627
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 636,
            column: 12
          },
          end: {
            line: 636,
            column: 13
          }
        },
        loc: {
          start: {
            line: 636,
            column: 19
          },
          end: {
            line: 636,
            column: 22
          }
        },
        line: 636
      },
      "49": {
        name: "getSellerById",
        decl: {
          start: {
            line: 666,
            column: 15
          },
          end: {
            line: 666,
            column: 28
          }
        },
        loc: {
          start: {
            line: 666,
            column: 54
          },
          end: {
            line: 704,
            column: 1
          }
        },
        line: 666
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 675,
            column: 12
          },
          end: {
            line: 675,
            column: 13
          }
        },
        loc: {
          start: {
            line: 675,
            column: 19
          },
          end: {
            line: 675,
            column: 22
          }
        },
        line: 675
      },
      "51": {
        name: "getSellerByBusinessName",
        decl: {
          start: {
            line: 705,
            column: 15
          },
          end: {
            line: 705,
            column: 38
          }
        },
        loc: {
          start: {
            line: 705,
            column: 68
          },
          end: {
            line: 736,
            column: 1
          }
        },
        line: 705
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 714,
            column: 12
          },
          end: {
            line: 714,
            column: 13
          }
        },
        loc: {
          start: {
            line: 714,
            column: 19
          },
          end: {
            line: 714,
            column: 22
          }
        },
        line: 714
      },
      "53": {
        name: "createSeller",
        decl: {
          start: {
            line: 737,
            column: 15
          },
          end: {
            line: 737,
            column: 27
          }
        },
        loc: {
          start: {
            line: 737,
            column: 57
          },
          end: {
            line: 952,
            column: 1
          }
        },
        line: 737
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 746,
            column: 12
          },
          end: {
            line: 746,
            column: 13
          }
        },
        loc: {
          start: {
            line: 746,
            column: 19
          },
          end: {
            line: 746,
            column: 22
          }
        },
        line: 746
      },
      "55": {
        name: "updateSeller",
        decl: {
          start: {
            line: 953,
            column: 15
          },
          end: {
            line: 953,
            column: 27
          }
        },
        loc: {
          start: {
            line: 955,
            column: 18
          },
          end: {
            line: 1046,
            column: 1
          }
        },
        line: 955
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 964,
            column: 12
          },
          end: {
            line: 964,
            column: 13
          }
        },
        loc: {
          start: {
            line: 964,
            column: 19
          },
          end: {
            line: 964,
            column: 22
          }
        },
        line: 964
      },
      "57": {
        name: "updateSellerSettings",
        decl: {
          start: {
            line: 1047,
            column: 15
          },
          end: {
            line: 1047,
            column: 35
          }
        },
        loc: {
          start: {
            line: 1047,
            column: 77
          },
          end: {
            line: 1168,
            column: 1
          }
        },
        line: 1047
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 1056,
            column: 12
          },
          end: {
            line: 1056,
            column: 13
          }
        },
        loc: {
          start: {
            line: 1056,
            column: 19
          },
          end: {
            line: 1056,
            column: 22
          }
        },
        line: 1056
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 1078,
            column: 69
          },
          end: {
            line: 1078,
            column: 70
          }
        },
        loc: {
          start: {
            line: 1078,
            column: 74
          },
          end: {
            line: 1078,
            column: 109
          }
        },
        line: 1078
      },
      "60": {
        name: "updateSellerSubscription",
        decl: {
          start: {
            line: 1169,
            column: 15
          },
          end: {
            line: 1169,
            column: 39
          }
        },
        loc: {
          start: {
            line: 1169,
            column: 120
          },
          end: {
            line: 1330,
            column: 1
          }
        },
        line: 1169
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 1178,
            column: 12
          },
          end: {
            line: 1178,
            column: 13
          }
        },
        loc: {
          start: {
            line: 1178,
            column: 19
          },
          end: {
            line: 1178,
            column: 22
          }
        },
        line: 1178
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 1207,
            column: 65
          },
          end: {
            line: 1207,
            column: 66
          }
        },
        loc: {
          start: {
            line: 1207,
            column: 70
          },
          end: {
            line: 1207,
            column: 85
          }
        },
        line: 1207
      },
      "63": {
        name: "awardSellerPoints",
        decl: {
          start: {
            line: 1331,
            column: 15
          },
          end: {
            line: 1331,
            column: 32
          }
        },
        loc: {
          start: {
            line: 1331,
            column: 86
          },
          end: {
            line: 1396,
            column: 1
          }
        },
        line: 1331
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 1340,
            column: 12
          },
          end: {
            line: 1340,
            column: 13
          }
        },
        loc: {
          start: {
            line: 1340,
            column: 19
          },
          end: {
            line: 1340,
            column: 22
          }
        },
        line: 1340
      },
      "65": {
        name: "getSellerMetrics",
        decl: {
          start: {
            line: 1397,
            column: 15
          },
          end: {
            line: 1397,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1397,
            column: 55
          },
          end: {
            line: 1460,
            column: 1
          }
        },
        line: 1397
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 1407,
            column: 12
          },
          end: {
            line: 1407,
            column: 13
          }
        },
        loc: {
          start: {
            line: 1407,
            column: 19
          },
          end: {
            line: 1407,
            column: 22
          }
        },
        line: 1407
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 1461,
            column: 49
          },
          end: {
            line: 1461,
            column: 50
          }
        },
        loc: {
          start: {
            line: 1461,
            column: 80
          },
          end: {
            line: 1463,
            column: 1
          }
        },
        line: 1461
      },
      "68": {
        name: "getProducts",
        decl: {
          start: {
            line: 1464,
            column: 15
          },
          end: {
            line: 1464,
            column: 26
          }
        },
        loc: {
          start: {
            line: 1464,
            column: 64
          },
          end: {
            line: 1544,
            column: 1
          }
        },
        line: 1464
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 1473,
            column: 12
          },
          end: {
            line: 1473,
            column: 13
          }
        },
        loc: {
          start: {
            line: 1473,
            column: 19
          },
          end: {
            line: 1473,
            column: 22
          }
        },
        line: 1473
      },
      "70": {
        name: "getSellerOrders",
        decl: {
          start: {
            line: 1545,
            column: 15
          },
          end: {
            line: 1545,
            column: 30
          }
        },
        loc: {
          start: {
            line: 1545,
            column: 68
          },
          end: {
            line: 1612,
            column: 1
          }
        },
        line: 1545
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 1554,
            column: 12
          },
          end: {
            line: 1554,
            column: 13
          }
        },
        loc: {
          start: {
            line: 1554,
            column: 19
          },
          end: {
            line: 1554,
            column: 22
          }
        },
        line: 1554
      },
      "72": {
        name: "updateSellerMetrics",
        decl: {
          start: {
            line: 1613,
            column: 15
          },
          end: {
            line: 1613,
            column: 34
          }
        },
        loc: {
          start: {
            line: 1613,
            column: 66
          },
          end: {
            line: 1687,
            column: 1
          }
        },
        line: 1613
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 1622,
            column: 12
          },
          end: {
            line: 1622,
            column: 13
          }
        },
        loc: {
          start: {
            line: 1622,
            column: 19
          },
          end: {
            line: 1622,
            column: 22
          }
        },
        line: 1622
      },
      "74": {
        name: "uploadSellerDocument",
        decl: {
          start: {
            line: 1688,
            column: 15
          },
          end: {
            line: 1688,
            column: 35
          }
        },
        loc: {
          start: {
            line: 1688,
            column: 69
          },
          end: {
            line: 1772,
            column: 1
          }
        },
        line: 1688
      },
      "75": {
        name: "(anonymous_75)",
        decl: {
          start: {
            line: 1697,
            column: 12
          },
          end: {
            line: 1697,
            column: 13
          }
        },
        loc: {
          start: {
            line: 1697,
            column: 19
          },
          end: {
            line: 1697,
            column: 22
          }
        },
        line: 1697
      },
      "76": {
        name: "deleteSeller",
        decl: {
          start: {
            line: 1773,
            column: 15
          },
          end: {
            line: 1773,
            column: 27
          }
        },
        loc: {
          start: {
            line: 1773,
            column: 51
          },
          end: {
            line: 1844,
            column: 1
          }
        },
        line: 1773
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 1782,
            column: 12
          },
          end: {
            line: 1782,
            column: 13
          }
        },
        loc: {
          start: {
            line: 1782,
            column: 19
          },
          end: {
            line: 1782,
            column: 22
          }
        },
        line: 1782
      },
      "78": {
        name: "(anonymous_78)",
        decl: {
          start: {
            line: 1811,
            column: 74
          },
          end: {
            line: 1811,
            column: 75
          }
        },
        loc: {
          start: {
            line: 1811,
            column: 81
          },
          end: {
            line: 1811,
            column: 127
          }
        },
        line: 1811
      },
      "79": {
        name: "suspendSeller",
        decl: {
          start: {
            line: 1845,
            column: 15
          },
          end: {
            line: 1845,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1845,
            column: 62
          },
          end: {
            line: 1910,
            column: 1
          }
        },
        line: 1845
      },
      "80": {
        name: "(anonymous_80)",
        decl: {
          start: {
            line: 1854,
            column: 12
          },
          end: {
            line: 1854,
            column: 13
          }
        },
        loc: {
          start: {
            line: 1854,
            column: 19
          },
          end: {
            line: 1854,
            column: 22
          }
        },
        line: 1854
      },
      "81": {
        name: "getAllSellers",
        decl: {
          start: {
            line: 1911,
            column: 15
          },
          end: {
            line: 1911,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1911,
            column: 128
          },
          end: {
            line: 1985,
            column: 1
          }
        },
        line: 1911
      },
      "82": {
        name: "(anonymous_82)",
        decl: {
          start: {
            line: 1920,
            column: 12
          },
          end: {
            line: 1920,
            column: 13
          }
        },
        loc: {
          start: {
            line: 1920,
            column: 19
          },
          end: {
            line: 1920,
            column: 22
          }
        },
        line: 1920
      },
      "83": {
        name: "getSellers",
        decl: {
          start: {
            line: 1986,
            column: 15
          },
          end: {
            line: 1986,
            column: 25
          }
        },
        loc: {
          start: {
            line: 1986,
            column: 83
          },
          end: {
            line: 2042,
            column: 1
          }
        },
        line: 1986
      },
      "84": {
        name: "(anonymous_84)",
        decl: {
          start: {
            line: 1995,
            column: 12
          },
          end: {
            line: 1995,
            column: 13
          }
        },
        loc: {
          start: {
            line: 1995,
            column: 19
          },
          end: {
            line: 1995,
            column: 22
          }
        },
        line: 1995
      },
      "85": {
        name: "createSellerApiKey",
        decl: {
          start: {
            line: 2043,
            column: 15
          },
          end: {
            line: 2043,
            column: 33
          }
        },
        loc: {
          start: {
            line: 2043,
            column: 87
          },
          end: {
            line: 2125,
            column: 1
          }
        },
        line: 2043
      },
      "86": {
        name: "(anonymous_86)",
        decl: {
          start: {
            line: 2052,
            column: 12
          },
          end: {
            line: 2052,
            column: 13
          }
        },
        loc: {
          start: {
            line: 2052,
            column: 19
          },
          end: {
            line: 2052,
            column: 22
          }
        },
        line: 2052
      },
      "87": {
        name: "(anonymous_87)",
        decl: {
          start: {
            line: 2068,
            column: 65
          },
          end: {
            line: 2068,
            column: 66
          }
        },
        loc: {
          start: {
            line: 2068,
            column: 70
          },
          end: {
            line: 2068,
            column: 105
          }
        },
        line: 2068
      },
      "88": {
        name: "getSellerApiKeys",
        decl: {
          start: {
            line: 2126,
            column: 15
          },
          end: {
            line: 2126,
            column: 31
          }
        },
        loc: {
          start: {
            line: 2126,
            column: 55
          },
          end: {
            line: 2163,
            column: 1
          }
        },
        line: 2126
      },
      "89": {
        name: "(anonymous_89)",
        decl: {
          start: {
            line: 2135,
            column: 12
          },
          end: {
            line: 2135,
            column: 13
          }
        },
        loc: {
          start: {
            line: 2135,
            column: 19
          },
          end: {
            line: 2135,
            column: 22
          }
        },
        line: 2135
      },
      "90": {
        name: "rotateSellerApiKey",
        decl: {
          start: {
            line: 2164,
            column: 15
          },
          end: {
            line: 2164,
            column: 33
          }
        },
        loc: {
          start: {
            line: 2164,
            column: 67
          },
          end: {
            line: 2233,
            column: 1
          }
        },
        line: 2164
      },
      "91": {
        name: "(anonymous_91)",
        decl: {
          start: {
            line: 2173,
            column: 12
          },
          end: {
            line: 2173,
            column: 13
          }
        },
        loc: {
          start: {
            line: 2173,
            column: 19
          },
          end: {
            line: 2173,
            column: 22
          }
        },
        line: 2173
      },
      "92": {
        name: "deactivateSellerApiKey",
        decl: {
          start: {
            line: 2234,
            column: 15
          },
          end: {
            line: 2234,
            column: 37
          }
        },
        loc: {
          start: {
            line: 2234,
            column: 71
          },
          end: {
            line: 2303,
            column: 1
          }
        },
        line: 2234
      },
      "93": {
        name: "(anonymous_93)",
        decl: {
          start: {
            line: 2243,
            column: 12
          },
          end: {
            line: 2243,
            column: 13
          }
        },
        loc: {
          start: {
            line: 2243,
            column: 19
          },
          end: {
            line: 2243,
            column: 22
          }
        },
        line: 2243
      },
      "94": {
        name: "getSellerByCustomSiteUrl",
        decl: {
          start: {
            line: 2304,
            column: 15
          },
          end: {
            line: 2304,
            column: 39
          }
        },
        loc: {
          start: {
            line: 2304,
            column: 70
          },
          end: {
            line: 2335,
            column: 1
          }
        },
        line: 2304
      },
      "95": {
        name: "(anonymous_95)",
        decl: {
          start: {
            line: 2313,
            column: 12
          },
          end: {
            line: 2313,
            column: 13
          }
        },
        loc: {
          start: {
            line: 2313,
            column: 19
          },
          end: {
            line: 2313,
            column: 22
          }
        },
        line: 2313
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 127,
            column: 11
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 35
          },
          end: {
            line: 127,
            column: 38
          }
        }, {
          start: {
            line: 127,
            column: 41
          },
          end: {
            line: 129,
            column: 5
          }
        }],
        line: 127
      },
      "1": {
        loc: {
          start: {
            line: 127,
            column: 11
          },
          end: {
            line: 127,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 11
          },
          end: {
            line: 127,
            column: 14
          }
        }, {
          start: {
            line: 127,
            column: 18
          },
          end: {
            line: 127,
            column: 32
          }
        }],
        line: 127
      },
      "2": {
        loc: {
          start: {
            line: 134,
            column: 129
          },
          end: {
            line: 134,
            column: 163
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 129
          },
          end: {
            line: 134,
            column: 157
          }
        }, {
          start: {
            line: 134,
            column: 161
          },
          end: {
            line: 134,
            column: 163
          }
        }],
        line: 134
      },
      "3": {
        loc: {
          start: {
            line: 134,
            column: 165
          },
          end: {
            line: 134,
            column: 203
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 165
          },
          end: {
            line: 134,
            column: 197
          }
        }, {
          start: {
            line: 134,
            column: 201
          },
          end: {
            line: 134,
            column: 203
          }
        }],
        line: 134
      },
      "4": {
        loc: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "5": {
        loc: {
          start: {
            line: 205,
            column: 19
          },
          end: {
            line: 205,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 19
          },
          end: {
            line: 205,
            column: 35
          }
        }, {
          start: {
            line: 205,
            column: 39
          },
          end: {
            line: 205,
            column: 40
          }
        }],
        line: 205
      },
      "6": {
        loc: {
          start: {
            line: 206,
            column: 19
          },
          end: {
            line: 206,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 19
          },
          end: {
            line: 206,
            column: 35
          }
        }, {
          start: {
            line: 206,
            column: 39
          },
          end: {
            line: 206,
            column: 40
          }
        }],
        line: 206
      },
      "7": {
        loc: {
          start: {
            line: 207,
            column: 21
          },
          end: {
            line: 207,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 21
          },
          end: {
            line: 207,
            column: 39
          }
        }, {
          start: {
            line: 207,
            column: 43
          },
          end: {
            line: 207,
            column: 44
          }
        }],
        line: 207
      },
      "8": {
        loc: {
          start: {
            line: 208,
            column: 22
          },
          end: {
            line: 208,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 22
          },
          end: {
            line: 208,
            column: 41
          }
        }, {
          start: {
            line: 208,
            column: 45
          },
          end: {
            line: 208,
            column: 46
          }
        }],
        line: 208
      },
      "9": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 219,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 219,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "10": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 220,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 220,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "11": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 229,
            column: 57
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 229,
            column: 57
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "12": {
        loc: {
          start: {
            line: 229,
            column: 35
          },
          end: {
            line: 229,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 229,
            column: 49
          },
          end: {
            line: 229,
            column: 52
          }
        }, {
          start: {
            line: 229,
            column: 55
          },
          end: {
            line: 229,
            column: 56
          }
        }],
        line: 229
      },
      "13": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "14": {
        loc: {
          start: {
            line: 301,
            column: 23
          },
          end: {
            line: 307,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 301,
            column: 23
          },
          end: {
            line: 301,
            column: 31
          }
        }, {
          start: {
            line: 301,
            column: 35
          },
          end: {
            line: 307,
            column: 9
          }
        }],
        line: 301
      },
      "15": {
        loc: {
          start: {
            line: 313,
            column: 27
          },
          end: {
            line: 313,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 46
          },
          end: {
            line: 313,
            column: 98
          }
        }, {
          start: {
            line: 313,
            column: 101
          },
          end: {
            line: 313,
            column: 102
          }
        }],
        line: 313
      },
      "16": {
        loc: {
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 324,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 324,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "17": {
        loc: {
          start: {
            line: 406,
            column: 22
          },
          end: {
            line: 410,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 22
          },
          end: {
            line: 406,
            column: 35
          }
        }, {
          start: {
            line: 406,
            column: 39
          },
          end: {
            line: 410,
            column: 9
          }
        }],
        line: 406
      },
      "18": {
        loc: {
          start: {
            line: 424,
            column: 8
          },
          end: {
            line: 426,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 424,
            column: 8
          },
          end: {
            line: 426,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 424
      },
      "19": {
        loc: {
          start: {
            line: 485,
            column: 23
          },
          end: {
            line: 485,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 485,
            column: 23
          },
          end: {
            line: 485,
            column: 48
          }
        }, {
          start: {
            line: 485,
            column: 52
          },
          end: {
            line: 485,
            column: 53
          }
        }],
        line: 485
      },
      "20": {
        loc: {
          start: {
            line: 486,
            column: 23
          },
          end: {
            line: 491,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 486,
            column: 23
          },
          end: {
            line: 486,
            column: 36
          }
        }, {
          start: {
            line: 486,
            column: 40
          },
          end: {
            line: 491,
            column: 9
          }
        }],
        line: 486
      },
      "21": {
        loc: {
          start: {
            line: 492,
            column: 27
          },
          end: {
            line: 492,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 492,
            column: 52
          },
          end: {
            line: 492,
            column: 120
          }
        }, {
          start: {
            line: 492,
            column: 123
          },
          end: {
            line: 492,
            column: 124
          }
        }],
        line: 492
      },
      "22": {
        loc: {
          start: {
            line: 493,
            column: 32
          },
          end: {
            line: 493,
            column: 152
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 493,
            column: 57
          },
          end: {
            line: 493,
            column: 148
          }
        }, {
          start: {
            line: 493,
            column: 151
          },
          end: {
            line: 493,
            column: 152
          }
        }],
        line: 493
      },
      "23": {
        loc: {
          start: {
            line: 496,
            column: 45
          },
          end: {
            line: 496,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 496,
            column: 45
          },
          end: {
            line: 496,
            column: 69
          }
        }, {
          start: {
            line: 496,
            column: 73
          },
          end: {
            line: 496,
            column: 74
          }
        }],
        line: 496
      },
      "24": {
        loc: {
          start: {
            line: 508,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 508,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 508
      },
      "25": {
        loc: {
          start: {
            line: 572,
            column: 21
          },
          end: {
            line: 578,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 572,
            column: 21
          },
          end: {
            line: 572,
            column: 29
          }
        }, {
          start: {
            line: 572,
            column: 33
          },
          end: {
            line: 578,
            column: 9
          }
        }],
        line: 572
      },
      "26": {
        loc: {
          start: {
            line: 580,
            column: 31
          },
          end: {
            line: 580,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 580,
            column: 51
          },
          end: {
            line: 580,
            column: 109
          }
        }, {
          start: {
            line: 580,
            column: 112
          },
          end: {
            line: 580,
            column: 113
          }
        }],
        line: 580
      },
      "27": {
        loc: {
          start: {
            line: 581,
            column: 34
          },
          end: {
            line: 581,
            column: 149
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 581,
            column: 57
          },
          end: {
            line: 581,
            column: 145
          }
        }, {
          start: {
            line: 581,
            column: 148
          },
          end: {
            line: 581,
            column: 149
          }
        }],
        line: 581
      },
      "28": {
        loc: {
          start: {
            line: 583,
            column: 35
          },
          end: {
            line: 583,
            column: 135
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 583,
            column: 62
          },
          end: {
            line: 583,
            column: 131
          }
        }, {
          start: {
            line: 583,
            column: 134
          },
          end: {
            line: 583,
            column: 135
          }
        }],
        line: 583
      },
      "29": {
        loc: {
          start: {
            line: 597,
            column: 8
          },
          end: {
            line: 599,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 597,
            column: 8
          },
          end: {
            line: 599,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 597
      },
      "30": {
        loc: {
          start: {
            line: 601,
            column: 8
          },
          end: {
            line: 603,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 601,
            column: 8
          },
          end: {
            line: 603,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 601
      },
      "31": {
        loc: {
          start: {
            line: 606,
            column: 19
          },
          end: {
            line: 606,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 606,
            column: 40
          },
          end: {
            line: 606,
            column: 55
          }
        }, {
          start: {
            line: 606,
            column: 58
          },
          end: {
            line: 606,
            column: 61
          }
        }],
        line: 606
      },
      "32": {
        loc: {
          start: {
            line: 609,
            column: 19
          },
          end: {
            line: 609,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 609,
            column: 42
          },
          end: {
            line: 609,
            column: 57
          }
        }, {
          start: {
            line: 609,
            column: 60
          },
          end: {
            line: 609,
            column: 63
          }
        }],
        line: 609
      },
      "33": {
        loc: {
          start: {
            line: 627,
            column: 41
          },
          end: {
            line: 627,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 627,
            column: 50
          },
          end: {
            line: 627,
            column: 54
          }
        }],
        line: 627
      },
      "34": {
        loc: {
          start: {
            line: 640,
            column: 8
          },
          end: {
            line: 642,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 640,
            column: 8
          },
          end: {
            line: 642,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 640
      },
      "35": {
        loc: {
          start: {
            line: 646,
            column: 8
          },
          end: {
            line: 649,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 646,
            column: 8
          },
          end: {
            line: 649,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 646
      },
      "36": {
        loc: {
          start: {
            line: 650,
            column: 8
          },
          end: {
            line: 652,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 650,
            column: 8
          },
          end: {
            line: 652,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 650
      },
      "37": {
        loc: {
          start: {
            line: 650,
            column: 12
          },
          end: {
            line: 650,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 650,
            column: 12
          },
          end: {
            line: 650,
            column: 27
          }
        }, {
          start: {
            line: 650,
            column: 31
          },
          end: {
            line: 650,
            column: 56
          }
        }],
        line: 650
      },
      "38": {
        loc: {
          start: {
            line: 661,
            column: 19
          },
          end: {
            line: 661,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 661,
            column: 50
          },
          end: {
            line: 661,
            column: 63
          }
        }, {
          start: {
            line: 661,
            column: 66
          },
          end: {
            line: 661,
            column: 88
          }
        }],
        line: 661
      },
      "39": {
        loc: {
          start: {
            line: 662,
            column: 18
          },
          end: {
            line: 662,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 662,
            column: 49
          },
          end: {
            line: 662,
            column: 59
          }
        }, {
          start: {
            line: 662,
            column: 62
          },
          end: {
            line: 662,
            column: 71
          }
        }],
        line: 662
      },
      "40": {
        loc: {
          start: {
            line: 666,
            column: 39
          },
          end: {
            line: 666,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 666,
            column: 48
          },
          end: {
            line: 666,
            column: 52
          }
        }],
        line: 666
      },
      "41": {
        loc: {
          start: {
            line: 682,
            column: 25
          },
          end: {
            line: 682,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 682,
            column: 53
          },
          end: {
            line: 682,
            column: 61
          }
        }, {
          start: {
            line: 682,
            column: 64
          },
          end: {
            line: 682,
            column: 68
          }
        }],
        line: 682
      },
      "42": {
        loc: {
          start: {
            line: 689,
            column: 8
          },
          end: {
            line: 691,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 689,
            column: 8
          },
          end: {
            line: 691,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 689
      },
      "43": {
        loc: {
          start: {
            line: 700,
            column: 19
          },
          end: {
            line: 700,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 700,
            column: 50
          },
          end: {
            line: 700,
            column: 63
          }
        }, {
          start: {
            line: 700,
            column: 66
          },
          end: {
            line: 700,
            column: 88
          }
        }],
        line: 700
      },
      "44": {
        loc: {
          start: {
            line: 701,
            column: 18
          },
          end: {
            line: 701,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 701,
            column: 49
          },
          end: {
            line: 701,
            column: 59
          }
        }, {
          start: {
            line: 701,
            column: 62
          },
          end: {
            line: 701,
            column: 71
          }
        }],
        line: 701
      },
      "45": {
        loc: {
          start: {
            line: 705,
            column: 53
          },
          end: {
            line: 705,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 705,
            column: 62
          },
          end: {
            line: 705,
            column: 66
          }
        }],
        line: 705
      },
      "46": {
        loc: {
          start: {
            line: 721,
            column: 8
          },
          end: {
            line: 723,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 721,
            column: 8
          },
          end: {
            line: 723,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 721
      },
      "47": {
        loc: {
          start: {
            line: 732,
            column: 19
          },
          end: {
            line: 732,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 732,
            column: 50
          },
          end: {
            line: 732,
            column: 63
          }
        }, {
          start: {
            line: 732,
            column: 66
          },
          end: {
            line: 732,
            column: 88
          }
        }],
        line: 732
      },
      "48": {
        loc: {
          start: {
            line: 733,
            column: 18
          },
          end: {
            line: 733,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 733,
            column: 49
          },
          end: {
            line: 733,
            column: 59
          }
        }, {
          start: {
            line: 733,
            column: 62
          },
          end: {
            line: 733,
            column: 71
          }
        }],
        line: 733
      },
      "49": {
        loc: {
          start: {
            line: 737,
            column: 42
          },
          end: {
            line: 737,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 737,
            column: 51
          },
          end: {
            line: 737,
            column: 55
          }
        }],
        line: 737
      },
      "50": {
        loc: {
          start: {
            line: 753,
            column: 12
          },
          end: {
            line: 755,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 753,
            column: 12
          },
          end: {
            line: 755,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 753
      },
      "51": {
        loc: {
          start: {
            line: 757,
            column: 12
          },
          end: {
            line: 759,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 757,
            column: 12
          },
          end: {
            line: 759,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 757
      },
      "52": {
        loc: {
          start: {
            line: 773,
            column: 12
          },
          end: {
            line: 776,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 773,
            column: 12
          },
          end: {
            line: 776,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 773
      },
      "53": {
        loc: {
          start: {
            line: 777,
            column: 12
          },
          end: {
            line: 779,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 777,
            column: 12
          },
          end: {
            line: 779,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 777
      },
      "54": {
        loc: {
          start: {
            line: 780,
            column: 34
          },
          end: {
            line: 780,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 780,
            column: 34
          },
          end: {
            line: 780,
            column: 52
          }
        }, {
          start: {
            line: 780,
            column: 56
          },
          end: {
            line: 780,
            column: 102
          }
        }],
        line: 780
      },
      "55": {
        loc: {
          start: {
            line: 782,
            column: 12
          },
          end: {
            line: 792,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 782,
            column: 12
          },
          end: {
            line: 792,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 782
      },
      "56": {
        loc: {
          start: {
            line: 782,
            column: 16
          },
          end: {
            line: 782,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 782,
            column: 16
          },
          end: {
            line: 782,
            column: 25
          }
        }, {
          start: {
            line: 782,
            column: 29
          },
          end: {
            line: 782,
            column: 47
          }
        }],
        line: 782
      },
      "57": {
        loc: {
          start: {
            line: 892,
            column: 12
          },
          end: {
            line: 894,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 892,
            column: 12
          },
          end: {
            line: 894,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 892
      },
      "58": {
        loc: {
          start: {
            line: 948,
            column: 19
          },
          end: {
            line: 948,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 948,
            column: 50
          },
          end: {
            line: 948,
            column: 63
          }
        }, {
          start: {
            line: 948,
            column: 66
          },
          end: {
            line: 948,
            column: 96
          }
        }],
        line: 948
      },
      "59": {
        loc: {
          start: {
            line: 949,
            column: 18
          },
          end: {
            line: 949,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 949,
            column: 49
          },
          end: {
            line: 949,
            column: 59
          }
        }, {
          start: {
            line: 949,
            column: 62
          },
          end: {
            line: 949,
            column: 71
          }
        }],
        line: 949
      },
      "60": {
        loc: {
          start: {
            line: 953,
            column: 42
          },
          end: {
            line: 955,
            column: 1
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 953,
            column: 52
          },
          end: {
            line: 955,
            column: 1
          }
        }],
        line: 953
      },
      "61": {
        loc: {
          start: {
            line: 955,
            column: 3
          },
          end: {
            line: 955,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 955,
            column: 12
          },
          end: {
            line: 955,
            column: 16
          }
        }],
        line: 955
      },
      "62": {
        loc: {
          start: {
            line: 971,
            column: 12
          },
          end: {
            line: 973,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 971,
            column: 12
          },
          end: {
            line: 973,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 971
      },
      "63": {
        loc: {
          start: {
            line: 977,
            column: 12
          },
          end: {
            line: 979,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 977,
            column: 12
          },
          end: {
            line: 979,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 977
      },
      "64": {
        loc: {
          start: {
            line: 981,
            column: 12
          },
          end: {
            line: 994,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 981,
            column: 12
          },
          end: {
            line: 994,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 981
      },
      "65": {
        loc: {
          start: {
            line: 981,
            column: 16
          },
          end: {
            line: 981,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 981,
            column: 16
          },
          end: {
            line: 981,
            column: 25
          }
        }, {
          start: {
            line: 981,
            column: 29
          },
          end: {
            line: 981,
            column: 47
          }
        }],
        line: 981
      },
      "66": {
        loc: {
          start: {
            line: 982,
            column: 16
          },
          end: {
            line: 984,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 982,
            column: 16
          },
          end: {
            line: 984,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 982
      },
      "67": {
        loc: {
          start: {
            line: 995,
            column: 12
          },
          end: {
            line: 1005,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 995,
            column: 12
          },
          end: {
            line: 1005,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 995
      },
      "68": {
        loc: {
          start: {
            line: 995,
            column: 16
          },
          end: {
            line: 995,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 995,
            column: 16
          },
          end: {
            line: 995,
            column: 34
          }
        }, {
          start: {
            line: 995,
            column: 38
          },
          end: {
            line: 995,
            column: 89
          }
        }],
        line: 995
      },
      "69": {
        loc: {
          start: {
            line: 1002,
            column: 16
          },
          end: {
            line: 1004,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1002,
            column: 16
          },
          end: {
            line: 1004,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1002
      },
      "70": {
        loc: {
          start: {
            line: 1020,
            column: 12
          },
          end: {
            line: 1022,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1020,
            column: 12
          },
          end: {
            line: 1022,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1020
      },
      "71": {
        loc: {
          start: {
            line: 1024,
            column: 12
          },
          end: {
            line: 1027,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1024,
            column: 12
          },
          end: {
            line: 1027,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1024
      },
      "72": {
        loc: {
          start: {
            line: 1042,
            column: 19
          },
          end: {
            line: 1042,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1042,
            column: 50
          },
          end: {
            line: 1042,
            column: 63
          }
        }, {
          start: {
            line: 1042,
            column: 66
          },
          end: {
            line: 1042,
            column: 91
          }
        }],
        line: 1042
      },
      "73": {
        loc: {
          start: {
            line: 1043,
            column: 18
          },
          end: {
            line: 1043,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1043,
            column: 49
          },
          end: {
            line: 1043,
            column: 59
          }
        }, {
          start: {
            line: 1043,
            column: 62
          },
          end: {
            line: 1043,
            column: 71
          }
        }],
        line: 1043
      },
      "74": {
        loc: {
          start: {
            line: 1047,
            column: 62
          },
          end: {
            line: 1047,
            column: 75
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1047,
            column: 71
          },
          end: {
            line: 1047,
            column: 75
          }
        }],
        line: 1047
      },
      "75": {
        loc: {
          start: {
            line: 1063,
            column: 12
          },
          end: {
            line: 1065,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1063,
            column: 12
          },
          end: {
            line: 1065,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1063
      },
      "76": {
        loc: {
          start: {
            line: 1069,
            column: 12
          },
          end: {
            line: 1071,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1069,
            column: 12
          },
          end: {
            line: 1071,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1069
      },
      "77": {
        loc: {
          start: {
            line: 1073,
            column: 12
          },
          end: {
            line: 1075,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1073,
            column: 12
          },
          end: {
            line: 1075,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1073
      },
      "78": {
        loc: {
          start: {
            line: 1077,
            column: 12
          },
          end: {
            line: 1085,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1077,
            column: 12
          },
          end: {
            line: 1085,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1077
      },
      "79": {
        loc: {
          start: {
            line: 1079,
            column: 30
          },
          end: {
            line: 1079,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1079,
            column: 30
          },
          end: {
            line: 1079,
            column: 70
          }
        }, {
          start: {
            line: 1079,
            column: 74
          },
          end: {
            line: 1079,
            column: 75
          }
        }],
        line: 1079
      },
      "80": {
        loc: {
          start: {
            line: 1080,
            column: 16
          },
          end: {
            line: 1084,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1080,
            column: 16
          },
          end: {
            line: 1084,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1080
      },
      "81": {
        loc: {
          start: {
            line: 1087,
            column: 12
          },
          end: {
            line: 1100,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1087,
            column: 12
          },
          end: {
            line: 1100,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1087
      },
      "82": {
        loc: {
          start: {
            line: 1087,
            column: 16
          },
          end: {
            line: 1087,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1087,
            column: 16
          },
          end: {
            line: 1087,
            column: 26
          }
        }, {
          start: {
            line: 1087,
            column: 30
          },
          end: {
            line: 1087,
            column: 49
          }
        }],
        line: 1087
      },
      "83": {
        loc: {
          start: {
            line: 1088,
            column: 16
          },
          end: {
            line: 1090,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1088,
            column: 16
          },
          end: {
            line: 1090,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1088
      },
      "84": {
        loc: {
          start: {
            line: 1101,
            column: 12
          },
          end: {
            line: 1112,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1101,
            column: 12
          },
          end: {
            line: 1112,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1101
      },
      "85": {
        loc: {
          start: {
            line: 1101,
            column: 16
          },
          end: {
            line: 1101,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1101,
            column: 16
          },
          end: {
            line: 1101,
            column: 34
          }
        }, {
          start: {
            line: 1101,
            column: 38
          },
          end: {
            line: 1101,
            column: 81
          }
        }],
        line: 1101
      },
      "86": {
        loc: {
          start: {
            line: 1108,
            column: 16
          },
          end: {
            line: 1110,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1108,
            column: 16
          },
          end: {
            line: 1110,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1108
      },
      "87": {
        loc: {
          start: {
            line: 1113,
            column: 34
          },
          end: {
            line: 1113,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1113,
            column: 34
          },
          end: {
            line: 1113,
            column: 51
          }
        }, {
          start: {
            line: 1113,
            column: 55
          },
          end: {
            line: 1113,
            column: 74
          }
        }],
        line: 1113
      },
      "88": {
        loc: {
          start: {
            line: 1114,
            column: 33
          },
          end: {
            line: 1114,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1114,
            column: 33
          },
          end: {
            line: 1114,
            column: 49
          }
        }, {
          start: {
            line: 1114,
            column: 53
          },
          end: {
            line: 1114,
            column: 71
          }
        }],
        line: 1114
      },
      "89": {
        loc: {
          start: {
            line: 1115,
            column: 27
          },
          end: {
            line: 1115,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1115,
            column: 27
          },
          end: {
            line: 1115,
            column: 37
          }
        }, {
          start: {
            line: 1115,
            column: 41
          },
          end: {
            line: 1115,
            column: 53
          }
        }],
        line: 1115
      },
      "90": {
        loc: {
          start: {
            line: 1116,
            column: 29
          },
          end: {
            line: 1116,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1116,
            column: 29
          },
          end: {
            line: 1116,
            column: 41
          }
        }, {
          start: {
            line: 1116,
            column: 45
          },
          end: {
            line: 1116,
            column: 59
          }
        }],
        line: 1116
      },
      "91": {
        loc: {
          start: {
            line: 1117,
            column: 12
          },
          end: {
            line: 1123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1117,
            column: 12
          },
          end: {
            line: 1123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1117
      },
      "92": {
        loc: {
          start: {
            line: 1132,
            column: 36
          },
          end: {
            line: 1132,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1132,
            column: 36
          },
          end: {
            line: 1132,
            column: 66
          }
        }, {
          start: {
            line: 1132,
            column: 70
          },
          end: {
            line: 1132,
            column: 72
          }
        }],
        line: 1132
      },
      "93": {
        loc: {
          start: {
            line: 1164,
            column: 19
          },
          end: {
            line: 1164,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1164,
            column: 50
          },
          end: {
            line: 1164,
            column: 63
          }
        }, {
          start: {
            line: 1164,
            column: 66
          },
          end: {
            line: 1164,
            column: 100
          }
        }],
        line: 1164
      },
      "94": {
        loc: {
          start: {
            line: 1165,
            column: 18
          },
          end: {
            line: 1165,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1165,
            column: 49
          },
          end: {
            line: 1165,
            column: 59
          }
        }, {
          start: {
            line: 1165,
            column: 62
          },
          end: {
            line: 1165,
            column: 71
          }
        }],
        line: 1165
      },
      "95": {
        loc: {
          start: {
            line: 1169,
            column: 54
          },
          end: {
            line: 1169,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1169,
            column: 71
          },
          end: {
            line: 1169,
            column: 72
          }
        }],
        line: 1169
      },
      "96": {
        loc: {
          start: {
            line: 1169,
            column: 105
          },
          end: {
            line: 1169,
            column: 118
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1169,
            column: 114
          },
          end: {
            line: 1169,
            column: 118
          }
        }],
        line: 1169
      },
      "97": {
        loc: {
          start: {
            line: 1185,
            column: 12
          },
          end: {
            line: 1187,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1185,
            column: 12
          },
          end: {
            line: 1187,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1185
      },
      "98": {
        loc: {
          start: {
            line: 1191,
            column: 12
          },
          end: {
            line: 1193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1191,
            column: 12
          },
          end: {
            line: 1193,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1191
      },
      "99": {
        loc: {
          start: {
            line: 1194,
            column: 12
          },
          end: {
            line: 1196,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1194,
            column: 12
          },
          end: {
            line: 1196,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1194
      },
      "100": {
        loc: {
          start: {
            line: 1204,
            column: 12
          },
          end: {
            line: 1206,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1204,
            column: 12
          },
          end: {
            line: 1206,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1204
      },
      "101": {
        loc: {
          start: {
            line: 1208,
            column: 12
          },
          end: {
            line: 1210,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1208,
            column: 12
          },
          end: {
            line: 1210,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1208
      },
      "102": {
        loc: {
          start: {
            line: 1212,
            column: 33
          },
          end: {
            line: 1212,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1212,
            column: 43
          },
          end: {
            line: 1212,
            column: 45
          }
        }, {
          start: {
            line: 1212,
            column: 48
          },
          end: {
            line: 1212,
            column: 50
          }
        }],
        line: 1212
      },
      "103": {
        loc: {
          start: {
            line: 1214,
            column: 12
          },
          end: {
            line: 1216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1214,
            column: 12
          },
          end: {
            line: 1216,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1214
      },
      "104": {
        loc: {
          start: {
            line: 1214,
            column: 16
          },
          end: {
            line: 1214,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1214,
            column: 16
          },
          end: {
            line: 1214,
            column: 23
          }
        }, {
          start: {
            line: 1214,
            column: 27
          },
          end: {
            line: 1214,
            column: 61
          }
        }],
        line: 1214
      },
      "105": {
        loc: {
          start: {
            line: 1214,
            column: 28
          },
          end: {
            line: 1214,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1214,
            column: 28
          },
          end: {
            line: 1214,
            column: 50
          }
        }, {
          start: {
            line: 1214,
            column: 54
          },
          end: {
            line: 1214,
            column: 55
          }
        }],
        line: 1214
      },
      "106": {
        loc: {
          start: {
            line: 1219,
            column: 12
          },
          end: {
            line: 1236,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1219,
            column: 12
          },
          end: {
            line: 1236,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1219
      },
      "107": {
        loc: {
          start: {
            line: 1220,
            column: 16
          },
          end: {
            line: 1222,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1220,
            column: 16
          },
          end: {
            line: 1222,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1220
      },
      "108": {
        loc: {
          start: {
            line: 1223,
            column: 36
          },
          end: {
            line: 1223,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1223,
            column: 36
          },
          end: {
            line: 1223,
            column: 64
          }
        }, {
          start: {
            line: 1223,
            column: 68
          },
          end: {
            line: 1223,
            column: 72
          }
        }],
        line: 1223
      },
      "109": {
        loc: {
          start: {
            line: 1225,
            column: 16
          },
          end: {
            line: 1227,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1225,
            column: 16
          },
          end: {
            line: 1227,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1225
      },
      "110": {
        loc: {
          start: {
            line: 1237,
            column: 12
          },
          end: {
            line: 1259,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1237,
            column: 12
          },
          end: {
            line: 1259,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1237
      },
      "111": {
        loc: {
          start: {
            line: 1238,
            column: 16
          },
          end: {
            line: 1240,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1238,
            column: 16
          },
          end: {
            line: 1240,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1238
      },
      "112": {
        loc: {
          start: {
            line: 1238,
            column: 20
          },
          end: {
            line: 1238,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1238,
            column: 20
          },
          end: {
            line: 1238,
            column: 34
          }
        }, {
          start: {
            line: 1238,
            column: 38
          },
          end: {
            line: 1238,
            column: 53
          }
        }],
        line: 1238
      },
      "113": {
        loc: {
          start: {
            line: 1241,
            column: 16
          },
          end: {
            line: 1258,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1241,
            column: 16
          },
          end: {
            line: 1258,
            column: 17
          }
        }, {
          start: {
            line: 1248,
            column: 23
          },
          end: {
            line: 1258,
            column: 17
          }
        }],
        line: 1241
      },
      "114": {
        loc: {
          start: {
            line: 1241,
            column: 20
          },
          end: {
            line: 1241,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1241,
            column: 20
          },
          end: {
            line: 1241,
            column: 46
          }
        }, {
          start: {
            line: 1241,
            column: 50
          },
          end: {
            line: 1241,
            column: 80
          }
        }],
        line: 1241
      },
      "115": {
        loc: {
          start: {
            line: 1243,
            column: 20
          },
          end: {
            line: 1246,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1243,
            column: 20
          },
          end: {
            line: 1246,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1243
      },
      "116": {
        loc: {
          start: {
            line: 1248,
            column: 23
          },
          end: {
            line: 1258,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1248,
            column: 23
          },
          end: {
            line: 1258,
            column: 17
          }
        }, {
          start: {
            line: 1256,
            column: 23
          },
          end: {
            line: 1258,
            column: 17
          }
        }],
        line: 1248
      },
      "117": {
        loc: {
          start: {
            line: 1248,
            column: 27
          },
          end: {
            line: 1248,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1248,
            column: 27
          },
          end: {
            line: 1248,
            column: 53
          }
        }, {
          start: {
            line: 1248,
            column: 57
          },
          end: {
            line: 1248,
            column: 85
          }
        }],
        line: 1248
      },
      "118": {
        loc: {
          start: {
            line: 1251,
            column: 20
          },
          end: {
            line: 1254,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1251,
            column: 20
          },
          end: {
            line: 1254,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1251
      },
      "119": {
        loc: {
          start: {
            line: 1256,
            column: 23
          },
          end: {
            line: 1258,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1256,
            column: 23
          },
          end: {
            line: 1258,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1256
      },
      "120": {
        loc: {
          start: {
            line: 1270,
            column: 12
          },
          end: {
            line: 1277,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1270,
            column: 12
          },
          end: {
            line: 1277,
            column: 13
          }
        }, {
          start: {
            line: 1274,
            column: 19
          },
          end: {
            line: 1277,
            column: 13
          }
        }],
        line: 1270
      },
      "121": {
        loc: {
          start: {
            line: 1271,
            column: 42
          },
          end: {
            line: 1271,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1271,
            column: 42
          },
          end: {
            line: 1271,
            column: 64
          }
        }, {
          start: {
            line: 1271,
            column: 68
          },
          end: {
            line: 1271,
            column: 69
          }
        }],
        line: 1271
      },
      "122": {
        loc: {
          start: {
            line: 1298,
            column: 16
          },
          end: {
            line: 1310,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1298,
            column: 16
          },
          end: {
            line: 1298,
            column: 34
          }
        }, {
          start: {
            line: 1298,
            column: 38
          },
          end: {
            line: 1310,
            column: 18
          }
        }],
        line: 1298
      },
      "123": {
        loc: {
          start: {
            line: 1326,
            column: 19
          },
          end: {
            line: 1326,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1326,
            column: 50
          },
          end: {
            line: 1326,
            column: 63
          }
        }, {
          start: {
            line: 1326,
            column: 66
          },
          end: {
            line: 1326,
            column: 104
          }
        }],
        line: 1326
      },
      "124": {
        loc: {
          start: {
            line: 1327,
            column: 18
          },
          end: {
            line: 1327,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1327,
            column: 49
          },
          end: {
            line: 1327,
            column: 59
          }
        }, {
          start: {
            line: 1327,
            column: 62
          },
          end: {
            line: 1327,
            column: 71
          }
        }],
        line: 1327
      },
      "125": {
        loc: {
          start: {
            line: 1331,
            column: 71
          },
          end: {
            line: 1331,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1331,
            column: 80
          },
          end: {
            line: 1331,
            column: 84
          }
        }],
        line: 1331
      },
      "126": {
        loc: {
          start: {
            line: 1347,
            column: 12
          },
          end: {
            line: 1349,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1347,
            column: 12
          },
          end: {
            line: 1349,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1347
      },
      "127": {
        loc: {
          start: {
            line: 1350,
            column: 12
          },
          end: {
            line: 1352,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1350,
            column: 12
          },
          end: {
            line: 1352,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1350
      },
      "128": {
        loc: {
          start: {
            line: 1356,
            column: 12
          },
          end: {
            line: 1358,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1356,
            column: 12
          },
          end: {
            line: 1358,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1356
      },
      "129": {
        loc: {
          start: {
            line: 1392,
            column: 19
          },
          end: {
            line: 1392,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1392,
            column: 50
          },
          end: {
            line: 1392,
            column: 63
          }
        }, {
          start: {
            line: 1392,
            column: 66
          },
          end: {
            line: 1392,
            column: 97
          }
        }],
        line: 1392
      },
      "130": {
        loc: {
          start: {
            line: 1393,
            column: 18
          },
          end: {
            line: 1393,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1393,
            column: 49
          },
          end: {
            line: 1393,
            column: 59
          }
        }, {
          start: {
            line: 1393,
            column: 62
          },
          end: {
            line: 1393,
            column: 71
          }
        }],
        line: 1393
      },
      "131": {
        loc: {
          start: {
            line: 1397,
            column: 40
          },
          end: {
            line: 1397,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1397,
            column: 49
          },
          end: {
            line: 1397,
            column: 53
          }
        }],
        line: 1397
      },
      "132": {
        loc: {
          start: {
            line: 1411,
            column: 8
          },
          end: {
            line: 1413,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1411,
            column: 8
          },
          end: {
            line: 1413,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1411
      },
      "133": {
        loc: {
          start: {
            line: 1417,
            column: 8
          },
          end: {
            line: 1419,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1417,
            column: 8
          },
          end: {
            line: 1419,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1417
      },
      "134": {
        loc: {
          start: {
            line: 1458,
            column: 30
          },
          end: {
            line: 1458,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1458,
            column: 61
          },
          end: {
            line: 1458,
            column: 74
          }
        }, {
          start: {
            line: 1458,
            column: 77
          },
          end: {
            line: 1458,
            column: 106
          }
        }],
        line: 1458
      },
      "135": {
        loc: {
          start: {
            line: 1458,
            column: 108
          },
          end: {
            line: 1458,
            column: 167
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1458,
            column: 139
          },
          end: {
            line: 1458,
            column: 149
          }
        }, {
          start: {
            line: 1458,
            column: 152
          },
          end: {
            line: 1458,
            column: 167
          }
        }],
        line: 1458
      },
      "136": {
        loc: {
          start: {
            line: 1461,
            column: 64
          },
          end: {
            line: 1461,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1461,
            column: 73
          },
          end: {
            line: 1461,
            column: 77
          }
        }],
        line: 1461
      },
      "137": {
        loc: {
          start: {
            line: 1464,
            column: 35
          },
          end: {
            line: 1464,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1464,
            column: 45
          },
          end: {
            line: 1464,
            column: 47
          }
        }],
        line: 1464
      },
      "138": {
        loc: {
          start: {
            line: 1464,
            column: 49
          },
          end: {
            line: 1464,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1464,
            column: 58
          },
          end: {
            line: 1464,
            column: 62
          }
        }],
        line: 1464
      },
      "139": {
        loc: {
          start: {
            line: 1477,
            column: 8
          },
          end: {
            line: 1479,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1477,
            column: 8
          },
          end: {
            line: 1479,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1477
      },
      "140": {
        loc: {
          start: {
            line: 1483,
            column: 8
          },
          end: {
            line: 1485,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1483,
            column: 8
          },
          end: {
            line: 1485,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1483
      },
      "141": {
        loc: {
          start: {
            line: 1489,
            column: 8
          },
          end: {
            line: 1504,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1489,
            column: 8
          },
          end: {
            line: 1504,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1489
      },
      "142": {
        loc: {
          start: {
            line: 1505,
            column: 8
          },
          end: {
            line: 1507,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1505,
            column: 8
          },
          end: {
            line: 1507,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1505
      },
      "143": {
        loc: {
          start: {
            line: 1508,
            column: 8
          },
          end: {
            line: 1510,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1508,
            column: 8
          },
          end: {
            line: 1510,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1508
      },
      "144": {
        loc: {
          start: {
            line: 1512,
            column: 8
          },
          end: {
            line: 1516,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1512,
            column: 8
          },
          end: {
            line: 1516,
            column: 9
          }
        }, {
          start: {
            line: 1514,
            column: 15
          },
          end: {
            line: 1516,
            column: 9
          }
        }],
        line: 1512
      },
      "145": {
        loc: {
          start: {
            line: 1513,
            column: 35
          },
          end: {
            line: 1513,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1513,
            column: 66
          },
          end: {
            line: 1513,
            column: 68
          }
        }, {
          start: {
            line: 1513,
            column: 71
          },
          end: {
            line: 1513,
            column: 72
          }
        }],
        line: 1513
      },
      "146": {
        loc: {
          start: {
            line: 1517,
            column: 33
          },
          end: {
            line: 1517,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1517,
            column: 33
          },
          end: {
            line: 1517,
            column: 45
          }
        }, {
          start: {
            line: 1517,
            column: 49
          },
          end: {
            line: 1517,
            column: 50
          }
        }],
        line: 1517
      },
      "147": {
        loc: {
          start: {
            line: 1518,
            column: 35
          },
          end: {
            line: 1518,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1518,
            column: 35
          },
          end: {
            line: 1518,
            column: 48
          }
        }, {
          start: {
            line: 1518,
            column: 52
          },
          end: {
            line: 1518,
            column: 54
          }
        }],
        line: 1518
      },
      "148": {
        loc: {
          start: {
            line: 1540,
            column: 19
          },
          end: {
            line: 1540,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1540,
            column: 50
          },
          end: {
            line: 1540,
            column: 63
          }
        }, {
          start: {
            line: 1540,
            column: 66
          },
          end: {
            line: 1540,
            column: 90
          }
        }],
        line: 1540
      },
      "149": {
        loc: {
          start: {
            line: 1541,
            column: 18
          },
          end: {
            line: 1541,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1541,
            column: 49
          },
          end: {
            line: 1541,
            column: 59
          }
        }, {
          start: {
            line: 1541,
            column: 62
          },
          end: {
            line: 1541,
            column: 71
          }
        }],
        line: 1541
      },
      "150": {
        loc: {
          start: {
            line: 1545,
            column: 39
          },
          end: {
            line: 1545,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1545,
            column: 49
          },
          end: {
            line: 1545,
            column: 51
          }
        }],
        line: 1545
      },
      "151": {
        loc: {
          start: {
            line: 1545,
            column: 53
          },
          end: {
            line: 1545,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1545,
            column: 62
          },
          end: {
            line: 1545,
            column: 66
          }
        }],
        line: 1545
      },
      "152": {
        loc: {
          start: {
            line: 1558,
            column: 8
          },
          end: {
            line: 1560,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1558,
            column: 8
          },
          end: {
            line: 1560,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1558
      },
      "153": {
        loc: {
          start: {
            line: 1564,
            column: 8
          },
          end: {
            line: 1566,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1564,
            column: 8
          },
          end: {
            line: 1566,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1564
      },
      "154": {
        loc: {
          start: {
            line: 1570,
            column: 8
          },
          end: {
            line: 1572,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1570,
            column: 8
          },
          end: {
            line: 1572,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1570
      },
      "155": {
        loc: {
          start: {
            line: 1573,
            column: 8
          },
          end: {
            line: 1581,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1573,
            column: 8
          },
          end: {
            line: 1581,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1573
      },
      "156": {
        loc: {
          start: {
            line: 1573,
            column: 12
          },
          end: {
            line: 1573,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1573,
            column: 12
          },
          end: {
            line: 1573,
            column: 29
          }
        }, {
          start: {
            line: 1573,
            column: 33
          },
          end: {
            line: 1573,
            column: 48
          }
        }],
        line: 1573
      },
      "157": {
        loc: {
          start: {
            line: 1575,
            column: 12
          },
          end: {
            line: 1577,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1575,
            column: 12
          },
          end: {
            line: 1577,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1575
      },
      "158": {
        loc: {
          start: {
            line: 1578,
            column: 12
          },
          end: {
            line: 1580,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1578,
            column: 12
          },
          end: {
            line: 1580,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1578
      },
      "159": {
        loc: {
          start: {
            line: 1583,
            column: 8
          },
          end: {
            line: 1587,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1583,
            column: 8
          },
          end: {
            line: 1587,
            column: 9
          }
        }, {
          start: {
            line: 1585,
            column: 15
          },
          end: {
            line: 1587,
            column: 9
          }
        }],
        line: 1583
      },
      "160": {
        loc: {
          start: {
            line: 1588,
            column: 33
          },
          end: {
            line: 1588,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1588,
            column: 33
          },
          end: {
            line: 1588,
            column: 45
          }
        }, {
          start: {
            line: 1588,
            column: 49
          },
          end: {
            line: 1588,
            column: 50
          }
        }],
        line: 1588
      },
      "161": {
        loc: {
          start: {
            line: 1589,
            column: 35
          },
          end: {
            line: 1589,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1589,
            column: 35
          },
          end: {
            line: 1589,
            column: 48
          }
        }, {
          start: {
            line: 1589,
            column: 52
          },
          end: {
            line: 1589,
            column: 54
          }
        }],
        line: 1589
      },
      "162": {
        loc: {
          start: {
            line: 1608,
            column: 19
          },
          end: {
            line: 1608,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1608,
            column: 50
          },
          end: {
            line: 1608,
            column: 63
          }
        }, {
          start: {
            line: 1608,
            column: 66
          },
          end: {
            line: 1608,
            column: 88
          }
        }],
        line: 1608
      },
      "163": {
        loc: {
          start: {
            line: 1609,
            column: 18
          },
          end: {
            line: 1609,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1609,
            column: 49
          },
          end: {
            line: 1609,
            column: 59
          }
        }, {
          start: {
            line: 1609,
            column: 62
          },
          end: {
            line: 1609,
            column: 71
          }
        }],
        line: 1609
      },
      "164": {
        loc: {
          start: {
            line: 1613,
            column: 51
          },
          end: {
            line: 1613,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1613,
            column: 60
          },
          end: {
            line: 1613,
            column: 64
          }
        }],
        line: 1613
      },
      "165": {
        loc: {
          start: {
            line: 1629,
            column: 12
          },
          end: {
            line: 1631,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1629,
            column: 12
          },
          end: {
            line: 1631,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1629
      },
      "166": {
        loc: {
          start: {
            line: 1633,
            column: 12
          },
          end: {
            line: 1635,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1633,
            column: 12
          },
          end: {
            line: 1635,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1633
      },
      "167": {
        loc: {
          start: {
            line: 1639,
            column: 12
          },
          end: {
            line: 1641,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1639,
            column: 12
          },
          end: {
            line: 1641,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1639
      },
      "168": {
        loc: {
          start: {
            line: 1642,
            column: 12
          },
          end: {
            line: 1655,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1642,
            column: 12
          },
          end: {
            line: 1655,
            column: 13
          }
        }, {
          start: {
            line: 1646,
            column: 19
          },
          end: {
            line: 1655,
            column: 13
          }
        }],
        line: 1642
      },
      "169": {
        loc: {
          start: {
            line: 1643,
            column: 59
          },
          end: {
            line: 1643,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1643,
            column: 59
          },
          end: {
            line: 1643,
            column: 82
          }
        }, {
          start: {
            line: 1643,
            column: 86
          },
          end: {
            line: 1643,
            column: 96
          }
        }],
        line: 1643
      },
      "170": {
        loc: {
          start: {
            line: 1644,
            column: 56
          },
          end: {
            line: 1644,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1644,
            column: 56
          },
          end: {
            line: 1644,
            column: 86
          }
        }, {
          start: {
            line: 1644,
            column: 90
          },
          end: {
            line: 1644,
            column: 91
          }
        }],
        line: 1644
      },
      "171": {
        loc: {
          start: {
            line: 1645,
            column: 57
          },
          end: {
            line: 1645,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1645,
            column: 57
          },
          end: {
            line: 1645,
            column: 88
          }
        }, {
          start: {
            line: 1645,
            column: 92
          },
          end: {
            line: 1645,
            column: 93
          }
        }],
        line: 1645
      },
      "172": {
        loc: {
          start: {
            line: 1646,
            column: 19
          },
          end: {
            line: 1655,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1646,
            column: 19
          },
          end: {
            line: 1655,
            column: 13
          }
        }, {
          start: {
            line: 1649,
            column: 19
          },
          end: {
            line: 1655,
            column: 13
          }
        }],
        line: 1646
      },
      "173": {
        loc: {
          start: {
            line: 1647,
            column: 68
          },
          end: {
            line: 1647,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1647,
            column: 68
          },
          end: {
            line: 1647,
            column: 98
          }
        }, {
          start: {
            line: 1647,
            column: 102
          },
          end: {
            line: 1647,
            column: 103
          }
        }],
        line: 1647
      },
      "174": {
        loc: {
          start: {
            line: 1648,
            column: 69
          },
          end: {
            line: 1648,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1648,
            column: 69
          },
          end: {
            line: 1648,
            column: 100
          }
        }, {
          start: {
            line: 1648,
            column: 104
          },
          end: {
            line: 1648,
            column: 105
          }
        }],
        line: 1648
      },
      "175": {
        loc: {
          start: {
            line: 1649,
            column: 19
          },
          end: {
            line: 1655,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1649,
            column: 19
          },
          end: {
            line: 1655,
            column: 13
          }
        }, {
          start: {
            line: 1652,
            column: 19
          },
          end: {
            line: 1655,
            column: 13
          }
        }],
        line: 1649
      },
      "176": {
        loc: {
          start: {
            line: 1650,
            column: 69
          },
          end: {
            line: 1650,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1650,
            column: 69
          },
          end: {
            line: 1650,
            column: 100
          }
        }, {
          start: {
            line: 1650,
            column: 104
          },
          end: {
            line: 1650,
            column: 105
          }
        }],
        line: 1650
      },
      "177": {
        loc: {
          start: {
            line: 1651,
            column: 61
          },
          end: {
            line: 1651,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1651,
            column: 61
          },
          end: {
            line: 1651,
            column: 96
          }
        }, {
          start: {
            line: 1651,
            column: 100
          },
          end: {
            line: 1651,
            column: 101
          }
        }],
        line: 1651
      },
      "178": {
        loc: {
          start: {
            line: 1652,
            column: 19
          },
          end: {
            line: 1655,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1652,
            column: 19
          },
          end: {
            line: 1655,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1652
      },
      "179": {
        loc: {
          start: {
            line: 1653,
            column: 57
          },
          end: {
            line: 1653,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1653,
            column: 57
          },
          end: {
            line: 1653,
            column: 88
          }
        }, {
          start: {
            line: 1653,
            column: 92
          },
          end: {
            line: 1653,
            column: 93
          }
        }],
        line: 1653
      },
      "180": {
        loc: {
          start: {
            line: 1654,
            column: 73
          },
          end: {
            line: 1654,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1654,
            column: 73
          },
          end: {
            line: 1654,
            column: 108
          }
        }, {
          start: {
            line: 1654,
            column: 112
          },
          end: {
            line: 1654,
            column: 113
          }
        }],
        line: 1654
      },
      "181": {
        loc: {
          start: {
            line: 1662,
            column: 12
          },
          end: {
            line: 1664,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1662,
            column: 12
          },
          end: {
            line: 1664,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1662
      },
      "182": {
        loc: {
          start: {
            line: 1683,
            column: 19
          },
          end: {
            line: 1683,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1683,
            column: 50
          },
          end: {
            line: 1683,
            column: 63
          }
        }, {
          start: {
            line: 1683,
            column: 66
          },
          end: {
            line: 1683,
            column: 92
          }
        }],
        line: 1683
      },
      "183": {
        loc: {
          start: {
            line: 1684,
            column: 18
          },
          end: {
            line: 1684,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1684,
            column: 49
          },
          end: {
            line: 1684,
            column: 59
          }
        }, {
          start: {
            line: 1684,
            column: 62
          },
          end: {
            line: 1684,
            column: 71
          }
        }],
        line: 1684
      },
      "184": {
        loc: {
          start: {
            line: 1688,
            column: 54
          },
          end: {
            line: 1688,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1688,
            column: 63
          },
          end: {
            line: 1688,
            column: 67
          }
        }],
        line: 1688
      },
      "185": {
        loc: {
          start: {
            line: 1704,
            column: 12
          },
          end: {
            line: 1706,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1704,
            column: 12
          },
          end: {
            line: 1706,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1704
      },
      "186": {
        loc: {
          start: {
            line: 1710,
            column: 12
          },
          end: {
            line: 1712,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1710,
            column: 12
          },
          end: {
            line: 1712,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1710
      },
      "187": {
        loc: {
          start: {
            line: 1713,
            column: 12
          },
          end: {
            line: 1715,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1713,
            column: 12
          },
          end: {
            line: 1715,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1713
      },
      "188": {
        loc: {
          start: {
            line: 1713,
            column: 16
          },
          end: {
            line: 1713,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1713,
            column: 16
          },
          end: {
            line: 1713,
            column: 30
          }
        }, {
          start: {
            line: 1713,
            column: 34
          },
          end: {
            line: 1713,
            column: 58
          }
        }],
        line: 1713
      },
      "189": {
        loc: {
          start: {
            line: 1728,
            column: 24
          },
          end: {
            line: 1728,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1728,
            column: 53
          },
          end: {
            line: 1728,
            column: 63
          }
        }, {
          start: {
            line: 1728,
            column: 66
          },
          end: {
            line: 1728,
            column: 75
          }
        }],
        line: 1728
      },
      "190": {
        loc: {
          start: {
            line: 1732,
            column: 12
          },
          end: {
            line: 1735,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1732,
            column: 12
          },
          end: {
            line: 1735,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1732
      },
      "191": {
        loc: {
          start: {
            line: 1747,
            column: 28
          },
          end: {
            line: 1747,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1747,
            column: 57
          },
          end: {
            line: 1747,
            column: 67
          }
        }, {
          start: {
            line: 1747,
            column: 70
          },
          end: {
            line: 1747,
            column: 79
          }
        }],
        line: 1747
      },
      "192": {
        loc: {
          start: {
            line: 1768,
            column: 19
          },
          end: {
            line: 1768,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1768,
            column: 50
          },
          end: {
            line: 1768,
            column: 63
          }
        }, {
          start: {
            line: 1768,
            column: 66
          },
          end: {
            line: 1768,
            column: 100
          }
        }],
        line: 1768
      },
      "193": {
        loc: {
          start: {
            line: 1769,
            column: 18
          },
          end: {
            line: 1769,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1769,
            column: 49
          },
          end: {
            line: 1769,
            column: 59
          }
        }, {
          start: {
            line: 1769,
            column: 62
          },
          end: {
            line: 1769,
            column: 71
          }
        }],
        line: 1769
      },
      "194": {
        loc: {
          start: {
            line: 1773,
            column: 36
          },
          end: {
            line: 1773,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1773,
            column: 45
          },
          end: {
            line: 1773,
            column: 49
          }
        }],
        line: 1773
      },
      "195": {
        loc: {
          start: {
            line: 1789,
            column: 12
          },
          end: {
            line: 1791,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1789,
            column: 12
          },
          end: {
            line: 1791,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1789
      },
      "196": {
        loc: {
          start: {
            line: 1793,
            column: 12
          },
          end: {
            line: 1795,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1793,
            column: 12
          },
          end: {
            line: 1795,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1793
      },
      "197": {
        loc: {
          start: {
            line: 1793,
            column: 16
          },
          end: {
            line: 1793,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1793,
            column: 16
          },
          end: {
            line: 1793,
            column: 36
          }
        }, {
          start: {
            line: 1793,
            column: 40
          },
          end: {
            line: 1793,
            column: 75
          }
        }],
        line: 1793
      },
      "198": {
        loc: {
          start: {
            line: 1799,
            column: 12
          },
          end: {
            line: 1801,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1799,
            column: 12
          },
          end: {
            line: 1801,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1799
      },
      "199": {
        loc: {
          start: {
            line: 1809,
            column: 16
          },
          end: {
            line: 1809,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1809,
            column: 16
          },
          end: {
            line: 1809,
            column: 27
          }
        }, {
          start: {
            line: 1809,
            column: 31
          },
          end: {
            line: 1809,
            column: 70
          }
        }],
        line: 1809
      },
      "200": {
        loc: {
          start: {
            line: 1810,
            column: 16
          },
          end: {
            line: 1810,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1810,
            column: 16
          },
          end: {
            line: 1810,
            column: 55
          }
        }, {
          start: {
            line: 1810,
            column: 59
          },
          end: {
            line: 1810,
            column: 125
          }
        }],
        line: 1810
      },
      "201": {
        loc: {
          start: {
            line: 1811,
            column: 81
          },
          end: {
            line: 1811,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1811,
            column: 81
          },
          end: {
            line: 1811,
            column: 88
          }
        }, {
          start: {
            line: 1811,
            column: 92
          },
          end: {
            line: 1811,
            column: 127
          }
        }],
        line: 1811
      },
      "202": {
        loc: {
          start: {
            line: 1840,
            column: 19
          },
          end: {
            line: 1840,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1840,
            column: 50
          },
          end: {
            line: 1840,
            column: 63
          }
        }, {
          start: {
            line: 1840,
            column: 66
          },
          end: {
            line: 1840,
            column: 98
          }
        }],
        line: 1840
      },
      "203": {
        loc: {
          start: {
            line: 1841,
            column: 18
          },
          end: {
            line: 1841,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1841,
            column: 49
          },
          end: {
            line: 1841,
            column: 59
          }
        }, {
          start: {
            line: 1841,
            column: 62
          },
          end: {
            line: 1841,
            column: 71
          }
        }],
        line: 1841
      },
      "204": {
        loc: {
          start: {
            line: 1845,
            column: 47
          },
          end: {
            line: 1845,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1845,
            column: 56
          },
          end: {
            line: 1845,
            column: 60
          }
        }],
        line: 1845
      },
      "205": {
        loc: {
          start: {
            line: 1861,
            column: 12
          },
          end: {
            line: 1863,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1861,
            column: 12
          },
          end: {
            line: 1863,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1861
      },
      "206": {
        loc: {
          start: {
            line: 1865,
            column: 12
          },
          end: {
            line: 1867,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1865,
            column: 12
          },
          end: {
            line: 1867,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1865
      },
      "207": {
        loc: {
          start: {
            line: 1865,
            column: 16
          },
          end: {
            line: 1865,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1865,
            column: 16
          },
          end: {
            line: 1865,
            column: 36
          }
        }, {
          start: {
            line: 1865,
            column: 40
          },
          end: {
            line: 1865,
            column: 75
          }
        }],
        line: 1865
      },
      "208": {
        loc: {
          start: {
            line: 1869,
            column: 12
          },
          end: {
            line: 1871,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1869,
            column: 12
          },
          end: {
            line: 1871,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1869
      },
      "209": {
        loc: {
          start: {
            line: 1906,
            column: 19
          },
          end: {
            line: 1906,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1906,
            column: 50
          },
          end: {
            line: 1906,
            column: 63
          }
        }, {
          start: {
            line: 1906,
            column: 66
          },
          end: {
            line: 1906,
            column: 99
          }
        }],
        line: 1906
      },
      "210": {
        loc: {
          start: {
            line: 1907,
            column: 18
          },
          end: {
            line: 1907,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1907,
            column: 49
          },
          end: {
            line: 1907,
            column: 59
          }
        }, {
          start: {
            line: 1907,
            column: 62
          },
          end: {
            line: 1907,
            column: 71
          }
        }],
        line: 1907
      },
      "211": {
        loc: {
          start: {
            line: 1911,
            column: 31
          },
          end: {
            line: 1911,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1911,
            column: 38
          },
          end: {
            line: 1911,
            column: 39
          }
        }],
        line: 1911
      },
      "212": {
        loc: {
          start: {
            line: 1911,
            column: 41
          },
          end: {
            line: 1911,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1911,
            column: 49
          },
          end: {
            line: 1911,
            column: 51
          }
        }],
        line: 1911
      },
      "213": {
        loc: {
          start: {
            line: 1911,
            column: 69
          },
          end: {
            line: 1911,
            column: 89
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1911,
            column: 78
          },
          end: {
            line: 1911,
            column: 89
          }
        }],
        line: 1911
      },
      "214": {
        loc: {
          start: {
            line: 1911,
            column: 91
          },
          end: {
            line: 1911,
            column: 109
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1911,
            column: 103
          },
          end: {
            line: 1911,
            column: 109
          }
        }],
        line: 1911
      },
      "215": {
        loc: {
          start: {
            line: 1911,
            column: 113
          },
          end: {
            line: 1911,
            column: 126
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1911,
            column: 122
          },
          end: {
            line: 1911,
            column: 126
          }
        }],
        line: 1911
      },
      "216": {
        loc: {
          start: {
            line: 1925,
            column: 8
          },
          end: {
            line: 1927,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1925,
            column: 8
          },
          end: {
            line: 1927,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1925
      },
      "217": {
        loc: {
          start: {
            line: 1925,
            column: 12
          },
          end: {
            line: 1925,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1925,
            column: 12
          },
          end: {
            line: 1925,
            column: 32
          }
        }, {
          start: {
            line: 1925,
            column: 36
          },
          end: {
            line: 1925,
            column: 71
          }
        }],
        line: 1925
      },
      "218": {
        loc: {
          start: {
            line: 1929,
            column: 8
          },
          end: {
            line: 1950,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1929,
            column: 8
          },
          end: {
            line: 1950,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1929
      },
      "219": {
        loc: {
          start: {
            line: 1951,
            column: 8
          },
          end: {
            line: 1953,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1951,
            column: 8
          },
          end: {
            line: 1953,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1951
      },
      "220": {
        loc: {
          start: {
            line: 1955,
            column: 8
          },
          end: {
            line: 1959,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1955,
            column: 8
          },
          end: {
            line: 1959,
            column: 9
          }
        }, {
          start: {
            line: 1957,
            column: 15
          },
          end: {
            line: 1959,
            column: 9
          }
        }],
        line: 1955
      },
      "221": {
        loc: {
          start: {
            line: 1956,
            column: 27
          },
          end: {
            line: 1956,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1956,
            column: 50
          },
          end: {
            line: 1956,
            column: 52
          }
        }, {
          start: {
            line: 1956,
            column: 55
          },
          end: {
            line: 1956,
            column: 56
          }
        }],
        line: 1956
      },
      "222": {
        loc: {
          start: {
            line: 1981,
            column: 19
          },
          end: {
            line: 1981,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1981,
            column: 50
          },
          end: {
            line: 1981,
            column: 63
          }
        }, {
          start: {
            line: 1981,
            column: 66
          },
          end: {
            line: 1981,
            column: 89
          }
        }],
        line: 1981
      },
      "223": {
        loc: {
          start: {
            line: 1982,
            column: 18
          },
          end: {
            line: 1982,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1982,
            column: 49
          },
          end: {
            line: 1982,
            column: 59
          }
        }, {
          start: {
            line: 1982,
            column: 62
          },
          end: {
            line: 1982,
            column: 71
          }
        }],
        line: 1982
      },
      "224": {
        loc: {
          start: {
            line: 1986,
            column: 28
          },
          end: {
            line: 1986,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1986,
            column: 35
          },
          end: {
            line: 1986,
            column: 36
          }
        }],
        line: 1986
      },
      "225": {
        loc: {
          start: {
            line: 1986,
            column: 38
          },
          end: {
            line: 1986,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1986,
            column: 49
          },
          end: {
            line: 1986,
            column: 51
          }
        }],
        line: 1986
      },
      "226": {
        loc: {
          start: {
            line: 1986,
            column: 53
          },
          end: {
            line: 1986,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1986,
            column: 62
          },
          end: {
            line: 1986,
            column: 64
          }
        }],
        line: 1986
      },
      "227": {
        loc: {
          start: {
            line: 1986,
            column: 68
          },
          end: {
            line: 1986,
            column: 81
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1986,
            column: 77
          },
          end: {
            line: 1986,
            column: 81
          }
        }],
        line: 1986
      },
      "228": {
        loc: {
          start: {
            line: 2000,
            column: 8
          },
          end: {
            line: 2002,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2000,
            column: 8
          },
          end: {
            line: 2002,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2000
      },
      "229": {
        loc: {
          start: {
            line: 2000,
            column: 12
          },
          end: {
            line: 2000,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2000,
            column: 12
          },
          end: {
            line: 2000,
            column: 32
          }
        }, {
          start: {
            line: 2000,
            column: 36
          },
          end: {
            line: 2000,
            column: 71
          }
        }],
        line: 2000
      },
      "230": {
        loc: {
          start: {
            line: 2004,
            column: 8
          },
          end: {
            line: 2025,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2004,
            column: 8
          },
          end: {
            line: 2025,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2004
      },
      "231": {
        loc: {
          start: {
            line: 2040,
            column: 30
          },
          end: {
            line: 2040,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2040,
            column: 61
          },
          end: {
            line: 2040,
            column: 74
          }
        }, {
          start: {
            line: 2040,
            column: 77
          },
          end: {
            line: 2040,
            column: 100
          }
        }],
        line: 2040
      },
      "232": {
        loc: {
          start: {
            line: 2040,
            column: 102
          },
          end: {
            line: 2040,
            column: 155
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2040,
            column: 133
          },
          end: {
            line: 2040,
            column: 143
          }
        }, {
          start: {
            line: 2040,
            column: 146
          },
          end: {
            line: 2040,
            column: 155
          }
        }],
        line: 2040
      },
      "233": {
        loc: {
          start: {
            line: 2043,
            column: 72
          },
          end: {
            line: 2043,
            column: 85
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 2043,
            column: 81
          },
          end: {
            line: 2043,
            column: 85
          }
        }],
        line: 2043
      },
      "234": {
        loc: {
          start: {
            line: 2059,
            column: 12
          },
          end: {
            line: 2061,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2059,
            column: 12
          },
          end: {
            line: 2061,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2059
      },
      "235": {
        loc: {
          start: {
            line: 2065,
            column: 12
          },
          end: {
            line: 2067,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2065,
            column: 12
          },
          end: {
            line: 2067,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2065
      },
      "236": {
        loc: {
          start: {
            line: 2069,
            column: 28
          },
          end: {
            line: 2069,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2069,
            column: 28
          },
          end: {
            line: 2069,
            column: 59
          }
        }, {
          start: {
            line: 2069,
            column: 63
          },
          end: {
            line: 2069,
            column: 64
          }
        }],
        line: 2069
      },
      "237": {
        loc: {
          start: {
            line: 2073,
            column: 12
          },
          end: {
            line: 2077,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2073,
            column: 12
          },
          end: {
            line: 2077,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2073
      },
      "238": {
        loc: {
          start: {
            line: 2079,
            column: 32
          },
          end: {
            line: 2079,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2079,
            column: 32
          },
          end: {
            line: 2079,
            column: 55
          }
        }, {
          start: {
            line: 2079,
            column: 59
          },
          end: {
            line: 2079,
            column: 67
          }
        }],
        line: 2079
      },
      "239": {
        loc: {
          start: {
            line: 2121,
            column: 19
          },
          end: {
            line: 2121,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2121,
            column: 50
          },
          end: {
            line: 2121,
            column: 63
          }
        }, {
          start: {
            line: 2121,
            column: 66
          },
          end: {
            line: 2121,
            column: 98
          }
        }],
        line: 2121
      },
      "240": {
        loc: {
          start: {
            line: 2122,
            column: 18
          },
          end: {
            line: 2122,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2122,
            column: 49
          },
          end: {
            line: 2122,
            column: 59
          }
        }, {
          start: {
            line: 2122,
            column: 62
          },
          end: {
            line: 2122,
            column: 71
          }
        }],
        line: 2122
      },
      "241": {
        loc: {
          start: {
            line: 2126,
            column: 40
          },
          end: {
            line: 2126,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 2126,
            column: 49
          },
          end: {
            line: 2126,
            column: 53
          }
        }],
        line: 2126
      },
      "242": {
        loc: {
          start: {
            line: 2139,
            column: 8
          },
          end: {
            line: 2141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2139,
            column: 8
          },
          end: {
            line: 2141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2139
      },
      "243": {
        loc: {
          start: {
            line: 2145,
            column: 8
          },
          end: {
            line: 2147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2145,
            column: 8
          },
          end: {
            line: 2147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2145
      },
      "244": {
        loc: {
          start: {
            line: 2159,
            column: 19
          },
          end: {
            line: 2159,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2159,
            column: 50
          },
          end: {
            line: 2159,
            column: 63
          }
        }, {
          start: {
            line: 2159,
            column: 66
          },
          end: {
            line: 2159,
            column: 89
          }
        }],
        line: 2159
      },
      "245": {
        loc: {
          start: {
            line: 2160,
            column: 18
          },
          end: {
            line: 2160,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2160,
            column: 49
          },
          end: {
            line: 2160,
            column: 59
          }
        }, {
          start: {
            line: 2160,
            column: 62
          },
          end: {
            line: 2160,
            column: 71
          }
        }],
        line: 2160
      },
      "246": {
        loc: {
          start: {
            line: 2164,
            column: 52
          },
          end: {
            line: 2164,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 2164,
            column: 61
          },
          end: {
            line: 2164,
            column: 65
          }
        }],
        line: 2164
      },
      "247": {
        loc: {
          start: {
            line: 2180,
            column: 12
          },
          end: {
            line: 2182,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2180,
            column: 12
          },
          end: {
            line: 2182,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2180
      },
      "248": {
        loc: {
          start: {
            line: 2180,
            column: 16
          },
          end: {
            line: 2180,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2180,
            column: 16
          },
          end: {
            line: 2180,
            column: 40
          }
        }, {
          start: {
            line: 2180,
            column: 44
          },
          end: {
            line: 2180,
            column: 70
          }
        }],
        line: 2180
      },
      "249": {
        loc: {
          start: {
            line: 2186,
            column: 12
          },
          end: {
            line: 2188,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2186,
            column: 12
          },
          end: {
            line: 2188,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2186
      },
      "250": {
        loc: {
          start: {
            line: 2193,
            column: 12
          },
          end: {
            line: 2195,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2193,
            column: 12
          },
          end: {
            line: 2195,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2193
      },
      "251": {
        loc: {
          start: {
            line: 2197,
            column: 32
          },
          end: {
            line: 2197,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2197,
            column: 32
          },
          end: {
            line: 2197,
            column: 55
          }
        }, {
          start: {
            line: 2197,
            column: 59
          },
          end: {
            line: 2197,
            column: 67
          }
        }],
        line: 2197
      },
      "252": {
        loc: {
          start: {
            line: 2229,
            column: 19
          },
          end: {
            line: 2229,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2229,
            column: 50
          },
          end: {
            line: 2229,
            column: 63
          }
        }, {
          start: {
            line: 2229,
            column: 66
          },
          end: {
            line: 2229,
            column: 98
          }
        }],
        line: 2229
      },
      "253": {
        loc: {
          start: {
            line: 2230,
            column: 18
          },
          end: {
            line: 2230,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2230,
            column: 49
          },
          end: {
            line: 2230,
            column: 59
          }
        }, {
          start: {
            line: 2230,
            column: 62
          },
          end: {
            line: 2230,
            column: 71
          }
        }],
        line: 2230
      },
      "254": {
        loc: {
          start: {
            line: 2234,
            column: 56
          },
          end: {
            line: 2234,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 2234,
            column: 65
          },
          end: {
            line: 2234,
            column: 69
          }
        }],
        line: 2234
      },
      "255": {
        loc: {
          start: {
            line: 2250,
            column: 12
          },
          end: {
            line: 2252,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2250,
            column: 12
          },
          end: {
            line: 2252,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2250
      },
      "256": {
        loc: {
          start: {
            line: 2250,
            column: 16
          },
          end: {
            line: 2250,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2250,
            column: 16
          },
          end: {
            line: 2250,
            column: 40
          }
        }, {
          start: {
            line: 2250,
            column: 44
          },
          end: {
            line: 2250,
            column: 70
          }
        }],
        line: 2250
      },
      "257": {
        loc: {
          start: {
            line: 2256,
            column: 12
          },
          end: {
            line: 2258,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2256,
            column: 12
          },
          end: {
            line: 2258,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2256
      },
      "258": {
        loc: {
          start: {
            line: 2263,
            column: 12
          },
          end: {
            line: 2265,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2263,
            column: 12
          },
          end: {
            line: 2265,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2263
      },
      "259": {
        loc: {
          start: {
            line: 2267,
            column: 32
          },
          end: {
            line: 2267,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2267,
            column: 32
          },
          end: {
            line: 2267,
            column: 55
          }
        }, {
          start: {
            line: 2267,
            column: 59
          },
          end: {
            line: 2267,
            column: 67
          }
        }],
        line: 2267
      },
      "260": {
        loc: {
          start: {
            line: 2299,
            column: 19
          },
          end: {
            line: 2299,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2299,
            column: 50
          },
          end: {
            line: 2299,
            column: 63
          }
        }, {
          start: {
            line: 2299,
            column: 66
          },
          end: {
            line: 2299,
            column: 102
          }
        }],
        line: 2299
      },
      "261": {
        loc: {
          start: {
            line: 2300,
            column: 18
          },
          end: {
            line: 2300,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2300,
            column: 49
          },
          end: {
            line: 2300,
            column: 59
          }
        }, {
          start: {
            line: 2300,
            column: 62
          },
          end: {
            line: 2300,
            column: 71
          }
        }],
        line: 2300
      },
      "262": {
        loc: {
          start: {
            line: 2304,
            column: 55
          },
          end: {
            line: 2304,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 2304,
            column: 64
          },
          end: {
            line: 2304,
            column: 68
          }
        }],
        line: 2304
      },
      "263": {
        loc: {
          start: {
            line: 2320,
            column: 8
          },
          end: {
            line: 2322,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 2320,
            column: 8
          },
          end: {
            line: 2322,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 2320
      },
      "264": {
        loc: {
          start: {
            line: 2331,
            column: 19
          },
          end: {
            line: 2331,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2331,
            column: 50
          },
          end: {
            line: 2331,
            column: 63
          }
        }, {
          start: {
            line: 2331,
            column: 66
          },
          end: {
            line: 2331,
            column: 88
          }
        }],
        line: 2331
      },
      "265": {
        loc: {
          start: {
            line: 2332,
            column: 18
          },
          end: {
            line: 2332,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2332,
            column: 49
          },
          end: {
            line: 2332,
            column: 59
          }
        }, {
          start: {
            line: 2332,
            column: 62
          },
          end: {
            line: 2332,
            column: 71
          }
        }],
        line: 2332
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0,
      "394": 0,
      "395": 0,
      "396": 0,
      "397": 0,
      "398": 0,
      "399": 0,
      "400": 0,
      "401": 0,
      "402": 0,
      "403": 0,
      "404": 0,
      "405": 0,
      "406": 0,
      "407": 0,
      "408": 0,
      "409": 0,
      "410": 0,
      "411": 0,
      "412": 0,
      "413": 0,
      "414": 0,
      "415": 0,
      "416": 0,
      "417": 0,
      "418": 0,
      "419": 0,
      "420": 0,
      "421": 0,
      "422": 0,
      "423": 0,
      "424": 0,
      "425": 0,
      "426": 0,
      "427": 0,
      "428": 0,
      "429": 0,
      "430": 0,
      "431": 0,
      "432": 0,
      "433": 0,
      "434": 0,
      "435": 0,
      "436": 0,
      "437": 0,
      "438": 0,
      "439": 0,
      "440": 0,
      "441": 0,
      "442": 0,
      "443": 0,
      "444": 0,
      "445": 0,
      "446": 0,
      "447": 0,
      "448": 0,
      "449": 0,
      "450": 0,
      "451": 0,
      "452": 0,
      "453": 0,
      "454": 0,
      "455": 0,
      "456": 0,
      "457": 0,
      "458": 0,
      "459": 0,
      "460": 0,
      "461": 0,
      "462": 0,
      "463": 0,
      "464": 0,
      "465": 0,
      "466": 0,
      "467": 0,
      "468": 0,
      "469": 0,
      "470": 0,
      "471": 0,
      "472": 0,
      "473": 0,
      "474": 0,
      "475": 0,
      "476": 0,
      "477": 0,
      "478": 0,
      "479": 0,
      "480": 0,
      "481": 0,
      "482": 0,
      "483": 0,
      "484": 0,
      "485": 0,
      "486": 0,
      "487": 0,
      "488": 0,
      "489": 0,
      "490": 0,
      "491": 0,
      "492": 0,
      "493": 0,
      "494": 0,
      "495": 0,
      "496": 0,
      "497": 0,
      "498": 0,
      "499": 0,
      "500": 0,
      "501": 0,
      "502": 0,
      "503": 0,
      "504": 0,
      "505": 0,
      "506": 0,
      "507": 0,
      "508": 0,
      "509": 0,
      "510": 0,
      "511": 0,
      "512": 0,
      "513": 0,
      "514": 0,
      "515": 0,
      "516": 0,
      "517": 0,
      "518": 0,
      "519": 0,
      "520": 0,
      "521": 0,
      "522": 0,
      "523": 0,
      "524": 0,
      "525": 0,
      "526": 0,
      "527": 0,
      "528": 0,
      "529": 0,
      "530": 0,
      "531": 0,
      "532": 0,
      "533": 0,
      "534": 0,
      "535": 0,
      "536": 0,
      "537": 0,
      "538": 0,
      "539": 0,
      "540": 0,
      "541": 0,
      "542": 0,
      "543": 0,
      "544": 0,
      "545": 0,
      "546": 0,
      "547": 0,
      "548": 0,
      "549": 0,
      "550": 0,
      "551": 0,
      "552": 0,
      "553": 0,
      "554": 0,
      "555": 0,
      "556": 0,
      "557": 0,
      "558": 0,
      "559": 0,
      "560": 0,
      "561": 0,
      "562": 0,
      "563": 0,
      "564": 0,
      "565": 0,
      "566": 0,
      "567": 0,
      "568": 0,
      "569": 0,
      "570": 0,
      "571": 0,
      "572": 0,
      "573": 0,
      "574": 0,
      "575": 0,
      "576": 0,
      "577": 0,
      "578": 0,
      "579": 0,
      "580": 0,
      "581": 0,
      "582": 0,
      "583": 0,
      "584": 0,
      "585": 0,
      "586": 0,
      "587": 0,
      "588": 0,
      "589": 0,
      "590": 0,
      "591": 0,
      "592": 0,
      "593": 0,
      "594": 0,
      "595": 0,
      "596": 0,
      "597": 0,
      "598": 0,
      "599": 0,
      "600": 0,
      "601": 0,
      "602": 0,
      "603": 0,
      "604": 0,
      "605": 0,
      "606": 0,
      "607": 0,
      "608": 0,
      "609": 0,
      "610": 0,
      "611": 0,
      "612": 0,
      "613": 0,
      "614": 0,
      "615": 0,
      "616": 0,
      "617": 0,
      "618": 0,
      "619": 0,
      "620": 0,
      "621": 0,
      "622": 0,
      "623": 0,
      "624": 0,
      "625": 0,
      "626": 0,
      "627": 0,
      "628": 0,
      "629": 0,
      "630": 0,
      "631": 0,
      "632": 0,
      "633": 0,
      "634": 0,
      "635": 0,
      "636": 0,
      "637": 0,
      "638": 0,
      "639": 0,
      "640": 0,
      "641": 0,
      "642": 0,
      "643": 0,
      "644": 0,
      "645": 0,
      "646": 0,
      "647": 0,
      "648": 0,
      "649": 0,
      "650": 0,
      "651": 0,
      "652": 0,
      "653": 0,
      "654": 0,
      "655": 0,
      "656": 0,
      "657": 0,
      "658": 0,
      "659": 0,
      "660": 0,
      "661": 0,
      "662": 0,
      "663": 0,
      "664": 0,
      "665": 0,
      "666": 0,
      "667": 0,
      "668": 0,
      "669": 0,
      "670": 0,
      "671": 0,
      "672": 0,
      "673": 0,
      "674": 0,
      "675": 0,
      "676": 0,
      "677": 0,
      "678": 0,
      "679": 0,
      "680": 0,
      "681": 0,
      "682": 0,
      "683": 0,
      "684": 0,
      "685": 0,
      "686": 0,
      "687": 0,
      "688": 0,
      "689": 0,
      "690": 0,
      "691": 0,
      "692": 0,
      "693": 0,
      "694": 0,
      "695": 0,
      "696": 0,
      "697": 0,
      "698": 0,
      "699": 0,
      "700": 0,
      "701": 0,
      "702": 0,
      "703": 0,
      "704": 0,
      "705": 0,
      "706": 0,
      "707": 0,
      "708": 0,
      "709": 0,
      "710": 0,
      "711": 0,
      "712": 0,
      "713": 0,
      "714": 0,
      "715": 0,
      "716": 0,
      "717": 0,
      "718": 0,
      "719": 0,
      "720": 0,
      "721": 0,
      "722": 0,
      "723": 0,
      "724": 0,
      "725": 0,
      "726": 0,
      "727": 0,
      "728": 0,
      "729": 0,
      "730": 0,
      "731": 0,
      "732": 0,
      "733": 0,
      "734": 0,
      "735": 0,
      "736": 0,
      "737": 0,
      "738": 0,
      "739": 0,
      "740": 0,
      "741": 0,
      "742": 0,
      "743": 0,
      "744": 0,
      "745": 0,
      "746": 0,
      "747": 0,
      "748": 0,
      "749": 0,
      "750": 0,
      "751": 0,
      "752": 0,
      "753": 0,
      "754": 0,
      "755": 0,
      "756": 0,
      "757": 0,
      "758": 0,
      "759": 0,
      "760": 0,
      "761": 0,
      "762": 0,
      "763": 0,
      "764": 0,
      "765": 0,
      "766": 0,
      "767": 0,
      "768": 0,
      "769": 0,
      "770": 0,
      "771": 0,
      "772": 0,
      "773": 0,
      "774": 0,
      "775": 0,
      "776": 0,
      "777": 0,
      "778": 0,
      "779": 0,
      "780": 0,
      "781": 0,
      "782": 0,
      "783": 0,
      "784": 0,
      "785": 0,
      "786": 0,
      "787": 0,
      "788": 0,
      "789": 0,
      "790": 0,
      "791": 0,
      "792": 0,
      "793": 0,
      "794": 0,
      "795": 0,
      "796": 0,
      "797": 0,
      "798": 0,
      "799": 0,
      "800": 0,
      "801": 0,
      "802": 0,
      "803": 0,
      "804": 0,
      "805": 0,
      "806": 0,
      "807": 0,
      "808": 0,
      "809": 0,
      "810": 0,
      "811": 0,
      "812": 0,
      "813": 0,
      "814": 0,
      "815": 0,
      "816": 0,
      "817": 0,
      "818": 0,
      "819": 0,
      "820": 0,
      "821": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0],
      "61": [0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0],
      "96": [0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0, 0],
      "103": [0, 0],
      "104": [0, 0],
      "105": [0, 0],
      "106": [0, 0],
      "107": [0, 0],
      "108": [0, 0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0],
      "112": [0, 0],
      "113": [0, 0],
      "114": [0, 0],
      "115": [0, 0],
      "116": [0, 0],
      "117": [0, 0],
      "118": [0, 0],
      "119": [0, 0],
      "120": [0, 0],
      "121": [0, 0],
      "122": [0, 0],
      "123": [0, 0],
      "124": [0, 0],
      "125": [0],
      "126": [0, 0],
      "127": [0, 0],
      "128": [0, 0],
      "129": [0, 0],
      "130": [0, 0],
      "131": [0],
      "132": [0, 0],
      "133": [0, 0],
      "134": [0, 0],
      "135": [0, 0],
      "136": [0],
      "137": [0],
      "138": [0],
      "139": [0, 0],
      "140": [0, 0],
      "141": [0, 0],
      "142": [0, 0],
      "143": [0, 0],
      "144": [0, 0],
      "145": [0, 0],
      "146": [0, 0],
      "147": [0, 0],
      "148": [0, 0],
      "149": [0, 0],
      "150": [0],
      "151": [0],
      "152": [0, 0],
      "153": [0, 0],
      "154": [0, 0],
      "155": [0, 0],
      "156": [0, 0],
      "157": [0, 0],
      "158": [0, 0],
      "159": [0, 0],
      "160": [0, 0],
      "161": [0, 0],
      "162": [0, 0],
      "163": [0, 0],
      "164": [0],
      "165": [0, 0],
      "166": [0, 0],
      "167": [0, 0],
      "168": [0, 0],
      "169": [0, 0],
      "170": [0, 0],
      "171": [0, 0],
      "172": [0, 0],
      "173": [0, 0],
      "174": [0, 0],
      "175": [0, 0],
      "176": [0, 0],
      "177": [0, 0],
      "178": [0, 0],
      "179": [0, 0],
      "180": [0, 0],
      "181": [0, 0],
      "182": [0, 0],
      "183": [0, 0],
      "184": [0],
      "185": [0, 0],
      "186": [0, 0],
      "187": [0, 0],
      "188": [0, 0],
      "189": [0, 0],
      "190": [0, 0],
      "191": [0, 0],
      "192": [0, 0],
      "193": [0, 0],
      "194": [0],
      "195": [0, 0],
      "196": [0, 0],
      "197": [0, 0],
      "198": [0, 0],
      "199": [0, 0],
      "200": [0, 0],
      "201": [0, 0],
      "202": [0, 0],
      "203": [0, 0],
      "204": [0],
      "205": [0, 0],
      "206": [0, 0],
      "207": [0, 0],
      "208": [0, 0],
      "209": [0, 0],
      "210": [0, 0],
      "211": [0],
      "212": [0],
      "213": [0],
      "214": [0],
      "215": [0],
      "216": [0, 0],
      "217": [0, 0],
      "218": [0, 0],
      "219": [0, 0],
      "220": [0, 0],
      "221": [0, 0],
      "222": [0, 0],
      "223": [0, 0],
      "224": [0],
      "225": [0],
      "226": [0],
      "227": [0],
      "228": [0, 0],
      "229": [0, 0],
      "230": [0, 0],
      "231": [0, 0],
      "232": [0, 0],
      "233": [0],
      "234": [0, 0],
      "235": [0, 0],
      "236": [0, 0],
      "237": [0, 0],
      "238": [0, 0],
      "239": [0, 0],
      "240": [0, 0],
      "241": [0],
      "242": [0, 0],
      "243": [0, 0],
      "244": [0, 0],
      "245": [0, 0],
      "246": [0],
      "247": [0, 0],
      "248": [0, 0],
      "249": [0, 0],
      "250": [0, 0],
      "251": [0, 0],
      "252": [0, 0],
      "253": [0, 0],
      "254": [0],
      "255": [0, 0],
      "256": [0, 0],
      "257": [0, 0],
      "258": [0, 0],
      "259": [0, 0],
      "260": [0, 0],
      "261": [0, 0],
      "262": [0],
      "263": [0, 0],
      "264": [0, 0],
      "265": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/seller.actions.ts"],
      sourcesContent: ["'use server'\n\nimport { connectToDatabase } from '@/lib/db'\nimport Seller, { ISeller } from '@/lib/db/models/seller.model'\nimport User from '@/lib/db/models/user.model'\nimport Order from '@/lib/db/models/order.model'\nimport Product from '@/lib/db/models/product.model'\nimport mongoose from 'mongoose'\nimport { revalidatePath } from 'next/cache'\nimport { uploadToStorage as uploadToS3, deleteFromStorage as deleteFromS3 } from '@/lib/utils/s3'\nimport { sendNotification } from '@/lib/utils/notification'\nimport { verifyDocument } from '@/lib/utils/verification'\nimport { cache } from 'react'\nimport { getSetting } from './setting.actions'\nimport { round2 } from '@/lib/utils'\nimport Stripe from 'stripe'\nimport { auth } from '@/auth'\nimport { getTranslations } from 'next-intl/server'\nimport paypal from '@paypal/checkout-server-sdk'\nimport { subscriptionPlans } from '@/lib/constants'\nimport { ApiKeyService } from '@/lib/api/services/api-key.service'\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\n  apiVersion: '2023-10-16',\n});\n\nconst paypalClient = new paypal.core.PayPalHttpClient(\n  new paypal.core.SandboxEnvironment(\n    process.env.PAYPAL_CLIENT_ID || '',\n    process.env.PAYPAL_CLIENT_SECRET || ''\n  )\n);\n\nclass SellerError extends Error {\n  constructor(message: string, public code?: string) {\n    super(message)\n    this.name = 'SellerError'\n  }\n}\n\nconst PERFORMANCE_MARKERS = {\n  START: 'seller-metrics-start',\n  END: 'seller-metrics-end',\n};\n\nexport type SellerFormData = {\n  businessName: string\n  email: string\n  phone: string\n  description?: string\n  businessType: 'individual' | 'company'\n  vatRegistered: boolean\n  logo?: File\n  address: {\n    street: string\n    city: string\n    state: string\n    country: string\n    postalCode: string\n  }\n  taxId: string\n  bankInfo: {\n    accountName: string\n    accountNumber: string\n    bankName: string\n    swiftCode: string\n  }\n  termsAccepted: boolean\n  customSiteUrl: string\n}\n\nexport type DocumentType = 'businessLicense' | 'taxDocument' | 'identityProof' | 'other'\nexport type SubscriptionPlan = 'Trial' | 'Basic' | 'Pro' | 'VIP'\nexport type SubscriptionStatus = 'active' | 'expired' | 'cancelled' | 'pending' | 'suspended'\n\nexport interface DocumentUpload {\n  file: File\n  type: DocumentType\n  metadata?: Record<string, any>\n}\n\nexport interface SellerMetrics {\n  revenue: {\n    daily: number\n    weekly: number\n    monthly: number\n    yearly: number\n    trend: 'up' | 'down' | 'stable'\n    percentage: number\n  }\n  orders: {\n    pending: number\n    completed: number\n    cancelled: number\n    total: number\n    avgOrderValue: number\n  }\n  products: {\n    active: number\n    outOfStock: number\n    total: number\n    topSelling: Array<{\n      id: string\n      name: string\n      sales: number\n    }>\n  }\n  performance: {\n    rating: number\n    responseTime: number\n    fulfillmentRate: number\n    returnRate: number\n    customerSatisfaction: number\n  }\n  analytics: {\n    visitorsCount: number\n    conversionRate: number\n    abandonedCartRate: number\n    repeatCustomerRate: number\n  }\n  points: {\n    balance: number\n    totalEarned: number\n    totalRedeemed: number\n    recentTransactions: Array<{\n      amount: number\n      type: 'earn' | 'redeem'\n      description: string\n      createdAt: Date\n    }>\n  }\n}\n\nexport interface ProductFilters {\n  search?: string\n  status?: 'active' | 'draft' | 'outOfStock'\n  category?: string\n  sortBy?: 'createdAt' | 'price' | 'stock' | 'sales'\n  sortOrder?: 'asc' | 'desc'\n  page?: number\n  limit?: number\n}\n\ninterface OrderFilters {\n  page?: number\n  limit?: number\n  status?: string\n  sortBy?: string\n  startDate?: Date\n  endDate?: Date\n}\n\nexport interface SettingsFormData {\n  businessName?: string\n  description?: string\n  phone?: string\n  address?: {\n    street: string\n    city: string\n    state: string\n    country: string\n    postalCode: string\n  }\n  bankInfo?: {\n    accountName: string\n    accountNumber: string\n    bankName: string\n    swiftCode: string\n  }\n  notifications: {\n    email: boolean\n    sms: boolean\n    orderUpdates: boolean\n    marketingEmails: boolean\n    pointsNotifications: boolean\n  }\n  display: {\n    showRating: boolean\n    showContactInfo: boolean\n    showMetrics: boolean\n    showPointsBalance: boolean\n  }\n  security: {\n    twoFactorAuth: boolean\n    loginNotifications: boolean\n  }\n  customSite: {\n    theme: string\n    primaryColor: string\n    bannerImage?: string\n  }\n  customSiteUrl?: string\n}\n\nfunction isValidObjectId(id: string): boolean {\n  return mongoose.Types.ObjectId.isValid(id)\n}\n\nasync function generateCustomSiteUrl(businessName: string): Promise<string> {\n  const baseUrl = businessName\n    .toLowerCase()\n    .replace(/[^a-z0-9]/g, '-')\n    .replace(/-+/g, '-')\n    .slice(0, 50)\n  let customSiteUrl = baseUrl\n  let counter = 1\n\n  while (await Seller.exists({ customSiteUrl })) {\n    customSiteUrl = `${baseUrl}-${counter}`\n    counter++\n  }\n\n  return customSiteUrl\n}\n\nexport async function calculateRevenueHelper(sellerId: string, startDate: Date) {\n  if (!isValidObjectId(sellerId)) {\n    throw new SellerError('Invalid seller ID', 'INVALID_ID')\n  }\n\n  try {\n    const orders = await Order.aggregate([\n      {\n        $match: {\n          sellerId: new mongoose.Types.ObjectId(sellerId),\n          status: 'completed',\n          createdAt: { $gte: startDate },\n        },\n      },\n      {\n        $group: {\n          _id: null,\n          total: { $sum: '$total' },\n          count: { $sum: 1 },\n          average: { $avg: '$total' },\n          previous: {\n            $sum: {\n              $cond: [{ $lt: ['$createdAt', startDate] }, '$total', 0],\n            },\n          },\n        },\n      },\n    ])\n\n    return {\n      total: orders[0]?.total || 0,\n      count: orders[0]?.count || 0,\n      average: orders[0]?.average || 0,\n      previous: orders[0]?.previous || 0,\n    }\n  } catch (error) {\n    console.error('Calculate revenue error:', error)\n    throw new SellerError('Failed to calculate revenue', 'CALCULATION_ERROR')\n  }\n}\n\nexport async function calculateTrendHelper(\n  current: number,\n  average: number\n): Promise<'up' | 'down' | 'stable'> {\n  try {\n    const difference = current - average\n    const threshold = average * 0.05\n\n    if (difference > threshold) return 'up'\n    if (difference < -threshold) return 'down'\n    return 'stable'\n  } catch (error) {\n    console.error('Calculate trend error:', error)\n    return 'stable'\n  }\n}\n\nexport async function calculateGrowthPercentageHelper(\n  current: number,\n  previous: number\n): Promise<number> {\n  try {\n    if (previous === 0) return current > 0 ? 100 : 0\n    return round2(((current - previous) / previous) * 100)\n  } catch (error) {\n    console.error('Calculate growth percentage error:', error)\n    return 0\n  }\n}\n\nexport async function calculateOrderStats(sellerId: string) {\n  try {\n    if (!isValidObjectId(sellerId)) {\n      throw new SellerError('Invalid seller ID', 'INVALID_ID')\n    }\n\n    const stats = await Order.aggregate([\n      {\n        $match: {\n          sellerId: new mongoose.Types.ObjectId(sellerId),\n        },\n      },\n      {\n        $group: {\n          _id: null,\n          pending: {\n            $sum: { $cond: [{ $eq: ['$status', 'pending'] }, 1, 0] },\n          },\n          completed: {\n            $sum: { $cond: [{ $eq: ['$status', 'completed'] }, 1, 0] },\n          },\n          cancelled: {\n            $sum: { $cond: [{ $eq: ['$status', 'cancelled'] }, 1, 0] },\n          },\n          total: { $sum: 1 },\n          totalValue: { $sum: '$total' },\n        },\n      },\n    ])\n\n    const result = stats[0] || {\n      pending: 0,\n      completed: 0,\n      cancelled: 0,\n      total: 0,\n      totalValue: 0,\n    }\n\n    return {\n      pending: result.pending,\n      completed: result.completed,\n      cancelled: result.cancelled,\n      total: result.total,\n      avgOrderValue: result.total > 0 ? round2(result.totalValue / result.total) : 0,\n    }\n  } catch (error) {\n    console.error('Calculate order stats error:', error)\n    throw new SellerError('Failed to calculate order stats', 'CALCULATION_ERROR')\n  }\n}\n\nexport async function calculateProductStats(sellerId: string) {\n  try {\n    if (!isValidObjectId(sellerId)) {\n      throw new SellerError('Invalid seller ID', 'INVALID_ID')\n    }\n\n    const [basicStats, topSelling] = await Promise.all([\n      Product.aggregate([\n        {\n          $match: {\n            sellerId: new mongoose.Types.ObjectId(sellerId),\n          },\n        },\n        {\n          $group: {\n            _id: null,\n            active: {\n              $sum: {\n                $cond: [\n                  {\n                    $and: [\n                      { $eq: ['$status', 'active'] },\n                      { $gt: ['$countInStock', 0] },\n                    ],\n                  },\n                  1,\n                  0,\n                ],\n              },\n            },\n            outOfStock: {\n              $sum: { $cond: [{ $eq: ['$countInStock', 0] }, 1, 0] },\n            },\n            total: { $sum: 1 },\n          },\n        },\n      ]),\n      Product.aggregate([\n        {\n          $match: {\n            sellerId: new mongoose.Types.ObjectId(sellerId),\n            'metrics.sales': { $gt: 0 },\n          },\n        },\n        {\n          $sort: { 'metrics.sales': -1 },\n        },\n        {\n          $limit: 5,\n        },\n        {\n          $project: {\n            id: '$_id',\n            name: '$name',\n            sales: '$metrics.sales',\n            _id: 0,\n          },\n        },\n      ]),\n    ])\n\n    const stats = basicStats[0] || {\n      active: 0,\n      outOfStock: 0,\n      total: 0,\n    }\n\n    return {\n      active: stats.active,\n      outOfStock: stats.outOfStock,\n      total: stats.total,\n      topSelling,\n    }\n  } catch (error) {\n    console.error('Calculate product stats error:', error)\n    throw new SellerError('Failed to calculate product stats', 'CALCULATION_ERROR')\n  }\n}\n\nexport async function calculatePerformanceStats(sellerId: string) {\n  try {\n    if (!isValidObjectId(sellerId)) {\n      throw new SellerError('Invalid seller ID', 'INVALID_ID')\n    }\n\n    const [ratingStats, orderStats] = await Promise.all([\n      Product.aggregate([\n        {\n          $match: {\n            sellerId: new mongoose.Types.ObjectId(sellerId),\n          },\n        },\n        {\n          $group: {\n            _id: null,\n            avgRating: { $avg: '$metrics.rating' },\n          },\n        },\n      ]),\n      Order.aggregate([\n        {\n          $match: {\n            sellerId: new mongoose.Types.ObjectId(sellerId),\n            status: { $in: ['completed', 'returned'] },\n          },\n        },\n        {\n          $group: {\n            _id: null,\n            totalOrders: { $sum: 1 },\n            returnedOrders: {\n              $sum: { $cond: [{ $eq: ['$status', 'returned'] }, 1, 0] },\n            },\n            totalResponseTime: { $avg: '$metrics.responseTime' },\n            fulfillmentTime: { $avg: '$metrics.fulfillmentTime' },\n          },\n        },\n      ]),\n    ])\n\n    const rating = ratingStats[0]?.avgRating || 0\n    const orders = orderStats[0] || {\n      totalOrders: 0,\n      returnedOrders: 0,\n      totalResponseTime: 0,\n      fulfillmentTime: 0,\n    }\n\n    const returnRate =\n      orders.totalOrders > 0\n        ? round2((orders.returnedOrders / orders.totalOrders) * 100)\n        : 0\n\n    const fulfillmentRate =\n      orders.totalOrders > 0\n        ? round2(((orders.totalOrders - orders.returnedOrders) / orders.totalOrders) * 100)\n        : 0\n\n    return {\n      rating: round2(rating),\n      responseTime: round2(orders.totalResponseTime || 0),\n      fulfillmentRate,\n      returnRate,\n      customerSatisfaction: round2(rating * 20),\n    }\n  } catch (error) {\n    console.error('Calculate performance stats error:', error)\n    throw new SellerError('Failed to calculate performance stats', 'CALCULATION_ERROR')\n  }\n}\n\nexport async function calculateAnalyticsStats(sellerId: string) {\n  try {\n    if (!isValidObjectId(sellerId)) {\n      throw new SellerError('Invalid seller ID', 'INVALID_ID')\n    }\n\n    const stats = await Order.aggregate([\n      {\n        $match: {\n          sellerId: new mongoose.Types.ObjectId(sellerId),\n        },\n      },\n      {\n        $group: {\n          _id: null,\n          totalOrders: { $sum: 1 },\n          uniqueCustomers: { $addToSet: '$userId' },\n          abandonedCarts: {\n            $sum: { $cond: [{ $eq: ['$status', 'abandoned'] }, 1, 0] },\n          },\n          repeatCustomers: {\n            $sum: {\n              $cond: [{ $gt: [{ $size: { $ifNull: ['$previousOrders', []] } }, 0] }, 1, 0],\n            },\n          },\n          totalVisitors: { $sum: { $ifNull: ['$metrics.pageViews', 0] } },\n        },\n      },\n    ])\n\n    const data = stats[0] || {\n      totalOrders: 0,\n      uniqueCustomers: [],\n      abandonedCarts: 0,\n      repeatCustomers: 0,\n      totalVisitors: 0,\n    }\n\n    const visitorsCount = data.totalVisitors\n    const conversionRate =\n      visitorsCount > 0 ? round2((data.totalOrders / visitorsCount) * 100) : 0\n    const abandonedCartRate =\n      data.totalOrders > 0\n        ? round2((data.abandonedCarts / (data.totalOrders + data.abandonedCarts)) * 100)\n        : 0\n    const uniqueCustomersCount = data.uniqueCustomers.length\n    const repeatCustomerRate =\n      uniqueCustomersCount > 0\n        ? round2((data.repeatCustomers / uniqueCustomersCount) * 100)\n        : 0\n\n    return {\n      visitorsCount,\n      conversionRate,\n      abandonedCartRate,\n      repeatCustomerRate,\n    }\n  } catch (error) {\n    console.error('Calculate analytics stats error:', error)\n    throw new SellerError('Failed to calculate analytics stats', 'CALCULATION_ERROR')\n  }\n}\n\nexport async function calculatePointsStats(sellerId: string) {\n  try {\n    if (!isValidObjectId(sellerId)) {\n      throw new SellerError('Invalid seller ID', 'INVALID_ID')\n    }\n\n    const seller = await Seller.findById(sellerId).select('pointsBalance pointsTransactions')\n    if (!seller) {\n      throw new SellerError('Seller not found', 'NOT_FOUND')\n    }\n\n    const transactions = seller.pointsTransactions.slice(0, 10)\n    const totalEarned = seller.pointsTransactions.reduce((sum, tx) => {\n      return tx.type === 'earn' ? sum + tx.amount : sum\n    }, 0)\n    const totalRedeemed = seller.pointsTransactions.reduce((sum, tx) => {\n      return tx.type === 'redeem' ? sum + tx.amount : sum\n    }, 0)\n\n    return {\n      balance: seller.pointsBalance,\n      totalEarned,\n      totalRedeemed,\n      recentTransactions: transactions.map((tx) => ({\n        amount: tx.amount,\n        type: tx.type,\n        description: tx.description,\n        createdAt: tx.createdAt,\n      })),\n    }\n  } catch (error) {\n    console.error('Calculate points stats error:', error)\n    throw new SellerError('Failed to calculate points stats', 'CALCULATION_ERROR')\n  }\n}\n\nexport async function getSellerByUserId(userId: string, locale: string = 'en') {\n  let t;\n  try {\n    t = await getTranslations({ locale, namespace: 'api.errors' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n\n    if (!isValidObjectId(userId)) {\n      throw new SellerError(t('invalidSellerData'), 'INVALID_ID')\n    }\n\n    const seller = await Seller.findOne({ userId })\n      .select('-bankInfo.accountNumber')\n      .lean()\n\n    if (!seller) {\n      console.log('No seller found for userId:', userId)\n      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND')\n    }\n\n    if (seller.bankInfo && !seller.bankInfo.verified) {\n      console.warn(`Bank info for seller ${seller._id} needs verification`)\n    }\n\n    return {\n      success: true,\n      data: seller,\n    }\n  } catch (error) {\n    console.error('Get seller error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('failedToGetSeller'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function getSellerById(sellerId: string, locale: string = 'en') {\n  let t;\n  try {\n    t = await getTranslations({ locale, namespace: 'api.errors' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n\n    const seller = await Seller.findOne({\n      $or: [{ _id: isValidObjectId(sellerId) ? sellerId : null }, { businessName: sellerId }],\n    })\n      .select('-bankInfo.accountNumber')\n      .lean()\n\n    if (!seller) {\n      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND')\n    }\n\n    return {\n      success: true,\n      data: seller,\n    }\n  } catch (error) {\n    console.error('Get seller by ID error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('failedToGetSeller'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function getSellerByBusinessName(businessName: string, locale: string = 'en') {\n  let t;\n  try {\n    t = await getTranslations({ locale, namespace: 'api.errors' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n\n    const seller = await Seller.findOne({ businessName })\n      .select('-bankInfo.accountNumber')\n      .lean()\n\n    if (!seller) {\n      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND')\n    }\n\n    return {\n      success: true,\n      data: seller,\n    }\n  } catch (error) {\n    console.error('Get seller by business name error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('failedToGetSeller'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function createSeller(userId: string, data: SellerFormData, locale: string = 'en') {\n  let t\n  try {\n    t = await getTranslations({ locale, namespace: 'api' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n    const session = await mongoose.startSession()\n    session.startTransaction()\n\n    try {\n      if (!isValidObjectId(userId)) {\n        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID')\n      }\n\n      const user = await User.findById(userId).session(session)\n      if (!user) {\n        throw new SellerError(t('errors.userNotFound'), 'USER_NOT_FOUND')\n      }\n\n      const existingSeller = await Seller.findOne({\n        $or: [{ email: data.email }, { userId }, { customSiteUrl: data.customSiteUrl }],\n      }).session(session)\n\n      if (existingSeller) {\n        console.log('Duplicate seller found:', existingSeller)\n        throw new SellerError(t('messages.sellerExists'), 'DUPLICATE_SELLER')\n      }\n\n      if (!data.termsAccepted) {\n        throw new SellerError(t('errors.termsNotAccepted'), 'TERMS_NOT_ACCEPTED')\n      }\n\n      const customSiteUrl = data.customSiteUrl || (await generateCustomSiteUrl(data.businessName))\n\n      let logoUrl: string | undefined\n      if (data.logo && data.logo.size > 0) {\n        logoUrl = await uploadToS3(data.logo, `sellers/${userId}/logo`, {\n          contentType: data.logo.type,\n          maxSize: 5 * 1024 * 1024,\n          allowedTypes: ['image/jpeg', 'image/png', 'image/webp'],\n        })\n      }\n\n      const trialEndDate = new Date(Date.now() + 5 * 24 * 60 * 60 * 1000)\n      const seller = await Seller.create(\n        [\n          {\n            userId,\n            businessName: data.businessName,\n            email: data.email,\n            phone: data.phone,\n            description: data.description,\n            businessType: data.businessType,\n            vatRegistered: data.vatRegistered,\n            logo: logoUrl,\n            address: data.address,\n            taxId: data.taxId,\n            bankInfo: {\n              accountName: data.bankInfo.accountName,\n              accountNumber: data.bankInfo.accountNumber,\n              bankName: data.bankInfo.bankName,\n              swiftCode: data.bankInfo.swiftCode,\n              verified: false,\n            },\n            subscription: {\n              plan: 'Trial',\n              startDate: new Date(),\n              endDate: trialEndDate,\n              status: 'active',\n              features: {\n                productsLimit: 50,\n                commission: 7,\n                prioritySupport: false,\n                instantPayouts: false,\n              },\n            },\n            verification: {\n              status: 'pending',\n              documents: new Map(),\n              submittedAt: new Date(),\n            },\n            metrics: {\n              rating: 0,\n              totalSales: 0,\n              totalRevenue: 0,\n              productsCount: 0,\n              ordersCount: 0,\n              customersCount: 0,\n              views: 0,\n              followers: 0,\n              products: {\n                total: 0,\n                active: 0,\n                outOfStock: 0,\n              },\n            },\n            settings: {\n              notifications: {\n                email: true,\n                sms: false,\n                orderUpdates: true,\n                marketingEmails: false,\n                pointsNotifications: true,\n              },\n              display: {\n                showRating: true,\n                showContactInfo: true,\n                showMetrics: true,\n                showPointsBalance: true,\n              },\n              security: {\n                twoFactorAuth: false,\n                loginNotifications: true,\n              },\n              customSite: {\n                theme: 'default',\n                primaryColor: '#000000',\n              },\n            },\n            pointsBalance: 50,\n            pointsTransactions: [\n              {\n                amount: 50,\n                type: 'earn',\n                description: 'Welcome bonus for new seller registration',\n                createdAt: new Date(),\n              },\n            ],\n            freeTrialActive: true,\n            freeTrialEndDate: trialEndDate,\n            trialMonthsUsed: 0,\n            customSiteUrl,\n          },\n        ],\n        { session }\n      )\n\n      const updatedUser = await User.findByIdAndUpdate(\n        userId,\n        {\n          role: 'SELLER',\n          businessProfile: seller[0]._id,\n        },\n        { new: true, session }\n      )\n\n      if (!updatedUser) {\n        throw new SellerError(t('errors.failedToUpdateUserRole'), 'USER_UPDATE_FAILED')\n      }\n\n      await session.commitTransaction()\n      revalidatePath('/[locale]/seller/dashboard', 'page')\n      revalidatePath('/[locale]/account', 'page')\n\n      await Promise.all([\n        sendNotification({\n          userId,\n          type: 'welcome',\n          title: t('messages.welcomeTitle'),\n          message: t('messages.welcomeMessage'),\n          data: { sellerId: seller[0]._id },\n        }),\n        sendNotification({\n          userId,\n          type: 'points_earned',\n          title: t('messages.bonusPointsTitle'),\n          message: t('messages.bonusPointsMessage', { points: 50 }),\n          data: { points: 50, sellerId: seller[0]._id },\n        }),\n        sendNotification({\n          userId,\n          type: 'trial_reminder',\n          title: t('messages.trialActiveTitle'),\n          message: t('messages.trialActiveMessage', { trialDays: 5 }),\n          data: { sellerId: seller[0]._id, trialDays: 5 },\n        }),\n      ])\n\n      return {\n        success: true,\n        data: seller[0],\n        message: t('messages.success'),\n      }\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    console.error('Create seller error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('errors.registrationFailed'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function updateSeller(\n  userId: string,\n  data: Partial<SellerFormData>,\n  options = { revalidate: true },\n  locale: string = 'en'\n) {\n  let t\n  try {\n    t = await getTranslations({ locale, namespace: 'api.errors' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n    const session = await mongoose.startSession()\n    session.startTransaction()\n\n    try {\n      if (!isValidObjectId(userId)) {\n        throw new SellerError(t('invalidSellerData'), 'INVALID_ID')\n      }\n\n      const existingSeller = await Seller.findOne({ userId }).session(session)\n      if (!existingSeller) {\n        throw new SellerError(t('sellerNotFound'), 'NOT_FOUND')\n      }\n\n      let logoUrl = existingSeller.logo\n      if (data.logo && data.logo.size > 0) {\n        if (existingSeller.logo) {\n          await deleteFromS3(existingSeller.logo)\n        }\n        logoUrl = await uploadToS3(data.logo, `sellers/${userId}/logo`, {\n          contentType: data.logo.type,\n          maxSize: 5 * 1024 * 1024,\n          allowedTypes: ['image/jpeg', 'image/png', 'image/webp'],\n        })\n      }\n\n      if (data.customSiteUrl && data.customSiteUrl !== existingSeller.customSiteUrl) {\n        const urlExists = await Seller.exists({\n          customSiteUrl: data.customSiteUrl,\n          _id: { $ne: existingSeller._id },\n        })\n        if (urlExists) {\n          throw new SellerError(t('customSiteUrlExists'), 'DUPLICATE_URL')\n        }\n      }\n\n      const updateData: any = {\n        ...data,\n        logo: logoUrl,\n        updatedAt: new Date(),\n      }\n\n      delete updateData.termsAccepted\n\n      const seller = await Seller.findOneAndUpdate(\n        { userId },\n        { $set: updateData },\n        { new: true, session }\n      ).select('-bankInfo.accountNumber')\n\n      if (!seller) {\n        throw new SellerError(t('failedToUpdateSeller'), 'UPDATE_FAILED')\n      }\n\n      await session.commitTransaction()\n\n      if (options.revalidate) {\n        revalidatePath('/[locale]/seller/dashboard', 'page')\n        revalidatePath('/[locale]/account', 'page')\n      }\n\n      return {\n        success: true,\n        data: seller,\n      }\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    console.error('Update seller error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('failedToUpdateSeller'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function updateSellerSettings(\n  userId: string,\n  data: SettingsFormData,\n  bannerFile?: File,\n  locale: string = 'en'\n) {\n  let t\n  try {\n    t = await getTranslations({ locale, namespace: 'api' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n    const session = await mongoose.startSession()\n    session.startTransaction()\n\n    try {\n      if (!isValidObjectId(userId)) {\n        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID')\n      }\n\n      const seller = await Seller.findOne({ userId }).session(session)\n      if (!seller) {\n        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND')\n      }\n\n      // Check subscription status and plan\n      if (seller.subscription.status !== 'active') {\n        throw new SellerError(t('errors.inactiveSubscription'), 'INACTIVE_SUBSCRIPTION')\n      }\n\n      // Check custom sections limit\n      if (data.customSite?.customSections) {\n        const planConfig = subscriptionPlans.find((p) => p.name === seller.subscription.plan)\n        const limit = planConfig?.features.customSectionsLimit || 0\n        if (data.customSite.customSections.length > limit) {\n          throw new SellerError(\n            t('errors.customSectionsLimit', { limit }),\n            'CUSTOM_SECTIONS_LIMIT'\n          )\n        }\n      }\n\n      let bannerUrl = seller.settings.customSite?.bannerImage\n      if (bannerFile && bannerFile.size > 0) {\n        if (seller.settings.customSite?.bannerImage) {\n          await deleteFromS3(seller.settings.customSite.bannerImage)\n        }\n        bannerUrl = await uploadToS3(bannerFile, `sellers/${userId}/banner`, {\n          contentType: bannerFile.type,\n          maxSize: 5 * 1024 * 1024,\n          allowedTypes: ['image/jpeg', 'image/png', 'image/webp'],\n        })\n      }\n\n      if (data.customSiteUrl && data.customSiteUrl !== seller.customSiteUrl) {\n        const urlExists = await Seller.exists({\n          customSiteUrl: data.customSiteUrl,\n          _id: { $ne: seller._id },\n        })\n        if (urlExists) {\n          throw new SellerError(t('errors.customSiteUrlExists'), 'DUPLICATE_URL')\n        }\n        seller.customSiteUrl = data.customSiteUrl\n      }\n\n      seller.businessName = data.businessName || seller.businessName\n      seller.description = data.description || seller.description\n      seller.phone = data.phone || seller.phone\n      seller.address = data.address || seller.address\n      if (data.bankInfo) {\n        seller.bankInfo = {\n          ...seller.bankInfo,\n          ...data.bankInfo,\n          verified: false,\n        }\n      }\n      seller.settings = {\n        notifications: data.notifications,\n        display: data.display,\n        security: data.security,\n        customSite: {\n          theme: data.customSite.theme,\n          primaryColor: data.customSite.primaryColor,\n          bannerImage: bannerUrl,\n          customSections: data.customSite.customSections || [],\n        },\n      }\n\n      await seller.save({ session })\n      await session.commitTransaction()\n\n      revalidatePath('/[locale]/seller/dashboard/settings', 'page')\n      revalidatePath(`/[locale]/${seller.customSiteUrl}`, 'page')\n\n      await sendNotification({\n        userId,\n        type: 'settings_updated',\n        title: t('messages.settingsUpdatedTitle'),\n        message: t('messages.settingsUpdatedMessage'),\n        data: { sellerId: seller._id },\n      })\n\n      return {\n        success: true,\n        data: seller.settings,\n      }\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    console.error('Update seller settings error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('errors.failedToUpdateSettings'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function updateSellerSubscription(\n  userId: string,\n  plan: SubscriptionPlan,\n  pointsToRedeem: number = 0,\n  paymentMethod?: 'stripe' | 'paypal' | 'points',\n  paymentDetails?: { stripeSessionId?: string; paypalOrderId?: string },\n  locale: string = 'en'\n) {\n  let t;\n  try {\n    t = await getTranslations({ locale, namespace: 'api' });\n  } catch (error) {\n    console.error('Failed to load translations:', error);\n    t = (key: string) => key;\n  }\n\n  try {\n    await connectToDatabase();\n    const session = await mongoose.startSession();\n    session.startTransaction();\n\n    try {\n      if (!isValidObjectId(userId)) {\n        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID');\n      }\n\n      const seller = await Seller.findOne({ userId }).session(session);\n      if (!seller) {\n        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND');\n      }\n      if (!seller.bankInfo.verified) {\n        throw new SellerError(t('errors.bankInfoNotVerified'), 'BANK_NOT_VERIFIED');\n      }\n\n      const settings = await getSetting();\n      const validPlans: SubscriptionPlan[] = ['Trial', 'Basic', 'Pro', 'VIP'];\n      if (!validPlans.includes(plan)) {\n        throw new SellerError(t('errors.invalidPlan'), 'INVALID_PLAN');\n      }\n\n      const planConfig = subscriptionPlans.find((p) => p.name === plan);\n      if (!planConfig) {\n        throw new SellerError(t('errors.invalidPlanConfig'), 'INVALID_PLAN_CONFIG');\n      }\n\n      const isTrial = plan === 'Trial';\n      const durationDays = isTrial ? 90 : 30; // 3 months for Trial, 1 month for others\n      const endDate = new Date(Date.now() + durationDays * 24 * 60 * 60 * 1000);\n\n      if (isTrial && (seller.trialMonthsUsed || 0) >= 1) {\n        throw new SellerError(t('errors.trialExhausted'), 'TRIAL_EXHAUSTED');\n      }\n\n      let finalCost = planConfig.price;\n      let paymentId: string | undefined;\n\n      if (pointsToRedeem > 0) {\n        if (seller.pointsBalance < pointsToRedeem) {\n          throw new SellerError(t('errors.insufficientPoints'), 'INSUFFICIENT_POINTS');\n        }\n        const pointsValue = settings.points?.redeemValue || 0.05;\n        const discount = round2(pointsToRedeem * pointsValue);\n        if (discount > finalCost) {\n          throw new SellerError(t('errors.invalidRedemption'), 'INVALID_REDEMPTION');\n        }\n        finalCost -= discount;\n        seller.pointsBalance -= pointsToRedeem;\n        seller.pointsTransactions.push({\n          amount: pointsToRedeem,\n          type: 'redeem',\n          description: `Redeemed points for ${plan} subscription`,\n          createdAt: new Date(),\n        });\n      }\n\n      if (finalCost > 0) {\n        if (!paymentMethod || !paymentDetails) {\n          throw new SellerError(t('errors.invalidPayment'), 'INVALID_PAYMENT');\n        }\n        if (paymentMethod === 'stripe' && paymentDetails.stripeSessionId) {\n          const stripeSession = await stripe.checkout.sessions.retrieve(paymentDetails.stripeSessionId);\n          if (stripeSession.payment_status !== 'paid') {\n            console.error(`Stripe payment failed for session ${paymentDetails.stripeSessionId}: ${stripeSession.payment_status}`);\n            throw new SellerError(t('errors.paymentFailed'), 'PAYMENT_FAILED');\n          }\n          paymentId = stripeSession.payment_intent as string;\n        } else if (paymentMethod === 'paypal' && paymentDetails.paypalOrderId) {\n          const request = new paypal.orders.OrdersGetRequest(paymentDetails.paypalOrderId);\n          const order = await paypalClient.execute(request);\n          if (order.result.status !== 'COMPLETED') {\n            console.error(`PayPal payment failed for order ${paymentDetails.paypalOrderId}: ${order.result.status}`);\n            throw new SellerError(t('errors.paymentFailed'), 'PAYMENT_FAILED');\n          }\n          paymentId = paymentDetails.paypalOrderId;\n        } else if (paymentMethod !== 'points') {\n          throw new SellerError(t('errors.invalidPayment'), 'INVALID_PAYMENT');\n        }\n      }\n\n      seller.subscription = {\n        plan,\n        startDate: new Date(),\n        endDate,\n        status: 'active',\n        features: planConfig.features,\n        pointsRedeemed: pointsToRedeem,\n        paymentMethod,\n        paymentId,\n      };\n\n      if (isTrial) {\n        seller.trialMonthsUsed = (seller.trialMonthsUsed || 0) + 1;\n        seller.freeTrialActive = true;\n        seller.freeTrialEndDate = endDate;\n      } else {\n        seller.freeTrialActive = false;\n        seller.freeTrialEndDate = undefined;\n      }\n\n      await seller.save({ session });\n      await session.commitTransaction();\n\n      revalidatePath('/[locale]/seller/dashboard', 'page');\n      revalidatePath('/[locale]/account/subscriptions', 'page');\n\n      await Promise.all([\n        sendNotification({\n          userId,\n          type: 'subscription_updated',\n          title: t('messages.subscriptionUpdatedTitle'),\n          message: t('messages.subscriptionUpdatedMessage', { plan, points: pointsToRedeem }),\n          data: { sellerId: seller._id, plan },\n        }),\n        pointsToRedeem > 0 &&\n          sendNotification({\n            userId,\n            type: 'points_redeemed',\n            title: t('messages.pointsRedeemedTitle'),\n            message: t('messages.pointsRedeemedMessage', { points: pointsToRedeem, plan }),\n            data: { points: pointsToRedeem, sellerId: seller._id },\n          }),\n      ].filter(Boolean));\n\n      return {\n        success: true,\n        data: seller.subscription,\n      };\n    } catch (error) {\n      await session.abortTransaction();\n      throw error\n    } finally {\n      session.endSession();\n    }\n  } catch (error) {\n    console.error('Update subscription error:', error);\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('errors.failedToUpdateSubscription'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    };\n  }\n}\n\nexport async function awardSellerPoints(\n  userId: string,\n  amount: number,\n  description: string,\n  orderId?: string,\n  locale: string = 'en'\n) {\n  let t\n  try {\n    t = await getTranslations({ locale, namespace: 'api' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n    const session = await mongoose.startSession()\n    session.startTransaction()\n\n    try {\n      if (!isValidObjectId(userId)) {\n        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID')\n      }\n\n      if (amount <= 0) {\n        throw new SellerError(t('errors.invalidAmount'), 'INVALID_AMOUNT')\n      }\n\n      const seller = await Seller.findOne({ userId }).session(session)\n      if (!seller) {\n        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND')\n      }\n\n      await seller.addPoints(amount, description, orderId)\n      await session.commitTransaction()\n\n      revalidatePath('/[locale]/seller/dashboard', 'page')\n      revalidatePath('/[locale]/account', 'page')\n\n      await sendNotification({\n        userId,\n        type: 'points_earned',\n        title: t('messages.pointsEarnedTitle'),\n        message: t('messages.pointsEarnedMessage', { points: amount, description }),\n        data: { points: amount, sellerId: seller._id },\n      })\n\n      return {\n        success: true,\n        data: { pointsBalance: seller.pointsBalance },\n      }\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    console.error('Award points error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('errors.failedToAwardPoints'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function getSellerMetrics(userId: string, locale: string = 'en'): Promise<SellerMetrics> {\n  performance.mark(PERFORMANCE_MARKERS.START)\n  let t\n  try {\n    t = await getTranslations({ locale, namespace: 'api.errors' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n\n    if (!isValidObjectId(userId)) {\n      throw new SellerError(t('invalidSellerData'), 'INVALID_ID')\n    }\n\n    const seller = await Seller.findOne({ userId })\n      .select('-bankInfo.accountNumber')\n      .lean()\n\n    if (!seller) {\n      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND')\n    }\n\n    const now = new Date()\n    const dayStart = new Date(now.setHours(0, 0, 0, 0))\n    const weekStart = new Date(now.setDate(now.getDate() - 7))\n    const monthStart = new Date(now.getFullYear(), now.getMonth(), 1)\n    const yearStart = new Date(now.getFullYear(), 0, 1)\n\n    const [\n      dailyRevenue,\n      weeklyRevenue,\n      monthlyRevenue,\n      yearlyRevenue,\n      orderStats,\n      productStats,\n      performanceStats,\n      analyticsStats,\n      pointsStats,\n    ] = await Promise.all([\n      calculateRevenueHelper(seller._id, dayStart),\n      calculateRevenueHelper(seller._id, weekStart),\n      calculateRevenueHelper(seller._id, monthStart),\n      calculateRevenueHelper(seller._id, yearStart),\n      calculateOrderStats(seller._id),\n      calculateProductStats(seller._id),\n      calculatePerformanceStats(seller._id),\n      calculateAnalyticsStats(seller._id),\n      calculatePointsStats(seller._id),\n    ])\n\n    const trend = await calculateTrendHelper(dailyRevenue.total, weeklyRevenue.average)\n    const percentage = await calculateGrowthPercentageHelper(\n      monthlyRevenue.total,\n      monthlyRevenue.previous\n    )\n\n    const metrics: SellerMetrics = {\n      revenue: {\n        daily: round2(dailyRevenue.total),\n        weekly: round2(weeklyRevenue.total),\n        monthly: round2(monthlyRevenue.total),\n        yearly: round2(yearlyRevenue.total),\n        trend,\n        percentage: round2(percentage),\n      },\n      orders: orderStats,\n      products: productStats,\n      performance: performanceStats,\n      analytics: analyticsStats,\n      points: pointsStats,\n    }\n\n    performance.mark(PERFORMANCE_MARKERS.END)\n    performance.measure(\n      'getSellerMetrics Duration',\n      PERFORMANCE_MARKERS.START,\n      PERFORMANCE_MARKERS.END\n    )\n\n    return metrics\n  } catch (error) {\n    console.error('Get seller metrics error:', error)\n    throw new SellerError(\n      error instanceof SellerError ? error.message : t('failedToCalculateMetrics'),\n      error instanceof SellerError ? error.code : 'METRICS_ERROR'\n    )\n  }\n}\n\nexport const getCachedSellerMetrics = cache(async (userId: string, locale: string = 'en') => {\n  return getSellerMetrics(userId, locale)\n})\n\nexport async function getProducts(\n  userId: string,\n  filters: ProductFilters = {},\n  locale: string = 'en'\n) {\n  let t\n  try {\n    t = await getTranslations({ locale, namespace: 'api.errors' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n\n    if (!isValidObjectId(userId)) {\n      throw new SellerError(t('invalidSellerData'), 'INVALID_ID')\n    }\n\n    const seller = await Seller.findOne({ userId })\n    if (!seller) {\n      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND')\n    }\n\n    const query: any = { sellerId: seller._id }\n    if (filters.search) {\n      query.$or = [\n        { name: { $regex: filters.search, $options: 'i' } },\n        { description: { $regex: filters.search, $options: 'i' } },\n      ]\n    }\n    if (filters.status) {\n      query.status = filters.status\n    }\n    if (filters.category) {\n      query.category = filters.category\n    }\n\n    const sort: Record<string, 1 | -1> = {}\n    if (filters.sortBy) {\n      sort[filters.sortBy] = filters.sortOrder === 'desc' ? -1 : 1\n    } else {\n      sort.createdAt = -1\n    }\n\n    const page = Math.max(1, filters.page || 1)\n    const limit = Math.min(50, filters.limit || 10)\n    const skip = (page - 1) * limit\n\n    const [products, total] = await Promise.all([\n      Product.find(query)\n        .sort(sort)\n        .skip(skip)\n        .limit(limit)\n        .lean(),\n      Product.countDocuments(query),\n    ])\n\n    return {\n      success: true,\n      data: {\n        products,\n        pagination: {\n          page,\n          limit,\n          total,\n          pages: Math.ceil(total / limit),\n        },\n      },\n    }\n  } catch (error) {\n    console.error('Get products error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('failedToGetProducts'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function getSellerOrders(\n  userId: string,\n  filters: OrderFilters = {},\n  locale: string = 'en'\n) {\n  let t\n  try {\n    t = await getTranslations({ locale, namespace: 'api.errors' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n\n    if (!isValidObjectId(userId)) {\n      throw new SellerError(t('invalidSellerData'), 'INVALID_ID')\n    }\n\n    const seller = await Seller.findOne({ userId })\n    if (!seller) {\n      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND')\n    }\n\n    const query: any = { sellerId: seller._id }\n    if (filters.status) {\n      query.status = filters.status\n    }\n    if (filters.startDate || filters.endDate) {\n      query.createdAt = {}\n      if (filters.startDate) {\n        query.createdAt.$gte = filters.startDate\n      }\n      if (filters.endDate) {\n        query.createdAt.$lte = filters.endDate\n      }\n    }\n\n    const sort: Record<string, 1 | -1> = {}\n    if (filters.sortBy) {\n      sort[filters.sortBy] = -1\n    } else {\n      sort.createdAt = -1\n    }\n\n    const page = Math.max(1, filters.page || 1)\n    const limit = Math.min(50, filters.limit || 10)\n    const skip = (page - 1) * limit\n\n    const [orders, totalOrders] = await Promise.all([\n      Order.find(query)\n        .sort(sort)\n        .skip(skip)\n        .limit(limit)\n        .populate('userId', 'name email')\n        .lean(),\n      Order.countDocuments(query),\n    ])\n\n    return {\n      success: true,\n      data: {\n        orders,\n        currentPage: page,\n        totalPages: Math.ceil(totalOrders / limit),\n        totalOrders,\n      },\n    }\n  } catch (error) {\n    console.error('Get seller orders error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('failedToGetOrders'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function updateSellerMetrics(\n  sellerId: string,\n  data: {\n    productsCount?: number\n    lastProductCreated?: Date\n    action: string\n  },\n  locale: string = 'en'\n) {\n  let t\n  try {\n    t = await getTranslations({ locale, namespace: 'api.errors' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n    const session = await mongoose.startSession()\n    session.startTransaction()\n\n    try {\n      if (!isValidObjectId(sellerId)) {\n        throw new SellerError(t('invalidSellerData'), 'INVALID_ID')\n      }\n\n      const seller = await Seller.findById(sellerId).session(session)\n      if (!seller) {\n        throw new SellerError(t('sellerNotFound'), 'NOT_FOUND')\n      }\n\n      const updateData: any = {\n        updatedAt: new Date(),\n      }\n\n      if (typeof data.productsCount === 'number') {\n        updateData['metrics.productsCount'] = Math.max(0, data.productsCount)\n      }\n\n      if (data.action === 'product_created') {\n        updateData['metrics.lastProductCreated'] = data.lastProductCreated || new Date()\n        updateData['metrics.products.total'] = (seller.metrics.products?.total || 0) + 1\n        updateData['metrics.products.active'] = (seller.metrics.products?.active || 0) + 1\n      } else if (data.action === 'product_deleted') {\n        updateData['metrics.products.total'] = Math.max(\n          0,\n          (seller.metrics.products?.total || 0) - 1\n        )\n        updateData['metrics.products.active'] = Math.max(\n          0,\n          (seller.metrics.products?.active || 0) - 1\n        )\n      } else if (data.action === 'product_out_of_stock') {\n        updateData['metrics.products.active'] = Math.max(\n          0,\n          (seller.metrics.products?.active || 0) - 1\n        )\n        updateData['metrics.products.outOfStock'] = (seller.metrics.products?.outOfStock || 0) + 1\n      } else if (data.action === 'product_back_in_stock') {\n        updateData['metrics.products.active'] = (seller.metrics.products?.active || 0) + 1\n        updateData['metrics.products.outOfStock'] = Math.max(\n          0,\n          (seller.metrics.products?.outOfStock || 0) - 1\n        )\n      }\n\n      const updatedSeller = await Seller.findByIdAndUpdate(\n        sellerId,\n        { $set: updateData },\n        { new: true, session }\n      ).select('-bankInfo.accountNumber')\n\n      if (!updatedSeller) {\n        throw new SellerError(t('failedToUpdateMetrics'), 'UPDATE_FAILED')\n      }\n\n      await session.commitTransaction()\n\n      revalidatePath('/[locale]/seller/dashboard', 'page')\n      revalidatePath('/[locale]/seller/dashboard/products', 'page')\n      revalidatePath('/[locale]/admin/sellers', 'page')\n\n      return {\n        success: true,\n        data: updatedSeller,\n      }\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    console.error('Update seller metrics error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('failedToUpdateMetrics'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function uploadSellerDocument(\n  userId: string,\n  document: DocumentUpload,\n  locale: string = 'en'\n) {\n  let t\n  try {\n    t = await getTranslations({ locale, namespace: 'api' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n    const session = await mongoose.startSession()\n    session.startTransaction()\n\n    try {\n      if (!isValidObjectId(userId)) {\n        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID')\n      }\n\n      const seller = await Seller.findOne({ userId }).session(session)\n      if (!seller) {\n        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND')\n      }\n\n      if (!document.file || document.file.size === 0) {\n        throw new SellerError(t('errors.invalidFile'), 'INVALID_FILE')\n      }\n\n      const documentUrl = await uploadToS3(document.file, `sellers/${userId}/documents/${document.type}`, {\n        contentType: document.file.type,\n        maxSize: 10 * 1024 * 1024,\n        allowedTypes: ['image/jpeg', 'image/png', 'application/pdf'],\n      })\n\n      const verificationResult = await verifyDocument(documentUrl, document.type)\n\n      seller.verification.documents.set(document.type, {\n        url: documentUrl,\n        status: verificationResult.success ? 'verified' : 'pending',\n        uploadedAt: new Date(),\n        metadata: document.metadata,\n      })\n\n      if (verificationResult.success) {\n        seller.verification.status = 'verified'\n        seller.verification.lastUpdatedAt = new Date()\n      }\n\n      await seller.save({ session })\n      await session.commitTransaction()\n\n      revalidatePath('/[locale]/seller/dashboard/verification', 'page')\n\n      await sendNotification({\n        userId,\n        type: 'document_uploaded',\n        title: t('messages.documentUploadedTitle'),\n        message: t('messages.documentUploadedMessage', {\n          documentType: document.type,\n          status: verificationResult.success ? 'verified' : 'pending',\n        }),\n        data: { sellerId: seller._id, documentType: document.type },\n      })\n\n      return {\n        success: true,\n        data: seller.verification,\n      }\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    console.error('Upload document error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('errors.failedToUploadDocument'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function deleteSeller(userId: string, locale: string = 'en') {\n  let t\n  try {\n    t = await getTranslations({ locale, namespace: 'api' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n    const session = await mongoose.startSession()\n    session.startTransaction()\n\n    try {\n      if (!isValidObjectId(userId)) {\n        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID')\n      }\n\n      const serverSession = await auth()\n      if (!serverSession?.user || serverSession.user.role !== 'Admin') {\n        throw new SellerError(t('errors.unauthorized'), 'UNAUTHORIZED')\n      }\n\n      const seller = await Seller.findOne({ userId }).session(session)\n      if (!seller) {\n        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND')\n      }\n\n      await Promise.all([\n        Product.deleteMany({ sellerId: seller._id }).session(session),\n        Order.deleteMany({ sellerId: seller._id }).session(session),\n        seller.logo && deleteFromS3(seller.logo),\n        seller.settings.customSite?.bannerImage && deleteFromS3(seller.settings.customSite.bannerImage),\n        ...Array.from(seller.verification.documents.values()).map((doc: any) =>\n          doc.url && deleteFromS3(doc.url)\n        ),\n      ])\n\n      await Seller.deleteOne({ _id: seller._id }).session(session)\n\n      await User.findByIdAndUpdate(\n        userId,\n        {\n          role: 'USER',\n          businessProfile: null,\n        },\n        { session }\n      )\n\n      await session.commitTransaction()\n\n      revalidatePath('/[locale]/seller/dashboard', 'page')\n      revalidatePath('/[locale]/account', 'page')\n      revalidatePath('/[locale]/admin/sellers', 'page')\n\n      return {\n        success: true,\n        message: t('messages.sellerDeleted'),\n      }\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    console.error('Delete seller error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('errors.failedToDeleteSeller'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function suspendSeller(sellerId: string, reason: string, locale: string = 'en') {\n  let t\n  try {\n    t = await getTranslations({ locale, namespace: 'api' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n    const session = await mongoose.startSession()\n    session.startTransaction()\n\n    try {\n      if (!isValidObjectId(sellerId)) {\n        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID')\n      }\n\n      const serverSession = await auth()\n      if (!serverSession?.user || serverSession.user.role !== 'Admin') {\n        throw new SellerError(t('errors.unauthorized'), 'UNAUTHORIZED')\n      }\n\n      const seller = await Seller.findById(sellerId).session(session)\n      if (!seller) {\n        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND')\n      }\n\n      seller.subscription.status = 'suspended'\n      seller.updatedAt = new Date()\n\n      await seller.save({ session })\n      await session.commitTransaction()\n\n      revalidatePath('/[locale]/seller/dashboard', 'page')\n      revalidatePath('/[locale]/admin/sellers', 'page')\n\n      await sendNotification({\n        userId: seller.userId,\n        type: 'account_suspended',\n        title: t('messages.accountSuspendedTitle'),\n        message: t('messages.accountSuspendedMessage', { reason }),\n        data: { sellerId: seller._id, reason },\n      })\n\n      return {\n        success: true,\n        data: seller,\n      }\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    console.error('Suspend seller error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('errors.failedToSuspendSeller'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function getAllSellers(\n  {\n    page = 1,\n    limit = 10,\n    search,\n    status,\n    sortBy = 'createdAt',\n    sortOrder = 'desc',\n  }: {\n    page?: number\n    limit?: number\n    search?: string\n    status?: SubscriptionStatus\n    sortBy?: string\n    sortOrder?: 'asc' | 'desc'\n  },\n  locale: string = 'en'\n) {\n  let t\n  try {\n    t = await getTranslations({ locale, namespace: 'api.errors' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n\n    const serverSession = await auth()\n    if (!serverSession?.user || serverSession.user.role !== 'Admin') {\n      throw new SellerError(t('unauthorized'), 'UNAUTHORIZED')\n    }\n\n    const query: any = {}\n    if (search) {\n      query.$or = [\n        { businessName: { $regex: search, $options: 'i' } },\n        { email: { $regex: search, $options: 'i' } },\n        { phone: { $regex: search, $options: 'i' } },\n      ]\n    }\n    if (status) {\n      query['subscription.status'] = status\n    }\n\n    const sort: Record<string, 1 | -1> = {}\n    if (sortBy) {\n      sort[sortBy] = sortOrder === 'desc' ? -1 : 1\n    } else {\n      sort.createdAt = -1\n    }\n\n    const skip = (page - 1) * limit\n\n    const [sellers, total] = await Promise.all([\n      Seller.find(query)\n        .select('-bankInfo.accountNumber')\n        .sort(sort)\n        .skip(skip)\n        .limit(limit)\n        .lean(),\n      Seller.countDocuments(query),\n    ])\n\n    return {\n      success: true,\n      data: {\n        sellers,\n        pagination: {\n          page,\n          limit,\n          total,\n          pages: Math.ceil(total / limit),\n        },\n      },\n    }\n  } catch (error) {\n    console.error('Get all sellers error:', error)\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('failedToGetSellers'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    }\n  }\n}\n\nexport async function getSellers(\n  {\n    page = 1,\n    pageSize = 10,\n    search = '',\n  }: {\n    page?: number\n    pageSize?: number\n    search?: string\n  },\n  locale: string = 'en'\n) {\n  let t\n  try {\n    t = await getTranslations({ locale, namespace: 'api.errors' })\n  } catch (error) {\n    console.error('Failed to load translations:', error)\n    t = (key: string) => key\n  }\n\n  try {\n    await connectToDatabase()\n\n    const serverSession = await auth()\n    if (!serverSession?.user || serverSession.user.role !== 'Admin') {\n      throw new SellerError(t('unauthorized'), 'UNAUTHORIZED')\n    }\n\n    const query: any = {}\n    if (search) {\n      query.$or = [\n        { businessName: { $regex: search, $options: 'i' } },\n        { email: { $regex: search, $options: 'i' } },\n        { phone: { $regex: search, $options: 'i' } },\n      ]\n    }\n\n    const sort: Record<string, 1 | -1> = { createdAt: -1 }\n    const skip = (page - 1) * pageSize\n\n    const [sellers, total] = await Promise.all([\n      Seller.find(query)\n        .select('-bankInfo.accountNumber')\n        .sort(sort)\n        .skip(skip)\n        .limit(pageSize)\n        .lean(),\n      Seller.countDocuments(query),\n    ])\n\n    return {\n      sellers,\n      total,\n    }\n  } catch (error) {\n    console.error('Get sellers error:', error)\n    throw new SellerError(\n      error instanceof SellerError ? error.message : t('failedToGetSellers'),\n      error instanceof SellerError ? error.code : 'UNKNOWN'\n    )\n  }\n}\n\n// New API Key Actions\n\nexport async function createSellerApiKey(\n  userId: string,\n  name: string,\n  permissions: string[],\n  expiresAt?: Date,\n  locale: string = 'en'\n) {\n  let t;\n  try {\n    t = await getTranslations({ locale, namespace: 'api' });\n  } catch (error) {\n    console.error('Failed to load translations:', error);\n    t = (key: string) => key;\n  }\n\n  try {\n    await connectToDatabase();\n    const session = await mongoose.startSession();\n    session.startTransaction();\n\n    try {\n      if (!isValidObjectId(userId)) {\n        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID');\n      }\n\n      const seller = await Seller.findOne({ userId }).session(session);\n      if (!seller) {\n        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND');\n      }\n\n      const planConfig = subscriptionPlans.find((p) => p.name === seller.subscription.plan);\n      const maxKeys = planConfig?.features.maxApiKeys || 1;\n      const keyCount = await ApiKey.countDocuments({ sellerId: seller._id });\n\n      if (keyCount >= maxKeys) {\n        throw new SellerError(t('errors.apiKeyLimitExceeded', { limit: maxKeys }), 'API_KEY_LIMIT');\n      }\n\n      const serverSession = await auth();\n      const currentUser = serverSession?.user?.id || 'system';\n\n      const apiKey = await ApiKeyService.createApiKey(\n        {\n          name,\n          permissions,\n          expiresAt,\n          sellerId: seller._id,\n        },\n        { createdBy: currentUser, updatedBy: currentUser }\n      );\n\n      seller.apiKeys.push(apiKey._id);\n      await seller.save({ session });\n\n      await session.commitTransaction();\n\n      revalidatePath('/[locale]/seller/dashboard/settings/security', 'page');\n\n      await sendNotification({\n        userId,\n        type: 'api_key_created',\n        title: t('messages.apiKeyCreatedTitle'),\n        message: t('messages.apiKeyCreatedMessage', { name }),\n        data: { sellerId: seller._id, apiKeyId: apiKey._id },\n      });\n\n      return {\n        success: true,\n        data: apiKey,\n      };\n    } catch (error) {\n      await session.abortTransaction();\n      throw error;\n    } finally {\n      session.endSession();\n    }\n  } catch (error) {\n    console.error('Create API key error:', error);\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('errors.apiKeyCreationFailed'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    };\n  }\n}\n\n\nexport async function getSellerApiKeys(userId: string, locale: string = 'en') {\n  let t;\n  try {\n    t = await getTranslations({ locale, namespace: 'api.errors' });\n  } catch (error) {\n    console.error('Failed to load translations:', error);\n    t = (key: string) => key;\n  }\n\n  try {\n    await connectToDatabase();\n\n    if (!isValidObjectId(userId)) {\n      throw new SellerError(t('invalidSellerData'), 'INVALID_ID');\n    }\n\n    const seller = await Seller.findOne({ userId });\n    if (!seller) {\n      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND');\n    }\n\n    const apiKeys = await ApiKey.find({ sellerId: seller._id }).select(\n      '_id name permissions isActive expiresAt lastUsed createdAt'\n    );\n\n    return {\n      success: true,\n      data: apiKeys,\n    };\n  } catch (error) {\n    console.error('Get API keys error:', error);\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('failedToGetApiKeys'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    };\n  }\n}\n\n\n\nexport async function rotateSellerApiKey(\n  userId: string,\n  apiKeyId: string,\n  locale: string = 'en'\n) {\n  let t;\n  try {\n    t = await getTranslations({ locale, namespace: 'api' });\n  } catch (error) {\n    console.error('Failed to load translations:', error);\n    t = (key: string) => key;\n  }\n\n  try {\n    await connectToDatabase();\n    const session = await mongoose.startSession();\n    session.startTransaction();\n\n    try {\n      if (!isValidObjectId(userId) || !isValidObjectId(apiKeyId)) {\n        throw new SellerError(t('errors.invalidData'), 'INVALID_ID');\n      }\n\n      const seller = await Seller.findOne({ userId }).session(session);\n      if (!seller) {\n        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND');\n      }\n\n      const apiKey = await ApiKey.findOne({ _id: apiKeyId, sellerId: seller._id });\n      if (!apiKey) {\n        throw new SellerError(t('errors.apiKeyNotFound'), 'API_KEY_NOT_FOUND');\n      }\n\n      const serverSession = await auth();\n      const currentUser = serverSession?.user?.id || 'system';\n\n      const rotatedApiKey = await ApiKeyService.rotateApiKey(apiKeyId, {\n        updatedBy: currentUser,\n      });\n\n      await session.commitTransaction();\n\n      revalidatePath('/[locale]/seller/dashboard/settings/security', 'page');\n\n      await sendNotification({\n        userId,\n        type: 'api_key_rotated',\n        title: t('messages.apiKeyRotatedTitle'),\n        message: t('messages.apiKeyRotatedMessage', { name: rotatedApiKey.name }),\n        data: { sellerId: seller._id, apiKeyId: rotatedApiKey._id },\n      });\n\n      return {\n        success: true,\n        data: rotatedApiKey,\n      };\n    } catch (error) {\n      await session.abortTransaction();\n      throw error;\n    } finally {\n      session.endSession();\n    }\n  } catch (error) {\n    console.error('Rotate API key error:', error);\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('errors.apiKeyRotationFailed'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    };\n  }\n}\n\n\nexport async function deactivateSellerApiKey(\n  userId: string,\n  apiKeyId: string,\n  locale: string = 'en'\n) {\n  let t;\n  try {\n    t = await getTranslations({ locale, namespace: 'api' });\n  } catch (error) {\n    console.error('Failed to load translations:', error);\n    t = (key: string) => key;\n  }\n\n  try {\n    await connectToDatabase();\n    const session = await mongoose.startSession();\n    session.startTransaction();\n\n    try {\n      if (!isValidObjectId(userId) || !isValidObjectId(apiKeyId)) {\n        throw new SellerError(t('errors.invalidData'), 'INVALID_ID');\n      }\n\n      const seller = await Seller.findOne({ userId }).session(session);\n      if (!seller) {\n        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND');\n      }\n\n      const apiKey = await ApiKey.findOne({ _id: apiKeyId, sellerId: seller._id });\n      if (!apiKey) {\n        throw new SellerError(t('errors.apiKeyNotFound'), 'API_KEY_NOT_FOUND');\n      }\n\n      const serverSession = await auth();\n      const currentUser = serverSession?.user?.id || 'system';\n\n      await ApiKeyService.deactivateApiKey(apiKeyId, { updatedBy: currentUser });\n\n      await session.commitTransaction();\n\n      revalidatePath('/[locale]/seller/dashboard/settings/security', 'page');\n\n      await sendNotification({\n        userId,\n        type: 'api_key_deactivated',\n        title: t('messages.apiKeyDeactivatedTitle'),\n        message: t('messages.apiKeyDeactivatedMessage', { name: apiKey.name }),\n        data: { sellerId: seller._id, apiKeyId },\n      });\n\n      return {\n        success: true,\n        message: t('messages.apiKeyDeactivated'),\n      };\n    } catch (error) {\n      await session.abortTransaction();\n      throw error;\n    } finally {\n      session.endSession();\n    }\n  } catch (error) {\n    console.error('Deactivate API key error:', error);\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('errors.apiKeyDeactivationFailed'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    };\n  }\n}\nexport async function getSellerByCustomSiteUrl(customSiteUrl: string, locale: string = 'en') {\n  let t;\n  try {\n    t = await getTranslations({ locale, namespace: 'seller.errors' });\n  } catch (error) {\n    console.error('Failed to load translations:', error);\n    t = (key: string) => key;\n  }\n\n  try {\n    await connectToDatabase();\n    const seller = await Seller.findOne({ customSiteUrl })\n      .select('-bankInfo.accountNumber')\n      .lean();\n    if (!seller) {\n      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND');\n    }\n\n    return {\n      success: true,\n      data: seller,\n    };\n  } catch (error) {\n    console.error('Get seller by custom site URL error:', error);\n    return {\n      success: false,\n      error: error instanceof SellerError ? error.message : t('failedToGetSeller'),\n      code: error instanceof SellerError ? error.code : 'UNKNOWN',\n    };\n  }\n}"],
      names: ["awardSellerPoints", "calculateAnalyticsStats", "calculateGrowthPercentageHelper", "calculateOrderStats", "calculatePerformanceStats", "calculatePointsStats", "calculateProductStats", "calculateRevenueHelper", "calculateTrendHelper", "createSeller", "createSellerApiKey", "deactivateSellerApiKey", "deleteSeller", "getAllSellers", "getCachedSellerMetrics", "getProducts", "getSellerApiKeys", "getSellerByBusinessName", "getSellerByCustomSiteUrl", "getSellerById", "getSellerByUserId", "getSellerMetrics", "getSellerOrders", "getSellers", "rotateSellerApiKey", "suspendSeller", "updateSeller", "updateSellerMetrics", "updateSellerSettings", "updateSellerSubscription", "uploadSellerDocument", "stripe", "Stripe", "process", "env", "STRIPE_SECRET_KEY", "apiVersion", "paypalClient", "paypal", "core", "PayPalHttpClient", "SandboxEnvironment", "PAYPAL_CLIENT_ID", "PAYPAL_CLIENT_SECRET", "SellerError", "Error", "constructor", "message", "code", "name", "PERFORMANCE_MARKERS", "START", "END", "isValidObjectId", "id", "mongoose", "Types", "ObjectId", "isValid", "generateCustomSiteUrl", "businessName", "baseUrl", "toLowerCase", "replace", "slice", "customSiteUrl", "counter", "Seller", "exists", "sellerId", "startDate", "orders", "Order", "aggregate", "$match", "status", "createdAt", "$gte", "$group", "_id", "total", "$sum", "count", "average", "$avg", "previous", "$cond", "$lt", "error", "console", "current", "difference", "threshold", "round2", "stats", "pending", "$eq", "completed", "cancelled", "totalValue", "result", "avgOrderValue", "basicStats", "topSelling", "Promise", "all", "Product", "active", "$and", "$gt", "outOfStock", "$sort", "$limit", "$project", "sales", "ratingStats", "orderStats", "avgRating", "$in", "totalOrders", "returnedOrders", "totalResponseTime", "fulfillmentTime", "rating", "returnRate", "fulfillmentRate", "responseTime", "customerSatisfaction", "uniqueCustomers", "$addToSet", "abandonedCarts", "repeatCustomers", "$size", "$ifNull", "totalVisitors", "data", "visitorsCount", "conversionRate", "abandonedCartRate", "uniqueCustomersCount", "length", "repeatCustomerRate", "seller", "findById", "select", "transactions", "pointsTransactions", "totalEarned", "reduce", "sum", "tx", "type", "amount", "totalRedeemed", "balance", "pointsBalance", "recentTransactions", "map", "description", "userId", "locale", "t", "getTranslations", "namespace", "key", "connectToDatabase", "findOne", "lean", "log", "bankInfo", "verified", "warn", "success", "$or", "session", "startSession", "startTransaction", "user", "User", "existingSeller", "email", "termsAccepted", "logoUrl", "logo", "size", "uploadToS3", "contentType", "maxSize", "allowedTypes", "trialEndDate", "Date", "now", "create", "phone", "businessType", "vatRegistered", "address", "taxId", "accountName", "accountNumber", "bankName", "swiftCode", "subscription", "plan", "endDate", "features", "productsLimit", "commission", "prioritySupport", "instantPayouts", "verification", "documents", "Map", "submittedAt", "metrics", "totalSales", "totalRevenue", "productsCount", "ordersCount", "customersCount", "views", "followers", "products", "settings", "notifications", "sms", "orderUpdates", "marketingEmails", "pointsNotifications", "display", "showRating", "showContactInfo", "showMetrics", "showPointsBalance", "security", "twoFactorAuth", "loginNotifications", "customSite", "theme", "primaryColor", "freeTrialActive", "freeTrialEndDate", "trialMonthsUsed", "updatedUser", "findByIdAndUpdate", "role", "businessProfile", "new", "commitTransaction", "revalidatePath", "sendNotification", "title", "points", "trialDays", "abortTransaction", "endSession", "options", "revalidate", "deleteFromS3", "urlExists", "$ne", "updateData", "updatedAt", "findOneAndUpdate", "$set", "bannerFile", "customSections", "planConfig", "subscriptionPlans", "find", "p", "limit", "customSectionsLimit", "bannerUrl", "bannerImage", "save", "pointsToRedeem", "paymentMethod", "paymentDetails", "getSetting", "validPlans", "includes", "isTrial", "durationDays", "finalCost", "price", "paymentId", "pointsValue", "redeemValue", "discount", "push", "stripeSessionId", "stripeSession", "checkout", "sessions", "retrieve", "payment_status", "payment_intent", "paypalOrderId", "request", "OrdersGetRequest", "order", "execute", "pointsRedeemed", "undefined", "filter", "Boolean", "orderId", "addPoints", "performance", "mark", "dayStart", "setHours", "weekStart", "setDate", "getDate", "monthStart", "getFullYear", "getMonth", "yearStart", "dailyRevenue", "weeklyRevenue", "monthlyRevenue", "yearlyRevenue", "productStats", "performanceStats", "analyticsStats", "pointsStats", "trend", "percentage", "revenue", "daily", "weekly", "monthly", "yearly", "analytics", "measure", "cache", "filters", "query", "search", "$regex", "$options", "category", "sort", "sortBy", "sortOrder", "page", "Math", "max", "min", "skip", "countDocuments", "pagination", "pages", "ceil", "$lte", "populate", "currentPage", "totalPages", "action", "lastProductCreated", "updatedSeller", "document", "file", "documentUrl", "verificationResult", "verifyDocument", "set", "url", "uploadedAt", "metadata", "lastUpdatedAt", "documentType", "serverSession", "auth", "deleteMany", "Array", "from", "values", "doc", "deleteOne", "reason", "sellers", "pageSize", "permissions", "expiresAt", "maxKeys", "maxApiKeys", "keyCount", "ApiKey", "currentUser", "apiKey", "ApiKeyService", "createApiKey", "createdBy", "updatedBy", "apiKeys", "apiKeyId", "rotatedApiKey", "rotateApiKey", "deactivateApiKey"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "514af79493b9f37511c1d54d08e38e56ade95460"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_15fuuzsb0u = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_15fuuzsb0u();
cov_15fuuzsb0u().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[0]++;
  cov_15fuuzsb0u().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_15fuuzsb0u().s[3]++;
_export(exports, {
  awardSellerPoints: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[1]++;
    cov_15fuuzsb0u().s[4]++;
    return awardSellerPoints;
  },
  calculateAnalyticsStats: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[2]++;
    cov_15fuuzsb0u().s[5]++;
    return calculateAnalyticsStats;
  },
  calculateGrowthPercentageHelper: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[3]++;
    cov_15fuuzsb0u().s[6]++;
    return calculateGrowthPercentageHelper;
  },
  calculateOrderStats: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[4]++;
    cov_15fuuzsb0u().s[7]++;
    return calculateOrderStats;
  },
  calculatePerformanceStats: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[5]++;
    cov_15fuuzsb0u().s[8]++;
    return calculatePerformanceStats;
  },
  calculatePointsStats: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[6]++;
    cov_15fuuzsb0u().s[9]++;
    return calculatePointsStats;
  },
  calculateProductStats: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[7]++;
    cov_15fuuzsb0u().s[10]++;
    return calculateProductStats;
  },
  calculateRevenueHelper: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[8]++;
    cov_15fuuzsb0u().s[11]++;
    return calculateRevenueHelper;
  },
  calculateTrendHelper: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[9]++;
    cov_15fuuzsb0u().s[12]++;
    return calculateTrendHelper;
  },
  createSeller: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[10]++;
    cov_15fuuzsb0u().s[13]++;
    return createSeller;
  },
  createSellerApiKey: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[11]++;
    cov_15fuuzsb0u().s[14]++;
    return createSellerApiKey;
  },
  deactivateSellerApiKey: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[12]++;
    cov_15fuuzsb0u().s[15]++;
    return deactivateSellerApiKey;
  },
  deleteSeller: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[13]++;
    cov_15fuuzsb0u().s[16]++;
    return deleteSeller;
  },
  getAllSellers: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[14]++;
    cov_15fuuzsb0u().s[17]++;
    return getAllSellers;
  },
  getCachedSellerMetrics: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[15]++;
    cov_15fuuzsb0u().s[18]++;
    return getCachedSellerMetrics;
  },
  getProducts: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[16]++;
    cov_15fuuzsb0u().s[19]++;
    return getProducts;
  },
  getSellerApiKeys: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[17]++;
    cov_15fuuzsb0u().s[20]++;
    return getSellerApiKeys;
  },
  getSellerByBusinessName: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[18]++;
    cov_15fuuzsb0u().s[21]++;
    return getSellerByBusinessName;
  },
  getSellerByCustomSiteUrl: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[19]++;
    cov_15fuuzsb0u().s[22]++;
    return getSellerByCustomSiteUrl;
  },
  getSellerById: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[20]++;
    cov_15fuuzsb0u().s[23]++;
    return getSellerById;
  },
  getSellerByUserId: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[21]++;
    cov_15fuuzsb0u().s[24]++;
    return getSellerByUserId;
  },
  getSellerMetrics: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[22]++;
    cov_15fuuzsb0u().s[25]++;
    return getSellerMetrics;
  },
  getSellerOrders: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[23]++;
    cov_15fuuzsb0u().s[26]++;
    return getSellerOrders;
  },
  getSellers: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[24]++;
    cov_15fuuzsb0u().s[27]++;
    return getSellers;
  },
  rotateSellerApiKey: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[25]++;
    cov_15fuuzsb0u().s[28]++;
    return rotateSellerApiKey;
  },
  suspendSeller: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[26]++;
    cov_15fuuzsb0u().s[29]++;
    return suspendSeller;
  },
  updateSeller: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[27]++;
    cov_15fuuzsb0u().s[30]++;
    return updateSeller;
  },
  updateSellerMetrics: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[28]++;
    cov_15fuuzsb0u().s[31]++;
    return updateSellerMetrics;
  },
  updateSellerSettings: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[29]++;
    cov_15fuuzsb0u().s[32]++;
    return updateSellerSettings;
  },
  updateSellerSubscription: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[30]++;
    cov_15fuuzsb0u().s[33]++;
    return updateSellerSubscription;
  },
  uploadSellerDocument: function () {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[31]++;
    cov_15fuuzsb0u().s[34]++;
    return uploadSellerDocument;
  }
});
const _db =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[35]++, require("../db"));
const _sellermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_15fuuzsb0u().s[36]++, _interop_require_default(require("../db/models/seller.model")));
const _usermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_15fuuzsb0u().s[37]++, _interop_require_default(require("../db/models/user.model")));
const _ordermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_15fuuzsb0u().s[38]++, _interop_require_default(require("../db/models/order.model")));
const _productmodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_15fuuzsb0u().s[39]++, _interop_require_default(require("../db/models/product.model")));
const _mongoose =
/* istanbul ignore next */
(/*#__PURE__*/cov_15fuuzsb0u().s[40]++, _interop_require_default(require("mongoose")));
const _cache =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[41]++, require("next/cache"));
const _s3 =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[42]++, require("../utils/s3"));
const _notification =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[43]++, require("../utils/notification"));
const _verification =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[44]++, require("../utils/verification"));
const _react =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[45]++, require("react"));
const _settingactions =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[46]++, require("./setting.actions"));
const _utils =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[47]++, require("../utils"));
const _stripe =
/* istanbul ignore next */
(/*#__PURE__*/cov_15fuuzsb0u().s[48]++, _interop_require_default(require("stripe")));
const _auth =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[49]++, require("../../auth"));
const _server =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[50]++, require("next-intl/server"));
const _checkoutserversdk =
/* istanbul ignore next */
(/*#__PURE__*/cov_15fuuzsb0u().s[51]++, _interop_require_default(require("@paypal/checkout-server-sdk")));
const _constants =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[52]++, require("../constants"));
const _apikeyservice =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[53]++, require("../api/services/api-key.service"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[32]++;
  cov_15fuuzsb0u().s[54]++;
  return /* istanbul ignore next */(cov_15fuuzsb0u().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_15fuuzsb0u().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_15fuuzsb0u().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_15fuuzsb0u().b[0][1]++, {
    default: obj
  });
}
const stripe =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[55]++, new _stripe.default(process.env.STRIPE_SECRET_KEY, {
  apiVersion: '2023-10-16'
}));
const paypalClient =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[56]++, new _checkoutserversdk.default.core.PayPalHttpClient(new _checkoutserversdk.default.core.SandboxEnvironment(
/* istanbul ignore next */
(cov_15fuuzsb0u().b[2][0]++, process.env.PAYPAL_CLIENT_ID) ||
/* istanbul ignore next */
(cov_15fuuzsb0u().b[2][1]++, ''),
/* istanbul ignore next */
(cov_15fuuzsb0u().b[3][0]++, process.env.PAYPAL_CLIENT_SECRET) ||
/* istanbul ignore next */
(cov_15fuuzsb0u().b[3][1]++, ''))));
class SellerError extends Error {
  constructor(message, code) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().f[33]++;
    cov_15fuuzsb0u().s[57]++;
    super(message), this.code = code;
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[58]++;
    this.name = 'SellerError';
  }
}
const PERFORMANCE_MARKERS =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[59]++, {
  START: 'seller-metrics-start',
  END: 'seller-metrics-end'
});
function isValidObjectId(id) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[34]++;
  cov_15fuuzsb0u().s[60]++;
  return _mongoose.default.Types.ObjectId.isValid(id);
}
async function generateCustomSiteUrl(businessName) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[35]++;
  const baseUrl =
  /* istanbul ignore next */
  (cov_15fuuzsb0u().s[61]++, businessName.toLowerCase().replace(/[^a-z0-9]/g, '-').replace(/-+/g, '-').slice(0, 50));
  let customSiteUrl =
  /* istanbul ignore next */
  (cov_15fuuzsb0u().s[62]++, baseUrl);
  let counter =
  /* istanbul ignore next */
  (cov_15fuuzsb0u().s[63]++, 1);
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[64]++;
  while (await _sellermodel.default.exists({
    customSiteUrl
  })) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[65]++;
    customSiteUrl = `${baseUrl}-${counter}`;
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[66]++;
    counter++;
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[67]++;
  return customSiteUrl;
}
async function calculateRevenueHelper(sellerId, startDate) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[36]++;
  cov_15fuuzsb0u().s[68]++;
  if (!isValidObjectId(sellerId)) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().b[4][0]++;
    cov_15fuuzsb0u().s[69]++;
    throw new SellerError('Invalid seller ID', 'INVALID_ID');
  } else
  /* istanbul ignore next */
  {
    cov_15fuuzsb0u().b[4][1]++;
  }
  cov_15fuuzsb0u().s[70]++;
  try {
    const orders =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[71]++, await _ordermodel.default.aggregate([{
      $match: {
        sellerId: new _mongoose.default.Types.ObjectId(sellerId),
        status: 'completed',
        createdAt: {
          $gte: startDate
        }
      }
    }, {
      $group: {
        _id: null,
        total: {
          $sum: '$total'
        },
        count: {
          $sum: 1
        },
        average: {
          $avg: '$total'
        },
        previous: {
          $sum: {
            $cond: [{
              $lt: ['$createdAt', startDate]
            }, '$total', 0]
          }
        }
      }
    }]));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[72]++;
    return {
      total:
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[5][0]++, orders[0]?.total) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[5][1]++, 0),
      count:
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[6][0]++, orders[0]?.count) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[6][1]++, 0),
      average:
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[7][0]++, orders[0]?.average) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[7][1]++, 0),
      previous:
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[8][0]++, orders[0]?.previous) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[8][1]++, 0)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[73]++;
    console.error('Calculate revenue error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[74]++;
    throw new SellerError('Failed to calculate revenue', 'CALCULATION_ERROR');
  }
}
async function calculateTrendHelper(current, average) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[37]++;
  cov_15fuuzsb0u().s[75]++;
  try {
    const difference =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[76]++, current - average);
    const threshold =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[77]++, average * 0.05);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[78]++;
    if (difference > threshold) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[9][0]++;
      cov_15fuuzsb0u().s[79]++;
      return 'up';
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[9][1]++;
    }
    cov_15fuuzsb0u().s[80]++;
    if (difference < -threshold) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[10][0]++;
      cov_15fuuzsb0u().s[81]++;
      return 'down';
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[10][1]++;
    }
    cov_15fuuzsb0u().s[82]++;
    return 'stable';
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[83]++;
    console.error('Calculate trend error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[84]++;
    return 'stable';
  }
}
async function calculateGrowthPercentageHelper(current, previous) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[38]++;
  cov_15fuuzsb0u().s[85]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[86]++;
    if (previous === 0) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[11][0]++;
      cov_15fuuzsb0u().s[87]++;
      return current > 0 ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[12][0]++, 100) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[12][1]++, 0);
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[11][1]++;
    }
    cov_15fuuzsb0u().s[88]++;
    return (0, _utils.round2)((current - previous) / previous * 100);
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[89]++;
    console.error('Calculate growth percentage error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[90]++;
    return 0;
  }
}
async function calculateOrderStats(sellerId) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[39]++;
  cov_15fuuzsb0u().s[91]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[92]++;
    if (!isValidObjectId(sellerId)) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[13][0]++;
      cov_15fuuzsb0u().s[93]++;
      throw new SellerError('Invalid seller ID', 'INVALID_ID');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[13][1]++;
    }
    const stats =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[94]++, await _ordermodel.default.aggregate([{
      $match: {
        sellerId: new _mongoose.default.Types.ObjectId(sellerId)
      }
    }, {
      $group: {
        _id: null,
        pending: {
          $sum: {
            $cond: [{
              $eq: ['$status', 'pending']
            }, 1, 0]
          }
        },
        completed: {
          $sum: {
            $cond: [{
              $eq: ['$status', 'completed']
            }, 1, 0]
          }
        },
        cancelled: {
          $sum: {
            $cond: [{
              $eq: ['$status', 'cancelled']
            }, 1, 0]
          }
        },
        total: {
          $sum: 1
        },
        totalValue: {
          $sum: '$total'
        }
      }
    }]));
    const result =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[95]++,
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[14][0]++, stats[0]) ||
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[14][1]++, {
      pending: 0,
      completed: 0,
      cancelled: 0,
      total: 0,
      totalValue: 0
    }));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[96]++;
    return {
      pending: result.pending,
      completed: result.completed,
      cancelled: result.cancelled,
      total: result.total,
      avgOrderValue: result.total > 0 ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[15][0]++, (0, _utils.round2)(result.totalValue / result.total)) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[15][1]++, 0)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[97]++;
    console.error('Calculate order stats error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[98]++;
    throw new SellerError('Failed to calculate order stats', 'CALCULATION_ERROR');
  }
}
async function calculateProductStats(sellerId) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[40]++;
  cov_15fuuzsb0u().s[99]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[100]++;
    if (!isValidObjectId(sellerId)) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[16][0]++;
      cov_15fuuzsb0u().s[101]++;
      throw new SellerError('Invalid seller ID', 'INVALID_ID');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[16][1]++;
    }
    const [basicStats, topSelling] =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[102]++, await Promise.all([_productmodel.default.aggregate([{
      $match: {
        sellerId: new _mongoose.default.Types.ObjectId(sellerId)
      }
    }, {
      $group: {
        _id: null,
        active: {
          $sum: {
            $cond: [{
              $and: [{
                $eq: ['$status', 'active']
              }, {
                $gt: ['$countInStock', 0]
              }]
            }, 1, 0]
          }
        },
        outOfStock: {
          $sum: {
            $cond: [{
              $eq: ['$countInStock', 0]
            }, 1, 0]
          }
        },
        total: {
          $sum: 1
        }
      }
    }]), _productmodel.default.aggregate([{
      $match: {
        sellerId: new _mongoose.default.Types.ObjectId(sellerId),
        'metrics.sales': {
          $gt: 0
        }
      }
    }, {
      $sort: {
        'metrics.sales': -1
      }
    }, {
      $limit: 5
    }, {
      $project: {
        id: '$_id',
        name: '$name',
        sales: '$metrics.sales',
        _id: 0
      }
    }])]));
    const stats =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[103]++,
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[17][0]++, basicStats[0]) ||
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[17][1]++, {
      active: 0,
      outOfStock: 0,
      total: 0
    }));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[104]++;
    return {
      active: stats.active,
      outOfStock: stats.outOfStock,
      total: stats.total,
      topSelling
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[105]++;
    console.error('Calculate product stats error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[106]++;
    throw new SellerError('Failed to calculate product stats', 'CALCULATION_ERROR');
  }
}
async function calculatePerformanceStats(sellerId) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[41]++;
  cov_15fuuzsb0u().s[107]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[108]++;
    if (!isValidObjectId(sellerId)) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[18][0]++;
      cov_15fuuzsb0u().s[109]++;
      throw new SellerError('Invalid seller ID', 'INVALID_ID');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[18][1]++;
    }
    const [ratingStats, orderStats] =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[110]++, await Promise.all([_productmodel.default.aggregate([{
      $match: {
        sellerId: new _mongoose.default.Types.ObjectId(sellerId)
      }
    }, {
      $group: {
        _id: null,
        avgRating: {
          $avg: '$metrics.rating'
        }
      }
    }]), _ordermodel.default.aggregate([{
      $match: {
        sellerId: new _mongoose.default.Types.ObjectId(sellerId),
        status: {
          $in: ['completed', 'returned']
        }
      }
    }, {
      $group: {
        _id: null,
        totalOrders: {
          $sum: 1
        },
        returnedOrders: {
          $sum: {
            $cond: [{
              $eq: ['$status', 'returned']
            }, 1, 0]
          }
        },
        totalResponseTime: {
          $avg: '$metrics.responseTime'
        },
        fulfillmentTime: {
          $avg: '$metrics.fulfillmentTime'
        }
      }
    }])]));
    const rating =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[111]++,
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[19][0]++, ratingStats[0]?.avgRating) ||
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[19][1]++, 0));
    const orders =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[112]++,
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[20][0]++, orderStats[0]) ||
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[20][1]++, {
      totalOrders: 0,
      returnedOrders: 0,
      totalResponseTime: 0,
      fulfillmentTime: 0
    }));
    const returnRate =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[113]++, orders.totalOrders > 0 ?
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[21][0]++, (0, _utils.round2)(orders.returnedOrders / orders.totalOrders * 100)) :
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[21][1]++, 0));
    const fulfillmentRate =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[114]++, orders.totalOrders > 0 ?
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[22][0]++, (0, _utils.round2)((orders.totalOrders - orders.returnedOrders) / orders.totalOrders * 100)) :
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[22][1]++, 0));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[115]++;
    return {
      rating: (0, _utils.round2)(rating),
      responseTime: (0, _utils.round2)(
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[23][0]++, orders.totalResponseTime) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[23][1]++, 0)),
      fulfillmentRate,
      returnRate,
      customerSatisfaction: (0, _utils.round2)(rating * 20)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[116]++;
    console.error('Calculate performance stats error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[117]++;
    throw new SellerError('Failed to calculate performance stats', 'CALCULATION_ERROR');
  }
}
async function calculateAnalyticsStats(sellerId) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[42]++;
  cov_15fuuzsb0u().s[118]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[119]++;
    if (!isValidObjectId(sellerId)) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[24][0]++;
      cov_15fuuzsb0u().s[120]++;
      throw new SellerError('Invalid seller ID', 'INVALID_ID');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[24][1]++;
    }
    const stats =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[121]++, await _ordermodel.default.aggregate([{
      $match: {
        sellerId: new _mongoose.default.Types.ObjectId(sellerId)
      }
    }, {
      $group: {
        _id: null,
        totalOrders: {
          $sum: 1
        },
        uniqueCustomers: {
          $addToSet: '$userId'
        },
        abandonedCarts: {
          $sum: {
            $cond: [{
              $eq: ['$status', 'abandoned']
            }, 1, 0]
          }
        },
        repeatCustomers: {
          $sum: {
            $cond: [{
              $gt: [{
                $size: {
                  $ifNull: ['$previousOrders', []]
                }
              }, 0]
            }, 1, 0]
          }
        },
        totalVisitors: {
          $sum: {
            $ifNull: ['$metrics.pageViews', 0]
          }
        }
      }
    }]));
    const data =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[122]++,
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[25][0]++, stats[0]) ||
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[25][1]++, {
      totalOrders: 0,
      uniqueCustomers: [],
      abandonedCarts: 0,
      repeatCustomers: 0,
      totalVisitors: 0
    }));
    const visitorsCount =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[123]++, data.totalVisitors);
    const conversionRate =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[124]++, visitorsCount > 0 ?
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[26][0]++, (0, _utils.round2)(data.totalOrders / visitorsCount * 100)) :
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[26][1]++, 0));
    const abandonedCartRate =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[125]++, data.totalOrders > 0 ?
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[27][0]++, (0, _utils.round2)(data.abandonedCarts / (data.totalOrders + data.abandonedCarts) * 100)) :
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[27][1]++, 0));
    const uniqueCustomersCount =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[126]++, data.uniqueCustomers.length);
    const repeatCustomerRate =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[127]++, uniqueCustomersCount > 0 ?
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[28][0]++, (0, _utils.round2)(data.repeatCustomers / uniqueCustomersCount * 100)) :
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[28][1]++, 0));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[128]++;
    return {
      visitorsCount,
      conversionRate,
      abandonedCartRate,
      repeatCustomerRate
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[129]++;
    console.error('Calculate analytics stats error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[130]++;
    throw new SellerError('Failed to calculate analytics stats', 'CALCULATION_ERROR');
  }
}
async function calculatePointsStats(sellerId) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[43]++;
  cov_15fuuzsb0u().s[131]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[132]++;
    if (!isValidObjectId(sellerId)) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[29][0]++;
      cov_15fuuzsb0u().s[133]++;
      throw new SellerError('Invalid seller ID', 'INVALID_ID');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[29][1]++;
    }
    const seller =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[134]++, await _sellermodel.default.findById(sellerId).select('pointsBalance pointsTransactions'));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[135]++;
    if (!seller) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[30][0]++;
      cov_15fuuzsb0u().s[136]++;
      throw new SellerError('Seller not found', 'NOT_FOUND');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[30][1]++;
    }
    const transactions =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[137]++, seller.pointsTransactions.slice(0, 10));
    const totalEarned =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[138]++, seller.pointsTransactions.reduce((sum, tx) => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[44]++;
      cov_15fuuzsb0u().s[139]++;
      return tx.type === 'earn' ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[31][0]++, sum + tx.amount) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[31][1]++, sum);
    }, 0));
    const totalRedeemed =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[140]++, seller.pointsTransactions.reduce((sum, tx) => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[45]++;
      cov_15fuuzsb0u().s[141]++;
      return tx.type === 'redeem' ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[32][0]++, sum + tx.amount) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[32][1]++, sum);
    }, 0));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[142]++;
    return {
      balance: seller.pointsBalance,
      totalEarned,
      totalRedeemed,
      recentTransactions: transactions.map(tx => {
        /* istanbul ignore next */
        cov_15fuuzsb0u().f[46]++;
        cov_15fuuzsb0u().s[143]++;
        return {
          amount: tx.amount,
          type: tx.type,
          description: tx.description,
          createdAt: tx.createdAt
        };
      })
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[144]++;
    console.error('Calculate points stats error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[145]++;
    throw new SellerError('Failed to calculate points stats', 'CALCULATION_ERROR');
  }
}
async function getSellerByUserId(userId, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[33][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[47]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[146]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[147]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api.errors'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[148]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[149]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[48]++;
      cov_15fuuzsb0u().s[150]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[151]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[152]++;
    await (0, _db.connectToDatabase)();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[153]++;
    if (!isValidObjectId(userId)) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[34][0]++;
      cov_15fuuzsb0u().s[154]++;
      throw new SellerError(t('invalidSellerData'), 'INVALID_ID');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[34][1]++;
    }
    const seller =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[155]++, await _sellermodel.default.findOne({
      userId
    }).select('-bankInfo.accountNumber').lean());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[156]++;
    if (!seller) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[35][0]++;
      cov_15fuuzsb0u().s[157]++;
      console.log('No seller found for userId:', userId);
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[158]++;
      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[35][1]++;
    }
    cov_15fuuzsb0u().s[159]++;
    if (
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[37][0]++, seller.bankInfo) &&
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[37][1]++, !seller.bankInfo.verified)) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[36][0]++;
      cov_15fuuzsb0u().s[160]++;
      console.warn(`Bank info for seller ${seller._id} needs verification`);
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[36][1]++;
    }
    cov_15fuuzsb0u().s[161]++;
    return {
      success: true,
      data: seller
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[162]++;
    console.error('Get seller error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[163]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[38][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[38][1]++, t('failedToGetSeller')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[39][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[39][1]++, 'UNKNOWN')
    };
  }
}
async function getSellerById(sellerId, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[40][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[49]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[164]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[165]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api.errors'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[166]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[167]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[50]++;
      cov_15fuuzsb0u().s[168]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[169]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[170]++;
    await (0, _db.connectToDatabase)();
    const seller =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[171]++, await _sellermodel.default.findOne({
      $or: [{
        _id: isValidObjectId(sellerId) ?
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[41][0]++, sellerId) :
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[41][1]++, null)
      }, {
        businessName: sellerId
      }]
    }).select('-bankInfo.accountNumber').lean());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[172]++;
    if (!seller) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[42][0]++;
      cov_15fuuzsb0u().s[173]++;
      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[42][1]++;
    }
    cov_15fuuzsb0u().s[174]++;
    return {
      success: true,
      data: seller
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[175]++;
    console.error('Get seller by ID error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[176]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[43][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[43][1]++, t('failedToGetSeller')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[44][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[44][1]++, 'UNKNOWN')
    };
  }
}
async function getSellerByBusinessName(businessName, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[45][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[51]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[177]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[178]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api.errors'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[179]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[180]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[52]++;
      cov_15fuuzsb0u().s[181]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[182]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[183]++;
    await (0, _db.connectToDatabase)();
    const seller =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[184]++, await _sellermodel.default.findOne({
      businessName
    }).select('-bankInfo.accountNumber').lean());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[185]++;
    if (!seller) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[46][0]++;
      cov_15fuuzsb0u().s[186]++;
      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[46][1]++;
    }
    cov_15fuuzsb0u().s[187]++;
    return {
      success: true,
      data: seller
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[188]++;
    console.error('Get seller by business name error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[189]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[47][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[47][1]++, t('failedToGetSeller')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[48][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[48][1]++, 'UNKNOWN')
    };
  }
}
async function createSeller(userId, data, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[49][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[53]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[190]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[191]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[192]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[193]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[54]++;
      cov_15fuuzsb0u().s[194]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[195]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[196]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[197]++, await _mongoose.default.startSession());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[198]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[199]++;
    try {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[200]++;
      if (!isValidObjectId(userId)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[50][0]++;
        cov_15fuuzsb0u().s[201]++;
        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[50][1]++;
      }
      const user =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[202]++, await _usermodel.default.findById(userId).session(session));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[203]++;
      if (!user) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[51][0]++;
        cov_15fuuzsb0u().s[204]++;
        throw new SellerError(t('errors.userNotFound'), 'USER_NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[51][1]++;
      }
      const existingSeller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[205]++, await _sellermodel.default.findOne({
        $or: [{
          email: data.email
        }, {
          userId
        }, {
          customSiteUrl: data.customSiteUrl
        }]
      }).session(session));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[206]++;
      if (existingSeller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[52][0]++;
        cov_15fuuzsb0u().s[207]++;
        console.log('Duplicate seller found:', existingSeller);
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[208]++;
        throw new SellerError(t('messages.sellerExists'), 'DUPLICATE_SELLER');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[52][1]++;
      }
      cov_15fuuzsb0u().s[209]++;
      if (!data.termsAccepted) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[53][0]++;
        cov_15fuuzsb0u().s[210]++;
        throw new SellerError(t('errors.termsNotAccepted'), 'TERMS_NOT_ACCEPTED');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[53][1]++;
      }
      const customSiteUrl =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[211]++,
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[54][0]++, data.customSiteUrl) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[54][1]++, await generateCustomSiteUrl(data.businessName)));
      let logoUrl;
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[212]++;
      if (
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[56][0]++, data.logo) &&
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[56][1]++, data.logo.size > 0)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[55][0]++;
        cov_15fuuzsb0u().s[213]++;
        logoUrl = await (0, _s3.uploadToStorage)(data.logo, `sellers/${userId}/logo`, {
          contentType: data.logo.type,
          maxSize: 5 * 1024 * 1024,
          allowedTypes: ['image/jpeg', 'image/png', 'image/webp']
        });
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[55][1]++;
      }
      const trialEndDate =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[214]++, new Date(Date.now() + 5 * 24 * 60 * 60 * 1000));
      const seller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[215]++, await _sellermodel.default.create([{
        userId,
        businessName: data.businessName,
        email: data.email,
        phone: data.phone,
        description: data.description,
        businessType: data.businessType,
        vatRegistered: data.vatRegistered,
        logo: logoUrl,
        address: data.address,
        taxId: data.taxId,
        bankInfo: {
          accountName: data.bankInfo.accountName,
          accountNumber: data.bankInfo.accountNumber,
          bankName: data.bankInfo.bankName,
          swiftCode: data.bankInfo.swiftCode,
          verified: false
        },
        subscription: {
          plan: 'Trial',
          startDate: new Date(),
          endDate: trialEndDate,
          status: 'active',
          features: {
            productsLimit: 50,
            commission: 7,
            prioritySupport: false,
            instantPayouts: false
          }
        },
        verification: {
          status: 'pending',
          documents: new Map(),
          submittedAt: new Date()
        },
        metrics: {
          rating: 0,
          totalSales: 0,
          totalRevenue: 0,
          productsCount: 0,
          ordersCount: 0,
          customersCount: 0,
          views: 0,
          followers: 0,
          products: {
            total: 0,
            active: 0,
            outOfStock: 0
          }
        },
        settings: {
          notifications: {
            email: true,
            sms: false,
            orderUpdates: true,
            marketingEmails: false,
            pointsNotifications: true
          },
          display: {
            showRating: true,
            showContactInfo: true,
            showMetrics: true,
            showPointsBalance: true
          },
          security: {
            twoFactorAuth: false,
            loginNotifications: true
          },
          customSite: {
            theme: 'default',
            primaryColor: '#000000'
          }
        },
        pointsBalance: 50,
        pointsTransactions: [{
          amount: 50,
          type: 'earn',
          description: 'Welcome bonus for new seller registration',
          createdAt: new Date()
        }],
        freeTrialActive: true,
        freeTrialEndDate: trialEndDate,
        trialMonthsUsed: 0,
        customSiteUrl
      }], {
        session
      }));
      const updatedUser =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[216]++, await _usermodel.default.findByIdAndUpdate(userId, {
        role: 'SELLER',
        businessProfile: seller[0]._id
      }, {
        new: true,
        session
      }));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[217]++;
      if (!updatedUser) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[57][0]++;
        cov_15fuuzsb0u().s[218]++;
        throw new SellerError(t('errors.failedToUpdateUserRole'), 'USER_UPDATE_FAILED');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[57][1]++;
      }
      cov_15fuuzsb0u().s[219]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[220]++;
      (0, _cache.revalidatePath)('/[locale]/seller/dashboard', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[221]++;
      (0, _cache.revalidatePath)('/[locale]/account', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[222]++;
      await Promise.all([(0, _notification.sendNotification)({
        userId,
        type: 'welcome',
        title: t('messages.welcomeTitle'),
        message: t('messages.welcomeMessage'),
        data: {
          sellerId: seller[0]._id
        }
      }), (0, _notification.sendNotification)({
        userId,
        type: 'points_earned',
        title: t('messages.bonusPointsTitle'),
        message: t('messages.bonusPointsMessage', {
          points: 50
        }),
        data: {
          points: 50,
          sellerId: seller[0]._id
        }
      }), (0, _notification.sendNotification)({
        userId,
        type: 'trial_reminder',
        title: t('messages.trialActiveTitle'),
        message: t('messages.trialActiveMessage', {
          trialDays: 5
        }),
        data: {
          sellerId: seller[0]._id,
          trialDays: 5
        }
      })]);
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[223]++;
      return {
        success: true,
        data: seller[0],
        message: t('messages.success')
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[224]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[225]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[226]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[227]++;
    console.error('Create seller error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[228]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[58][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[58][1]++, t('errors.registrationFailed')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[59][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[59][1]++, 'UNKNOWN')
    };
  }
}
async function updateSeller(userId, data, options =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[60][0]++, {
  revalidate: true
}), locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[61][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[55]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[229]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[230]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api.errors'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[231]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[232]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[56]++;
      cov_15fuuzsb0u().s[233]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[234]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[235]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[236]++, await _mongoose.default.startSession());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[237]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[238]++;
    try {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[239]++;
      if (!isValidObjectId(userId)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[62][0]++;
        cov_15fuuzsb0u().s[240]++;
        throw new SellerError(t('invalidSellerData'), 'INVALID_ID');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[62][1]++;
      }
      const existingSeller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[241]++, await _sellermodel.default.findOne({
        userId
      }).session(session));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[242]++;
      if (!existingSeller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[63][0]++;
        cov_15fuuzsb0u().s[243]++;
        throw new SellerError(t('sellerNotFound'), 'NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[63][1]++;
      }
      let logoUrl =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[244]++, existingSeller.logo);
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[245]++;
      if (
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[65][0]++, data.logo) &&
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[65][1]++, data.logo.size > 0)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[64][0]++;
        cov_15fuuzsb0u().s[246]++;
        if (existingSeller.logo) {
          /* istanbul ignore next */
          cov_15fuuzsb0u().b[66][0]++;
          cov_15fuuzsb0u().s[247]++;
          await (0, _s3.deleteFromStorage)(existingSeller.logo);
        } else
        /* istanbul ignore next */
        {
          cov_15fuuzsb0u().b[66][1]++;
        }
        cov_15fuuzsb0u().s[248]++;
        logoUrl = await (0, _s3.uploadToStorage)(data.logo, `sellers/${userId}/logo`, {
          contentType: data.logo.type,
          maxSize: 5 * 1024 * 1024,
          allowedTypes: ['image/jpeg', 'image/png', 'image/webp']
        });
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[64][1]++;
      }
      cov_15fuuzsb0u().s[249]++;
      if (
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[68][0]++, data.customSiteUrl) &&
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[68][1]++, data.customSiteUrl !== existingSeller.customSiteUrl)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[67][0]++;
        const urlExists =
        /* istanbul ignore next */
        (cov_15fuuzsb0u().s[250]++, await _sellermodel.default.exists({
          customSiteUrl: data.customSiteUrl,
          _id: {
            $ne: existingSeller._id
          }
        }));
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[251]++;
        if (urlExists) {
          /* istanbul ignore next */
          cov_15fuuzsb0u().b[69][0]++;
          cov_15fuuzsb0u().s[252]++;
          throw new SellerError(t('customSiteUrlExists'), 'DUPLICATE_URL');
        } else
        /* istanbul ignore next */
        {
          cov_15fuuzsb0u().b[69][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[67][1]++;
      }
      const updateData =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[253]++, {
        ...data,
        logo: logoUrl,
        updatedAt: new Date()
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[254]++;
      delete updateData.termsAccepted;
      const seller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[255]++, await _sellermodel.default.findOneAndUpdate({
        userId
      }, {
        $set: updateData
      }, {
        new: true,
        session
      }).select('-bankInfo.accountNumber'));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[256]++;
      if (!seller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[70][0]++;
        cov_15fuuzsb0u().s[257]++;
        throw new SellerError(t('failedToUpdateSeller'), 'UPDATE_FAILED');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[70][1]++;
      }
      cov_15fuuzsb0u().s[258]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[259]++;
      if (options.revalidate) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[71][0]++;
        cov_15fuuzsb0u().s[260]++;
        (0, _cache.revalidatePath)('/[locale]/seller/dashboard', 'page');
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[261]++;
        (0, _cache.revalidatePath)('/[locale]/account', 'page');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[71][1]++;
      }
      cov_15fuuzsb0u().s[262]++;
      return {
        success: true,
        data: seller
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[263]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[264]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[265]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[266]++;
    console.error('Update seller error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[267]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[72][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[72][1]++, t('failedToUpdateSeller')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[73][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[73][1]++, 'UNKNOWN')
    };
  }
}
async function updateSellerSettings(userId, data, bannerFile, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[74][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[57]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[268]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[269]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[270]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[271]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[58]++;
      cov_15fuuzsb0u().s[272]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[273]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[274]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[275]++, await _mongoose.default.startSession());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[276]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[277]++;
    try {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[278]++;
      if (!isValidObjectId(userId)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[75][0]++;
        cov_15fuuzsb0u().s[279]++;
        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[75][1]++;
      }
      const seller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[280]++, await _sellermodel.default.findOne({
        userId
      }).session(session));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[281]++;
      if (!seller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[76][0]++;
        cov_15fuuzsb0u().s[282]++;
        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[76][1]++;
      }
      // Check subscription status and plan
      cov_15fuuzsb0u().s[283]++;
      if (seller.subscription.status !== 'active') {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[77][0]++;
        cov_15fuuzsb0u().s[284]++;
        throw new SellerError(t('errors.inactiveSubscription'), 'INACTIVE_SUBSCRIPTION');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[77][1]++;
      }
      // Check custom sections limit
      cov_15fuuzsb0u().s[285]++;
      if (data.customSite?.customSections) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[78][0]++;
        const planConfig =
        /* istanbul ignore next */
        (cov_15fuuzsb0u().s[286]++, _constants.subscriptionPlans.find(p => {
          /* istanbul ignore next */
          cov_15fuuzsb0u().f[59]++;
          cov_15fuuzsb0u().s[287]++;
          return p.name === seller.subscription.plan;
        }));
        const limit =
        /* istanbul ignore next */
        (cov_15fuuzsb0u().s[288]++,
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[79][0]++, planConfig?.features.customSectionsLimit) ||
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[79][1]++, 0));
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[289]++;
        if (data.customSite.customSections.length > limit) {
          /* istanbul ignore next */
          cov_15fuuzsb0u().b[80][0]++;
          cov_15fuuzsb0u().s[290]++;
          throw new SellerError(t('errors.customSectionsLimit', {
            limit
          }), 'CUSTOM_SECTIONS_LIMIT');
        } else
        /* istanbul ignore next */
        {
          cov_15fuuzsb0u().b[80][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[78][1]++;
      }
      let bannerUrl =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[291]++, seller.settings.customSite?.bannerImage);
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[292]++;
      if (
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[82][0]++, bannerFile) &&
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[82][1]++, bannerFile.size > 0)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[81][0]++;
        cov_15fuuzsb0u().s[293]++;
        if (seller.settings.customSite?.bannerImage) {
          /* istanbul ignore next */
          cov_15fuuzsb0u().b[83][0]++;
          cov_15fuuzsb0u().s[294]++;
          await (0, _s3.deleteFromStorage)(seller.settings.customSite.bannerImage);
        } else
        /* istanbul ignore next */
        {
          cov_15fuuzsb0u().b[83][1]++;
        }
        cov_15fuuzsb0u().s[295]++;
        bannerUrl = await (0, _s3.uploadToStorage)(bannerFile, `sellers/${userId}/banner`, {
          contentType: bannerFile.type,
          maxSize: 5 * 1024 * 1024,
          allowedTypes: ['image/jpeg', 'image/png', 'image/webp']
        });
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[81][1]++;
      }
      cov_15fuuzsb0u().s[296]++;
      if (
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[85][0]++, data.customSiteUrl) &&
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[85][1]++, data.customSiteUrl !== seller.customSiteUrl)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[84][0]++;
        const urlExists =
        /* istanbul ignore next */
        (cov_15fuuzsb0u().s[297]++, await _sellermodel.default.exists({
          customSiteUrl: data.customSiteUrl,
          _id: {
            $ne: seller._id
          }
        }));
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[298]++;
        if (urlExists) {
          /* istanbul ignore next */
          cov_15fuuzsb0u().b[86][0]++;
          cov_15fuuzsb0u().s[299]++;
          throw new SellerError(t('errors.customSiteUrlExists'), 'DUPLICATE_URL');
        } else
        /* istanbul ignore next */
        {
          cov_15fuuzsb0u().b[86][1]++;
        }
        cov_15fuuzsb0u().s[300]++;
        seller.customSiteUrl = data.customSiteUrl;
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[84][1]++;
      }
      cov_15fuuzsb0u().s[301]++;
      seller.businessName =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[87][0]++, data.businessName) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[87][1]++, seller.businessName);
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[302]++;
      seller.description =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[88][0]++, data.description) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[88][1]++, seller.description);
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[303]++;
      seller.phone =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[89][0]++, data.phone) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[89][1]++, seller.phone);
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[304]++;
      seller.address =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[90][0]++, data.address) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[90][1]++, seller.address);
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[305]++;
      if (data.bankInfo) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[91][0]++;
        cov_15fuuzsb0u().s[306]++;
        seller.bankInfo = {
          ...seller.bankInfo,
          ...data.bankInfo,
          verified: false
        };
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[91][1]++;
      }
      cov_15fuuzsb0u().s[307]++;
      seller.settings = {
        notifications: data.notifications,
        display: data.display,
        security: data.security,
        customSite: {
          theme: data.customSite.theme,
          primaryColor: data.customSite.primaryColor,
          bannerImage: bannerUrl,
          customSections:
          /* istanbul ignore next */
          (cov_15fuuzsb0u().b[92][0]++, data.customSite.customSections) ||
          /* istanbul ignore next */
          (cov_15fuuzsb0u().b[92][1]++, [])
        }
      };
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[308]++;
      await seller.save({
        session
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[309]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[310]++;
      (0, _cache.revalidatePath)('/[locale]/seller/dashboard/settings', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[311]++;
      (0, _cache.revalidatePath)(`/[locale]/${seller.customSiteUrl}`, 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[312]++;
      await (0, _notification.sendNotification)({
        userId,
        type: 'settings_updated',
        title: t('messages.settingsUpdatedTitle'),
        message: t('messages.settingsUpdatedMessage'),
        data: {
          sellerId: seller._id
        }
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[313]++;
      return {
        success: true,
        data: seller.settings
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[314]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[315]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[316]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[317]++;
    console.error('Update seller settings error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[318]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[93][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[93][1]++, t('errors.failedToUpdateSettings')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[94][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[94][1]++, 'UNKNOWN')
    };
  }
}
async function updateSellerSubscription(userId, plan, pointsToRedeem =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[95][0]++, 0), paymentMethod, paymentDetails, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[96][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[60]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[319]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[320]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[321]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[322]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[61]++;
      cov_15fuuzsb0u().s[323]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[324]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[325]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[326]++, await _mongoose.default.startSession());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[327]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[328]++;
    try {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[329]++;
      if (!isValidObjectId(userId)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[97][0]++;
        cov_15fuuzsb0u().s[330]++;
        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[97][1]++;
      }
      const seller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[331]++, await _sellermodel.default.findOne({
        userId
      }).session(session));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[332]++;
      if (!seller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[98][0]++;
        cov_15fuuzsb0u().s[333]++;
        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[98][1]++;
      }
      cov_15fuuzsb0u().s[334]++;
      if (!seller.bankInfo.verified) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[99][0]++;
        cov_15fuuzsb0u().s[335]++;
        throw new SellerError(t('errors.bankInfoNotVerified'), 'BANK_NOT_VERIFIED');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[99][1]++;
      }
      const settings =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[336]++, await (0, _settingactions.getSetting)());
      const validPlans =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[337]++, ['Trial', 'Basic', 'Pro', 'VIP']);
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[338]++;
      if (!validPlans.includes(plan)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[100][0]++;
        cov_15fuuzsb0u().s[339]++;
        throw new SellerError(t('errors.invalidPlan'), 'INVALID_PLAN');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[100][1]++;
      }
      const planConfig =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[340]++, _constants.subscriptionPlans.find(p => {
        /* istanbul ignore next */
        cov_15fuuzsb0u().f[62]++;
        cov_15fuuzsb0u().s[341]++;
        return p.name === plan;
      }));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[342]++;
      if (!planConfig) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[101][0]++;
        cov_15fuuzsb0u().s[343]++;
        throw new SellerError(t('errors.invalidPlanConfig'), 'INVALID_PLAN_CONFIG');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[101][1]++;
      }
      const isTrial =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[344]++, plan === 'Trial');
      const durationDays =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[345]++, isTrial ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[102][0]++, 90) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[102][1]++, 30)); // 3 months for Trial, 1 month for others
      const endDate =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[346]++, new Date(Date.now() + durationDays * 24 * 60 * 60 * 1000));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[347]++;
      if (
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[104][0]++, isTrial) &&
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[104][1]++, (
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[105][0]++, seller.trialMonthsUsed) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[105][1]++, 0)) >= 1)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[103][0]++;
        cov_15fuuzsb0u().s[348]++;
        throw new SellerError(t('errors.trialExhausted'), 'TRIAL_EXHAUSTED');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[103][1]++;
      }
      let finalCost =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[349]++, planConfig.price);
      let paymentId;
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[350]++;
      if (pointsToRedeem > 0) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[106][0]++;
        cov_15fuuzsb0u().s[351]++;
        if (seller.pointsBalance < pointsToRedeem) {
          /* istanbul ignore next */
          cov_15fuuzsb0u().b[107][0]++;
          cov_15fuuzsb0u().s[352]++;
          throw new SellerError(t('errors.insufficientPoints'), 'INSUFFICIENT_POINTS');
        } else
        /* istanbul ignore next */
        {
          cov_15fuuzsb0u().b[107][1]++;
        }
        const pointsValue =
        /* istanbul ignore next */
        (cov_15fuuzsb0u().s[353]++,
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[108][0]++, settings.points?.redeemValue) ||
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[108][1]++, 0.05));
        const discount =
        /* istanbul ignore next */
        (cov_15fuuzsb0u().s[354]++, (0, _utils.round2)(pointsToRedeem * pointsValue));
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[355]++;
        if (discount > finalCost) {
          /* istanbul ignore next */
          cov_15fuuzsb0u().b[109][0]++;
          cov_15fuuzsb0u().s[356]++;
          throw new SellerError(t('errors.invalidRedemption'), 'INVALID_REDEMPTION');
        } else
        /* istanbul ignore next */
        {
          cov_15fuuzsb0u().b[109][1]++;
        }
        cov_15fuuzsb0u().s[357]++;
        finalCost -= discount;
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[358]++;
        seller.pointsBalance -= pointsToRedeem;
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[359]++;
        seller.pointsTransactions.push({
          amount: pointsToRedeem,
          type: 'redeem',
          description: `Redeemed points for ${plan} subscription`,
          createdAt: new Date()
        });
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[106][1]++;
      }
      cov_15fuuzsb0u().s[360]++;
      if (finalCost > 0) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[110][0]++;
        cov_15fuuzsb0u().s[361]++;
        if (
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[112][0]++, !paymentMethod) ||
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[112][1]++, !paymentDetails)) {
          /* istanbul ignore next */
          cov_15fuuzsb0u().b[111][0]++;
          cov_15fuuzsb0u().s[362]++;
          throw new SellerError(t('errors.invalidPayment'), 'INVALID_PAYMENT');
        } else
        /* istanbul ignore next */
        {
          cov_15fuuzsb0u().b[111][1]++;
        }
        cov_15fuuzsb0u().s[363]++;
        if (
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[114][0]++, paymentMethod === 'stripe') &&
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[114][1]++, paymentDetails.stripeSessionId)) {
          /* istanbul ignore next */
          cov_15fuuzsb0u().b[113][0]++;
          const stripeSession =
          /* istanbul ignore next */
          (cov_15fuuzsb0u().s[364]++, await stripe.checkout.sessions.retrieve(paymentDetails.stripeSessionId));
          /* istanbul ignore next */
          cov_15fuuzsb0u().s[365]++;
          if (stripeSession.payment_status !== 'paid') {
            /* istanbul ignore next */
            cov_15fuuzsb0u().b[115][0]++;
            cov_15fuuzsb0u().s[366]++;
            console.error(`Stripe payment failed for session ${paymentDetails.stripeSessionId}: ${stripeSession.payment_status}`);
            /* istanbul ignore next */
            cov_15fuuzsb0u().s[367]++;
            throw new SellerError(t('errors.paymentFailed'), 'PAYMENT_FAILED');
          } else
          /* istanbul ignore next */
          {
            cov_15fuuzsb0u().b[115][1]++;
          }
          cov_15fuuzsb0u().s[368]++;
          paymentId = stripeSession.payment_intent;
        } else {
          /* istanbul ignore next */
          cov_15fuuzsb0u().b[113][1]++;
          cov_15fuuzsb0u().s[369]++;
          if (
          /* istanbul ignore next */
          (cov_15fuuzsb0u().b[117][0]++, paymentMethod === 'paypal') &&
          /* istanbul ignore next */
          (cov_15fuuzsb0u().b[117][1]++, paymentDetails.paypalOrderId)) {
            /* istanbul ignore next */
            cov_15fuuzsb0u().b[116][0]++;
            const request =
            /* istanbul ignore next */
            (cov_15fuuzsb0u().s[370]++, new _checkoutserversdk.default.orders.OrdersGetRequest(paymentDetails.paypalOrderId));
            const order =
            /* istanbul ignore next */
            (cov_15fuuzsb0u().s[371]++, await paypalClient.execute(request));
            /* istanbul ignore next */
            cov_15fuuzsb0u().s[372]++;
            if (order.result.status !== 'COMPLETED') {
              /* istanbul ignore next */
              cov_15fuuzsb0u().b[118][0]++;
              cov_15fuuzsb0u().s[373]++;
              console.error(`PayPal payment failed for order ${paymentDetails.paypalOrderId}: ${order.result.status}`);
              /* istanbul ignore next */
              cov_15fuuzsb0u().s[374]++;
              throw new SellerError(t('errors.paymentFailed'), 'PAYMENT_FAILED');
            } else
            /* istanbul ignore next */
            {
              cov_15fuuzsb0u().b[118][1]++;
            }
            cov_15fuuzsb0u().s[375]++;
            paymentId = paymentDetails.paypalOrderId;
          } else {
            /* istanbul ignore next */
            cov_15fuuzsb0u().b[116][1]++;
            cov_15fuuzsb0u().s[376]++;
            if (paymentMethod !== 'points') {
              /* istanbul ignore next */
              cov_15fuuzsb0u().b[119][0]++;
              cov_15fuuzsb0u().s[377]++;
              throw new SellerError(t('errors.invalidPayment'), 'INVALID_PAYMENT');
            } else
            /* istanbul ignore next */
            {
              cov_15fuuzsb0u().b[119][1]++;
            }
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[110][1]++;
      }
      cov_15fuuzsb0u().s[378]++;
      seller.subscription = {
        plan,
        startDate: new Date(),
        endDate,
        status: 'active',
        features: planConfig.features,
        pointsRedeemed: pointsToRedeem,
        paymentMethod,
        paymentId
      };
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[379]++;
      if (isTrial) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[120][0]++;
        cov_15fuuzsb0u().s[380]++;
        seller.trialMonthsUsed = (
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[121][0]++, seller.trialMonthsUsed) ||
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[121][1]++, 0)) + 1;
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[381]++;
        seller.freeTrialActive = true;
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[382]++;
        seller.freeTrialEndDate = endDate;
      } else {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[120][1]++;
        cov_15fuuzsb0u().s[383]++;
        seller.freeTrialActive = false;
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[384]++;
        seller.freeTrialEndDate = undefined;
      }
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[385]++;
      await seller.save({
        session
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[386]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[387]++;
      (0, _cache.revalidatePath)('/[locale]/seller/dashboard', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[388]++;
      (0, _cache.revalidatePath)('/[locale]/account/subscriptions', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[389]++;
      await Promise.all([(0, _notification.sendNotification)({
        userId,
        type: 'subscription_updated',
        title: t('messages.subscriptionUpdatedTitle'),
        message: t('messages.subscriptionUpdatedMessage', {
          plan,
          points: pointsToRedeem
        }),
        data: {
          sellerId: seller._id,
          plan
        }
      }),
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[122][0]++, pointsToRedeem > 0) &&
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[122][1]++, (0, _notification.sendNotification)({
        userId,
        type: 'points_redeemed',
        title: t('messages.pointsRedeemedTitle'),
        message: t('messages.pointsRedeemedMessage', {
          points: pointsToRedeem,
          plan
        }),
        data: {
          points: pointsToRedeem,
          sellerId: seller._id
        }
      }))].filter(Boolean));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[390]++;
      return {
        success: true,
        data: seller.subscription
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[391]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[392]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[393]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[394]++;
    console.error('Update subscription error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[395]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[123][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[123][1]++, t('errors.failedToUpdateSubscription')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[124][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[124][1]++, 'UNKNOWN')
    };
  }
}
async function awardSellerPoints(userId, amount, description, orderId, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[125][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[63]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[396]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[397]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[398]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[399]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[64]++;
      cov_15fuuzsb0u().s[400]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[401]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[402]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[403]++, await _mongoose.default.startSession());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[404]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[405]++;
    try {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[406]++;
      if (!isValidObjectId(userId)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[126][0]++;
        cov_15fuuzsb0u().s[407]++;
        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[126][1]++;
      }
      cov_15fuuzsb0u().s[408]++;
      if (amount <= 0) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[127][0]++;
        cov_15fuuzsb0u().s[409]++;
        throw new SellerError(t('errors.invalidAmount'), 'INVALID_AMOUNT');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[127][1]++;
      }
      const seller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[410]++, await _sellermodel.default.findOne({
        userId
      }).session(session));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[411]++;
      if (!seller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[128][0]++;
        cov_15fuuzsb0u().s[412]++;
        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[128][1]++;
      }
      cov_15fuuzsb0u().s[413]++;
      await seller.addPoints(amount, description, orderId);
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[414]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[415]++;
      (0, _cache.revalidatePath)('/[locale]/seller/dashboard', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[416]++;
      (0, _cache.revalidatePath)('/[locale]/account', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[417]++;
      await (0, _notification.sendNotification)({
        userId,
        type: 'points_earned',
        title: t('messages.pointsEarnedTitle'),
        message: t('messages.pointsEarnedMessage', {
          points: amount,
          description
        }),
        data: {
          points: amount,
          sellerId: seller._id
        }
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[418]++;
      return {
        success: true,
        data: {
          pointsBalance: seller.pointsBalance
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[419]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[420]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[421]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[422]++;
    console.error('Award points error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[423]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[129][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[129][1]++, t('errors.failedToAwardPoints')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[130][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[130][1]++, 'UNKNOWN')
    };
  }
}
async function getSellerMetrics(userId, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[131][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[65]++;
  cov_15fuuzsb0u().s[424]++;
  performance.mark(PERFORMANCE_MARKERS.START);
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[425]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[426]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api.errors'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[427]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[428]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[66]++;
      cov_15fuuzsb0u().s[429]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[430]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[431]++;
    await (0, _db.connectToDatabase)();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[432]++;
    if (!isValidObjectId(userId)) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[132][0]++;
      cov_15fuuzsb0u().s[433]++;
      throw new SellerError(t('invalidSellerData'), 'INVALID_ID');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[132][1]++;
    }
    const seller =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[434]++, await _sellermodel.default.findOne({
      userId
    }).select('-bankInfo.accountNumber').lean());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[435]++;
    if (!seller) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[133][0]++;
      cov_15fuuzsb0u().s[436]++;
      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[133][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[437]++, new Date());
    const dayStart =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[438]++, new Date(now.setHours(0, 0, 0, 0)));
    const weekStart =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[439]++, new Date(now.setDate(now.getDate() - 7)));
    const monthStart =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[440]++, new Date(now.getFullYear(), now.getMonth(), 1));
    const yearStart =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[441]++, new Date(now.getFullYear(), 0, 1));
    const [dailyRevenue, weeklyRevenue, monthlyRevenue, yearlyRevenue, orderStats, productStats, performanceStats, analyticsStats, pointsStats] =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[442]++, await Promise.all([calculateRevenueHelper(seller._id, dayStart), calculateRevenueHelper(seller._id, weekStart), calculateRevenueHelper(seller._id, monthStart), calculateRevenueHelper(seller._id, yearStart), calculateOrderStats(seller._id), calculateProductStats(seller._id), calculatePerformanceStats(seller._id), calculateAnalyticsStats(seller._id), calculatePointsStats(seller._id)]));
    const trend =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[443]++, await calculateTrendHelper(dailyRevenue.total, weeklyRevenue.average));
    const percentage =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[444]++, await calculateGrowthPercentageHelper(monthlyRevenue.total, monthlyRevenue.previous));
    const metrics =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[445]++, {
      revenue: {
        daily: (0, _utils.round2)(dailyRevenue.total),
        weekly: (0, _utils.round2)(weeklyRevenue.total),
        monthly: (0, _utils.round2)(monthlyRevenue.total),
        yearly: (0, _utils.round2)(yearlyRevenue.total),
        trend,
        percentage: (0, _utils.round2)(percentage)
      },
      orders: orderStats,
      products: productStats,
      performance: performanceStats,
      analytics: analyticsStats,
      points: pointsStats
    });
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[446]++;
    performance.mark(PERFORMANCE_MARKERS.END);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[447]++;
    performance.measure('getSellerMetrics Duration', PERFORMANCE_MARKERS.START, PERFORMANCE_MARKERS.END);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[448]++;
    return metrics;
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[449]++;
    console.error('Get seller metrics error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[450]++;
    throw new SellerError(error instanceof SellerError ?
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[134][0]++, error.message) :
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[134][1]++, t('failedToCalculateMetrics')), error instanceof SellerError ?
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[135][0]++, error.code) :
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[135][1]++, 'METRICS_ERROR'));
  }
}
const getCachedSellerMetrics =
/* istanbul ignore next */
(cov_15fuuzsb0u().s[451]++, (0, _react.cache)(async (userId, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[136][0]++, 'en')) => {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[67]++;
  cov_15fuuzsb0u().s[452]++;
  return getSellerMetrics(userId, locale);
}));
async function getProducts(userId, filters =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[137][0]++, {}), locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[138][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[68]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[453]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[454]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api.errors'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[455]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[456]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[69]++;
      cov_15fuuzsb0u().s[457]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[458]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[459]++;
    await (0, _db.connectToDatabase)();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[460]++;
    if (!isValidObjectId(userId)) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[139][0]++;
      cov_15fuuzsb0u().s[461]++;
      throw new SellerError(t('invalidSellerData'), 'INVALID_ID');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[139][1]++;
    }
    const seller =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[462]++, await _sellermodel.default.findOne({
      userId
    }));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[463]++;
    if (!seller) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[140][0]++;
      cov_15fuuzsb0u().s[464]++;
      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[140][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[465]++, {
      sellerId: seller._id
    });
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[466]++;
    if (filters.search) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[141][0]++;
      cov_15fuuzsb0u().s[467]++;
      query.$or = [{
        name: {
          $regex: filters.search,
          $options: 'i'
        }
      }, {
        description: {
          $regex: filters.search,
          $options: 'i'
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[141][1]++;
    }
    cov_15fuuzsb0u().s[468]++;
    if (filters.status) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[142][0]++;
      cov_15fuuzsb0u().s[469]++;
      query.status = filters.status;
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[142][1]++;
    }
    cov_15fuuzsb0u().s[470]++;
    if (filters.category) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[143][0]++;
      cov_15fuuzsb0u().s[471]++;
      query.category = filters.category;
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[143][1]++;
    }
    const sort =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[472]++, {});
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[473]++;
    if (filters.sortBy) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[144][0]++;
      cov_15fuuzsb0u().s[474]++;
      sort[filters.sortBy] = filters.sortOrder === 'desc' ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[145][0]++, -1) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[145][1]++, 1);
    } else {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[144][1]++;
      cov_15fuuzsb0u().s[475]++;
      sort.createdAt = -1;
    }
    const page =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[476]++, Math.max(1,
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[146][0]++, filters.page) ||
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[146][1]++, 1)));
    const limit =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[477]++, Math.min(50,
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[147][0]++, filters.limit) ||
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[147][1]++, 10)));
    const skip =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[478]++, (page - 1) * limit);
    const [products, total] =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[479]++, await Promise.all([_productmodel.default.find(query).sort(sort).skip(skip).limit(limit).lean(), _productmodel.default.countDocuments(query)]));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[480]++;
    return {
      success: true,
      data: {
        products,
        pagination: {
          page,
          limit,
          total,
          pages: Math.ceil(total / limit)
        }
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[481]++;
    console.error('Get products error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[482]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[148][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[148][1]++, t('failedToGetProducts')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[149][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[149][1]++, 'UNKNOWN')
    };
  }
}
async function getSellerOrders(userId, filters =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[150][0]++, {}), locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[151][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[70]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[483]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[484]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api.errors'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[485]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[486]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[71]++;
      cov_15fuuzsb0u().s[487]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[488]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[489]++;
    await (0, _db.connectToDatabase)();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[490]++;
    if (!isValidObjectId(userId)) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[152][0]++;
      cov_15fuuzsb0u().s[491]++;
      throw new SellerError(t('invalidSellerData'), 'INVALID_ID');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[152][1]++;
    }
    const seller =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[492]++, await _sellermodel.default.findOne({
      userId
    }));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[493]++;
    if (!seller) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[153][0]++;
      cov_15fuuzsb0u().s[494]++;
      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[153][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[495]++, {
      sellerId: seller._id
    });
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[496]++;
    if (filters.status) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[154][0]++;
      cov_15fuuzsb0u().s[497]++;
      query.status = filters.status;
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[154][1]++;
    }
    cov_15fuuzsb0u().s[498]++;
    if (
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[156][0]++, filters.startDate) ||
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[156][1]++, filters.endDate)) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[155][0]++;
      cov_15fuuzsb0u().s[499]++;
      query.createdAt = {};
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[500]++;
      if (filters.startDate) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[157][0]++;
        cov_15fuuzsb0u().s[501]++;
        query.createdAt.$gte = filters.startDate;
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[157][1]++;
      }
      cov_15fuuzsb0u().s[502]++;
      if (filters.endDate) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[158][0]++;
        cov_15fuuzsb0u().s[503]++;
        query.createdAt.$lte = filters.endDate;
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[158][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[155][1]++;
    }
    const sort =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[504]++, {});
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[505]++;
    if (filters.sortBy) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[159][0]++;
      cov_15fuuzsb0u().s[506]++;
      sort[filters.sortBy] = -1;
    } else {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[159][1]++;
      cov_15fuuzsb0u().s[507]++;
      sort.createdAt = -1;
    }
    const page =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[508]++, Math.max(1,
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[160][0]++, filters.page) ||
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[160][1]++, 1)));
    const limit =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[509]++, Math.min(50,
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[161][0]++, filters.limit) ||
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[161][1]++, 10)));
    const skip =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[510]++, (page - 1) * limit);
    const [orders, totalOrders] =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[511]++, await Promise.all([_ordermodel.default.find(query).sort(sort).skip(skip).limit(limit).populate('userId', 'name email').lean(), _ordermodel.default.countDocuments(query)]));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[512]++;
    return {
      success: true,
      data: {
        orders,
        currentPage: page,
        totalPages: Math.ceil(totalOrders / limit),
        totalOrders
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[513]++;
    console.error('Get seller orders error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[514]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[162][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[162][1]++, t('failedToGetOrders')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[163][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[163][1]++, 'UNKNOWN')
    };
  }
}
async function updateSellerMetrics(sellerId, data, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[164][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[72]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[515]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[516]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api.errors'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[517]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[518]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[73]++;
      cov_15fuuzsb0u().s[519]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[520]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[521]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[522]++, await _mongoose.default.startSession());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[523]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[524]++;
    try {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[525]++;
      if (!isValidObjectId(sellerId)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[165][0]++;
        cov_15fuuzsb0u().s[526]++;
        throw new SellerError(t('invalidSellerData'), 'INVALID_ID');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[165][1]++;
      }
      const seller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[527]++, await _sellermodel.default.findById(sellerId).session(session));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[528]++;
      if (!seller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[166][0]++;
        cov_15fuuzsb0u().s[529]++;
        throw new SellerError(t('sellerNotFound'), 'NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[166][1]++;
      }
      const updateData =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[530]++, {
        updatedAt: new Date()
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[531]++;
      if (typeof data.productsCount === 'number') {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[167][0]++;
        cov_15fuuzsb0u().s[532]++;
        updateData['metrics.productsCount'] = Math.max(0, data.productsCount);
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[167][1]++;
      }
      cov_15fuuzsb0u().s[533]++;
      if (data.action === 'product_created') {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[168][0]++;
        cov_15fuuzsb0u().s[534]++;
        updateData['metrics.lastProductCreated'] =
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[169][0]++, data.lastProductCreated) ||
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[169][1]++, new Date());
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[535]++;
        updateData['metrics.products.total'] = (
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[170][0]++, seller.metrics.products?.total) ||
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[170][1]++, 0)) + 1;
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[536]++;
        updateData['metrics.products.active'] = (
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[171][0]++, seller.metrics.products?.active) ||
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[171][1]++, 0)) + 1;
      } else {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[168][1]++;
        cov_15fuuzsb0u().s[537]++;
        if (data.action === 'product_deleted') {
          /* istanbul ignore next */
          cov_15fuuzsb0u().b[172][0]++;
          cov_15fuuzsb0u().s[538]++;
          updateData['metrics.products.total'] = Math.max(0, (
          /* istanbul ignore next */
          (cov_15fuuzsb0u().b[173][0]++, seller.metrics.products?.total) ||
          /* istanbul ignore next */
          (cov_15fuuzsb0u().b[173][1]++, 0)) - 1);
          /* istanbul ignore next */
          cov_15fuuzsb0u().s[539]++;
          updateData['metrics.products.active'] = Math.max(0, (
          /* istanbul ignore next */
          (cov_15fuuzsb0u().b[174][0]++, seller.metrics.products?.active) ||
          /* istanbul ignore next */
          (cov_15fuuzsb0u().b[174][1]++, 0)) - 1);
        } else {
          /* istanbul ignore next */
          cov_15fuuzsb0u().b[172][1]++;
          cov_15fuuzsb0u().s[540]++;
          if (data.action === 'product_out_of_stock') {
            /* istanbul ignore next */
            cov_15fuuzsb0u().b[175][0]++;
            cov_15fuuzsb0u().s[541]++;
            updateData['metrics.products.active'] = Math.max(0, (
            /* istanbul ignore next */
            (cov_15fuuzsb0u().b[176][0]++, seller.metrics.products?.active) ||
            /* istanbul ignore next */
            (cov_15fuuzsb0u().b[176][1]++, 0)) - 1);
            /* istanbul ignore next */
            cov_15fuuzsb0u().s[542]++;
            updateData['metrics.products.outOfStock'] = (
            /* istanbul ignore next */
            (cov_15fuuzsb0u().b[177][0]++, seller.metrics.products?.outOfStock) ||
            /* istanbul ignore next */
            (cov_15fuuzsb0u().b[177][1]++, 0)) + 1;
          } else {
            /* istanbul ignore next */
            cov_15fuuzsb0u().b[175][1]++;
            cov_15fuuzsb0u().s[543]++;
            if (data.action === 'product_back_in_stock') {
              /* istanbul ignore next */
              cov_15fuuzsb0u().b[178][0]++;
              cov_15fuuzsb0u().s[544]++;
              updateData['metrics.products.active'] = (
              /* istanbul ignore next */
              (cov_15fuuzsb0u().b[179][0]++, seller.metrics.products?.active) ||
              /* istanbul ignore next */
              (cov_15fuuzsb0u().b[179][1]++, 0)) + 1;
              /* istanbul ignore next */
              cov_15fuuzsb0u().s[545]++;
              updateData['metrics.products.outOfStock'] = Math.max(0, (
              /* istanbul ignore next */
              (cov_15fuuzsb0u().b[180][0]++, seller.metrics.products?.outOfStock) ||
              /* istanbul ignore next */
              (cov_15fuuzsb0u().b[180][1]++, 0)) - 1);
            } else
            /* istanbul ignore next */
            {
              cov_15fuuzsb0u().b[178][1]++;
            }
          }
        }
      }
      const updatedSeller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[546]++, await _sellermodel.default.findByIdAndUpdate(sellerId, {
        $set: updateData
      }, {
        new: true,
        session
      }).select('-bankInfo.accountNumber'));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[547]++;
      if (!updatedSeller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[181][0]++;
        cov_15fuuzsb0u().s[548]++;
        throw new SellerError(t('failedToUpdateMetrics'), 'UPDATE_FAILED');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[181][1]++;
      }
      cov_15fuuzsb0u().s[549]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[550]++;
      (0, _cache.revalidatePath)('/[locale]/seller/dashboard', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[551]++;
      (0, _cache.revalidatePath)('/[locale]/seller/dashboard/products', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[552]++;
      (0, _cache.revalidatePath)('/[locale]/admin/sellers', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[553]++;
      return {
        success: true,
        data: updatedSeller
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[554]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[555]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[556]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[557]++;
    console.error('Update seller metrics error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[558]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[182][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[182][1]++, t('failedToUpdateMetrics')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[183][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[183][1]++, 'UNKNOWN')
    };
  }
}
async function uploadSellerDocument(userId, document, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[184][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[74]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[559]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[560]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[561]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[562]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[75]++;
      cov_15fuuzsb0u().s[563]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[564]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[565]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[566]++, await _mongoose.default.startSession());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[567]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[568]++;
    try {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[569]++;
      if (!isValidObjectId(userId)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[185][0]++;
        cov_15fuuzsb0u().s[570]++;
        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[185][1]++;
      }
      const seller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[571]++, await _sellermodel.default.findOne({
        userId
      }).session(session));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[572]++;
      if (!seller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[186][0]++;
        cov_15fuuzsb0u().s[573]++;
        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[186][1]++;
      }
      cov_15fuuzsb0u().s[574]++;
      if (
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[188][0]++, !document.file) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[188][1]++, document.file.size === 0)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[187][0]++;
        cov_15fuuzsb0u().s[575]++;
        throw new SellerError(t('errors.invalidFile'), 'INVALID_FILE');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[187][1]++;
      }
      const documentUrl =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[576]++, await (0, _s3.uploadToStorage)(document.file, `sellers/${userId}/documents/${document.type}`, {
        contentType: document.file.type,
        maxSize: 10 * 1024 * 1024,
        allowedTypes: ['image/jpeg', 'image/png', 'application/pdf']
      }));
      const verificationResult =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[577]++, await (0, _verification.verifyDocument)(documentUrl, document.type));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[578]++;
      seller.verification.documents.set(document.type, {
        url: documentUrl,
        status: verificationResult.success ?
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[189][0]++, 'verified') :
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[189][1]++, 'pending'),
        uploadedAt: new Date(),
        metadata: document.metadata
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[579]++;
      if (verificationResult.success) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[190][0]++;
        cov_15fuuzsb0u().s[580]++;
        seller.verification.status = 'verified';
        /* istanbul ignore next */
        cov_15fuuzsb0u().s[581]++;
        seller.verification.lastUpdatedAt = new Date();
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[190][1]++;
      }
      cov_15fuuzsb0u().s[582]++;
      await seller.save({
        session
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[583]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[584]++;
      (0, _cache.revalidatePath)('/[locale]/seller/dashboard/verification', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[585]++;
      await (0, _notification.sendNotification)({
        userId,
        type: 'document_uploaded',
        title: t('messages.documentUploadedTitle'),
        message: t('messages.documentUploadedMessage', {
          documentType: document.type,
          status: verificationResult.success ?
          /* istanbul ignore next */
          (cov_15fuuzsb0u().b[191][0]++, 'verified') :
          /* istanbul ignore next */
          (cov_15fuuzsb0u().b[191][1]++, 'pending')
        }),
        data: {
          sellerId: seller._id,
          documentType: document.type
        }
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[586]++;
      return {
        success: true,
        data: seller.verification
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[587]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[588]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[589]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[590]++;
    console.error('Upload document error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[591]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[192][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[192][1]++, t('errors.failedToUploadDocument')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[193][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[193][1]++, 'UNKNOWN')
    };
  }
}
async function deleteSeller(userId, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[194][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[76]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[592]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[593]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[594]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[595]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[77]++;
      cov_15fuuzsb0u().s[596]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[597]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[598]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[599]++, await _mongoose.default.startSession());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[600]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[601]++;
    try {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[602]++;
      if (!isValidObjectId(userId)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[195][0]++;
        cov_15fuuzsb0u().s[603]++;
        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[195][1]++;
      }
      const serverSession =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[604]++, await (0, _auth.auth)());
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[605]++;
      if (
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[197][0]++, !serverSession?.user) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[197][1]++, serverSession.user.role !== 'Admin')) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[196][0]++;
        cov_15fuuzsb0u().s[606]++;
        throw new SellerError(t('errors.unauthorized'), 'UNAUTHORIZED');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[196][1]++;
      }
      const seller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[607]++, await _sellermodel.default.findOne({
        userId
      }).session(session));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[608]++;
      if (!seller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[198][0]++;
        cov_15fuuzsb0u().s[609]++;
        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[198][1]++;
      }
      cov_15fuuzsb0u().s[610]++;
      await Promise.all([_productmodel.default.deleteMany({
        sellerId: seller._id
      }).session(session), _ordermodel.default.deleteMany({
        sellerId: seller._id
      }).session(session),
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[199][0]++, seller.logo) &&
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[199][1]++, (0, _s3.deleteFromStorage)(seller.logo)),
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[200][0]++, seller.settings.customSite?.bannerImage) &&
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[200][1]++, (0, _s3.deleteFromStorage)(seller.settings.customSite.bannerImage)), ...Array.from(seller.verification.documents.values()).map(doc => {
        /* istanbul ignore next */
        cov_15fuuzsb0u().f[78]++;
        cov_15fuuzsb0u().s[611]++;
        return /* istanbul ignore next */(cov_15fuuzsb0u().b[201][0]++, doc.url) &&
        /* istanbul ignore next */
        (cov_15fuuzsb0u().b[201][1]++, (0, _s3.deleteFromStorage)(doc.url));
      })]);
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[612]++;
      await _sellermodel.default.deleteOne({
        _id: seller._id
      }).session(session);
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[613]++;
      await _usermodel.default.findByIdAndUpdate(userId, {
        role: 'USER',
        businessProfile: null
      }, {
        session
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[614]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[615]++;
      (0, _cache.revalidatePath)('/[locale]/seller/dashboard', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[616]++;
      (0, _cache.revalidatePath)('/[locale]/account', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[617]++;
      (0, _cache.revalidatePath)('/[locale]/admin/sellers', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[618]++;
      return {
        success: true,
        message: t('messages.sellerDeleted')
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[619]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[620]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[621]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[622]++;
    console.error('Delete seller error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[623]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[202][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[202][1]++, t('errors.failedToDeleteSeller')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[203][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[203][1]++, 'UNKNOWN')
    };
  }
}
async function suspendSeller(sellerId, reason, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[204][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[79]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[624]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[625]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[626]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[627]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[80]++;
      cov_15fuuzsb0u().s[628]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[629]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[630]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[631]++, await _mongoose.default.startSession());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[632]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[633]++;
    try {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[634]++;
      if (!isValidObjectId(sellerId)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[205][0]++;
        cov_15fuuzsb0u().s[635]++;
        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[205][1]++;
      }
      const serverSession =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[636]++, await (0, _auth.auth)());
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[637]++;
      if (
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[207][0]++, !serverSession?.user) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[207][1]++, serverSession.user.role !== 'Admin')) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[206][0]++;
        cov_15fuuzsb0u().s[638]++;
        throw new SellerError(t('errors.unauthorized'), 'UNAUTHORIZED');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[206][1]++;
      }
      const seller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[639]++, await _sellermodel.default.findById(sellerId).session(session));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[640]++;
      if (!seller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[208][0]++;
        cov_15fuuzsb0u().s[641]++;
        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[208][1]++;
      }
      cov_15fuuzsb0u().s[642]++;
      seller.subscription.status = 'suspended';
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[643]++;
      seller.updatedAt = new Date();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[644]++;
      await seller.save({
        session
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[645]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[646]++;
      (0, _cache.revalidatePath)('/[locale]/seller/dashboard', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[647]++;
      (0, _cache.revalidatePath)('/[locale]/admin/sellers', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[648]++;
      await (0, _notification.sendNotification)({
        userId: seller.userId,
        type: 'account_suspended',
        title: t('messages.accountSuspendedTitle'),
        message: t('messages.accountSuspendedMessage', {
          reason
        }),
        data: {
          sellerId: seller._id,
          reason
        }
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[649]++;
      return {
        success: true,
        data: seller
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[650]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[651]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[652]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[653]++;
    console.error('Suspend seller error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[654]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[209][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[209][1]++, t('errors.failedToSuspendSeller')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[210][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[210][1]++, 'UNKNOWN')
    };
  }
}
async function getAllSellers({
  page =
  /* istanbul ignore next */
  (cov_15fuuzsb0u().b[211][0]++, 1),
  limit =
  /* istanbul ignore next */
  (cov_15fuuzsb0u().b[212][0]++, 10),
  search,
  status,
  sortBy =
  /* istanbul ignore next */
  (cov_15fuuzsb0u().b[213][0]++, 'createdAt'),
  sortOrder =
  /* istanbul ignore next */
  (cov_15fuuzsb0u().b[214][0]++, 'desc')
}, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[215][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[81]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[655]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[656]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api.errors'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[657]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[658]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[82]++;
      cov_15fuuzsb0u().s[659]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[660]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[661]++;
    await (0, _db.connectToDatabase)();
    const serverSession =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[662]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[663]++;
    if (
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[217][0]++, !serverSession?.user) ||
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[217][1]++, serverSession.user.role !== 'Admin')) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[216][0]++;
      cov_15fuuzsb0u().s[664]++;
      throw new SellerError(t('unauthorized'), 'UNAUTHORIZED');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[216][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[665]++, {});
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[666]++;
    if (search) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[218][0]++;
      cov_15fuuzsb0u().s[667]++;
      query.$or = [{
        businessName: {
          $regex: search,
          $options: 'i'
        }
      }, {
        email: {
          $regex: search,
          $options: 'i'
        }
      }, {
        phone: {
          $regex: search,
          $options: 'i'
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[218][1]++;
    }
    cov_15fuuzsb0u().s[668]++;
    if (status) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[219][0]++;
      cov_15fuuzsb0u().s[669]++;
      query['subscription.status'] = status;
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[219][1]++;
    }
    const sort =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[670]++, {});
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[671]++;
    if (sortBy) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[220][0]++;
      cov_15fuuzsb0u().s[672]++;
      sort[sortBy] = sortOrder === 'desc' ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[221][0]++, -1) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[221][1]++, 1);
    } else {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[220][1]++;
      cov_15fuuzsb0u().s[673]++;
      sort.createdAt = -1;
    }
    const skip =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[674]++, (page - 1) * limit);
    const [sellers, total] =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[675]++, await Promise.all([_sellermodel.default.find(query).select('-bankInfo.accountNumber').sort(sort).skip(skip).limit(limit).lean(), _sellermodel.default.countDocuments(query)]));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[676]++;
    return {
      success: true,
      data: {
        sellers,
        pagination: {
          page,
          limit,
          total,
          pages: Math.ceil(total / limit)
        }
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[677]++;
    console.error('Get all sellers error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[678]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[222][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[222][1]++, t('failedToGetSellers')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[223][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[223][1]++, 'UNKNOWN')
    };
  }
}
async function getSellers({
  page =
  /* istanbul ignore next */
  (cov_15fuuzsb0u().b[224][0]++, 1),
  pageSize =
  /* istanbul ignore next */
  (cov_15fuuzsb0u().b[225][0]++, 10),
  search =
  /* istanbul ignore next */
  (cov_15fuuzsb0u().b[226][0]++, '')
}, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[227][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[83]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[679]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[680]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api.errors'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[681]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[682]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[84]++;
      cov_15fuuzsb0u().s[683]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[684]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[685]++;
    await (0, _db.connectToDatabase)();
    const serverSession =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[686]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[687]++;
    if (
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[229][0]++, !serverSession?.user) ||
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[229][1]++, serverSession.user.role !== 'Admin')) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[228][0]++;
      cov_15fuuzsb0u().s[688]++;
      throw new SellerError(t('unauthorized'), 'UNAUTHORIZED');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[228][1]++;
    }
    const query =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[689]++, {});
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[690]++;
    if (search) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[230][0]++;
      cov_15fuuzsb0u().s[691]++;
      query.$or = [{
        businessName: {
          $regex: search,
          $options: 'i'
        }
      }, {
        email: {
          $regex: search,
          $options: 'i'
        }
      }, {
        phone: {
          $regex: search,
          $options: 'i'
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[230][1]++;
    }
    const sort =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[692]++, {
      createdAt: -1
    });
    const skip =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[693]++, (page - 1) * pageSize);
    const [sellers, total] =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[694]++, await Promise.all([_sellermodel.default.find(query).select('-bankInfo.accountNumber').sort(sort).skip(skip).limit(pageSize).lean(), _sellermodel.default.countDocuments(query)]));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[695]++;
    return {
      sellers,
      total
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[696]++;
    console.error('Get sellers error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[697]++;
    throw new SellerError(error instanceof SellerError ?
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[231][0]++, error.message) :
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[231][1]++, t('failedToGetSellers')), error instanceof SellerError ?
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[232][0]++, error.code) :
    /* istanbul ignore next */
    (cov_15fuuzsb0u().b[232][1]++, 'UNKNOWN'));
  }
}
async function createSellerApiKey(userId, name, permissions, expiresAt, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[233][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[85]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[698]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[699]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[700]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[701]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[86]++;
      cov_15fuuzsb0u().s[702]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[703]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[704]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[705]++, await _mongoose.default.startSession());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[706]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[707]++;
    try {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[708]++;
      if (!isValidObjectId(userId)) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[234][0]++;
        cov_15fuuzsb0u().s[709]++;
        throw new SellerError(t('errors.invalidSellerData'), 'INVALID_ID');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[234][1]++;
      }
      const seller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[710]++, await _sellermodel.default.findOne({
        userId
      }).session(session));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[711]++;
      if (!seller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[235][0]++;
        cov_15fuuzsb0u().s[712]++;
        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[235][1]++;
      }
      const planConfig =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[713]++, _constants.subscriptionPlans.find(p => {
        /* istanbul ignore next */
        cov_15fuuzsb0u().f[87]++;
        cov_15fuuzsb0u().s[714]++;
        return p.name === seller.subscription.plan;
      }));
      const maxKeys =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[715]++,
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[236][0]++, planConfig?.features.maxApiKeys) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[236][1]++, 1));
      const keyCount =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[716]++, await ApiKey.countDocuments({
        sellerId: seller._id
      }));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[717]++;
      if (keyCount >= maxKeys) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[237][0]++;
        cov_15fuuzsb0u().s[718]++;
        throw new SellerError(t('errors.apiKeyLimitExceeded', {
          limit: maxKeys
        }), 'API_KEY_LIMIT');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[237][1]++;
      }
      const serverSession =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[719]++, await (0, _auth.auth)());
      const currentUser =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[720]++,
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[238][0]++, serverSession?.user?.id) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[238][1]++, 'system'));
      const apiKey =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[721]++, await _apikeyservice.ApiKeyService.createApiKey({
        name,
        permissions,
        expiresAt,
        sellerId: seller._id
      }, {
        createdBy: currentUser,
        updatedBy: currentUser
      }));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[722]++;
      seller.apiKeys.push(apiKey._id);
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[723]++;
      await seller.save({
        session
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[724]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[725]++;
      (0, _cache.revalidatePath)('/[locale]/seller/dashboard/settings/security', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[726]++;
      await (0, _notification.sendNotification)({
        userId,
        type: 'api_key_created',
        title: t('messages.apiKeyCreatedTitle'),
        message: t('messages.apiKeyCreatedMessage', {
          name
        }),
        data: {
          sellerId: seller._id,
          apiKeyId: apiKey._id
        }
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[727]++;
      return {
        success: true,
        data: apiKey
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[728]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[729]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[730]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[731]++;
    console.error('Create API key error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[732]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[239][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[239][1]++, t('errors.apiKeyCreationFailed')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[240][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[240][1]++, 'UNKNOWN')
    };
  }
}
async function getSellerApiKeys(userId, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[241][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[88]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[733]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[734]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api.errors'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[735]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[736]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[89]++;
      cov_15fuuzsb0u().s[737]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[738]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[739]++;
    await (0, _db.connectToDatabase)();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[740]++;
    if (!isValidObjectId(userId)) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[242][0]++;
      cov_15fuuzsb0u().s[741]++;
      throw new SellerError(t('invalidSellerData'), 'INVALID_ID');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[242][1]++;
    }
    const seller =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[742]++, await _sellermodel.default.findOne({
      userId
    }));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[743]++;
    if (!seller) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[243][0]++;
      cov_15fuuzsb0u().s[744]++;
      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[243][1]++;
    }
    const apiKeys =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[745]++, await ApiKey.find({
      sellerId: seller._id
    }).select('_id name permissions isActive expiresAt lastUsed createdAt'));
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[746]++;
    return {
      success: true,
      data: apiKeys
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[747]++;
    console.error('Get API keys error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[748]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[244][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[244][1]++, t('failedToGetApiKeys')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[245][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[245][1]++, 'UNKNOWN')
    };
  }
}
async function rotateSellerApiKey(userId, apiKeyId, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[246][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[90]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[749]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[750]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[751]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[752]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[91]++;
      cov_15fuuzsb0u().s[753]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[754]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[755]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[756]++, await _mongoose.default.startSession());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[757]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[758]++;
    try {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[759]++;
      if (
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[248][0]++, !isValidObjectId(userId)) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[248][1]++, !isValidObjectId(apiKeyId))) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[247][0]++;
        cov_15fuuzsb0u().s[760]++;
        throw new SellerError(t('errors.invalidData'), 'INVALID_ID');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[247][1]++;
      }
      const seller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[761]++, await _sellermodel.default.findOne({
        userId
      }).session(session));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[762]++;
      if (!seller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[249][0]++;
        cov_15fuuzsb0u().s[763]++;
        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[249][1]++;
      }
      const apiKey =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[764]++, await ApiKey.findOne({
        _id: apiKeyId,
        sellerId: seller._id
      }));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[765]++;
      if (!apiKey) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[250][0]++;
        cov_15fuuzsb0u().s[766]++;
        throw new SellerError(t('errors.apiKeyNotFound'), 'API_KEY_NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[250][1]++;
      }
      const serverSession =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[767]++, await (0, _auth.auth)());
      const currentUser =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[768]++,
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[251][0]++, serverSession?.user?.id) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[251][1]++, 'system'));
      const rotatedApiKey =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[769]++, await _apikeyservice.ApiKeyService.rotateApiKey(apiKeyId, {
        updatedBy: currentUser
      }));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[770]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[771]++;
      (0, _cache.revalidatePath)('/[locale]/seller/dashboard/settings/security', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[772]++;
      await (0, _notification.sendNotification)({
        userId,
        type: 'api_key_rotated',
        title: t('messages.apiKeyRotatedTitle'),
        message: t('messages.apiKeyRotatedMessage', {
          name: rotatedApiKey.name
        }),
        data: {
          sellerId: seller._id,
          apiKeyId: rotatedApiKey._id
        }
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[773]++;
      return {
        success: true,
        data: rotatedApiKey
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[774]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[775]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[776]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[777]++;
    console.error('Rotate API key error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[778]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[252][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[252][1]++, t('errors.apiKeyRotationFailed')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[253][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[253][1]++, 'UNKNOWN')
    };
  }
}
async function deactivateSellerApiKey(userId, apiKeyId, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[254][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[92]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[779]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[780]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'api'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[781]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[782]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[93]++;
      cov_15fuuzsb0u().s[783]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[784]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[785]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[786]++, await _mongoose.default.startSession());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[787]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[788]++;
    try {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[789]++;
      if (
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[256][0]++, !isValidObjectId(userId)) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[256][1]++, !isValidObjectId(apiKeyId))) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[255][0]++;
        cov_15fuuzsb0u().s[790]++;
        throw new SellerError(t('errors.invalidData'), 'INVALID_ID');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[255][1]++;
      }
      const seller =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[791]++, await _sellermodel.default.findOne({
        userId
      }).session(session));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[792]++;
      if (!seller) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[257][0]++;
        cov_15fuuzsb0u().s[793]++;
        throw new SellerError(t('errors.sellerNotFound'), 'NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[257][1]++;
      }
      const apiKey =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[794]++, await ApiKey.findOne({
        _id: apiKeyId,
        sellerId: seller._id
      }));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[795]++;
      if (!apiKey) {
        /* istanbul ignore next */
        cov_15fuuzsb0u().b[258][0]++;
        cov_15fuuzsb0u().s[796]++;
        throw new SellerError(t('errors.apiKeyNotFound'), 'API_KEY_NOT_FOUND');
      } else
      /* istanbul ignore next */
      {
        cov_15fuuzsb0u().b[258][1]++;
      }
      const serverSession =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[797]++, await (0, _auth.auth)());
      const currentUser =
      /* istanbul ignore next */
      (cov_15fuuzsb0u().s[798]++,
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[259][0]++, serverSession?.user?.id) ||
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[259][1]++, 'system'));
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[799]++;
      await _apikeyservice.ApiKeyService.deactivateApiKey(apiKeyId, {
        updatedBy: currentUser
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[800]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[801]++;
      (0, _cache.revalidatePath)('/[locale]/seller/dashboard/settings/security', 'page');
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[802]++;
      await (0, _notification.sendNotification)({
        userId,
        type: 'api_key_deactivated',
        title: t('messages.apiKeyDeactivatedTitle'),
        message: t('messages.apiKeyDeactivatedMessage', {
          name: apiKey.name
        }),
        data: {
          sellerId: seller._id,
          apiKeyId
        }
      });
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[803]++;
      return {
        success: true,
        message: t('messages.apiKeyDeactivated')
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[804]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[805]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_15fuuzsb0u().s[806]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[807]++;
    console.error('Deactivate API key error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[808]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[260][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[260][1]++, t('errors.apiKeyDeactivationFailed')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[261][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[261][1]++, 'UNKNOWN')
    };
  }
}
async function getSellerByCustomSiteUrl(customSiteUrl, locale =
/* istanbul ignore next */
(cov_15fuuzsb0u().b[262][0]++, 'en')) {
  /* istanbul ignore next */
  cov_15fuuzsb0u().f[94]++;
  let t;
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[809]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[810]++;
    t = await (0, _server.getTranslations)({
      locale,
      namespace: 'seller.errors'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[811]++;
    console.error('Failed to load translations:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[812]++;
    t = key => {
      /* istanbul ignore next */
      cov_15fuuzsb0u().f[95]++;
      cov_15fuuzsb0u().s[813]++;
      return key;
    };
  }
  /* istanbul ignore next */
  cov_15fuuzsb0u().s[814]++;
  try {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[815]++;
    await (0, _db.connectToDatabase)();
    const seller =
    /* istanbul ignore next */
    (cov_15fuuzsb0u().s[816]++, await _sellermodel.default.findOne({
      customSiteUrl
    }).select('-bankInfo.accountNumber').lean());
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[817]++;
    if (!seller) {
      /* istanbul ignore next */
      cov_15fuuzsb0u().b[263][0]++;
      cov_15fuuzsb0u().s[818]++;
      throw new SellerError(t('sellerNotFound'), 'NOT_FOUND');
    } else
    /* istanbul ignore next */
    {
      cov_15fuuzsb0u().b[263][1]++;
    }
    cov_15fuuzsb0u().s[819]++;
    return {
      success: true,
      data: seller
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[820]++;
    console.error('Get seller by custom site URL error:', error);
    /* istanbul ignore next */
    cov_15fuuzsb0u().s[821]++;
    return {
      success: false,
      error: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[264][0]++, error.message) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[264][1]++, t('failedToGetSeller')),
      code: error instanceof SellerError ?
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[265][0]++, error.code) :
      /* istanbul ignore next */
      (cov_15fuuzsb0u().b[265][1]++, 'UNKNOWN')
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,