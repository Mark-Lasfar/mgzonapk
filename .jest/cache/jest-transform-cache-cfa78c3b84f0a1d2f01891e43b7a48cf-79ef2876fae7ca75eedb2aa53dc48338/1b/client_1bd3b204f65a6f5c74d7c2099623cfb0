6e9cabc9bd6ebed967a21d2177987444
"use strict";

/* istanbul ignore next */
function cov_2c9c2pp6b8() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/supabase/client.ts";
  var hash = "8f1732c7ae0288b50de8a4d33d8fae4ff41af76a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/supabase/client.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 52
        }
      },
      "4": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "5": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 65
        }
      },
      "6": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "8": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 76
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 0
          },
          end: {
            line: 16,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 0
          },
          end: {
            line: 16,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 16
          }
        }, {
          start: {
            line: 14,
            column: 20
          },
          end: {
            line: 14,
            column: 36
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/supabase/client.ts"],
      sourcesContent: ["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)"],
      names: ["supabase", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseAnonKey", "NEXT_PUBLIC_SUPABASE_ANON_KEY", "Error", "createClient"],
      mappings: ";;;;+BASaA;;;eAAAA;;;4BATgB;AAE7B,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB;AACxD,MAAMC,kBAAkBH,QAAQC,GAAG,CAACG,6BAA6B;AAEjE,IAAI,CAACL,eAAe,CAACI,iBAAiB;IACpC,MAAM,IAAIE,MAAM;AAClB;AAEO,MAAMP,WAAWQ,IAAAA,wBAAY,EAACP,aAAaI"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8f1732c7ae0288b50de8a4d33d8fae4ff41af76a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2c9c2pp6b8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2c9c2pp6b8();
cov_2c9c2pp6b8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2c9c2pp6b8().s[1]++;
Object.defineProperty(exports, "supabase", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2c9c2pp6b8().f[0]++;
    cov_2c9c2pp6b8().s[2]++;
    return supabase;
  }
});
const _supabasejs =
/* istanbul ignore next */
(cov_2c9c2pp6b8().s[3]++, require("@supabase/supabase-js"));
const supabaseUrl =
/* istanbul ignore next */
(cov_2c9c2pp6b8().s[4]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
const supabaseAnonKey =
/* istanbul ignore next */
(cov_2c9c2pp6b8().s[5]++, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);
/* istanbul ignore next */
cov_2c9c2pp6b8().s[6]++;
if (
/* istanbul ignore next */
(cov_2c9c2pp6b8().b[1][0]++, !supabaseUrl) ||
/* istanbul ignore next */
(cov_2c9c2pp6b8().b[1][1]++, !supabaseAnonKey)) {
  /* istanbul ignore next */
  cov_2c9c2pp6b8().b[0][0]++;
  cov_2c9c2pp6b8().s[7]++;
  throw new Error('Missing Supabase environment variables');
} else
/* istanbul ignore next */
{
  cov_2c9c2pp6b8().b[0][1]++;
}
const supabase =
/* istanbul ignore next */
(cov_2c9c2pp6b8().s[8]++, (0, _supabasejs.createClient)(supabaseUrl, supabaseAnonKey));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmM5YzJwcDZiOCIsImFjdHVhbENvdmVyYWdlIiwicyIsInN1cGFiYXNlIiwic3VwYWJhc2VVcmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwic3VwYWJhc2VBbm9uS2V5IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJiIiwiRXJyb3IiLCJfc3VwYWJhc2VqcyIsImNyZWF0ZUNsaWVudCJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9saWIvc3VwYWJhc2UvY2xpZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcydcblxuY29uc3Qgc3VwYWJhc2VVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkxcbmNvbnN0IHN1cGFiYXNlQW5vbktleSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZXG5cbmlmICghc3VwYWJhc2VVcmwgfHwgIXN1cGFiYXNlQW5vbktleSkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgU3VwYWJhc2UgZW52aXJvbm1lbnQgdmFyaWFibGVzJylcbn1cblxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzdXBhYmFzZUFub25LZXkpIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQU9BO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7QUFBQUEsY0FBQSxHQUFBRSxDQUFBOzs7Ozs7K0JBRWE7Ozs7OztXQUFBQyxRQUFBOzs7OztrQ0FUZ0I7QUFFN0IsTUFBTUMsV0FBQTtBQUFBO0FBQUEsQ0FBQUosY0FBQSxHQUFBRSxDQUFBLE9BQWNHLE9BQUEsQ0FBUUMsR0FBRyxDQUFDQyx3QkFBd0I7QUFDeEQsTUFBTUMsZUFBQTtBQUFBO0FBQUEsQ0FBQVIsY0FBQSxHQUFBRSxDQUFBLE9BQWtCRyxPQUFBLENBQVFDLEdBQUcsQ0FBQ0csNkJBQTZCO0FBQUE7QUFBQVQsY0FBQSxHQUFBRSxDQUFBO0FBRWpFO0FBQUk7QUFBQSxDQUFBRixjQUFBLEdBQUFVLENBQUEsV0FBQ04sV0FBQTtBQUFBO0FBQUEsQ0FBQUosY0FBQSxHQUFBVSxDQUFBLFVBQWUsQ0FBQ0YsZUFBQSxHQUFpQjtFQUFBO0VBQUFSLGNBQUEsR0FBQVUsQ0FBQTtFQUFBVixjQUFBLEdBQUFFLENBQUE7RUFDcEMsTUFBTSxJQUFJUyxLQUFBLENBQU07QUFDbEI7QUFBQTtBQUFBO0VBQUFYLGNBQUEsR0FBQVUsQ0FBQTtBQUFBO0FBRU8sTUFBTVAsUUFBQTtBQUFBO0FBQUEsQ0FBQUgsY0FBQSxHQUFBRSxDQUFBLE9BQVcsSUFBQVUsV0FBQSxDQUFBQyxZQUFZLEVBQUNULFdBQUEsRUFBYUksZUFBQSIsImlnbm9yZUxpc3QiOltdfQ==