f89afcbee43cd2c7cb4dc9c39a980656
"use strict";

/* istanbul ignore next */
function cov_mbuvoqy88() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/uploadthing.ts";
  var hash = "48b5051d60268e8215b98086b155008296d58777";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/uploadthing.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 30
        }
      },
      "6": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "7": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 55
        }
      },
      "8": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 59
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 19
          }
        },
        loc: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 15,
            column: 21
          }
        },
        loc: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/uploadthing.ts"],
      sourcesContent: ["import {\n  generateUploadButton,\n  generateUploadDropzone,\n} from '@uploadthing/react'\nimport type { OurFileRouter } from '@/app/api/uploadthing/core'\n\nexport const UploadButton = generateUploadButton<OurFileRouter>()\nexport const UploadDropzone = generateUploadDropzone<OurFileRouter>()\n"],
      names: ["UploadButton", "UploadDropzone", "generateUploadButton", "generateUploadDropzone"],
      mappings: ";;;;;;;;;;;IAMaA,YAAY;eAAZA;;IACAC,cAAc;eAAdA;;;uBAJN;AAGA,MAAMD,eAAeE,IAAAA,2BAAoB;AACzC,MAAMD,iBAAiBE,IAAAA,6BAAsB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "48b5051d60268e8215b98086b155008296d58777"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_mbuvoqy88 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_mbuvoqy88();
cov_mbuvoqy88().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_mbuvoqy88().f[0]++;
  cov_mbuvoqy88().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_mbuvoqy88().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_mbuvoqy88().s[3]++;
_export(exports, {
  UploadButton: function () {
    /* istanbul ignore next */
    cov_mbuvoqy88().f[1]++;
    cov_mbuvoqy88().s[4]++;
    return UploadButton;
  },
  UploadDropzone: function () {
    /* istanbul ignore next */
    cov_mbuvoqy88().f[2]++;
    cov_mbuvoqy88().s[5]++;
    return UploadDropzone;
  }
});
const _react =
/* istanbul ignore next */
(cov_mbuvoqy88().s[6]++, require("@uploadthing/react"));
const UploadButton =
/* istanbul ignore next */
(cov_mbuvoqy88().s[7]++, (0, _react.generateUploadButton)());
const UploadDropzone =
/* istanbul ignore next */
(cov_mbuvoqy88().s[8]++, (0, _react.generateUploadDropzone)());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJVcGxvYWRCdXR0b24iLCJjb3ZfbWJ1dm9xeTg4IiwiZiIsInMiLCJVcGxvYWREcm9wem9uZSIsIl9yZWFjdCIsImdlbmVyYXRlVXBsb2FkQnV0dG9uIiwiZ2VuZXJhdGVVcGxvYWREcm9wem9uZSJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9saWIvdXBsb2FkdGhpbmcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgZ2VuZXJhdGVVcGxvYWRCdXR0b24sXG4gIGdlbmVyYXRlVXBsb2FkRHJvcHpvbmUsXG59IGZyb20gJ0B1cGxvYWR0aGluZy9yZWFjdCdcbmltcG9ydCB0eXBlIHsgT3VyRmlsZVJvdXRlciB9IGZyb20gJ0AvYXBwL2FwaS91cGxvYWR0aGluZy9jb3JlJ1xuXG5leHBvcnQgY29uc3QgVXBsb2FkQnV0dG9uID0gZ2VuZXJhdGVVcGxvYWRCdXR0b248T3VyRmlsZVJvdXRlcj4oKVxuZXhwb3J0IGNvbnN0IFVwbG9hZERyb3B6b25lID0gZ2VuZXJhdGVVcGxvYWREcm9wem9uZTxPdXJGaWxlUm91dGVyPigpXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFNYUEsWUFBWSxXQUFBQSxDQUFBO0lBQUE7SUFBQUMsYUFBQSxHQUFBQyxDQUFBO0lBQUFELGFBQUEsR0FBQUUsQ0FBQTtXQUFaSCxZQUFBOztFQUNBSSxjQUFjLFdBQUFBLENBQUE7SUFBQTtJQUFBSCxhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO1dBQWRDLGNBQUE7Ozs7O2lDQUpOO0FBR0EsTUFBTUosWUFBQTtBQUFBO0FBQUEsQ0FBQUMsYUFBQSxHQUFBRSxDQUFBLE9BQWUsSUFBQUUsTUFBQSxDQUFBQyxvQkFBb0I7QUFDekMsTUFBTUYsY0FBQTtBQUFBO0FBQUEsQ0FBQUgsYUFBQSxHQUFBRSxDQUFBLE9BQWlCLElBQUFFLE1BQUEsQ0FBQUUsc0JBQXNCIiwiaWdub3JlTGlzdCI6W119