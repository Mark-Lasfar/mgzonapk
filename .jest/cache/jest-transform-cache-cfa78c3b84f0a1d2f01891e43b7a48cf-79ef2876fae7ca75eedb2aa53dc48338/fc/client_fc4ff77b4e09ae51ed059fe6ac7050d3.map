{"version":3,"names":["TrackingWebSocketClient","constructor","apiKey","userId","cov_2jjmfdvl3r","f","s","ws","reconnectAttempts","maxReconnectAttempts","reconnectTimeout","handlers","Map","connect","wsUrl","process","env","NEXT_PUBLIC_WS_URL","WebSocket","onopen","emit","status","onmessage","event","data","JSON","parse","type","error","console","onclose","handleReconnect","onerror","b","setTimeout","on","handler","has","set","Set","get","add","off","delete","forEach","disconnect","close"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/websocket/client.ts"],"sourcesContent":["export class TrackingWebSocketClient {\n    private ws: WebSocket | null = null;\n    private reconnectAttempts = 0;\n    private maxReconnectAttempts = 5;\n    private reconnectTimeout = 1000;\n    private handlers: Map<string, Set<(data: any) => void>> = new Map();\n  \n    constructor(private apiKey: string, private userId: string) {}\n  \n    connect() {\n      const wsUrl = `${process.env.NEXT_PUBLIC_WS_URL}/api/v1/tracking?apiKey=${this.apiKey}&userId=${this.userId}`;\n      \n      this.ws = new WebSocket(wsUrl);\n  \n      this.ws.onopen = () => {\n        this.reconnectAttempts = 0;\n        this.emit('connection', { status: 'connected' });\n      };\n  \n      this.ws.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          this.emit(data.type, data);\n        } catch (error) {\n          console.error('WebSocket message parsing error:', error);\n        }\n      };\n  \n      this.ws.onclose = () => {\n        this.emit('connection', { status: 'disconnected' });\n        this.handleReconnect();\n      };\n  \n      this.ws.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        this.emit('error', { error });\n      };\n    }\n  \n    private handleReconnect() {\n      if (this.reconnectAttempts < this.maxReconnectAttempts) {\n        this.reconnectAttempts++;\n        setTimeout(() => {\n          this.connect();\n        }, this.reconnectTimeout * this.reconnectAttempts);\n      }\n    }\n  \n    on(event: string, handler: (data: any) => void) {\n      if (!this.handlers.has(event)) {\n        this.handlers.set(event, new Set());\n      }\n      this.handlers.get(event)!.add(handler);\n    }\n  \n    off(event: string, handler: (data: any) => void) {\n      this.handlers.get(event)?.delete(handler);\n    }\n  \n    private emit(event: string, data: any) {\n      this.handlers.get(event)?.forEach(handler => handler(data));\n    }\n  \n    disconnect() {\n      if (this.ws) {\n        this.ws.close();\n        this.ws = null;\n      }\n    }\n  }"],"mappings":"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","ignoreList":[]}