{"version":3,"names":["ProductList","products","cov_1s9oz71sg5","b","isLoading","f","toast","s","_usetoast","useToast","syncingProducts","setSyncingProducts","_react","useState","handleSync","productId","prev","response","_warehouseactions","syncProductInventory","success","Error","error","title","description","message","variant","filter","id","_jsxruntime","jsxs","className","jsx","_button","Button","asChild","_link","default","href","_table","Table","TableHeader","TableRow","TableHead","TableBody","length","map","product","TableCell","name","_utils","formatCurrency","price","warehouse","availableQuantity","provider","location","lastSync","Date","toLocaleString","size","disabled","includes","_id","onClick","colSpan"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/products/product-list.tsx"],"sourcesContent":["'use client'\n\nimport { Button } from '@/components/ui/button'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table'\nimport { useToast } from '@/hooks/use-toast'\nimport { formatCurrency } from '@/lib/utils'\nimport { syncProductInventory } from '@/lib/actions/warehouse.actions'\nimport Link from 'next/link'\nimport { useState } from 'react'\n\ninterface Warehouse {\n  provider: string\n  location: string\n  availableQuantity: number\n  lastSync?: string\n}\n\ninterface Product {\n  _id: string\n  name: string\n  price: number\n  warehouse: Warehouse\n}\n\ninterface ProductListProps {\n  products?: Product[]\n  isLoading?: boolean\n}\n\nexport default function ProductList({ products = [], isLoading = false }: ProductListProps) {\n  const { toast } = useToast()\n  const [syncingProducts, setSyncingProducts] = useState<string[]>([])\n\n  const handleSync = async (productId: string) => {\n    setSyncingProducts((prev) => [...prev, productId])\n    \n    try {\n      const response = await syncProductInventory(productId)\n      if (!response.success) throw new Error(response.error)\n      \n      toast({\n        title: 'Success',\n        description: 'Product inventory synced successfully',\n      })\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: error instanceof Error ? error.message : 'Failed to sync product',\n        variant: 'destructive',\n      })\n    } finally {\n      setSyncingProducts((prev) => prev.filter(id => id !== productId))\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-4\">\n        <div className=\"h-10 w-32 bg-muted animate-pulse rounded\" />\n        <div className=\"rounded-md border\">\n          <div className=\"h-[400px] flex items-center justify-center\">\n            <p className=\"text-muted-foreground\">Loading products...</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-between\">\n        <Button asChild>\n          <Link href=\"/seller/dashboard/products/create\">Add Product</Link>\n        </Button>\n      </div>\n\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Name</TableHead>\n              <TableHead>Price</TableHead>\n              <TableHead>Stock</TableHead>\n              <TableHead>Warehouse</TableHead>\n              <TableHead>Last Sync</TableHead>\n              <TableHead>Actions</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {products?.length > 0 ? (\n              products.map((product) => (\n                <TableRow key={product._id}>\n                  <TableCell>{product.name}</TableCell>\n                  <TableCell>{formatCurrency(product.price)}</TableCell>\n                  <TableCell>{product.warehouse.availableQuantity}</TableCell>\n                  <TableCell>\n                    {product.warehouse.provider} - {product.warehouse.location}\n                  </TableCell>\n                  <TableCell>\n                    {product.warehouse.lastSync\n                      ? new Date(product.warehouse.lastSync).toLocaleString()\n                      : 'Never'}\n                  </TableCell>\n                  <TableCell>\n                    <div className=\"flex gap-2\">\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        disabled={syncingProducts.includes(product._id)}\n                        onClick={() => handleSync(product._id)}\n                      >\n                        {syncingProducts.includes(product._id) ? 'Syncing...' : 'Sync'}\n                      </Button>\n                      <Button asChild variant=\"outline\" size=\"sm\">\n                        <Link href={`/seller/dashboard/products/${product._id}`}>\n                          Edit\n                        </Link>\n                      </Button>\n                    </div>\n                  </TableCell>\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell colSpan={6} className=\"h-24 text-center\">\n                  No products found. Add your first product to get started.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  )\n}"],"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","ignoreList":[]}