e5cd36f3c8c58b6891ff6de3d13c0d5a
"use strict";

/* istanbul ignore next */
function cov_2qi2jkgr3i() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/integrations/4px/service.ts";
  var hash = "a41103f6fe814f26953228ab8fc3534aa5397952";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/integrations/4px/service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 40
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 42
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 16,
          column: 9
        }
      },
      "5": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 84
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 21,
          column: 11
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "8": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "9": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 70
        }
      },
      "10": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 48,
          column: 14
        }
      },
      "11": {
        start: {
          line: 44,
          column: 48
        },
        end: {
          line: 47,
          column: 21
        }
      },
      "12": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 55,
          column: 14
        }
      },
      "13": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 91
        }
      },
      "14": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "15": {
        start: {
          line: 62,
          column: 29
        },
        end: {
          line: 62,
          column: 64
        }
      },
      "16": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 71,
          column: 14
        }
      },
      "17": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 88
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 23
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 40
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 39
          },
          end: {
            line: 44,
            column: 40
          }
        },
        loc: {
          start: {
            line: 44,
            column: 48
          },
          end: {
            line: 47,
            column: 21
          }
        },
        line: 44
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 39
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 60
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 26
          }
        }, {
          start: {
            line: 14,
            column: 30
          },
          end: {
            line: 14,
            column: 47
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 32,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 32,
            column: 52
          }
        }, {
          start: {
            line: 32,
            column: 56
          },
          end: {
            line: 32,
            column: 58
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 33,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 33,
            column: 58
          }
        }, {
          start: {
            line: 33,
            column: 62
          },
          end: {
            line: 33,
            column: 64
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 30
          },
          end: {
            line: 34,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 30
          },
          end: {
            line: 34,
            column: 59
          }
        }, {
          start: {
            line: 34,
            column: 63
          },
          end: {
            line: 34,
            column: 65
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 30
          },
          end: {
            line: 35,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 30
          },
          end: {
            line: 35,
            column: 59
          }
        }, {
          start: {
            line: 35,
            column: 63
          },
          end: {
            line: 35,
            column: 65
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 27
          },
          end: {
            line: 41,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 27
          },
          end: {
            line: 41,
            column: 54
          }
        }, {
          start: {
            line: 41,
            column: 58
          },
          end: {
            line: 41,
            column: 60
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 57,
            column: 54
          },
          end: {
            line: 57,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 54
          },
          end: {
            line: 57,
            column: 68
          }
        }, {
          start: {
            line: 57,
            column: 72
          },
          end: {
            line: 57,
            column: 87
          }
        }],
        line: 57
      },
      "9": {
        loc: {
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 67,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 67,
            column: 60
          }
        }, {
          start: {
            line: 67,
            column: 64
          },
          end: {
            line: 67,
            column: 66
          }
        }],
        line: 67
      },
      "10": {
        loc: {
          start: {
            line: 68,
            column: 29
          },
          end: {
            line: 68,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 29
          },
          end: {
            line: 68,
            column: 45
          }
        }, {
          start: {
            line: 68,
            column: 49
          },
          end: {
            line: 68,
            column: 51
          }
        }],
        line: 68
      },
      "11": {
        loc: {
          start: {
            line: 73,
            column: 51
          },
          end: {
            line: 73,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 51
          },
          end: {
            line: 73,
            column: 65
          }
        }, {
          start: {
            line: 73,
            column: 69
          },
          end: {
            line: 73,
            column: 84
          }
        }],
        line: 73
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/integrations/4px/service.ts"],
      sourcesContent: ["import { FulfillmentOrder, FulfillmentConfig } from '../../types/fulfillment';\nimport { FourPXClient } from './4px-client';\n\nexport class FourPXFulfillmentService {\n  private client: FourPXClient;\n\n  constructor(config: FulfillmentConfig) {\n    if (!config.apiKey || !config.apiSecret) {\n      throw new Error('Missing API credentials for 4PX fulfillment service.');\n    }\n\n    this.client = new FourPXClient({\n      apiKey: config.apiKey,\n      apiSecret: config.apiSecret,\n      warehouseId: config.warehouseId,\n    });\n  }\n\n  async createFulfillmentOrder(order: FulfillmentOrder) {\n    try {\n      if (!order.items.length) {\n        throw new Error('Order must have at least one item.');\n      }\n\n      const response = await this.client.createOrder({\n        ref_no: order.orderId,\n        warehouse_code: this.client.defaultWarehouse,\n        consignee_info: {\n          name: order.shippingAddress.name || '',\n          company: order.shippingAddress.company || '',\n          address1: order.shippingAddress.street1 || '',\n          address2: order.shippingAddress.street2 || '',\n          city: order.shippingAddress.city,\n          state: order.shippingAddress.state,\n          country: order.shippingAddress.country,\n          postcode: order.shippingAddress.postalCode,\n          phone: order.shippingAddress.phone,\n          email: order.shippingAddress.email || '',\n        },\n        shipping_method: order.shippingMethod,\n        items: order.items.map(item => ({\n          sku: item.sku,\n          quantity: item.quantity,\n        })),\n      });\n\n      return {\n        success: true,\n        data: {\n          orderId: response.order_id,\n          status: 'processing',\n        },\n      };\n    } catch (error: any) {\n      throw new Error(`4PX fulfillment error: ${error?.message || 'Unknown error'}`);\n    }\n  }\n\n  async getFulfillmentOrder(orderId: string) {\n    try {\n      const response = await this.client.getOrder(orderId);\n\n      return {\n        success: true,\n        data: {\n          status: response.status,\n          trackingNumber: response.tracking_number || '',\n          carrier: response.carrier || '',\n          updatedAt: response.update_time,\n        },\n      };\n    } catch (error: any) {\n      throw new Error(`4PX tracking error: ${error?.message || 'Unknown error'}`);\n    }\n  }\n}\n"],
      names: ["FourPXFulfillmentService", "constructor", "config", "apiKey", "apiSecret", "Error", "client", "FourPXClient", "warehouseId", "createFulfillmentOrder", "order", "items", "length", "response", "createOrder", "ref_no", "orderId", "warehouse_code", "defaultWarehouse", "consignee_info", "name", "shippingAddress", "company", "address1", "street1", "address2", "street2", "city", "state", "country", "postcode", "postalCode", "phone", "email", "shipping_method", "shippingMethod", "map", "item", "sku", "quantity", "success", "data", "order_id", "status", "error", "message", "getFulfillmentOrder", "getOrder", "trackingNumber", "tracking_number", "carrier", "updatedAt", "update_time"],
      mappings: ";;;;+BAGaA;;;eAAAA;;;2BAFgB;AAEtB,MAAMA;IAGXC,YAAYC,MAAyB,CAAE;QACrC,IAAI,CAACA,OAAOC,MAAM,IAAI,CAACD,OAAOE,SAAS,EAAE;YACvC,MAAM,IAAIC,MAAM;QAClB;QAEA,IAAI,CAACC,MAAM,GAAG,IAAIC,uBAAY,CAAC;YAC7BJ,QAAQD,OAAOC,MAAM;YACrBC,WAAWF,OAAOE,SAAS;YAC3BI,aAAaN,OAAOM,WAAW;QACjC;IACF;IAEA,MAAMC,uBAAuBC,KAAuB,EAAE;QACpD,IAAI;YACF,IAAI,CAACA,MAAMC,KAAK,CAACC,MAAM,EAAE;gBACvB,MAAM,IAAIP,MAAM;YAClB;YAEA,MAAMQ,WAAW,MAAM,IAAI,CAACP,MAAM,CAACQ,WAAW,CAAC;gBAC7CC,QAAQL,MAAMM,OAAO;gBACrBC,gBAAgB,IAAI,CAACX,MAAM,CAACY,gBAAgB;gBAC5CC,gBAAgB;oBACdC,MAAMV,MAAMW,eAAe,CAACD,IAAI,IAAI;oBACpCE,SAASZ,MAAMW,eAAe,CAACC,OAAO,IAAI;oBAC1CC,UAAUb,MAAMW,eAAe,CAACG,OAAO,IAAI;oBAC3CC,UAAUf,MAAMW,eAAe,CAACK,OAAO,IAAI;oBAC3CC,MAAMjB,MAAMW,eAAe,CAACM,IAAI;oBAChCC,OAAOlB,MAAMW,eAAe,CAACO,KAAK;oBAClCC,SAASnB,MAAMW,eAAe,CAACQ,OAAO;oBACtCC,UAAUpB,MAAMW,eAAe,CAACU,UAAU;oBAC1CC,OAAOtB,MAAMW,eAAe,CAACW,KAAK;oBAClCC,OAAOvB,MAAMW,eAAe,CAACY,KAAK,IAAI;gBACxC;gBACAC,iBAAiBxB,MAAMyB,cAAc;gBACrCxB,OAAOD,MAAMC,KAAK,CAACyB,GAAG,CAACC,CAAAA,OAAS,CAAA;wBAC9BC,KAAKD,KAAKC,GAAG;wBACbC,UAAUF,KAAKE,QAAQ;oBACzB,CAAA;YACF;YAEA,OAAO;gBACLC,SAAS;gBACTC,MAAM;oBACJzB,SAASH,SAAS6B,QAAQ;oBAC1BC,QAAQ;gBACV;YACF;QACF,EAAE,OAAOC,OAAY;YACnB,MAAM,IAAIvC,MAAM,CAAC,uBAAuB,EAAEuC,OAAOC,WAAW,iBAAiB;QAC/E;IACF;IAEA,MAAMC,oBAAoB9B,OAAe,EAAE;QACzC,IAAI;YACF,MAAMH,WAAW,MAAM,IAAI,CAACP,MAAM,CAACyC,QAAQ,CAAC/B;YAE5C,OAAO;gBACLwB,SAAS;gBACTC,MAAM;oBACJE,QAAQ9B,SAAS8B,MAAM;oBACvBK,gBAAgBnC,SAASoC,eAAe,IAAI;oBAC5CC,SAASrC,SAASqC,OAAO,IAAI;oBAC7BC,WAAWtC,SAASuC,WAAW;gBACjC;YACF;QACF,EAAE,OAAOR,OAAY;YACnB,MAAM,IAAIvC,MAAM,CAAC,oBAAoB,EAAEuC,OAAOC,WAAW,iBAAiB;QAC5E;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a41103f6fe814f26953228ab8fc3534aa5397952"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2qi2jkgr3i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2qi2jkgr3i();
cov_2qi2jkgr3i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2qi2jkgr3i().s[1]++;
Object.defineProperty(exports, "FourPXFulfillmentService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2qi2jkgr3i().f[0]++;
    cov_2qi2jkgr3i().s[2]++;
    return FourPXFulfillmentService;
  }
});
const _4pxclient =
/* istanbul ignore next */
(cov_2qi2jkgr3i().s[3]++, require("./4px-client"));
class FourPXFulfillmentService {
  constructor(config) {
    /* istanbul ignore next */
    cov_2qi2jkgr3i().f[1]++;
    cov_2qi2jkgr3i().s[4]++;
    if (
    /* istanbul ignore next */
    (cov_2qi2jkgr3i().b[1][0]++, !config.apiKey) ||
    /* istanbul ignore next */
    (cov_2qi2jkgr3i().b[1][1]++, !config.apiSecret)) {
      /* istanbul ignore next */
      cov_2qi2jkgr3i().b[0][0]++;
      cov_2qi2jkgr3i().s[5]++;
      throw new Error('Missing API credentials for 4PX fulfillment service.');
    } else
    /* istanbul ignore next */
    {
      cov_2qi2jkgr3i().b[0][1]++;
    }
    cov_2qi2jkgr3i().s[6]++;
    this.client = new _4pxclient.FourPXClient({
      apiKey: config.apiKey,
      apiSecret: config.apiSecret,
      warehouseId: config.warehouseId
    });
  }
  async createFulfillmentOrder(order) {
    /* istanbul ignore next */
    cov_2qi2jkgr3i().f[2]++;
    cov_2qi2jkgr3i().s[7]++;
    try {
      /* istanbul ignore next */
      cov_2qi2jkgr3i().s[8]++;
      if (!order.items.length) {
        /* istanbul ignore next */
        cov_2qi2jkgr3i().b[2][0]++;
        cov_2qi2jkgr3i().s[9]++;
        throw new Error('Order must have at least one item.');
      } else
      /* istanbul ignore next */
      {
        cov_2qi2jkgr3i().b[2][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_2qi2jkgr3i().s[10]++, await this.client.createOrder({
        ref_no: order.orderId,
        warehouse_code: this.client.defaultWarehouse,
        consignee_info: {
          name:
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[3][0]++, order.shippingAddress.name) ||
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[3][1]++, ''),
          company:
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[4][0]++, order.shippingAddress.company) ||
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[4][1]++, ''),
          address1:
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[5][0]++, order.shippingAddress.street1) ||
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[5][1]++, ''),
          address2:
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[6][0]++, order.shippingAddress.street2) ||
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[6][1]++, ''),
          city: order.shippingAddress.city,
          state: order.shippingAddress.state,
          country: order.shippingAddress.country,
          postcode: order.shippingAddress.postalCode,
          phone: order.shippingAddress.phone,
          email:
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[7][0]++, order.shippingAddress.email) ||
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[7][1]++, '')
        },
        shipping_method: order.shippingMethod,
        items: order.items.map(item => {
          /* istanbul ignore next */
          cov_2qi2jkgr3i().f[3]++;
          cov_2qi2jkgr3i().s[11]++;
          return {
            sku: item.sku,
            quantity: item.quantity
          };
        })
      }));
      /* istanbul ignore next */
      cov_2qi2jkgr3i().s[12]++;
      return {
        success: true,
        data: {
          orderId: response.order_id,
          status: 'processing'
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2qi2jkgr3i().s[13]++;
      throw new Error(`4PX fulfillment error: ${
      /* istanbul ignore next */
      (cov_2qi2jkgr3i().b[8][0]++, error?.message) ||
      /* istanbul ignore next */
      (cov_2qi2jkgr3i().b[8][1]++, 'Unknown error')}`);
    }
  }
  async getFulfillmentOrder(orderId) {
    /* istanbul ignore next */
    cov_2qi2jkgr3i().f[4]++;
    cov_2qi2jkgr3i().s[14]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2qi2jkgr3i().s[15]++, await this.client.getOrder(orderId));
      /* istanbul ignore next */
      cov_2qi2jkgr3i().s[16]++;
      return {
        success: true,
        data: {
          status: response.status,
          trackingNumber:
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[9][0]++, response.tracking_number) ||
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[9][1]++, ''),
          carrier:
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[10][0]++, response.carrier) ||
          /* istanbul ignore next */
          (cov_2qi2jkgr3i().b[10][1]++, ''),
          updatedAt: response.update_time
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2qi2jkgr3i().s[17]++;
      throw new Error(`4PX tracking error: ${
      /* istanbul ignore next */
      (cov_2qi2jkgr3i().b[11][0]++, error?.message) ||
      /* istanbul ignore next */
      (cov_2qi2jkgr3i().b[11][1]++, 'Unknown error')}`);
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,