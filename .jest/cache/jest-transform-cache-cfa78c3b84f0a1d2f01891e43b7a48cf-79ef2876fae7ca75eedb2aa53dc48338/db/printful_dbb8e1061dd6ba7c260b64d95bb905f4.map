{"version":3,"names":["cov_1kjf7w4e13","actualCoverage","s","PrintfulService","constructor","config","f","apiKey","apiUrl","fetchApi","endpoint","options","b","response","fetch","headers","Authorization","ok","Error","statusText","json","createProduct","data","method","body","JSON","stringify","sync_product","name","thumbnail","design","url","sync_variants","variant_id","variantId","files","position","createOrder","external_id","recipient","items","getShippingRates","getProductVariants","productId"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/pod/printful.ts"],"sourcesContent":["export class PrintfulService {\n    private apiKey: string\n    private apiUrl: string\n  \n    constructor(config: { apiKey: string; apiUrl: string }) {\n      this.apiKey = config.apiKey\n      this.apiUrl = config.apiUrl\n    }\n  \n    private async fetchApi(endpoint: string, options: RequestInit = {}) {\n      const response = await fetch(`${this.apiUrl}${endpoint}`, {\n        ...options,\n        headers: {\n          Authorization: `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json',\n          ...options.headers,\n        },\n      })\n  \n      if (!response.ok) {\n        throw new Error(`Printful API error: ${response.statusText}`)\n      }\n  \n      return response.json()\n    }\n  \n    async createProduct(data: {\n      name: string\n      design: {\n        url: string\n        position: string\n      }\n      productType: string\n      variantId: number\n    }) {\n      return this.fetchApi('/products', {\n        method: 'POST',\n        body: JSON.stringify({\n          sync_product: {\n            name: data.name,\n            thumbnail: data.design.url,\n          },\n          sync_variants: [\n            {\n              variant_id: data.variantId,\n              files: [\n                {\n                  url: data.design.url,\n                  position: data.design.position,\n                },\n              ],\n            },\n          ],\n        }),\n      })\n    }\n  \n    async createOrder(data: {\n      external_id: string\n      recipient: {\n        name: string\n        address1: string\n        city: string\n        state_code: string\n        country_code: string\n        zip: string\n      }\n      items: {\n        sync_variant_id: number\n        quantity: number\n      }[]\n    }) {\n      return this.fetchApi('/orders', {\n        method: 'POST',\n        body: JSON.stringify({\n          external_id: data.external_id,\n          recipient: data.recipient,\n          items: data.items,\n        }),\n      })\n    }\n  \n    async getShippingRates(data: {\n      recipient: {\n        country_code: string\n        state_code: string\n        zip: string\n      }\n      items: {\n        variant_id: number\n        quantity: number\n      }[]\n    }) {\n      return this.fetchApi('/shipping/rates', {\n        method: 'POST',\n        body: JSON.stringify(data),\n      })\n    }\n  \n    async getProductVariants(productId: string) {\n      return this.fetchApi(`/products/${productId}/variants`)\n    }\n  }"],"mappings":"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","ignoreList":[]}