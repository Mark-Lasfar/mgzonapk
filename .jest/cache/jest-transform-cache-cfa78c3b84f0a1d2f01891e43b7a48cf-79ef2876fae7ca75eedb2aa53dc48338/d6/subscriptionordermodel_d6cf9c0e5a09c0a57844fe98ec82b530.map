{"version":3,"names":["cov_172qqn3z5f","actualCoverage","s","_default","subscriptionOrderSchema","_mongoose","Schema","userId","type","String","required","index","planId","trim","amount","Number","min","currency","paymentMethod","enum","values","message","isPaid","Boolean","default","paidAt","Date","paymentResult","id","status","update_time","email_address","createdAt","now","updatedAt","timestamps","SubscriptionOrder","b","models","model"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/subscription-order.model.ts"],"sourcesContent":["import { Schema, model, models, Document } from 'mongoose'\n\nexport interface ISubscriptionOrder extends Document {\n  userId: string\n  planId: string\n  amount: number\n  currency: string\n  paymentMethod: 'stripe' | 'paypal'\n  isPaid: boolean\n  paidAt?: Date\n  paymentResult?: {\n    id: string\n    status: string\n    update_time?: string\n    email_address?: string\n  }\n  createdAt: Date\n  updatedAt: Date\n}\n\nconst subscriptionOrderSchema = new Schema<ISubscriptionOrder>(\n  {\n    userId: {\n      type: String,\n      required: [true, 'User ID is required'],\n      index: true,\n    },\n    planId: {\n      type: String,\n      required: [true, 'Plan ID is required'],\n      trim: true,\n    },\n    amount: {\n      type: Number,\n      required: [true, 'Amount is required'],\n      min: [0, 'Amount cannot be negative'],\n    },\n    currency: {\n      type: String,\n      required: [true, 'Currency is required'],\n      trim: true,\n    },\n    paymentMethod: {\n      type: String,\n      enum: {\n        values: ['stripe', 'paypal'],\n        message: '{VALUE} is not a valid payment method',\n      },\n      required: [true, 'Payment method is required'],\n    },\n    isPaid: {\n      type: Boolean,\n      default: false,\n    },\n    paidAt: {\n      type: Date,\n    },\n    paymentResult: {\n      id: { type: String },\n      status: { type: String },\n      update_time: { type: String },\n      email_address: { type: String },\n    },\n    createdAt: {\n      type: Date,\n      default: Date.now,\n    },\n    updatedAt: {\n      type: Date,\n      default: Date.now,\n    },\n  },\n  {\n    timestamps: true,\n  }\n)\n\nsubscriptionOrderSchema.index({ userId: 1, createdAt: -1 });\nsubscriptionOrderSchema.index({ planId: 1 });\nsubscriptionOrderSchema.index({ isPaid: 1 });\n\nconst SubscriptionOrder = models.SubscriptionOrder || model<ISubscriptionOrder>('SubscriptionOrder', subscriptionOrderSchema)\n\nexport default SubscriptionOrder"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwBiB;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;+BA2DjB;;;;;;WAAAC,QAAA;;;;;kCAnFgD;AAoBhD,MAAMC,uBAAA;AAAA;AAAA,CAAAJ,cAAA,GAAAE,CAAA,OAA0B,IAAIG,SAAA,CAAAC,MAAM,CACxC;EACEC,MAAA,EAAQ;IACNC,IAAA,EAAMC,MAAA;IACNC,QAAA,EAAU,CAAC,MAAM,sBAAsB;IACvCC,KAAA,EAAO;EACT;EACAC,MAAA,EAAQ;IACNJ,IAAA,EAAMC,MAAA;IACNC,QAAA,EAAU,CAAC,MAAM,sBAAsB;IACvCG,IAAA,EAAM;EACR;EACAC,MAAA,EAAQ;IACNN,IAAA,EAAMO,MAAA;IACNL,QAAA,EAAU,CAAC,MAAM,qBAAqB;IACtCM,GAAA,EAAK,CAAC,GAAG;EACX;EACAC,QAAA,EAAU;IACRT,IAAA,EAAMC,MAAA;IACNC,QAAA,EAAU,CAAC,MAAM,uBAAuB;IACxCG,IAAA,EAAM;EACR;EACAK,aAAA,EAAe;IACbV,IAAA,EAAMC,MAAA;IACNU,IAAA,EAAM;MACJC,MAAA,EAAQ,CAAC,UAAU,SAAS;MAC5BC,OAAA,EAAS;IACX;IACAX,QAAA,EAAU,CAAC,MAAM;EACnB;EACAY,MAAA,EAAQ;IACNd,IAAA,EAAMe,OAAA;IACNC,OAAA,EAAS;EACX;EACAC,MAAA,EAAQ;IACNjB,IAAA,EAAMkB;EACR;EACAC,aAAA,EAAe;IACbC,EAAA,EAAI;MAAEpB,IAAA,EAAMC;IAAO;IACnBoB,MAAA,EAAQ;MAAErB,IAAA,EAAMC;IAAO;IACvBqB,WAAA,EAAa;MAAEtB,IAAA,EAAMC;IAAO;IAC5BsB,aAAA,EAAe;MAAEvB,IAAA,EAAMC;IAAO;EAChC;EACAuB,SAAA,EAAW;IACTxB,IAAA,EAAMkB,IAAA;IACNF,OAAA,EAASE,IAAA,CAAKO;EAChB;EACAC,SAAA,EAAW;IACT1B,IAAA,EAAMkB,IAAA;IACNF,OAAA,EAASE,IAAA,CAAKO;EAChB;AACF,GACA;EACEE,UAAA,EAAY;AACd;AAAA;AAAAnC,cAAA,GAAAE,CAAA;AAGFE,uBAAA,CAAwBO,KAAK,CAAC;EAAEJ,MAAA,EAAQ;EAAGyB,SAAA,EAAW,CAAC;AAAE;AAAA;AAAAhC,cAAA,GAAAE,CAAA;AACzDE,uBAAA,CAAwBO,KAAK,CAAC;EAAEC,MAAA,EAAQ;AAAE;AAAA;AAAAZ,cAAA,GAAAE,CAAA;AAC1CE,uBAAA,CAAwBO,KAAK,CAAC;EAAEW,MAAA,EAAQ;AAAE;AAE1C,MAAMc,iBAAA;AAAA;AAAA,CAAApC,cAAA,GAAAE,CAAA;AAAoB;AAAA,CAAAF,cAAA,GAAAqC,CAAA,UAAAhC,SAAA,CAAAiC,MAAM,CAACF,iBAAiB;AAAA;AAAA,CAAApC,cAAA,GAAAqC,CAAA,UAAI,IAAAhC,SAAA,CAAAkC,KAAK,EAAqB,qBAAqBnC,uBAAA;MAErGD,QAAA;AAAA;AAAA,CAAAH,cAAA,GAAAE,CAAA,OAAekC,iBAAA","ignoreList":[]}