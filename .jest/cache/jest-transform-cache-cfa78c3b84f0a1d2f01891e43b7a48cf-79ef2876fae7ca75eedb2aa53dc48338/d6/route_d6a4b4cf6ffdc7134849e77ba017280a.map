{"version":3,"names":["POST","req","cov_2bw66mtrgl","f","s","_db","connectToDatabase","body","json","productId","userId","userName","rating","comment","sendNotification","review","_reviewmodel","default","create","createdAt","Date","product","_productmodel","findById","b","_server","NextResponse","success","message","status","reviews","push","_id","save","t","_nextintl","useTranslations","seller","select","lean","sellerId","toString","type","title","productName","name","channels","data","error","console","Error"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/product/review/route.ts"],"sourcesContent":["'use server';\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { connectToDatabase } from '@/lib/db';\nimport Product from '@/lib/db/models/product.model';\nimport Review from '@/lib/db/models/review.model'; // افترض إن عندك موديل Review\nimport { sendNotification } from '@/lib/utils/notification';\nimport { useTranslations } from 'next-intl';\n\nexport async function POST(req: NextRequest) {\n  try {\n    await connectToDatabase();\n    const body = await req.json();\n    const { productId, userId, userName, rating, comment, sendNotification } = body;\n\n    // أنشئ الـ Review\n    const review = await Review.create({\n      productId,\n      userId,\n      userName,\n      rating,\n      comment,\n      createdAt: new Date(),\n    });\n\n    // تحديث متوسط التقييم في المنتج\n    const product = await Product.findById(productId);\n    if (!product) {\n      return NextResponse.json({ success: false, message: 'Product not found' }, { status: 404 });\n    }\n\n    // افترض إن عندك حقل reviews في الـ Product\n    product.reviews = product.reviews || [];\n    product.reviews.push(review._id);\n    await product.save();\n\n    // إرسال إشعار للبائع إذا طلب\n    if (sendNotification) {\n      const t = useTranslations('product.reviews'); // محتاج تحدد الـ locale هنا، أو تستخدم طريقة تانية\n      const seller = await Product.findById(productId).select('sellerId name').lean();\n      if (seller?.sellerId) {\n        await sendNotification({\n          userId: seller.sellerId.toString(),\n          type: 'product_reviewed',\n          title: t('NewProductReview'),\n          message: t('ProductReviewMessage', {\n            productName: seller.name,\n            rating,\n            comment,\n          }),\n          channels: ['email', 'in_app', 'whatsapp'],\n          data: { productId, rating, comment },\n        });\n      }\n    }\n\n    return NextResponse.json({ success: true, review });\n  } catch (error) {\n    console.error('Review API error:', error);\n    return NextResponse.json(\n      { success: false, message: error instanceof Error ? error.message : 'Failed to submit review' },\n      { status: 500 }\n    );\n  }\n}"],"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","ignoreList":[]}