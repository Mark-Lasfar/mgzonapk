72bcfac5aa2bc00b95391c2900464bb6
"use strict";

/* istanbul ignore next */
function cov_1znwqizchw() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/revenue-sharing.ts";
  var hash = "ac9d98e530a85d6f77cae39cee23b42162c103a4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/revenue-sharing.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 36
        }
      },
      "3": {
        start: {
          line: 11,
          column: 36
        },
        end: {
          line: 11,
          column: 99
        }
      },
      "4": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 99
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 67
        }
      },
      "7": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "8": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 45
        }
      },
      "9": {
        start: {
          line: 23,
          column: 29
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "10": {
        start: {
          line: 24,
          column: 24
        },
        end: {
          line: 24,
          column: 25
        }
      },
      "11": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 25
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 47
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 52
        }
      },
      "14": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "15": {
        start: {
          line: 31,
          column: 29
        },
        end: {
          line: 31,
          column: 89
        }
      },
      "16": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "17": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 50
        }
      },
      "18": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 43
        }
      },
      "19": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 50
        }
      },
      "20": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 38
        }
      },
      "21": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 31
        }
      },
      "22": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 42
        }
      },
      "23": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 42
        }
      },
      "24": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 25
        }
      },
      "25": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 48,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "handleRevenueSharing",
        decl: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 35
          }
        },
        loc: {
          start: {
            line: 18,
            column: 59
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/revenue-sharing.ts"],
      sourcesContent: ["import Product from '@/lib/db/models/product.model';\nimport Partner from '@/lib/db/models/partner.model';\n\nexport async function handleRevenueSharing(productId: string, saleAmount: number) {\n  const product = await Product.findById(productId);\n\n  if (!product) {\n    throw new Error('Product not found');\n  }\n\n  let platformCommission = 0;\n  let sellerRevenue = 0;\n  let sourceRevenue = 0;\n\n  // Platform commission (e.g., 15% of the sale amount)\n  platformCommission = (saleAmount * 15) / 100;\n  sellerRevenue = saleAmount - platformCommission;\n\n  if (product.sourceSellerId) {\n    // Revenue sharing with the source seller\n    const sourceSeller = await Partner.findById(product.sourceSellerId);\n    if (sourceSeller) {\n      sourceRevenue = (saleAmount * 10) / 100; // Example: 10% share\n      sellerRevenue -= sourceRevenue;\n      sourceSeller.balance += sourceRevenue;\n      await sourceSeller.save();\n    }\n  }\n\n  // Update the product's metrics\n  product.metrics.sales += 1;\n  product.metrics.revenue += saleAmount;\n  product.metrics.lastSold = new Date();\n  await product.save();\n\n  return {\n    platformCommission,\n    sellerRevenue,\n    sourceRevenue,\n  };\n}"],
      names: ["handleRevenueSharing", "productId", "saleAmount", "product", "Product", "findById", "Error", "platformCommission", "sellerRevenue", "sourceRevenue", "sourceSellerId", "sourceSeller", "Partner", "balance", "save", "metrics", "sales", "revenue", "lastSold", "Date"],
      mappings: ";;;;+BAGsBA;;;eAAAA;;;qEAHF;qEACA;;;;;;AAEb,eAAeA,qBAAqBC,SAAiB,EAAEC,UAAkB;IAC9E,MAAMC,UAAU,MAAMC,qBAAO,CAACC,QAAQ,CAACJ;IAEvC,IAAI,CAACE,SAAS;QACZ,MAAM,IAAIG,MAAM;IAClB;IAEA,IAAIC,qBAAqB;IACzB,IAAIC,gBAAgB;IACpB,IAAIC,gBAAgB;IAEpB,qDAAqD;IACrDF,qBAAqB,AAACL,aAAa,KAAM;IACzCM,gBAAgBN,aAAaK;IAE7B,IAAIJ,QAAQO,cAAc,EAAE;QAC1B,yCAAyC;QACzC,MAAMC,eAAe,MAAMC,qBAAO,CAACP,QAAQ,CAACF,QAAQO,cAAc;QAClE,IAAIC,cAAc;YAChBF,gBAAgB,AAACP,aAAa,KAAM,KAAK,qBAAqB;YAC9DM,iBAAiBC;YACjBE,aAAaE,OAAO,IAAIJ;YACxB,MAAME,aAAaG,IAAI;QACzB;IACF;IAEA,+BAA+B;IAC/BX,QAAQY,OAAO,CAACC,KAAK,IAAI;IACzBb,QAAQY,OAAO,CAACE,OAAO,IAAIf;IAC3BC,QAAQY,OAAO,CAACG,QAAQ,GAAG,IAAIC;IAC/B,MAAMhB,QAAQW,IAAI;IAElB,OAAO;QACLP;QACAC;QACAC;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ac9d98e530a85d6f77cae39cee23b42162c103a4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1znwqizchw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1znwqizchw();
cov_1znwqizchw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1znwqizchw().s[1]++;
Object.defineProperty(exports, "handleRevenueSharing", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1znwqizchw().f[0]++;
    cov_1znwqizchw().s[2]++;
    return handleRevenueSharing;
  }
});
const _productmodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_1znwqizchw().s[3]++, _interop_require_default(require("../db/models/product.model")));
const _partnermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_1znwqizchw().s[4]++, _interop_require_default(require("../db/models/partner.model")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1znwqizchw().f[1]++;
  cov_1znwqizchw().s[5]++;
  return /* istanbul ignore next */(cov_1znwqizchw().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1znwqizchw().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1znwqizchw().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1znwqizchw().b[0][1]++, {
    default: obj
  });
}
async function handleRevenueSharing(productId, saleAmount) {
  /* istanbul ignore next */
  cov_1znwqizchw().f[2]++;
  const product =
  /* istanbul ignore next */
  (cov_1znwqizchw().s[6]++, await _productmodel.default.findById(productId));
  /* istanbul ignore next */
  cov_1znwqizchw().s[7]++;
  if (!product) {
    /* istanbul ignore next */
    cov_1znwqizchw().b[2][0]++;
    cov_1znwqizchw().s[8]++;
    throw new Error('Product not found');
  } else
  /* istanbul ignore next */
  {
    cov_1znwqizchw().b[2][1]++;
  }
  let platformCommission =
  /* istanbul ignore next */
  (cov_1znwqizchw().s[9]++, 0);
  let sellerRevenue =
  /* istanbul ignore next */
  (cov_1znwqizchw().s[10]++, 0);
  let sourceRevenue =
  /* istanbul ignore next */
  (cov_1znwqizchw().s[11]++, 0);
  // Platform commission (e.g., 15% of the sale amount)
  /* istanbul ignore next */
  cov_1znwqizchw().s[12]++;
  platformCommission = saleAmount * 15 / 100;
  /* istanbul ignore next */
  cov_1znwqizchw().s[13]++;
  sellerRevenue = saleAmount - platformCommission;
  /* istanbul ignore next */
  cov_1znwqizchw().s[14]++;
  if (product.sourceSellerId) {
    /* istanbul ignore next */
    cov_1znwqizchw().b[3][0]++;
    // Revenue sharing with the source seller
    const sourceSeller =
    /* istanbul ignore next */
    (cov_1znwqizchw().s[15]++, await _partnermodel.default.findById(product.sourceSellerId));
    /* istanbul ignore next */
    cov_1znwqizchw().s[16]++;
    if (sourceSeller) {
      /* istanbul ignore next */
      cov_1znwqizchw().b[4][0]++;
      cov_1znwqizchw().s[17]++;
      sourceRevenue = saleAmount * 10 / 100; // Example: 10% share
      /* istanbul ignore next */
      cov_1znwqizchw().s[18]++;
      sellerRevenue -= sourceRevenue;
      /* istanbul ignore next */
      cov_1znwqizchw().s[19]++;
      sourceSeller.balance += sourceRevenue;
      /* istanbul ignore next */
      cov_1znwqizchw().s[20]++;
      await sourceSeller.save();
    } else
    /* istanbul ignore next */
    {
      cov_1znwqizchw().b[4][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1znwqizchw().b[3][1]++;
  }
  // Update the product's metrics
  cov_1znwqizchw().s[21]++;
  product.metrics.sales += 1;
  /* istanbul ignore next */
  cov_1znwqizchw().s[22]++;
  product.metrics.revenue += saleAmount;
  /* istanbul ignore next */
  cov_1znwqizchw().s[23]++;
  product.metrics.lastSold = new Date();
  /* istanbul ignore next */
  cov_1znwqizchw().s[24]++;
  await product.save();
  /* istanbul ignore next */
  cov_1znwqizchw().s[25]++;
  return {
    platformCommission,
    sellerRevenue,
    sourceRevenue
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJoYW5kbGVSZXZlbnVlU2hhcmluZyIsInByb2R1Y3RJZCIsInNhbGVBbW91bnQiLCJjb3ZfMXpud3FpemNodyIsImYiLCJwcm9kdWN0IiwicyIsIl9wcm9kdWN0bW9kZWwiLCJkZWZhdWx0IiwiZmluZEJ5SWQiLCJiIiwiRXJyb3IiLCJwbGF0Zm9ybUNvbW1pc3Npb24iLCJzZWxsZXJSZXZlbnVlIiwic291cmNlUmV2ZW51ZSIsInNvdXJjZVNlbGxlcklkIiwic291cmNlU2VsbGVyIiwiX3BhcnRuZXJtb2RlbCIsImJhbGFuY2UiLCJzYXZlIiwibWV0cmljcyIsInNhbGVzIiwicmV2ZW51ZSIsImxhc3RTb2xkIiwiRGF0ZSJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9saWIvYWN0aW9ucy9yZXZlbnVlLXNoYXJpbmcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb2R1Y3QgZnJvbSAnQC9saWIvZGIvbW9kZWxzL3Byb2R1Y3QubW9kZWwnO1xuaW1wb3J0IFBhcnRuZXIgZnJvbSAnQC9saWIvZGIvbW9kZWxzL3BhcnRuZXIubW9kZWwnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlUmV2ZW51ZVNoYXJpbmcocHJvZHVjdElkOiBzdHJpbmcsIHNhbGVBbW91bnQ6IG51bWJlcikge1xuICBjb25zdCBwcm9kdWN0ID0gYXdhaXQgUHJvZHVjdC5maW5kQnlJZChwcm9kdWN0SWQpO1xuXG4gIGlmICghcHJvZHVjdCkge1xuICAgIHRocm93IG5ldyBFcnJvcignUHJvZHVjdCBub3QgZm91bmQnKTtcbiAgfVxuXG4gIGxldCBwbGF0Zm9ybUNvbW1pc3Npb24gPSAwO1xuICBsZXQgc2VsbGVyUmV2ZW51ZSA9IDA7XG4gIGxldCBzb3VyY2VSZXZlbnVlID0gMDtcblxuICAvLyBQbGF0Zm9ybSBjb21taXNzaW9uIChlLmcuLCAxNSUgb2YgdGhlIHNhbGUgYW1vdW50KVxuICBwbGF0Zm9ybUNvbW1pc3Npb24gPSAoc2FsZUFtb3VudCAqIDE1KSAvIDEwMDtcbiAgc2VsbGVyUmV2ZW51ZSA9IHNhbGVBbW91bnQgLSBwbGF0Zm9ybUNvbW1pc3Npb247XG5cbiAgaWYgKHByb2R1Y3Quc291cmNlU2VsbGVySWQpIHtcbiAgICAvLyBSZXZlbnVlIHNoYXJpbmcgd2l0aCB0aGUgc291cmNlIHNlbGxlclxuICAgIGNvbnN0IHNvdXJjZVNlbGxlciA9IGF3YWl0IFBhcnRuZXIuZmluZEJ5SWQocHJvZHVjdC5zb3VyY2VTZWxsZXJJZCk7XG4gICAgaWYgKHNvdXJjZVNlbGxlcikge1xuICAgICAgc291cmNlUmV2ZW51ZSA9IChzYWxlQW1vdW50ICogMTApIC8gMTAwOyAvLyBFeGFtcGxlOiAxMCUgc2hhcmVcbiAgICAgIHNlbGxlclJldmVudWUgLT0gc291cmNlUmV2ZW51ZTtcbiAgICAgIHNvdXJjZVNlbGxlci5iYWxhbmNlICs9IHNvdXJjZVJldmVudWU7XG4gICAgICBhd2FpdCBzb3VyY2VTZWxsZXIuc2F2ZSgpO1xuICAgIH1cbiAgfVxuXG4gIC8vIFVwZGF0ZSB0aGUgcHJvZHVjdCdzIG1ldHJpY3NcbiAgcHJvZHVjdC5tZXRyaWNzLnNhbGVzICs9IDE7XG4gIHByb2R1Y3QubWV0cmljcy5yZXZlbnVlICs9IHNhbGVBbW91bnQ7XG4gIHByb2R1Y3QubWV0cmljcy5sYXN0U29sZCA9IG5ldyBEYXRlKCk7XG4gIGF3YWl0IHByb2R1Y3Quc2F2ZSgpO1xuXG4gIHJldHVybiB7XG4gICAgcGxhdGZvcm1Db21taXNzaW9uLFxuICAgIHNlbGxlclJldmVudWUsXG4gICAgc291cmNlUmV2ZW51ZSxcbiAgfTtcbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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