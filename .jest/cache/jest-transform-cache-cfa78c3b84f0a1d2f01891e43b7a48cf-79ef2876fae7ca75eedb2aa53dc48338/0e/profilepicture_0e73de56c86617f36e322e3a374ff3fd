6477ff0087eed93b18cea9b3c216233b
'use client';
"use strict";

/* istanbul ignore next */
function cov_2oa8mf3i6m() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/shared/profile-picture.tsx";
  var hash = "044ec6903200093d4f7a841900956fee7072cf23";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/shared/profile-picture.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 39
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "7": {
        start: {
          line: 16,
          column: 39
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 28
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "9": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "10": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 21,
          column: 20
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 66
        }
      },
      "12": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 19
        }
      },
      "14": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "16": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 53
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 30
        }
      },
      "19": {
        start: {
          line: 36,
          column: 17
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "20": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 39,
          column: 88
        }
      },
      "21": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "22": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "23": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 95
        }
      },
      "24": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "25": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 57
        }
      },
      "26": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 39
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 25
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "29": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "30": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 18
        }
      },
      "31": {
        start: {
          line: 57,
          column: 30
        },
        end: {
          line: 57,
          column: 56
        }
      },
      "32": {
        start: {
          line: 58,
          column: 29
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "33": {
        start: {
          line: 59,
          column: 21
        },
        end: {
          line: 59,
          column: 44
        }
      },
      "34": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "35": {
        start: {
          line: 61,
          column: 27
        },
        end: {
          line: 61,
          column: 43
        }
      },
      "36": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 64,
          column: 14
        }
      },
      "37": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 40
        }
      },
      "38": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 39
        }
      },
      "39": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 91,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 47
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 19,
            column: 40
          }
        },
        loc: {
          start: {
            line: 19,
            column: 61
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 34
          }
        },
        loc: {
          start: {
            line: 23,
            column: 53
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "ProfilePicture",
        decl: {
          start: {
            line: 56,
            column: 9
          },
          end: {
            line: 56,
            column: 23
          }
        },
        loc: {
          start: {
            line: 56,
            column: 26
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 58,
            column: 29
          },
          end: {
            line: 58,
            column: 30
          }
        },
        loc: {
          start: {
            line: 58,
            column: 38
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 58
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 62,
            column: 29
          }
        },
        loc: {
          start: {
            line: 62,
            column: 32
          },
          end: {
            line: 64,
            column: 13
          }
        },
        line: 62
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 20,
            column: 45
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 65
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 24,
            column: 20
          }
        }, {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 24,
            column: 27
          }
        }, {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 45
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 20
          }
        }, {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 47
          }
        }, {
          start: {
            line: 27,
            column: 51
          },
          end: {
            line: 27,
            column: 76
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 31
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 32
          },
          end: {
            line: 39,
            column: 53
          }
        }, {
          start: {
            line: 39,
            column: 57
          },
          end: {
            line: 39,
            column: 88
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "10": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 41,
            column: 29
          }
        }, {
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 41,
            column: 79
          }
        }],
        line: 41
      },
      "11": {
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 47
          },
          end: {
            line: 42,
            column: 88
          }
        }, {
          start: {
            line: 42,
            column: 91
          },
          end: {
            line: 42,
            column: 95
          }
        }],
        line: 42
      },
      "12": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 19
          },
          end: {
            line: 47,
            column: 13
          }
        }],
        line: 43
      },
      "13": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 20
          }
        }, {
          start: {
            line: 43,
            column: 25
          },
          end: {
            line: 43,
            column: 33
          }
        }, {
          start: {
            line: 43,
            column: 37
          },
          end: {
            line: 43,
            column: 45
          }
        }],
        line: 43
      },
      "14": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "15": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "16": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 78,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 34
          },
          end: {
            line: 75,
            column: 14
          }
        }, {
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 78,
            column: 14
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/shared/profile-picture.tsx"],
      sourcesContent: ["'use client'\n\nimport React, { useState } from 'react'\nimport { Button } from '@/components/ui/button'\n\nexport default function ProfilePicture() {\n  const [image, setImage] = useState<string | null>(null)\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0]\n    if (file) {\n      const reader = new FileReader()\n      reader.onload = () => {\n        setImage(reader.result as string)\n      }\n      reader.readAsDataURL(file)\n    }\n  }\n\n  return (\n    <div className=\"profile-picture\">\n      {image ? (\n        <img src={image} alt=\"Profile\" className=\"w-32 h-32 rounded-full\" />\n      ) : (\n        <div className=\"w-32 h-32 bg-gray-300 rounded-full flex items-center justify-center\">\n          No Image\n        </div>\n      )}\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleFileChange}\n        className=\"mt-2\"\n      />\n      <Button variant=\"outline\" className=\"mt-2\">\n        Upload\n      </Button>\n    </div>\n  )\n}"],
      names: ["ProfilePicture", "image", "setImage", "useState", "handleFileChange", "event", "file", "target", "files", "reader", "FileReader", "onload", "result", "readAsDataURL", "div", "className", "img", "src", "alt", "input", "type", "accept", "onChange", "Button", "variant"],
      mappings: "AAAA;;;;;+BAKA;;;eAAwBA;;;;+DAHQ;wBACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAER,SAASA;IACtB,MAAM,CAACC,OAAOC,SAAS,GAAGC,IAAAA,eAAQ,EAAgB;IAElD,MAAMC,mBAAmB,CAACC;QACxB,MAAMC,OAAOD,MAAME,MAAM,CAACC,KAAK,EAAE,CAAC,EAAE;QACpC,IAAIF,MAAM;YACR,MAAMG,SAAS,IAAIC;YACnBD,OAAOE,MAAM,GAAG;gBACdT,SAASO,OAAOG,MAAM;YACxB;YACAH,OAAOI,aAAa,CAACP;QACvB;IACF;IAEA,qBACE,sBAACQ;QAAIC,WAAU;;YACZd,sBACC,qBAACe;gBAAIC,KAAKhB;gBAAOiB,KAAI;gBAAUH,WAAU;+BAEzC,qBAACD;gBAAIC,WAAU;0BAAsE;;0BAIvF,qBAACI;gBACCC,MAAK;gBACLC,QAAO;gBACPC,UAAUlB;gBACVW,WAAU;;0BAEZ,qBAACQ,cAAM;gBAACC,SAAQ;gBAAUT,WAAU;0BAAO;;;;AAKjD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "044ec6903200093d4f7a841900956fee7072cf23"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2oa8mf3i6m = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2oa8mf3i6m();
cov_2oa8mf3i6m().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2oa8mf3i6m().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2oa8mf3i6m().f[0]++;
    cov_2oa8mf3i6m().s[2]++;
    return ProfilePicture;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2oa8mf3i6m().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2oa8mf3i6m().s[4]++, _interop_require_wildcard(require("react")));
const _button =
/* istanbul ignore next */
(cov_2oa8mf3i6m().s[5]++, require("../ui/button"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2oa8mf3i6m().f[1]++;
  cov_2oa8mf3i6m().s[6]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2oa8mf3i6m().b[0][0]++;
    cov_2oa8mf3i6m().s[7]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2oa8mf3i6m().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().s[8]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().s[9]++, new WeakMap());
  /* istanbul ignore next */
  cov_2oa8mf3i6m().s[10]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2oa8mf3i6m().f[2]++;
    cov_2oa8mf3i6m().s[11]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2oa8mf3i6m().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2oa8mf3i6m().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2oa8mf3i6m().f[3]++;
  cov_2oa8mf3i6m().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2oa8mf3i6m().b[2][0]++;
    cov_2oa8mf3i6m().s[13]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2oa8mf3i6m().b[2][1]++;
  }
  cov_2oa8mf3i6m().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2oa8mf3i6m().b[4][0]++;
    cov_2oa8mf3i6m().s[15]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2oa8mf3i6m().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().s[16]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2oa8mf3i6m().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2oa8mf3i6m().b[6][0]++;
    cov_2oa8mf3i6m().s[18]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2oa8mf3i6m().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().s[19]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().s[20]++,
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2oa8mf3i6m().s[21]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2oa8mf3i6m().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_2oa8mf3i6m().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2oa8mf3i6m().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2oa8mf3i6m().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2oa8mf3i6m().s[23]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2oa8mf3i6m().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2oa8mf3i6m().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2oa8mf3i6m().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_2oa8mf3i6m().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2oa8mf3i6m().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2oa8mf3i6m().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2oa8mf3i6m().b[12][0]++;
        cov_2oa8mf3i6m().s[25]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2oa8mf3i6m().b[12][1]++;
        cov_2oa8mf3i6m().s[26]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2oa8mf3i6m().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2oa8mf3i6m().s[27]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2oa8mf3i6m().s[28]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2oa8mf3i6m().b[14][0]++;
    cov_2oa8mf3i6m().s[29]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2oa8mf3i6m().b[14][1]++;
  }
  cov_2oa8mf3i6m().s[30]++;
  return newObj;
}
function ProfilePicture() {
  /* istanbul ignore next */
  cov_2oa8mf3i6m().f[4]++;
  const [image, setImage] =
  /* istanbul ignore next */
  (cov_2oa8mf3i6m().s[31]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_2oa8mf3i6m().s[32]++;
  const handleFileChange = event => {
    /* istanbul ignore next */
    cov_2oa8mf3i6m().f[5]++;
    const file =
    /* istanbul ignore next */
    (cov_2oa8mf3i6m().s[33]++, event.target.files?.[0]);
    /* istanbul ignore next */
    cov_2oa8mf3i6m().s[34]++;
    if (file) {
      /* istanbul ignore next */
      cov_2oa8mf3i6m().b[15][0]++;
      const reader =
      /* istanbul ignore next */
      (cov_2oa8mf3i6m().s[35]++, new FileReader());
      /* istanbul ignore next */
      cov_2oa8mf3i6m().s[36]++;
      reader.onload = () => {
        /* istanbul ignore next */
        cov_2oa8mf3i6m().f[6]++;
        cov_2oa8mf3i6m().s[37]++;
        setImage(reader.result);
      };
      /* istanbul ignore next */
      cov_2oa8mf3i6m().s[38]++;
      reader.readAsDataURL(file);
    } else
    /* istanbul ignore next */
    {
      cov_2oa8mf3i6m().b[15][1]++;
    }
  };
  /* istanbul ignore next */
  cov_2oa8mf3i6m().s[39]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "profile-picture",
    children: [image ?
    /* istanbul ignore next */
    (/*#__PURE__*/cov_2oa8mf3i6m().b[16][0]++, (0, _jsxruntime.jsx)("img", {
      src: image,
      alt: "Profile",
      className: "w-32 h-32 rounded-full"
    })) :
    /* istanbul ignore next */
    (/*#__PURE__*/cov_2oa8mf3i6m().b[16][1]++, (0, _jsxruntime.jsx)("div", {
      className: "w-32 h-32 bg-gray-300 rounded-full flex items-center justify-center",
      children: "No Image"
    })), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
      type: "file",
      accept: "image/*",
      onChange: handleFileChange,
      className: "mt-2"
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
      variant: "outline",
      className: "mt-2",
      children: "Upload"
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm9maWxlUGljdHVyZSIsImNvdl8yb2E4bWYzaTZtIiwiZiIsImltYWdlIiwic2V0SW1hZ2UiLCJzIiwiX3JlYWN0IiwidXNlU3RhdGUiLCJoYW5kbGVGaWxlQ2hhbmdlIiwiZXZlbnQiLCJmaWxlIiwidGFyZ2V0IiwiZmlsZXMiLCJiIiwicmVhZGVyIiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsInJlc3VsdCIsInJlYWRBc0RhdGFVUkwiLCJfanN4cnVudGltZSIsImpzeHMiLCJjbGFzc05hbWUiLCJqc3giLCJzcmMiLCJhbHQiLCJ0eXBlIiwiYWNjZXB0Iiwib25DaGFuZ2UiLCJfYnV0dG9uIiwiQnV0dG9uIiwidmFyaWFudCJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9jb21wb25lbnRzL3NoYXJlZC9wcm9maWxlLXBpY3R1cmUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9idXR0b24nXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFByb2ZpbGVQaWN0dXJlKCkge1xuICBjb25zdCBbaW1hZ2UsIHNldEltYWdlXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpXG5cbiAgY29uc3QgaGFuZGxlRmlsZUNoYW5nZSA9IChldmVudDogUmVhY3QuQ2hhbmdlRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IHtcbiAgICBjb25zdCBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzPy5bMF1cbiAgICBpZiAoZmlsZSkge1xuICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKVxuICAgICAgcmVhZGVyLm9ubG9hZCA9ICgpID0+IHtcbiAgICAgICAgc2V0SW1hZ2UocmVhZGVyLnJlc3VsdCBhcyBzdHJpbmcpXG4gICAgICB9XG4gICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJwcm9maWxlLXBpY3R1cmVcIj5cbiAgICAgIHtpbWFnZSA/IChcbiAgICAgICAgPGltZyBzcmM9e2ltYWdlfSBhbHQ9XCJQcm9maWxlXCIgY2xhc3NOYW1lPVwidy0zMiBoLTMyIHJvdW5kZWQtZnVsbFwiIC8+XG4gICAgICApIDogKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInctMzIgaC0zMiBiZy1ncmF5LTMwMCByb3VuZGVkLWZ1bGwgZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXJcIj5cbiAgICAgICAgICBObyBJbWFnZVxuICAgICAgICA8L2Rpdj5cbiAgICAgICl9XG4gICAgICA8aW5wdXRcbiAgICAgICAgdHlwZT1cImZpbGVcIlxuICAgICAgICBhY2NlcHQ9XCJpbWFnZS8qXCJcbiAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUZpbGVDaGFuZ2V9XG4gICAgICAgIGNsYXNzTmFtZT1cIm10LTJcIlxuICAgICAgLz5cbiAgICAgIDxCdXR0b24gdmFyaWFudD1cIm91dGxpbmVcIiBjbGFzc05hbWU9XCJtdC0yXCI+XG4gICAgICAgIFVwbG9hZFxuICAgICAgPC9CdXR0b24+XG4gICAgPC9kaXY+XG4gIClcbn0iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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