9443228441908c96c941861617c554e3
'use client';
"use strict";

/* istanbul ignore next */
function cov_ddoohiz9i() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/ui/toaster.tsx";
  var hash = "4ce507ba7ea486f1f2847b62999b8c9145035c7d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/ui/toaster.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 23
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 18
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "5": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "6": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 48
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 41,
          column: 7
        }
      },
      "8": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 37,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "Toaster",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 16
          }
        },
        loc: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 19,
            column: 24
          }
        },
        loc: {
          start: {
            line: 19,
            column: 78
          },
          end: {
            line: 38,
            column: 13
          }
        },
        line: 19
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 32
          },
          end: {
            line: 28,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 32
          },
          end: {
            line: 26,
            column: 37
          }
        }, {
          start: {
            line: 26,
            column: 55
          },
          end: {
            line: 28,
            column: 34
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 32
          },
          end: {
            line: 31,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 32
          },
          end: {
            line: 29,
            column: 43
          }
        }, {
          start: {
            line: 29,
            column: 61
          },
          end: {
            line: 31,
            column: 34
          }
        }],
        line: 29
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/ui/toaster.tsx"],
      sourcesContent: ["'use client'\n\nimport { useToast } from '@/hooks/use-toast'\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from '@/components/ui/toast'\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],
      names: ["Toaster", "toasts", "useToast", "ToastProvider", "map", "id", "title", "description", "action", "props", "Toast", "div", "className", "ToastTitle", "ToastDescription", "ToastClose", "ToastViewport"],
      mappings: "AAAA;;;;;+BAYgBA;;;eAAAA;;;;0BAVS;uBAQlB;AAEA,SAASA;IACd,MAAM,EAAEC,MAAM,EAAE,GAAGC,IAAAA,kBAAQ;IAE3B,qBACE,sBAACC,oBAAa;;YACXF,OAAOG,GAAG,CAAC,SAAU,EAAEC,EAAE,EAAEC,KAAK,EAAEC,WAAW,EAAEC,MAAM,EAAE,GAAGC,OAAO;gBAChE,qBACE,sBAACC,YAAK;oBAAW,GAAGD,KAAK;;sCACvB,sBAACE;4BAAIC,WAAU;;gCACZN,uBAAS,qBAACO,iBAAU;8CAAEP;;gCACtBC,6BACC,qBAACO,uBAAgB;8CAAEP;;;;wBAGtBC;sCACD,qBAACO,iBAAU;;mBARDV;YAWhB;0BACA,qBAACW,oBAAa;;;AAGpB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4ce507ba7ea486f1f2847b62999b8c9145035c7d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ddoohiz9i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ddoohiz9i();
cov_ddoohiz9i().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ddoohiz9i().s[1]++;
Object.defineProperty(exports, "Toaster", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_ddoohiz9i().f[0]++;
    cov_ddoohiz9i().s[2]++;
    return Toaster;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_ddoohiz9i().s[3]++, require("react/jsx-runtime"));
const _usetoast =
/* istanbul ignore next */
(cov_ddoohiz9i().s[4]++, require("../../hooks/use-toast"));
const _toast =
/* istanbul ignore next */
(cov_ddoohiz9i().s[5]++, require("./toast"));
function Toaster() {
  /* istanbul ignore next */
  cov_ddoohiz9i().f[1]++;
  const {
    toasts
  } =
  /* istanbul ignore next */
  (cov_ddoohiz9i().s[6]++, (0, _usetoast.useToast)());
  /* istanbul ignore next */
  cov_ddoohiz9i().s[7]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_toast.ToastProvider, {
    children: [toasts.map(function ({
      id,
      title,
      description,
      action,
      ...props
    }) {
      /* istanbul ignore next */
      cov_ddoohiz9i().f[2]++;
      cov_ddoohiz9i().s[8]++;
      return /*#__PURE__*/(0, _jsxruntime.jsxs)(_toast.Toast, {
        ...props,
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid gap-1",
          children: [
          /* istanbul ignore next */
          (cov_ddoohiz9i().b[0][0]++, title) &&
          /* istanbul ignore next */
          (cov_ddoohiz9i().b[0][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_toast.ToastTitle, {
            children: title
          })),
          /* istanbul ignore next */
          (cov_ddoohiz9i().b[1][0]++, description) &&
          /* istanbul ignore next */
          (cov_ddoohiz9i().b[1][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_toast.ToastDescription, {
            children: description
          }))]
        }), action, /*#__PURE__*/(0, _jsxruntime.jsx)(_toast.ToastClose, {})]
      }, id);
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_toast.ToastViewport, {})]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZGRvb2hpejlpIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiVG9hc3RlciIsImYiLCJ0b2FzdHMiLCJfdXNldG9hc3QiLCJ1c2VUb2FzdCIsIl9qc3hydW50aW1lIiwianN4cyIsIl90b2FzdCIsIlRvYXN0UHJvdmlkZXIiLCJtYXAiLCJpZCIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJhY3Rpb24iLCJwcm9wcyIsIlRvYXN0IiwiY2xhc3NOYW1lIiwiYiIsImpzeCIsIlRvYXN0VGl0bGUiLCJUb2FzdERlc2NyaXB0aW9uIiwiVG9hc3RDbG9zZSIsIlRvYXN0Vmlld3BvcnQiXSwic291cmNlcyI6WyIvaG9tZS9oYWdlci9uZXcvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyICgzKS9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIvY29tcG9uZW50cy91aS90b2FzdGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCdcblxuaW1wb3J0IHsgdXNlVG9hc3QgfSBmcm9tICdAL2hvb2tzL3VzZS10b2FzdCdcbmltcG9ydCB7XG4gIFRvYXN0LFxuICBUb2FzdENsb3NlLFxuICBUb2FzdERlc2NyaXB0aW9uLFxuICBUb2FzdFByb3ZpZGVyLFxuICBUb2FzdFRpdGxlLFxuICBUb2FzdFZpZXdwb3J0LFxufSBmcm9tICdAL2NvbXBvbmVudHMvdWkvdG9hc3QnXG5cbmV4cG9ydCBmdW5jdGlvbiBUb2FzdGVyKCkge1xuICBjb25zdCB7IHRvYXN0cyB9ID0gdXNlVG9hc3QoKVxuXG4gIHJldHVybiAoXG4gICAgPFRvYXN0UHJvdmlkZXI+XG4gICAgICB7dG9hc3RzLm1hcChmdW5jdGlvbiAoeyBpZCwgdGl0bGUsIGRlc2NyaXB0aW9uLCBhY3Rpb24sIC4uLnByb3BzIH0pIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8VG9hc3Qga2V5PXtpZH0gey4uLnByb3BzfT5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBnYXAtMVwiPlxuICAgICAgICAgICAgICB7dGl0bGUgJiYgPFRvYXN0VGl0bGU+e3RpdGxlfTwvVG9hc3RUaXRsZT59XG4gICAgICAgICAgICAgIHtkZXNjcmlwdGlvbiAmJiAoXG4gICAgICAgICAgICAgICAgPFRvYXN0RGVzY3JpcHRpb24+e2Rlc2NyaXB0aW9ufTwvVG9hc3REZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAge2FjdGlvbn1cbiAgICAgICAgICAgIDxUb2FzdENsb3NlIC8+XG4gICAgICAgICAgPC9Ub2FzdD5cbiAgICAgICAgKVxuICAgICAgfSl9XG4gICAgICA8VG9hc3RWaWV3cG9ydCAvPlxuICAgIDwvVG9hc3RQcm92aWRlcj5cbiAgKVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFhVTtJQUFBQSxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxhQUFBO0FBQUFBLGFBQUEsR0FBQUUsQ0FBQTs7Ozs7OytCQURNOzs7Ozs7V0FBQUMsT0FBQTs7Ozs7Ozs7aUNBVlM7OztpQ0FRbEI7QUFFQSxTQUFTQSxRQUFBO0VBQUE7RUFBQUgsYUFBQSxHQUFBSSxDQUFBO0VBQ2QsTUFBTTtJQUFFQztFQUFNLENBQUU7RUFBQTtFQUFBLENBQUFMLGFBQUEsR0FBQUUsQ0FBQSxPQUFHLElBQUFJLFNBQUEsQ0FBQUMsUUFBUTtFQUFBO0VBQUFQLGFBQUEsR0FBQUUsQ0FBQTtFQUUzQixvQkFDRSxJQUFBTSxXQUFBLENBQUFDLElBQUEsRUFBQ0MsTUFBQSxDQUFBQyxhQUFhO2VBQ1hOLE1BQUEsQ0FBT08sR0FBRyxDQUFDLFVBQVU7TUFBRUMsRUFBRTtNQUFFQyxLQUFLO01BQUVDLFdBQVc7TUFBRUMsTUFBTTtNQUFFLEdBQUdDO0lBQUEsQ0FBTztNQUFBO01BQUFqQixhQUFBLEdBQUFJLENBQUE7TUFBQUosYUFBQSxHQUFBRSxDQUFBO01BQ2hFLG9CQUNFLElBQUFNLFdBQUEsQ0FBQUMsSUFBQSxFQUFDQyxNQUFBLENBQUFRLEtBQUs7UUFBVyxHQUFHRCxLQUFLO2dDQUN2QixJQUFBVCxXQUFBLENBQUFDLElBQUEsRUFBQztVQUFJVSxTQUFBLEVBQVU7O1VBQ1o7VUFBQSxDQUFBbkIsYUFBQSxHQUFBb0IsQ0FBQSxVQUFBTixLQUFBO1VBQUE7VUFBQSxDQUFBZCxhQUFBLEdBQUFvQixDQUFBLHVCQUFTLElBQUFaLFdBQUEsQ0FBQWEsR0FBQSxFQUFDWCxNQUFBLENBQUFZLFVBQVU7c0JBQUVSOztVQUN0QjtVQUFBLENBQUFkLGFBQUEsR0FBQW9CLENBQUEsVUFBQUwsV0FBQTtVQUFBO1VBQUEsQ0FBQWYsYUFBQSxHQUFBb0IsQ0FBQSx1QkFDQyxJQUFBWixXQUFBLENBQUFhLEdBQUEsRUFBQ1gsTUFBQSxDQUFBYSxnQkFBZ0I7c0JBQUVSOztZQUd0QkMsTUFBQSxFLGFBQ0QsSUFBQVIsV0FBQSxDQUFBYSxHQUFBLEVBQUNYLE1BQUEsQ0FBQWMsVUFBVTtTQVJEWCxFQUFBO0lBV2hCLEksYUFDQSxJQUFBTCxXQUFBLENBQUFhLEdBQUEsRUFBQ1gsTUFBQSxDQUFBZSxhQUFhOztBQUdwQiIsImlnbm9yZUxpc3QiOltdfQ==