18e7ca9863c6e7faabf72af0386be30f
'use client';
"use strict";

/* istanbul ignore next */
function cov_2o6648sfhx() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(auth)/reset-password/page.tsx";
  var hash = "d9b10f11e9ee88c3c1e1653a96793fe621ac6f7d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(auth)/reset-password/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 33
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 59
        }
      },
      "7": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 57
        }
      },
      "8": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 56
        }
      },
      "9": {
        start: {
          line: 19,
          column: 40
        },
        end: {
          line: 19,
          column: 64
        }
      },
      "10": {
        start: {
          line: 20,
          column: 34
        },
        end: {
          line: 20,
          column: 58
        }
      },
      "11": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 47
        }
      },
      "12": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 47
        }
      },
      "13": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "14": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "15": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "16": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 34,
          column: 14
        }
      },
      "17": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 35,
          column: 41
        }
      },
      "18": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "19": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 66
        }
      },
      "20": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 41,
          column: 19
        }
      },
      "21": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 44
        }
      },
      "22": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 64
        }
      },
      "23": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 49,
          column: 19
        }
      },
      "24": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 63
        }
      },
      "25": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 57,
          column: 15
        }
      },
      "26": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 91,
          column: 7
        }
      },
      "27": {
        start: {
          line: 75,
          column: 39
        },
        end: {
          line: 75,
          column: 68
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "ResetPasswordPage",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 26
          }
        },
        loc: {
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 26
          }
        },
        loc: {
          start: {
            line: 23,
            column: 36
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 75,
            column: 34
          },
          end: {
            line: 75,
            column: 35
          }
        },
        loc: {
          start: {
            line: 75,
            column: 39
          },
          end: {
            line: 75,
            column: 68
          }
        },
        line: 75
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 50,
            column: 13
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 36,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 36,
            column: 22
          }
        }, {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 36,
            column: 38
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 27
          },
          end: {
            line: 44,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 27
          },
          end: {
            line: 44,
            column: 37
          }
        }, {
          start: {
            line: 44,
            column: 41
          },
          end: {
            line: 44,
            column: 62
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 43
          }
        }, {
          start: {
            line: 47,
            column: 47
          },
          end: {
            line: 47,
            column: 68
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 84,
            column: 20
          },
          end: {
            line: 87,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 20
          },
          end: {
            line: 84,
            column: 27
          }
        }, {
          start: {
            line: 84,
            column: 45
          },
          end: {
            line: 87,
            column: 22
          }
        }],
        line: 84
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(auth)/reset-password/page.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function ResetPasswordPage() {\n  const [identifier, setIdentifier] = useState('');\n  const [message, setMessage] = useState('');\n  const router = useRouter();\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const res = await fetch('/api/auth/reset-password', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ identifier }),\n      });\n\n      const data = await res.json();\n\n      if (res.ok && data.success) {\n        localStorage.setItem('recoveryEmail', identifier);\n        toast({\n          title: 'Success',\n          description: 'Recovery code sent to your email.',\n        });\n        router.push('/verify-code');\n      } else {\n        setMessage(data.error || 'Failed to send code');\n        toast({\n          title: 'Error',\n          description: data.error || 'Failed to send code',\n          variant: 'destructive',\n        });\n      }\n    } catch (error) {\n      setMessage('An error occurred. Please try again.');\n      toast({\n        title: 'Error',\n        description: 'An error occurred. Please try again.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  return (\n    <div className=\"p-4 max-w-md mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">Reset Password</h1>\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <Input\n          type=\"email\"\n          placeholder=\"Enter your email\"\n          value={identifier}\n          onChange={(e) => setIdentifier(e.target.value)}\n          className=\"w-full p-2 border border-gray-300 rounded\"\n          required\n        />\n        <Button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded\">\n          Send Recovery Code\n        </Button>\n        {message && <p className=\"text-red-500\">{message}</p>}\n      </form>\n    </div>\n  );\n}"],
      names: ["ResetPasswordPage", "identifier", "setIdentifier", "useState", "message", "setMessage", "router", "useRouter", "toast", "useToast", "handleSubmit", "e", "preventDefault", "res", "fetch", "method", "headers", "body", "JSON", "stringify", "data", "json", "ok", "success", "localStorage", "setItem", "title", "description", "push", "error", "variant", "div", "className", "h1", "form", "onSubmit", "Input", "type", "placeholder", "value", "onChange", "target", "required", "Button", "p"],
      mappings: "AAAA;;;;;+BAQA;;;eAAwBA;;;;uBANC;4BACC;wBACH;uBACD;0BACG;AAEV,SAASA;IACtB,MAAM,CAACC,YAAYC,cAAc,GAAGC,IAAAA,eAAQ,EAAC;IAC7C,MAAM,CAACC,SAASC,WAAW,GAAGF,IAAAA,eAAQ,EAAC;IACvC,MAAMG,SAASC,IAAAA,qBAAS;IACxB,MAAM,EAAEC,KAAK,EAAE,GAAGC,IAAAA,kBAAQ;IAE1B,MAAMC,eAAe,OAAOC;QAC1BA,EAAEC,cAAc;QAEhB,IAAI;YACF,MAAMC,MAAM,MAAMC,MAAM,4BAA4B;gBAClDC,QAAQ;gBACRC,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9CC,MAAMC,KAAKC,SAAS,CAAC;oBAAElB;gBAAW;YACpC;YAEA,MAAMmB,OAAO,MAAMP,IAAIQ,IAAI;YAE3B,IAAIR,IAAIS,EAAE,IAAIF,KAAKG,OAAO,EAAE;gBAC1BC,aAAaC,OAAO,CAAC,iBAAiBxB;gBACtCO,MAAM;oBACJkB,OAAO;oBACPC,aAAa;gBACf;gBACArB,OAAOsB,IAAI,CAAC;YACd,OAAO;gBACLvB,WAAWe,KAAKS,KAAK,IAAI;gBACzBrB,MAAM;oBACJkB,OAAO;oBACPC,aAAaP,KAAKS,KAAK,IAAI;oBAC3BC,SAAS;gBACX;YACF;QACF,EAAE,OAAOD,OAAO;YACdxB,WAAW;YACXG,MAAM;gBACJkB,OAAO;gBACPC,aAAa;gBACbG,SAAS;YACX;QACF;IACF;IAEA,qBACE,sBAACC;QAAIC,WAAU;;0BACb,qBAACC;gBAAGD,WAAU;0BAA0B;;0BACxC,sBAACE;gBAAKC,UAAUzB;gBAAcsB,WAAU;;kCACtC,qBAACI,YAAK;wBACJC,MAAK;wBACLC,aAAY;wBACZC,OAAOtC;wBACPuC,UAAU,CAAC7B,IAAMT,cAAcS,EAAE8B,MAAM,CAACF,KAAK;wBAC7CP,WAAU;wBACVU,QAAQ;;kCAEV,qBAACC,cAAM;wBAACN,MAAK;wBAASL,WAAU;kCAA2C;;oBAG1E5B,yBAAW,qBAACwC;wBAAEZ,WAAU;kCAAgB5B;;;;;;AAIjD"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d9b10f11e9ee88c3c1e1653a96793fe621ac6f7d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2o6648sfhx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2o6648sfhx();
cov_2o6648sfhx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2o6648sfhx().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2o6648sfhx().f[0]++;
    cov_2o6648sfhx().s[2]++;
    return ResetPasswordPage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2o6648sfhx().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_2o6648sfhx().s[4]++, require("react"));
const _navigation =
/* istanbul ignore next */
(cov_2o6648sfhx().s[5]++, require("next/navigation"));
const _button =
/* istanbul ignore next */
(cov_2o6648sfhx().s[6]++, require("../../../../components/ui/button"));
const _input =
/* istanbul ignore next */
(cov_2o6648sfhx().s[7]++, require("../../../../components/ui/input"));
const _usetoast =
/* istanbul ignore next */
(cov_2o6648sfhx().s[8]++, require("../../../../hooks/use-toast"));
function ResetPasswordPage() {
  /* istanbul ignore next */
  cov_2o6648sfhx().f[1]++;
  const [identifier, setIdentifier] =
  /* istanbul ignore next */
  (cov_2o6648sfhx().s[9]++, (0, _react.useState)(''));
  const [message, setMessage] =
  /* istanbul ignore next */
  (cov_2o6648sfhx().s[10]++, (0, _react.useState)(''));
  const router =
  /* istanbul ignore next */
  (cov_2o6648sfhx().s[11]++, (0, _navigation.useRouter)());
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_2o6648sfhx().s[12]++, (0, _usetoast.useToast)());
  /* istanbul ignore next */
  cov_2o6648sfhx().s[13]++;
  const handleSubmit = async e => {
    /* istanbul ignore next */
    cov_2o6648sfhx().f[2]++;
    cov_2o6648sfhx().s[14]++;
    e.preventDefault();
    /* istanbul ignore next */
    cov_2o6648sfhx().s[15]++;
    try {
      const res =
      /* istanbul ignore next */
      (cov_2o6648sfhx().s[16]++, await fetch('/api/auth/reset-password', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          identifier
        })
      }));
      const data =
      /* istanbul ignore next */
      (cov_2o6648sfhx().s[17]++, await res.json());
      /* istanbul ignore next */
      cov_2o6648sfhx().s[18]++;
      if (
      /* istanbul ignore next */
      (cov_2o6648sfhx().b[1][0]++, res.ok) &&
      /* istanbul ignore next */
      (cov_2o6648sfhx().b[1][1]++, data.success)) {
        /* istanbul ignore next */
        cov_2o6648sfhx().b[0][0]++;
        cov_2o6648sfhx().s[19]++;
        localStorage.setItem('recoveryEmail', identifier);
        /* istanbul ignore next */
        cov_2o6648sfhx().s[20]++;
        toast({
          title: 'Success',
          description: 'Recovery code sent to your email.'
        });
        /* istanbul ignore next */
        cov_2o6648sfhx().s[21]++;
        router.push('/verify-code');
      } else {
        /* istanbul ignore next */
        cov_2o6648sfhx().b[0][1]++;
        cov_2o6648sfhx().s[22]++;
        setMessage(
        /* istanbul ignore next */
        (cov_2o6648sfhx().b[2][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_2o6648sfhx().b[2][1]++, 'Failed to send code'));
        /* istanbul ignore next */
        cov_2o6648sfhx().s[23]++;
        toast({
          title: 'Error',
          description:
          /* istanbul ignore next */
          (cov_2o6648sfhx().b[3][0]++, data.error) ||
          /* istanbul ignore next */
          (cov_2o6648sfhx().b[3][1]++, 'Failed to send code'),
          variant: 'destructive'
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2o6648sfhx().s[24]++;
      setMessage('An error occurred. Please try again.');
      /* istanbul ignore next */
      cov_2o6648sfhx().s[25]++;
      toast({
        title: 'Error',
        description: 'An error occurred. Please try again.',
        variant: 'destructive'
      });
    }
  };
  /* istanbul ignore next */
  cov_2o6648sfhx().s[26]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "p-4 max-w-md mx-auto",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
      className: "text-2xl font-bold mb-4",
      children: "Reset Password"
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("form", {
      onSubmit: handleSubmit,
      className: "space-y-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
        type: "email",
        placeholder: "Enter your email",
        value: identifier,
        onChange: e => {
          /* istanbul ignore next */
          cov_2o6648sfhx().f[3]++;
          cov_2o6648sfhx().s[27]++;
          return setIdentifier(e.target.value);
        },
        className: "w-full p-2 border border-gray-300 rounded",
        required: true
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
        type: "submit",
        className: "bg-blue-600 text-white px-4 py-2 rounded",
        children: "Send Recovery Code"
      }),
      /* istanbul ignore next */
      (cov_2o6648sfhx().b[4][0]++, message) &&
      /* istanbul ignore next */
      (cov_2o6648sfhx().b[4][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-red-500",
        children: message
      }))]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,