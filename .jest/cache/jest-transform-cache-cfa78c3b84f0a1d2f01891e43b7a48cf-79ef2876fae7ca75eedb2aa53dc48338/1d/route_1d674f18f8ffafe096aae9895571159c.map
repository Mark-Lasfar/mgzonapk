{"version":3,"names":["GET","cov_1m3vpmunte","f","s","POST","request","session","_auth","auth","b","_server","NextResponse","json","success","error","status","body","_db","connectToDatabase","webhook","_webhookmodel","default","create","userId","user","id","url","events","data","_id","secret","Error","message","webhooks","find","select"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/v1/webhooks/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { connectToDatabase } from '@/lib/db';\nimport WebhookModel from '@/lib/db/models/webhook.model';\nimport { auth } from '@/auth';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const session = await auth();\n    if (!session) {\n      return NextResponse.json(\n        { success: false, error: 'Unauthorized' },\n        { status: 401 }\n      );\n    }\n\n    const body = await request.json();\n\n    await connectToDatabase();\n\n    const webhook = await WebhookModel.create({\n      userId: session.user.id,\n      url: body.url,\n      events: body.events,\n    });\n\n    return NextResponse.json({\n      success: true,\n      data: {\n        id: webhook._id,\n        url: webhook.url,\n        events: webhook.events,\n        secret: webhook.secret,\n      },\n    });\n  } catch (error) {\n    return NextResponse.json(\n      { success: false, error: error instanceof Error ? error.message : 'An unknown error occurred' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const session = await auth();\n    if (!session) {\n      return NextResponse.json(\n        { success: false, error: 'Unauthorized' },\n        { status: 401 }\n      );\n    }\n\n    await connectToDatabase();\n\n    const webhooks = await WebhookModel.find({\n      userId: session.user.id,\n    }).select('-secret');\n\n    return NextResponse.json({\n      success: true,\n      data: webhooks,\n    });\n  } catch (error) {\n    return NextResponse.json(\n      { success: false, error: error instanceof Error ? error.message : 'An unknown error occurred' },\n      { status: 500 }\n    );\n  }\n}"],"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","ignoreList":[]}