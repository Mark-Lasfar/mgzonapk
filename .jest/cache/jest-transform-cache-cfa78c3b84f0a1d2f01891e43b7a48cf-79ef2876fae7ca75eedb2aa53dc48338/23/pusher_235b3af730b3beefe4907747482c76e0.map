{"version":3,"names":["pusherWithLogging","pusher","cov_10g1stjwf3","s","_pusher","default","appId","process","env","PUSHER_APP_ID","key","PUSHER_KEY","secret","PUSHER_SECRET","cluster","PUSHER_CLUSTER","useTLS","trigger","channel","event","data","f","timestamp","user","_logging","logger","info","error","Error","b","message","String"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/services/pusher.ts"],"sourcesContent":["import Pusher from 'pusher';\nimport { logger } from './logging';\n\nconst pusher = new Pusher({\n  appId: process.env.PUSHER_APP_ID!,\n  key: process.env.PUSHER_KEY!,\n  secret: process.env.PUSHER_SECRET!,\n  cluster: process.env.PUSHER_CLUSTER!,\n  useTLS: true\n});\n\n// Add logging wrapper\nconst pusherWithLogging = {\n  trigger: async (\n    channel: string, \n    event: string, \n    data: any\n  ): Promise<void> => {\n    try {\n      await pusher.trigger(channel, event, {\n        ...data,\n        timestamp: '2025-04-27T12:01:26Z',\n        user: 'Mark-Lasfar'\n      });\n\n      logger.info('Pusher event triggered', {\n        channel,\n        event,\n        timestamp: '2025-04-27T12:01:26Z',\n        user: 'Mark-Lasfar'\n      });\n    } catch (error) {\n      logger.error(\n        new Error('Pusher event failed'),\n        {\n          channel,\n          event,\n          error: error instanceof Error ? error.message : String(error),\n          timestamp: '2025-04-27T12:01:26Z',\n          user: 'Mark-Lasfar'\n        }\n      );\n      throw error;\n    }\n  }\n};\n\nexport { pusherWithLogging as pusher };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BA+C8B;;;;;;WAArBA,iBAAA;;;;;wEA/CU;;;kCACI;;;;;;;;;;;;;;;AAEvB,MAAMC,MAAA;AAAA;AAAA,CAAAC,cAAA,GAAAC,CAAA,OAAS,IAAIC,OAAA,CAAAC,OAAM,CAAC;EACxBC,KAAA,EAAOC,OAAA,CAAQC,GAAG,CAACC,aAAa;EAChCC,GAAA,EAAKH,OAAA,CAAQC,GAAG,CAACG,UAAU;EAC3BC,MAAA,EAAQL,OAAA,CAAQC,GAAG,CAACK,aAAa;EACjCC,OAAA,EAASP,OAAA,CAAQC,GAAG,CAACO,cAAc;EACnCC,MAAA,EAAQ;AACV;AAEA;AACA,MAAMhB,iBAAA;AAAA;AAAA,CAAAE,cAAA,GAAAC,CAAA,OAAoB;EACxBc,OAAA,EAAS,MAAAA,CACPC,OAAA,EACAC,KAAA,EACAC,IAAA;IAAA;IAAAlB,cAAA,GAAAmB,CAAA;IAAAnB,cAAA,GAAAC,CAAA;IAEA,IAAI;MAAA;MAAAD,cAAA,GAAAC,CAAA;MACF,MAAMF,MAAA,CAAOgB,OAAO,CAACC,OAAA,EAASC,KAAA,EAAO;QACnC,GAAGC,IAAI;QACPE,SAAA,EAAW;QACXC,IAAA,EAAM;MACR;MAAA;MAAArB,cAAA,GAAAC,CAAA;MAEAqB,QAAA,CAAAC,MAAM,CAACC,IAAI,CAAC,0BAA0B;QACpCR,OAAA;QACAC,KAAA;QACAG,SAAA,EAAW;QACXC,IAAA,EAAM;MACR;IACF,EAAE,OAAOI,KAAA,EAAO;MAAA;MAAAzB,cAAA,GAAAC,CAAA;MACdqB,QAAA,CAAAC,MAAM,CAACE,KAAK,CACV,IAAIC,KAAA,CAAM,wBACV;QACEV,OAAA;QACAC,KAAA;QACAQ,KAAA,EAAOA,KAAA,YAAiBC,KAAA;QAAA;QAAA,CAAA1B,cAAA,GAAA2B,CAAA,UAAQF,KAAA,CAAMG,OAAO;QAAA;QAAA,CAAA5B,cAAA,GAAA2B,CAAA,UAAGE,MAAA,CAAOJ,KAAA;QACvDL,SAAA,EAAW;QACXC,IAAA,EAAM;MACR;MAAA;MAAArB,cAAA,GAAAC,CAAA;MAEF,MAAMwB,KAAA;IACR;EACF;AACF","ignoreList":[]}