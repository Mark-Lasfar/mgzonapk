6b3d67a36a5b0110024c7e343bef2ce8
'use client';
"use strict";

/* istanbul ignore next */
function cov_2px858rrr2() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/earnings/page.tsx";
  var hash = "a1bede0e37afa52e47344cdc501cbe14e7970c55";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/earnings/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 65
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 63
        }
      },
      "7": {
        start: {
          line: 16,
          column: 14
        },
        end: {
          line: 16,
          column: 61
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "9": {
        start: {
          line: 18,
          column: 39
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "10": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 41
        }
      },
      "11": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 20,
          column: 40
        }
      },
      "12": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 20
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 66
        }
      },
      "14": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "15": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 19
        }
      },
      "16": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "17": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "18": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 53
        }
      },
      "19": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "20": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "21": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "22": {
        start: {
          line: 41,
          column: 32
        },
        end: {
          line: 41,
          column: 88
        }
      },
      "23": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "24": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "25": {
        start: {
          line: 44,
          column: 23
        },
        end: {
          line: 44,
          column: 95
        }
      },
      "26": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "27": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 57
        }
      },
      "28": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 39
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 25
        }
      },
      "30": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "31": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 31
        }
      },
      "32": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 18
        }
      },
      "33": {
        start: {
          line: 58,
          column: 32
        },
        end: {
          line: 212,
          column: 1
        }
      },
      "34": {
        start: {
          line: 59,
          column: 34
        },
        end: {
          line: 59,
          column: 57
        }
      },
      "35": {
        start: {
          line: 60,
          column: 36
        },
        end: {
          line: 60,
          column: 59
        }
      },
      "36": {
        start: {
          line: 61,
          column: 44
        },
        end: {
          line: 61,
          column: 68
        }
      },
      "37": {
        start: {
          line: 62,
          column: 48
        },
        end: {
          line: 62,
          column: 72
        }
      },
      "38": {
        start: {
          line: 63,
          column: 34
        },
        end: {
          line: 63,
          column: 61
        }
      },
      "39": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "40": {
        start: {
          line: 66,
          column: 35
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "41": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "42": {
        start: {
          line: 68,
          column: 33
        },
        end: {
          line: 68,
          column: 68
        }
      },
      "43": {
        start: {
          line: 69,
          column: 29
        },
        end: {
          line: 69,
          column: 50
        }
      },
      "44": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 76,
          column: 17
        }
      },
      "45": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 45
        }
      },
      "46": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 52
        }
      },
      "47": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 73,
          column: 55
        }
      },
      "48": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 73
        }
      },
      "49": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 71
        }
      },
      "50": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 29
        }
      },
      "51": {
        start: {
          line: 83,
          column: 34
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "52": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "53": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 61
        }
      },
      "54": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 19
        }
      },
      "55": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "56": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 66
        }
      },
      "57": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 19
        }
      },
      "58": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 25
        }
      },
      "59": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "60": {
        start: {
          line: 94,
          column: 29
        },
        end: {
          line: 102,
          column: 14
        }
      },
      "61": {
        start: {
          line: 103,
          column: 27
        },
        end: {
          line: 103,
          column: 48
        }
      },
      "62": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "63": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 68
        }
      },
      "64": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 38
        }
      },
      "65": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 70
        }
      },
      "66": {
        start: {
          line: 107,
          column: 35
        },
        end: {
          line: 107,
          column: 68
        }
      },
      "67": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 65
        }
      },
      "68": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 58
        }
      },
      "69": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 30
        }
      },
      "70": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 211,
          column: 7
        }
      },
      "71": {
        start: {
          line: 164,
          column: 51
        },
        end: {
          line: 164,
          column: 84
        }
      },
      "72": {
        start: {
          line: 182,
          column: 117
        },
        end: {
          line: 201,
          column: 49
        }
      },
      "73": {
        start: {
          line: 213,
          column: 17
        },
        end: {
          line: 213,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 33
          }
        },
        loc: {
          start: {
            line: 17,
            column: 47
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 21,
            column: 40
          }
        },
        loc: {
          start: {
            line: 21,
            column: 61
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 34
          }
        },
        loc: {
          start: {
            line: 25,
            column: 53
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 58,
            column: 33
          }
        },
        loc: {
          start: {
            line: 58,
            column: 36
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 64,
            column: 26
          },
          end: {
            line: 64,
            column: 27
          }
        },
        loc: {
          start: {
            line: 64,
            column: 30
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 64
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 66,
            column: 35
          },
          end: {
            line: 66,
            column: 36
          }
        },
        loc: {
          start: {
            line: 66,
            column: 45
          },
          end: {
            line: 80,
            column: 9
          }
        },
        line: 66
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 83,
            column: 34
          },
          end: {
            line: 83,
            column: 35
          }
        },
        loc: {
          start: {
            line: 83,
            column: 44
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 83
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 107,
            column: 27
          },
          end: {
            line: 107,
            column: 28
          }
        },
        loc: {
          start: {
            line: 107,
            column: 35
          },
          end: {
            line: 107,
            column: 68
          }
        },
        line: 107
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 164,
            column: 46
          },
          end: {
            line: 164,
            column: 47
          }
        },
        loc: {
          start: {
            line: 164,
            column: 51
          },
          end: {
            line: 164,
            column: 84
          }
        },
        line: 164
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 182,
            column: 89
          },
          end: {
            line: 182,
            column: 90
          }
        },
        loc: {
          start: {
            line: 182,
            column: 117
          },
          end: {
            line: 201,
            column: 49
          }
        },
        line: 182
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 45
          }
        }, {
          start: {
            line: 22,
            column: 48
          },
          end: {
            line: 22,
            column: 65
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 20
          }
        }, {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 27
          }
        }, {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 26,
            column: 45
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 20
          }
        }, {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 47
          }
        }, {
          start: {
            line: 29,
            column: 51
          },
          end: {
            line: 29,
            column: 76
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 13
          }
        }, {
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 31
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 53
          }
        }, {
          start: {
            line: 41,
            column: 57
          },
          end: {
            line: 41,
            column: 88
          }
        }],
        line: 41
      },
      "9": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "10": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 29
          }
        }, {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 43,
            column: 79
          }
        }],
        line: 43
      },
      "11": {
        loc: {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 44,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 47
          },
          end: {
            line: 44,
            column: 88
          }
        }, {
          start: {
            line: 44,
            column: 91
          },
          end: {
            line: 44,
            column: 95
          }
        }],
        line: 44
      },
      "12": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 49,
            column: 13
          }
        }],
        line: 45
      },
      "13": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 20
          }
        }, {
          start: {
            line: 45,
            column: 25
          },
          end: {
            line: 45,
            column: 33
          }
        }, {
          start: {
            line: 45,
            column: 37
          },
          end: {
            line: 45,
            column: 45
          }
        }],
        line: 45
      },
      "14": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "15": {
        loc: {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        }, {
          start: {
            line: 74,
            column: 23
          },
          end: {
            line: 76,
            column: 17
          }
        }],
        line: 70
      },
      "16": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "17": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 27
          }
        }, {
          start: {
            line: 84,
            column: 31
          },
          end: {
            line: 84,
            column: 62
          }
        }],
        line: 84
      },
      "18": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "19": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        }, {
          start: {
            line: 108,
            column: 19
          },
          end: {
            line: 110,
            column: 13
          }
        }],
        line: 104
      },
      "20": {
        loc: {
          start: {
            line: 109,
            column: 22
          },
          end: {
            line: 109,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 22
          },
          end: {
            line: 109,
            column: 36
          }
        }, {
          start: {
            line: 109,
            column: 40
          },
          end: {
            line: 109,
            column: 63
          }
        }],
        line: 109
      },
      "21": {
        loc: {
          start: {
            line: 171,
            column: 46
          },
          end: {
            line: 171,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 56
          },
          end: {
            line: 171,
            column: 71
          }
        }, {
          start: {
            line: 171,
            column: 74
          },
          end: {
            line: 171,
            column: 94
          }
        }],
        line: 171
      },
      "22": {
        loc: {
          start: {
            line: 182,
            column: 46
          },
          end: {
            line: 203,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 72
          },
          end: {
            line: 201,
            column: 50
          }
        }, {
          start: {
            line: 201,
            column: 67
          },
          end: {
            line: 203,
            column: 38
          }
        }],
        line: 182
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/earnings/page.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\n\nconst SellerEarningsDashboard = () => {\n  const [balance, setBalance] = useState(0);\n  const [earnings, setEarnings] = useState(0);\n  const [transactions, setTransactions] = useState([]);\n  const [withdrawAmount, setWithdrawAmount] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // Fetch balance, earnings, and transactions from the API\n    const fetchDashboardData = async () => {\n      try {\n        const response = await fetch('/api/seller/earnings');\n        const data = await response.json();\n        if (response.ok) {\n          setBalance(data.balance);\n          setEarnings(data.totalEarnings);\n          setTransactions(data.transactions);\n        } else {\n          console.error('Failed to fetch data:', data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  const handleWithdrawRequest = async () => {\n    if (!withdrawAmount || parseFloat(withdrawAmount) <= 0) {\n      alert('Please enter a valid withdrawal amount.');\n      return;\n    }\n\n    if (parseFloat(withdrawAmount) > balance) {\n      alert('Withdrawal amount exceeds available balance.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await fetch('/api/withdrawals/request', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ amount: parseFloat(withdrawAmount) }),\n      });\n\n      const result = await response.json();\n      if (result.success) {\n        alert('Withdrawal request submitted successfully!');\n        setWithdrawAmount('');\n        setBalance((prev) => prev - parseFloat(withdrawAmount));\n      } else {\n        alert(result.message || 'Something went wrong.');\n      }\n    } catch (error) {\n      alert('Error submitting withdrawal request.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Card className=\"max-w-4xl mx-auto mt-8\">\n      <CardHeader>\n        <CardTitle>Seller Earnings Dashboard</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          <div>\n            <p>Total Earnings: <strong>${earnings.toFixed(2)}</strong></p>\n            <p>Available Balance: <strong>${balance.toFixed(2)}</strong></p>\n          </div>\n\n          <div>\n            <h3>Request Withdrawal</h3>\n            <Input\n              type=\"number\"\n              placeholder=\"Enter withdrawal amount\"\n              value={withdrawAmount}\n              onChange={(e) => setWithdrawAmount(e.target.value)}\n              className=\"mb-4\"\n            />\n            <Button\n              onClick={handleWithdrawRequest}\n              disabled={loading}\n              className=\"w-full\"\n            >\n              {loading ? 'Submitting...' : 'Request Withdrawal'}\n            </Button>\n          </div>\n\n          <div>\n            <h3>Transaction History</h3>\n            <ul className=\"space-y-2\">\n              {transactions.length > 0 ? (\n                transactions.map((txn, index) => (\n                  <li key={index} className=\"border p-2 rounded\">\n                    <p>{txn.description}</p>\n                    <p>Amount: ${txn.amount.toFixed(2)}</p>\n                    <p>Date: {new Date(txn.date).toLocaleDateString()}</p>\n                  </li>\n                ))\n              ) : (\n                <p>No transactions available.</p>\n              )}\n            </ul>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SellerEarningsDashboard;"],
      names: ["SellerEarningsDashboard", "balance", "setBalance", "useState", "earnings", "setEarnings", "transactions", "setTransactions", "withdrawAmount", "setWithdrawAmount", "loading", "setLoading", "useEffect", "fetchDashboardData", "response", "fetch", "data", "json", "ok", "totalEarnings", "console", "error", "message", "handleWithdrawRequest", "parseFloat", "alert", "method", "headers", "body", "JSON", "stringify", "amount", "result", "success", "prev", "Card", "className", "CardHeader", "CardTitle", "CardContent", "div", "p", "strong", "toFixed", "h3", "Input", "type", "placeholder", "value", "onChange", "e", "target", "Button", "onClick", "disabled", "ul", "length", "map", "txn", "index", "li", "description", "Date", "date", "toLocaleDateString"],
      mappings: "AAAA;;;;;+BAyHA;;;eAAA;;;;+DAvH2C;wBACpB;uBACD;sBACmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEzD,MAAMA,0BAA0B;IAC9B,MAAM,CAACC,SAASC,WAAW,GAAGC,IAAAA,eAAQ,EAAC;IACvC,MAAM,CAACC,UAAUC,YAAY,GAAGF,IAAAA,eAAQ,EAAC;IACzC,MAAM,CAACG,cAAcC,gBAAgB,GAAGJ,IAAAA,eAAQ,EAAC,EAAE;IACnD,MAAM,CAACK,gBAAgBC,kBAAkB,GAAGN,IAAAA,eAAQ,EAAC;IACrD,MAAM,CAACO,SAASC,WAAW,GAAGR,IAAAA,eAAQ,EAAC;IAEvCS,IAAAA,gBAAS,EAAC;QACR,yDAAyD;QACzD,MAAMC,qBAAqB;YACzB,IAAI;gBACF,MAAMC,WAAW,MAAMC,MAAM;gBAC7B,MAAMC,OAAO,MAAMF,SAASG,IAAI;gBAChC,IAAIH,SAASI,EAAE,EAAE;oBACfhB,WAAWc,KAAKf,OAAO;oBACvBI,YAAYW,KAAKG,aAAa;oBAC9BZ,gBAAgBS,KAAKV,YAAY;gBACnC,OAAO;oBACLc,QAAQC,KAAK,CAAC,yBAAyBL,KAAKM,OAAO;gBACrD;YACF,EAAE,OAAOD,OAAO;gBACdD,QAAQC,KAAK,CAAC,kCAAkCA;YAClD;QACF;QAEAR;IACF,GAAG,EAAE;IAEL,MAAMU,wBAAwB;QAC5B,IAAI,CAACf,kBAAkBgB,WAAWhB,mBAAmB,GAAG;YACtDiB,MAAM;YACN;QACF;QAEA,IAAID,WAAWhB,kBAAkBP,SAAS;YACxCwB,MAAM;YACN;QACF;QAEAd,WAAW;QACX,IAAI;YACF,MAAMG,WAAW,MAAMC,MAAM,4BAA4B;gBACvDW,QAAQ;gBACRC,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9CC,MAAMC,KAAKC,SAAS,CAAC;oBAAEC,QAAQP,WAAWhB;gBAAgB;YAC5D;YAEA,MAAMwB,SAAS,MAAMlB,SAASG,IAAI;YAClC,IAAIe,OAAOC,OAAO,EAAE;gBAClBR,MAAM;gBACNhB,kBAAkB;gBAClBP,WAAW,CAACgC,OAASA,OAAOV,WAAWhB;YACzC,OAAO;gBACLiB,MAAMO,OAAOV,OAAO,IAAI;YAC1B;QACF,EAAE,OAAOD,OAAO;YACdI,MAAM;QACR,SAAU;YACRd,WAAW;QACb;IACF;IAEA,qBACE,sBAACwB,UAAI;QAACC,WAAU;;0BACd,qBAACC,gBAAU;0BACT,cAAA,qBAACC,eAAS;8BAAC;;;0BAEb,qBAACC,iBAAW;0BACV,cAAA,sBAACC;oBAAIJ,WAAU;;sCACb,sBAACI;;8CACC,sBAACC;;wCAAE;sDAAgB,sBAACC;;gDAAO;gDAAEtC,SAASuC,OAAO,CAAC;;;;;8CAC9C,sBAACF;;wCAAE;sDAAmB,sBAACC;;gDAAO;gDAAEzC,QAAQ0C,OAAO,CAAC;;;;;;;sCAGlD,sBAACH;;8CACC,qBAACI;8CAAG;;8CACJ,qBAACC,YAAK;oCACJC,MAAK;oCACLC,aAAY;oCACZC,OAAOxC;oCACPyC,UAAU,CAACC,IAAMzC,kBAAkByC,EAAEC,MAAM,CAACH,KAAK;oCACjDZ,WAAU;;8CAEZ,qBAACgB,cAAM;oCACLC,SAAS9B;oCACT+B,UAAU5C;oCACV0B,WAAU;8CAET1B,UAAU,kBAAkB;;;;sCAIjC,sBAAC8B;;8CACC,qBAACI;8CAAG;;8CACJ,qBAACW;oCAAGnB,WAAU;8CACX9B,aAAakD,MAAM,GAAG,IACrBlD,aAAamD,GAAG,CAAC,CAACC,KAAKC,sBACrB,sBAACC;4CAAexB,WAAU;;8DACxB,qBAACK;8DAAGiB,IAAIG,WAAW;;8DACnB,sBAACpB;;wDAAE;wDAAUiB,IAAI3B,MAAM,CAACY,OAAO,CAAC;;;8DAChC,sBAACF;;wDAAE;wDAAO,IAAIqB,KAAKJ,IAAIK,IAAI,EAAEC,kBAAkB;;;;2CAHxCL,wBAOX,qBAAClB;kDAAE;;;;;;;;;;AAQnB;MAEA,WAAezC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a1bede0e37afa52e47344cdc501cbe14e7970c55"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2px858rrr2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2px858rrr2();
cov_2px858rrr2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2px858rrr2().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2px858rrr2().f[0]++;
    cov_2px858rrr2().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2px858rrr2().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2px858rrr2().s[4]++, _interop_require_wildcard(require("react")));
const _button =
/* istanbul ignore next */
(cov_2px858rrr2().s[5]++, require("../../../../../../components/ui/button"));
const _input =
/* istanbul ignore next */
(cov_2px858rrr2().s[6]++, require("../../../../../../components/ui/input"));
const _card =
/* istanbul ignore next */
(cov_2px858rrr2().s[7]++, require("../../../../../../components/ui/card"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2px858rrr2().f[1]++;
  cov_2px858rrr2().s[8]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2px858rrr2().b[0][0]++;
    cov_2px858rrr2().s[9]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2px858rrr2().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2px858rrr2().s[10]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2px858rrr2().s[11]++, new WeakMap());
  /* istanbul ignore next */
  cov_2px858rrr2().s[12]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2px858rrr2().f[2]++;
    cov_2px858rrr2().s[13]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2px858rrr2().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2px858rrr2().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2px858rrr2().f[3]++;
  cov_2px858rrr2().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_2px858rrr2().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2px858rrr2().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2px858rrr2().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2px858rrr2().b[2][0]++;
    cov_2px858rrr2().s[15]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2px858rrr2().b[2][1]++;
  }
  cov_2px858rrr2().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_2px858rrr2().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2px858rrr2().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2px858rrr2().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2px858rrr2().b[4][0]++;
    cov_2px858rrr2().s[17]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2px858rrr2().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2px858rrr2().s[18]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2px858rrr2().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_2px858rrr2().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2px858rrr2().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2px858rrr2().b[6][0]++;
    cov_2px858rrr2().s[20]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2px858rrr2().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2px858rrr2().s[21]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2px858rrr2().s[22]++,
  /* istanbul ignore next */
  (cov_2px858rrr2().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2px858rrr2().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2px858rrr2().s[23]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2px858rrr2().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2px858rrr2().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2px858rrr2().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2px858rrr2().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2px858rrr2().s[25]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2px858rrr2().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2px858rrr2().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2px858rrr2().s[26]++;
      if (
      /* istanbul ignore next */
      (cov_2px858rrr2().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2px858rrr2().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2px858rrr2().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2px858rrr2().b[12][0]++;
        cov_2px858rrr2().s[27]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2px858rrr2().b[12][1]++;
        cov_2px858rrr2().s[28]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2px858rrr2().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2px858rrr2().s[29]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2px858rrr2().s[30]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2px858rrr2().b[14][0]++;
    cov_2px858rrr2().s[31]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2px858rrr2().b[14][1]++;
  }
  cov_2px858rrr2().s[32]++;
  return newObj;
}
/* istanbul ignore next */
cov_2px858rrr2().s[33]++;
const SellerEarningsDashboard = () => {
  /* istanbul ignore next */
  cov_2px858rrr2().f[4]++;
  const [balance, setBalance] =
  /* istanbul ignore next */
  (cov_2px858rrr2().s[34]++, (0, _react.useState)(0));
  const [earnings, setEarnings] =
  /* istanbul ignore next */
  (cov_2px858rrr2().s[35]++, (0, _react.useState)(0));
  const [transactions, setTransactions] =
  /* istanbul ignore next */
  (cov_2px858rrr2().s[36]++, (0, _react.useState)([]));
  const [withdrawAmount, setWithdrawAmount] =
  /* istanbul ignore next */
  (cov_2px858rrr2().s[37]++, (0, _react.useState)(''));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_2px858rrr2().s[38]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_2px858rrr2().s[39]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2px858rrr2().f[5]++;
    cov_2px858rrr2().s[40]++;
    // Fetch balance, earnings, and transactions from the API
    const fetchDashboardData = async () => {
      /* istanbul ignore next */
      cov_2px858rrr2().f[6]++;
      cov_2px858rrr2().s[41]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_2px858rrr2().s[42]++, await fetch('/api/seller/earnings'));
        const data =
        /* istanbul ignore next */
        (cov_2px858rrr2().s[43]++, await response.json());
        /* istanbul ignore next */
        cov_2px858rrr2().s[44]++;
        if (response.ok) {
          /* istanbul ignore next */
          cov_2px858rrr2().b[15][0]++;
          cov_2px858rrr2().s[45]++;
          setBalance(data.balance);
          /* istanbul ignore next */
          cov_2px858rrr2().s[46]++;
          setEarnings(data.totalEarnings);
          /* istanbul ignore next */
          cov_2px858rrr2().s[47]++;
          setTransactions(data.transactions);
        } else {
          /* istanbul ignore next */
          cov_2px858rrr2().b[15][1]++;
          cov_2px858rrr2().s[48]++;
          console.error('Failed to fetch data:', data.message);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_2px858rrr2().s[49]++;
        console.error('Error fetching dashboard data:', error);
      }
    };
    /* istanbul ignore next */
    cov_2px858rrr2().s[50]++;
    fetchDashboardData();
  }, []);
  /* istanbul ignore next */
  cov_2px858rrr2().s[51]++;
  const handleWithdrawRequest = async () => {
    /* istanbul ignore next */
    cov_2px858rrr2().f[7]++;
    cov_2px858rrr2().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_2px858rrr2().b[17][0]++, !withdrawAmount) ||
    /* istanbul ignore next */
    (cov_2px858rrr2().b[17][1]++, parseFloat(withdrawAmount) <= 0)) {
      /* istanbul ignore next */
      cov_2px858rrr2().b[16][0]++;
      cov_2px858rrr2().s[53]++;
      alert('Please enter a valid withdrawal amount.');
      /* istanbul ignore next */
      cov_2px858rrr2().s[54]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2px858rrr2().b[16][1]++;
    }
    cov_2px858rrr2().s[55]++;
    if (parseFloat(withdrawAmount) > balance) {
      /* istanbul ignore next */
      cov_2px858rrr2().b[18][0]++;
      cov_2px858rrr2().s[56]++;
      alert('Withdrawal amount exceeds available balance.');
      /* istanbul ignore next */
      cov_2px858rrr2().s[57]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2px858rrr2().b[18][1]++;
    }
    cov_2px858rrr2().s[58]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_2px858rrr2().s[59]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2px858rrr2().s[60]++, await fetch('/api/withdrawals/request', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          amount: parseFloat(withdrawAmount)
        })
      }));
      const result =
      /* istanbul ignore next */
      (cov_2px858rrr2().s[61]++, await response.json());
      /* istanbul ignore next */
      cov_2px858rrr2().s[62]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_2px858rrr2().b[19][0]++;
        cov_2px858rrr2().s[63]++;
        alert('Withdrawal request submitted successfully!');
        /* istanbul ignore next */
        cov_2px858rrr2().s[64]++;
        setWithdrawAmount('');
        /* istanbul ignore next */
        cov_2px858rrr2().s[65]++;
        setBalance(prev => {
          /* istanbul ignore next */
          cov_2px858rrr2().f[8]++;
          cov_2px858rrr2().s[66]++;
          return prev - parseFloat(withdrawAmount);
        });
      } else {
        /* istanbul ignore next */
        cov_2px858rrr2().b[19][1]++;
        cov_2px858rrr2().s[67]++;
        alert(
        /* istanbul ignore next */
        (cov_2px858rrr2().b[20][0]++, result.message) ||
        /* istanbul ignore next */
        (cov_2px858rrr2().b[20][1]++, 'Something went wrong.'));
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2px858rrr2().s[68]++;
      alert('Error submitting withdrawal request.');
    } finally {
      /* istanbul ignore next */
      cov_2px858rrr2().s[69]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_2px858rrr2().s[70]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
    className: "max-w-4xl mx-auto mt-8",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
        children: "Seller Earnings Dashboard"
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
            children: ["Total Earnings: ", /*#__PURE__*/(0, _jsxruntime.jsxs)("strong", {
              children: ["$", earnings.toFixed(2)]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
            children: ["Available Balance: ", /*#__PURE__*/(0, _jsxruntime.jsxs)("strong", {
              children: ["$", balance.toFixed(2)]
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            children: "Request Withdrawal"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
            type: "number",
            placeholder: "Enter withdrawal amount",
            value: withdrawAmount,
            onChange: e => {
              /* istanbul ignore next */
              cov_2px858rrr2().f[9]++;
              cov_2px858rrr2().s[71]++;
              return setWithdrawAmount(e.target.value);
            },
            className: "mb-4"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            onClick: handleWithdrawRequest,
            disabled: loading,
            className: "w-full",
            children: loading ?
            /* istanbul ignore next */
            (cov_2px858rrr2().b[21][0]++, 'Submitting...') :
            /* istanbul ignore next */
            (cov_2px858rrr2().b[21][1]++, 'Request Withdrawal')
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            children: "Transaction History"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("ul", {
            className: "space-y-2",
            children: transactions.length > 0 ?
            /* istanbul ignore next */
            (cov_2px858rrr2().b[22][0]++, transactions.map((txn, index) => {
              /* istanbul ignore next */
              cov_2px858rrr2().f[10]++;
              cov_2px858rrr2().s[72]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("li", {
                className: "border p-2 rounded",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  children: txn.description
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                  children: ["Amount: $", txn.amount.toFixed(2)]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                  children: ["Date: ", new Date(txn.date).toLocaleDateString()]
                })]
              }, index);
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_2px858rrr2().b[22][1]++, (0, _jsxruntime.jsx)("p", {
              children: "No transactions available."
            }))
          })]
        })]
      })
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_2px858rrr2().s[73]++, SellerEarningsDashboard);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,