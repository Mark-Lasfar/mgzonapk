{"version":3,"names":["_default","SellerEarningsDashboard","cov_2px858rrr2","f","balance","setBalance","s","_react","useState","earnings","setEarnings","transactions","setTransactions","withdrawAmount","setWithdrawAmount","loading","setLoading","useEffect","fetchDashboardData","response","fetch","data","json","ok","b","totalEarnings","console","error","message","handleWithdrawRequest","parseFloat","alert","method","headers","body","JSON","stringify","amount","result","success","prev","_jsxruntime","jsxs","_card","Card","className","jsx","CardHeader","CardTitle","CardContent","toFixed","_input","Input","type","placeholder","value","onChange","e","target","_button","Button","onClick","disabled","length","map","txn","index","description","Date","date","toLocaleDateString"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/earnings/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\n\nconst SellerEarningsDashboard = () => {\n  const [balance, setBalance] = useState(0);\n  const [earnings, setEarnings] = useState(0);\n  const [transactions, setTransactions] = useState([]);\n  const [withdrawAmount, setWithdrawAmount] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // Fetch balance, earnings, and transactions from the API\n    const fetchDashboardData = async () => {\n      try {\n        const response = await fetch('/api/seller/earnings');\n        const data = await response.json();\n        if (response.ok) {\n          setBalance(data.balance);\n          setEarnings(data.totalEarnings);\n          setTransactions(data.transactions);\n        } else {\n          console.error('Failed to fetch data:', data.message);\n        }\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  const handleWithdrawRequest = async () => {\n    if (!withdrawAmount || parseFloat(withdrawAmount) <= 0) {\n      alert('Please enter a valid withdrawal amount.');\n      return;\n    }\n\n    if (parseFloat(withdrawAmount) > balance) {\n      alert('Withdrawal amount exceeds available balance.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await fetch('/api/withdrawals/request', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ amount: parseFloat(withdrawAmount) }),\n      });\n\n      const result = await response.json();\n      if (result.success) {\n        alert('Withdrawal request submitted successfully!');\n        setWithdrawAmount('');\n        setBalance((prev) => prev - parseFloat(withdrawAmount));\n      } else {\n        alert(result.message || 'Something went wrong.');\n      }\n    } catch (error) {\n      alert('Error submitting withdrawal request.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Card className=\"max-w-4xl mx-auto mt-8\">\n      <CardHeader>\n        <CardTitle>Seller Earnings Dashboard</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          <div>\n            <p>Total Earnings: <strong>${earnings.toFixed(2)}</strong></p>\n            <p>Available Balance: <strong>${balance.toFixed(2)}</strong></p>\n          </div>\n\n          <div>\n            <h3>Request Withdrawal</h3>\n            <Input\n              type=\"number\"\n              placeholder=\"Enter withdrawal amount\"\n              value={withdrawAmount}\n              onChange={(e) => setWithdrawAmount(e.target.value)}\n              className=\"mb-4\"\n            />\n            <Button\n              onClick={handleWithdrawRequest}\n              disabled={loading}\n              className=\"w-full\"\n            >\n              {loading ? 'Submitting...' : 'Request Withdrawal'}\n            </Button>\n          </div>\n\n          <div>\n            <h3>Transaction History</h3>\n            <ul className=\"space-y-2\">\n              {transactions.length > 0 ? (\n                transactions.map((txn, index) => (\n                  <li key={index} className=\"border p-2 rounded\">\n                    <p>{txn.description}</p>\n                    <p>Amount: ${txn.amount.toFixed(2)}</p>\n                    <p>Date: {new Date(txn.date).toLocaleDateString()}</p>\n                  </li>\n                ))\n              ) : (\n                <p>No transactions available.</p>\n              )}\n            </ul>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SellerEarningsDashboard;"],"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","ignoreList":[]}