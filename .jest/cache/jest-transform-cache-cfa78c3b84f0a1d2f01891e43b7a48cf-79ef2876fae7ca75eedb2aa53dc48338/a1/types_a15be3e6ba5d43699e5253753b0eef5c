e380c20179b66970770076bbea8f5f82
// Types for API Responses
"use strict";

/* istanbul ignore next */
function cov_1o45yfo841() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/types.ts";
  var hash = "0191e3ebc812d9043df0c7e8f15c48692c039e66";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/types.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/types.ts"],
      sourcesContent: ["// Types for API Responses\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  metadata?: {\n    timestamp: string;\n    version: string;\n    requestId: string;\n  };\n}\n\nexport interface PaginatedResponse<T> extends ApiResponse {\n  data: {\n    items: T[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n  };\n}\n\n// Product Related Types\nexport interface IProductInput {\n  name: string;\n  slug: string;\n  category: string;\n  images: string[];\n  brand: string;\n  description: string;\n  price: number;\n  listPrice: number;\n  countInStock: number;\n  tags: string[];\n  sizes: string[];\n  colors: Array<{\n    name: string;\n    hex: string;\n    inStock?: boolean;\n    sizes?: Array<{\n      name: string;\n      quantity: number;\n      inStock: boolean;\n    }>;\n  }>;\n  warehouseData: Array<{\n    warehouseId: string;\n    provider: string;\n    sku: string;\n    quantity: number;\n    location: string;\n    minimumStock: number;\n    reorderPoint: number;\n    colors: Array<{\n      name: string;\n      hex: string;\n      quantity: number;\n      inStock: boolean;\n      sizes: Array<{\n        name: string;\n        quantity: number;\n        inStock: boolean;\n      }>;\n    }>;\n    lastUpdated?: Date;\n    updatedBy?: string;\n  }>;\n  isPublished: boolean;\n  status: 'draft' | 'pending' | 'active' | 'rejected';\n  pricing: {\n    basePrice: number;\n    markup: number;\n    profit: number;\n    commission: number;\n    finalPrice: number;\n    discount?: {\n      type: 'none' | 'percentage' | 'fixed';\n      value: number;\n      startDate?: Date;\n      endDate?: Date;\n    };\n  };\n  metrics: {\n    views: number;\n    sales: number;\n    revenue: number;\n    returns: number;\n    rating: number;\n  };\n  sellerId?: string;\n  seller?: {\n    name: string;\n    email: string;\n    subscription?: string;\n  };\n  createdAt?: Date;\n  updatedAt?: Date;\n  createdBy?: string;\n  updatedBy?: string;\n}\n\n// Review Related Types\nexport interface IReviewDetails {\n  _id: string;\n  title: string;\n  comment: string;\n  rating: number;\n  user: {\n    _id: string;\n    name: string;\n  };\n  product: string;\n  isVerifiedPurchase: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// API Key Types\nexport interface ApiKey {\n  id: string;\n  userId: string;\n  name: string;\n  key: string;\n  secret: string;\n  permissions: ApiPermission[];\n  createdAt: Date;\n  lastUsed?: Date;\n  expiresAt?: Date;\n  isActive: boolean;\n}\n\nexport type ApiPermission =\n  | 'products:read'\n  | 'products:write'\n  | 'orders:read'\n  | 'orders:write'\n  | 'customers:read'\n  | 'customers:write'\n  | 'inventory:read'\n  | 'inventory:write'\n  | 'analytics:read';\n\n// Webhook Types\nexport interface WebhookConfig {\n  id: string;\n  userId: string;\n  url: string;\n  events: WebhookEvent[];\n  secret: string;\n  isActive: boolean;\n  createdAt: Date;\n  lastTriggered?: Date;\n}\n\nexport type WebhookEvent =\n  | 'order.created'\n  | 'order.updated'\n  | 'order.fulfilled'\n  | 'product.created'\n  | 'product.updated'\n  | 'product.deleted'\n  | 'inventory.updated'\n  | 'customer.created'\n  | 'customer.updated';\n\n// Fulfillment Types\nexport type FulfillmentProvider = \n  | 'shipbob'\n  | 'amazon'\n  | 'aliexpress'\n  | '4px';\n\nexport interface FulfillmentConfig {\n  provider: FulfillmentProvider;\n  apiKey: string;\n  apiSecret?: string;\n  warehouseId?: string;\n  region?: string;\n  sandbox?: boolean;\n  settings?: Record<string, any>;\n  createdAt: string;\n  createdBy: string;\n  updatedAt: string;\n  updatedBy: string;\n}\n\nexport interface FulfillmentTracking {\n  carrier: string;\n  trackingNumber: string;\n  trackingUrl?: string;\n  estimatedDeliveryDate?: string;\n  status?: string;\n  statusDetails?: string;\n  lastUpdated?: string;\n}\n\nexport interface InventoryLevel {\n  sku: string;\n  quantity: number;\n  warehouseId?: string;\n  location?: string;\n  lastUpdated: string;\n  updatedBy: string;\n}\n\nexport interface FulfillmentError {\n  code: string;\n  message: string;\n  details?: any;\n  timestamp: string;\n  source?: string;\n}\n\nexport interface FulfillmentResult {\n  success: boolean;\n  orderId: string;\n  fulfillmentId: string;\n  provider: FulfillmentProvider;\n  status: FulfillmentStatus;\n  tracking?: FulfillmentTracking;\n  metadata?: Record<string, any>;\n  errors?: FulfillmentError[];\n  timestamp: string;\n  processedBy: string;\n}\n\nexport type FulfillmentStatus = \n  | 'pending'\n  | 'processing'\n  | 'shipped'\n  | 'delivered'\n  | 'cancelled'\n  | 'failed';\n\n// Utility type for timestamps\nexport interface TimeStamped {\n  createdAt: Date;\n  updatedAt: Date;\n  createdBy: string;\n  updatedBy: string;\n}\n\n\nexport interface WarehouseProvider {\n  name: string;\n  createShipment: (request: any) => Promise<{ trackingId: string }>;\n  getShipmentStatus: (trackingId: string) => Promise<ShipmentStatus>;\n  getInventory: (productId: string) => Promise<WarehouseProduct>;\n  updateInventory: (productId: string, quantity: number) => Promise<void>;\n}\n\nexport interface WarehouseProduct {\n  id: string;\n  sku: string;\n  name: string;\n  quantity: number;\n  location: string;\n}"],
      names: [],
      mappings: "AAAA,0BAA0B"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0191e3ebc812d9043df0c7e8f15c48692c039e66"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1o45yfo841 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1o45yfo841();
cov_1o45yfo841().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL2hvbWUvaGFnZXIvbmV3L215LW5leHRqcy1wcm9qZWN0LW1hc3RlciAoMykvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyL2xpYi9hcGkvdHlwZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVHlwZXMgZm9yIEFQSSBSZXNwb25zZXNcbmV4cG9ydCBpbnRlcmZhY2UgQXBpUmVzcG9uc2U8VCA9IGFueT4ge1xuICBzdWNjZXNzOiBib29sZWFuO1xuICBkYXRhPzogVDtcbiAgZXJyb3I/OiBzdHJpbmc7XG4gIG1ldGFkYXRhPzoge1xuICAgIHRpbWVzdGFtcDogc3RyaW5nO1xuICAgIHZlcnNpb246IHN0cmluZztcbiAgICByZXF1ZXN0SWQ6IHN0cmluZztcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQYWdpbmF0ZWRSZXNwb25zZTxUPiBleHRlbmRzIEFwaVJlc3BvbnNlIHtcbiAgZGF0YToge1xuICAgIGl0ZW1zOiBUW107XG4gICAgdG90YWw6IG51bWJlcjtcbiAgICBwYWdlOiBudW1iZXI7XG4gICAgbGltaXQ6IG51bWJlcjtcbiAgICB0b3RhbFBhZ2VzOiBudW1iZXI7XG4gIH07XG59XG5cbi8vIFByb2R1Y3QgUmVsYXRlZCBUeXBlc1xuZXhwb3J0IGludGVyZmFjZSBJUHJvZHVjdElucHV0IHtcbiAgbmFtZTogc3RyaW5nO1xuICBzbHVnOiBzdHJpbmc7XG4gIGNhdGVnb3J5OiBzdHJpbmc7XG4gIGltYWdlczogc3RyaW5nW107XG4gIGJyYW5kOiBzdHJpbmc7XG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gIHByaWNlOiBudW1iZXI7XG4gIGxpc3RQcmljZTogbnVtYmVyO1xuICBjb3VudEluU3RvY2s6IG51bWJlcjtcbiAgdGFnczogc3RyaW5nW107XG4gIHNpemVzOiBzdHJpbmdbXTtcbiAgY29sb3JzOiBBcnJheTx7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGhleDogc3RyaW5nO1xuICAgIGluU3RvY2s/OiBib29sZWFuO1xuICAgIHNpemVzPzogQXJyYXk8e1xuICAgICAgbmFtZTogc3RyaW5nO1xuICAgICAgcXVhbnRpdHk6IG51bWJlcjtcbiAgICAgIGluU3RvY2s6IGJvb2xlYW47XG4gICAgfT47XG4gIH0+O1xuICB3YXJlaG91c2VEYXRhOiBBcnJheTx7XG4gICAgd2FyZWhvdXNlSWQ6IHN0cmluZztcbiAgICBwcm92aWRlcjogc3RyaW5nO1xuICAgIHNrdTogc3RyaW5nO1xuICAgIHF1YW50aXR5OiBudW1iZXI7XG4gICAgbG9jYXRpb246IHN0cmluZztcbiAgICBtaW5pbXVtU3RvY2s6IG51bWJlcjtcbiAgICByZW9yZGVyUG9pbnQ6IG51bWJlcjtcbiAgICBjb2xvcnM6IEFycmF5PHtcbiAgICAgIG5hbWU6IHN0cmluZztcbiAgICAgIGhleDogc3RyaW5nO1xuICAgICAgcXVhbnRpdHk6IG51bWJlcjtcbiAgICAgIGluU3RvY2s6IGJvb2xlYW47XG4gICAgICBzaXplczogQXJyYXk8e1xuICAgICAgICBuYW1lOiBzdHJpbmc7XG4gICAgICAgIHF1YW50aXR5OiBudW1iZXI7XG4gICAgICAgIGluU3RvY2s6IGJvb2xlYW47XG4gICAgICB9PjtcbiAgICB9PjtcbiAgICBsYXN0VXBkYXRlZD86IERhdGU7XG4gICAgdXBkYXRlZEJ5Pzogc3RyaW5nO1xuICB9PjtcbiAgaXNQdWJsaXNoZWQ6IGJvb2xlYW47XG4gIHN0YXR1czogJ2RyYWZ0JyB8ICdwZW5kaW5nJyB8ICdhY3RpdmUnIHwgJ3JlamVjdGVkJztcbiAgcHJpY2luZzoge1xuICAgIGJhc2VQcmljZTogbnVtYmVyO1xuICAgIG1hcmt1cDogbnVtYmVyO1xuICAgIHByb2ZpdDogbnVtYmVyO1xuICAgIGNvbW1pc3Npb246IG51bWJlcjtcbiAgICBmaW5hbFByaWNlOiBudW1iZXI7XG4gICAgZGlzY291bnQ/OiB7XG4gICAgICB0eXBlOiAnbm9uZScgfCAncGVyY2VudGFnZScgfCAnZml4ZWQnO1xuICAgICAgdmFsdWU6IG51bWJlcjtcbiAgICAgIHN0YXJ0RGF0ZT86IERhdGU7XG4gICAgICBlbmREYXRlPzogRGF0ZTtcbiAgICB9O1xuICB9O1xuICBtZXRyaWNzOiB7XG4gICAgdmlld3M6IG51bWJlcjtcbiAgICBzYWxlczogbnVtYmVyO1xuICAgIHJldmVudWU6IG51bWJlcjtcbiAgICByZXR1cm5zOiBudW1iZXI7XG4gICAgcmF0aW5nOiBudW1iZXI7XG4gIH07XG4gIHNlbGxlcklkPzogc3RyaW5nO1xuICBzZWxsZXI/OiB7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGVtYWlsOiBzdHJpbmc7XG4gICAgc3Vic2NyaXB0aW9uPzogc3RyaW5nO1xuICB9O1xuICBjcmVhdGVkQXQ/OiBEYXRlO1xuICB1cGRhdGVkQXQ/OiBEYXRlO1xuICBjcmVhdGVkQnk/OiBzdHJpbmc7XG4gIHVwZGF0ZWRCeT86IHN0cmluZztcbn1cblxuLy8gUmV2aWV3IFJlbGF0ZWQgVHlwZXNcbmV4cG9ydCBpbnRlcmZhY2UgSVJldmlld0RldGFpbHMge1xuICBfaWQ6IHN0cmluZztcbiAgdGl0bGU6IHN0cmluZztcbiAgY29tbWVudDogc3RyaW5nO1xuICByYXRpbmc6IG51bWJlcjtcbiAgdXNlcjoge1xuICAgIF9pZDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgfTtcbiAgcHJvZHVjdDogc3RyaW5nO1xuICBpc1ZlcmlmaWVkUHVyY2hhc2U6IGJvb2xlYW47XG4gIGNyZWF0ZWRBdDogRGF0ZTtcbiAgdXBkYXRlZEF0OiBEYXRlO1xufVxuXG4vLyBBUEkgS2V5IFR5cGVzXG5leHBvcnQgaW50ZXJmYWNlIEFwaUtleSB7XG4gIGlkOiBzdHJpbmc7XG4gIHVzZXJJZDogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIGtleTogc3RyaW5nO1xuICBzZWNyZXQ6IHN0cmluZztcbiAgcGVybWlzc2lvbnM6IEFwaVBlcm1pc3Npb25bXTtcbiAgY3JlYXRlZEF0OiBEYXRlO1xuICBsYXN0VXNlZD86IERhdGU7XG4gIGV4cGlyZXNBdD86IERhdGU7XG4gIGlzQWN0aXZlOiBib29sZWFuO1xufVxuXG5leHBvcnQgdHlwZSBBcGlQZXJtaXNzaW9uID1cbiAgfCAncHJvZHVjdHM6cmVhZCdcbiAgfCAncHJvZHVjdHM6d3JpdGUnXG4gIHwgJ29yZGVyczpyZWFkJ1xuICB8ICdvcmRlcnM6d3JpdGUnXG4gIHwgJ2N1c3RvbWVyczpyZWFkJ1xuICB8ICdjdXN0b21lcnM6d3JpdGUnXG4gIHwgJ2ludmVudG9yeTpyZWFkJ1xuICB8ICdpbnZlbnRvcnk6d3JpdGUnXG4gIHwgJ2FuYWx5dGljczpyZWFkJztcblxuLy8gV2ViaG9vayBUeXBlc1xuZXhwb3J0IGludGVyZmFjZSBXZWJob29rQ29uZmlnIHtcbiAgaWQ6IHN0cmluZztcbiAgdXNlcklkOiBzdHJpbmc7XG4gIHVybDogc3RyaW5nO1xuICBldmVudHM6IFdlYmhvb2tFdmVudFtdO1xuICBzZWNyZXQ6IHN0cmluZztcbiAgaXNBY3RpdmU6IGJvb2xlYW47XG4gIGNyZWF0ZWRBdDogRGF0ZTtcbiAgbGFzdFRyaWdnZXJlZD86IERhdGU7XG59XG5cbmV4cG9ydCB0eXBlIFdlYmhvb2tFdmVudCA9XG4gIHwgJ29yZGVyLmNyZWF0ZWQnXG4gIHwgJ29yZGVyLnVwZGF0ZWQnXG4gIHwgJ29yZGVyLmZ1bGZpbGxlZCdcbiAgfCAncHJvZHVjdC5jcmVhdGVkJ1xuICB8ICdwcm9kdWN0LnVwZGF0ZWQnXG4gIHwgJ3Byb2R1Y3QuZGVsZXRlZCdcbiAgfCAnaW52ZW50b3J5LnVwZGF0ZWQnXG4gIHwgJ2N1c3RvbWVyLmNyZWF0ZWQnXG4gIHwgJ2N1c3RvbWVyLnVwZGF0ZWQnO1xuXG4vLyBGdWxmaWxsbWVudCBUeXBlc1xuZXhwb3J0IHR5cGUgRnVsZmlsbG1lbnRQcm92aWRlciA9IFxuICB8ICdzaGlwYm9iJ1xuICB8ICdhbWF6b24nXG4gIHwgJ2FsaWV4cHJlc3MnXG4gIHwgJzRweCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRnVsZmlsbG1lbnRDb25maWcge1xuICBwcm92aWRlcjogRnVsZmlsbG1lbnRQcm92aWRlcjtcbiAgYXBpS2V5OiBzdHJpbmc7XG4gIGFwaVNlY3JldD86IHN0cmluZztcbiAgd2FyZWhvdXNlSWQ/OiBzdHJpbmc7XG4gIHJlZ2lvbj86IHN0cmluZztcbiAgc2FuZGJveD86IGJvb2xlYW47XG4gIHNldHRpbmdzPzogUmVjb3JkPHN0cmluZywgYW55PjtcbiAgY3JlYXRlZEF0OiBzdHJpbmc7XG4gIGNyZWF0ZWRCeTogc3RyaW5nO1xuICB1cGRhdGVkQXQ6IHN0cmluZztcbiAgdXBkYXRlZEJ5OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRnVsZmlsbG1lbnRUcmFja2luZyB7XG4gIGNhcnJpZXI6IHN0cmluZztcbiAgdHJhY2tpbmdOdW1iZXI6IHN0cmluZztcbiAgdHJhY2tpbmdVcmw/OiBzdHJpbmc7XG4gIGVzdGltYXRlZERlbGl2ZXJ5RGF0ZT86IHN0cmluZztcbiAgc3RhdHVzPzogc3RyaW5nO1xuICBzdGF0dXNEZXRhaWxzPzogc3RyaW5nO1xuICBsYXN0VXBkYXRlZD86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJbnZlbnRvcnlMZXZlbCB7XG4gIHNrdTogc3RyaW5nO1xuICBxdWFudGl0eTogbnVtYmVyO1xuICB3YXJlaG91c2VJZD86IHN0cmluZztcbiAgbG9jYXRpb24/OiBzdHJpbmc7XG4gIGxhc3RVcGRhdGVkOiBzdHJpbmc7XG4gIHVwZGF0ZWRCeTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEZ1bGZpbGxtZW50RXJyb3Ige1xuICBjb2RlOiBzdHJpbmc7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgZGV0YWlscz86IGFueTtcbiAgdGltZXN0YW1wOiBzdHJpbmc7XG4gIHNvdXJjZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGdWxmaWxsbWVudFJlc3VsdCB7XG4gIHN1Y2Nlc3M6IGJvb2xlYW47XG4gIG9yZGVySWQ6IHN0cmluZztcbiAgZnVsZmlsbG1lbnRJZDogc3RyaW5nO1xuICBwcm92aWRlcjogRnVsZmlsbG1lbnRQcm92aWRlcjtcbiAgc3RhdHVzOiBGdWxmaWxsbWVudFN0YXR1cztcbiAgdHJhY2tpbmc/OiBGdWxmaWxsbWVudFRyYWNraW5nO1xuICBtZXRhZGF0YT86IFJlY29yZDxzdHJpbmcsIGFueT47XG4gIGVycm9ycz86IEZ1bGZpbGxtZW50RXJyb3JbXTtcbiAgdGltZXN0YW1wOiBzdHJpbmc7XG4gIHByb2Nlc3NlZEJ5OiBzdHJpbmc7XG59XG5cbmV4cG9ydCB0eXBlIEZ1bGZpbGxtZW50U3RhdHVzID0gXG4gIHwgJ3BlbmRpbmcnXG4gIHwgJ3Byb2Nlc3NpbmcnXG4gIHwgJ3NoaXBwZWQnXG4gIHwgJ2RlbGl2ZXJlZCdcbiAgfCAnY2FuY2VsbGVkJ1xuICB8ICdmYWlsZWQnO1xuXG4vLyBVdGlsaXR5IHR5cGUgZm9yIHRpbWVzdGFtcHNcbmV4cG9ydCBpbnRlcmZhY2UgVGltZVN0YW1wZWQge1xuICBjcmVhdGVkQXQ6IERhdGU7XG4gIHVwZGF0ZWRBdDogRGF0ZTtcbiAgY3JlYXRlZEJ5OiBzdHJpbmc7XG4gIHVwZGF0ZWRCeTogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBpbnRlcmZhY2UgV2FyZWhvdXNlUHJvdmlkZXIge1xuICBuYW1lOiBzdHJpbmc7XG4gIGNyZWF0ZVNoaXBtZW50OiAocmVxdWVzdDogYW55KSA9PiBQcm9taXNlPHsgdHJhY2tpbmdJZDogc3RyaW5nIH0+O1xuICBnZXRTaGlwbWVudFN0YXR1czogKHRyYWNraW5nSWQ6IHN0cmluZykgPT4gUHJvbWlzZTxTaGlwbWVudFN0YXR1cz47XG4gIGdldEludmVudG9yeTogKHByb2R1Y3RJZDogc3RyaW5nKSA9PiBQcm9taXNlPFdhcmVob3VzZVByb2R1Y3Q+O1xuICB1cGRhdGVJbnZlbnRvcnk6IChwcm9kdWN0SWQ6IHN0cmluZywgcXVhbnRpdHk6IG51bWJlcikgPT4gUHJvbWlzZTx2b2lkPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBXYXJlaG91c2VQcm9kdWN0IHtcbiAgaWQ6IHN0cmluZztcbiAgc2t1OiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgcXVhbnRpdHk6IG51bWJlcjtcbiAgbG9jYXRpb246IHN0cmluZztcbn0iXSwibWFwcGluZ3MiOiJBQUFBIiwiaWdub3JlTGlzdCI6W119