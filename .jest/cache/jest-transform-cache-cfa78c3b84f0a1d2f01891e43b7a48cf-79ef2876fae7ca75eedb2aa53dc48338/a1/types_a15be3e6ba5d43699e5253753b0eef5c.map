{"version":3,"names":[],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/types.ts"],"sourcesContent":["// Types for API Responses\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  metadata?: {\n    timestamp: string;\n    version: string;\n    requestId: string;\n  };\n}\n\nexport interface PaginatedResponse<T> extends ApiResponse {\n  data: {\n    items: T[];\n    total: number;\n    page: number;\n    limit: number;\n    totalPages: number;\n  };\n}\n\n// Product Related Types\nexport interface IProductInput {\n  name: string;\n  slug: string;\n  category: string;\n  images: string[];\n  brand: string;\n  description: string;\n  price: number;\n  listPrice: number;\n  countInStock: number;\n  tags: string[];\n  sizes: string[];\n  colors: Array<{\n    name: string;\n    hex: string;\n    inStock?: boolean;\n    sizes?: Array<{\n      name: string;\n      quantity: number;\n      inStock: boolean;\n    }>;\n  }>;\n  warehouseData: Array<{\n    warehouseId: string;\n    provider: string;\n    sku: string;\n    quantity: number;\n    location: string;\n    minimumStock: number;\n    reorderPoint: number;\n    colors: Array<{\n      name: string;\n      hex: string;\n      quantity: number;\n      inStock: boolean;\n      sizes: Array<{\n        name: string;\n        quantity: number;\n        inStock: boolean;\n      }>;\n    }>;\n    lastUpdated?: Date;\n    updatedBy?: string;\n  }>;\n  isPublished: boolean;\n  status: 'draft' | 'pending' | 'active' | 'rejected';\n  pricing: {\n    basePrice: number;\n    markup: number;\n    profit: number;\n    commission: number;\n    finalPrice: number;\n    discount?: {\n      type: 'none' | 'percentage' | 'fixed';\n      value: number;\n      startDate?: Date;\n      endDate?: Date;\n    };\n  };\n  metrics: {\n    views: number;\n    sales: number;\n    revenue: number;\n    returns: number;\n    rating: number;\n  };\n  sellerId?: string;\n  seller?: {\n    name: string;\n    email: string;\n    subscription?: string;\n  };\n  createdAt?: Date;\n  updatedAt?: Date;\n  createdBy?: string;\n  updatedBy?: string;\n}\n\n// Review Related Types\nexport interface IReviewDetails {\n  _id: string;\n  title: string;\n  comment: string;\n  rating: number;\n  user: {\n    _id: string;\n    name: string;\n  };\n  product: string;\n  isVerifiedPurchase: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// API Key Types\nexport interface ApiKey {\n  id: string;\n  userId: string;\n  name: string;\n  key: string;\n  secret: string;\n  permissions: ApiPermission[];\n  createdAt: Date;\n  lastUsed?: Date;\n  expiresAt?: Date;\n  isActive: boolean;\n}\n\nexport type ApiPermission =\n  | 'products:read'\n  | 'products:write'\n  | 'orders:read'\n  | 'orders:write'\n  | 'customers:read'\n  | 'customers:write'\n  | 'inventory:read'\n  | 'inventory:write'\n  | 'analytics:read';\n\n// Webhook Types\nexport interface WebhookConfig {\n  id: string;\n  userId: string;\n  url: string;\n  events: WebhookEvent[];\n  secret: string;\n  isActive: boolean;\n  createdAt: Date;\n  lastTriggered?: Date;\n}\n\nexport type WebhookEvent =\n  | 'order.created'\n  | 'order.updated'\n  | 'order.fulfilled'\n  | 'product.created'\n  | 'product.updated'\n  | 'product.deleted'\n  | 'inventory.updated'\n  | 'customer.created'\n  | 'customer.updated';\n\n// Fulfillment Types\nexport type FulfillmentProvider = \n  | 'shipbob'\n  | 'amazon'\n  | 'aliexpress'\n  | '4px';\n\nexport interface FulfillmentConfig {\n  provider: FulfillmentProvider;\n  apiKey: string;\n  apiSecret?: string;\n  warehouseId?: string;\n  region?: string;\n  sandbox?: boolean;\n  settings?: Record<string, any>;\n  createdAt: string;\n  createdBy: string;\n  updatedAt: string;\n  updatedBy: string;\n}\n\nexport interface FulfillmentTracking {\n  carrier: string;\n  trackingNumber: string;\n  trackingUrl?: string;\n  estimatedDeliveryDate?: string;\n  status?: string;\n  statusDetails?: string;\n  lastUpdated?: string;\n}\n\nexport interface InventoryLevel {\n  sku: string;\n  quantity: number;\n  warehouseId?: string;\n  location?: string;\n  lastUpdated: string;\n  updatedBy: string;\n}\n\nexport interface FulfillmentError {\n  code: string;\n  message: string;\n  details?: any;\n  timestamp: string;\n  source?: string;\n}\n\nexport interface FulfillmentResult {\n  success: boolean;\n  orderId: string;\n  fulfillmentId: string;\n  provider: FulfillmentProvider;\n  status: FulfillmentStatus;\n  tracking?: FulfillmentTracking;\n  metadata?: Record<string, any>;\n  errors?: FulfillmentError[];\n  timestamp: string;\n  processedBy: string;\n}\n\nexport type FulfillmentStatus = \n  | 'pending'\n  | 'processing'\n  | 'shipped'\n  | 'delivered'\n  | 'cancelled'\n  | 'failed';\n\n// Utility type for timestamps\nexport interface TimeStamped {\n  createdAt: Date;\n  updatedAt: Date;\n  createdBy: string;\n  updatedBy: string;\n}\n\n\nexport interface WarehouseProvider {\n  name: string;\n  createShipment: (request: any) => Promise<{ trackingId: string }>;\n  getShipmentStatus: (trackingId: string) => Promise<ShipmentStatus>;\n  getInventory: (productId: string) => Promise<WarehouseProduct>;\n  updateInventory: (productId: string, quantity: number) => Promise<void>;\n}\n\nexport interface WarehouseProduct {\n  id: string;\n  sku: string;\n  name: string;\n  quantity: number;\n  location: string;\n}"],"mappings":"AAAA","ignoreList":[]}