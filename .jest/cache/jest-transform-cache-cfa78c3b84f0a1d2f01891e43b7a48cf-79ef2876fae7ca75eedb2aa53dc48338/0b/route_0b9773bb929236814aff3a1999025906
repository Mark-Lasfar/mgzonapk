47047527a6798dffce6cf86e005e46d1
"use strict";

/* istanbul ignore next */
function cov_1u3w1a9coq() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/auth/2fa-verify/route.ts";
  var hash = "c4e8dd9c110274e143e0ebc06412c31fedc400f6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/auth/2fa-verify/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 41
        }
      },
      "5": {
        start: {
          line: 13,
          column: 45
        },
        end: {
          line: 13,
          column: 131
        }
      },
      "6": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 41
        }
      },
      "7": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 15,
          column: 67
        }
      },
      "8": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 64
        }
      },
      "9": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 6
        }
      },
      "10": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "11": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 43
        }
      },
      "12": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 47
        }
      },
      "13": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "14": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 32,
          column: 15
        }
      },
      "15": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "16": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "17": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "18": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 48,
          column: 15
        }
      },
      "19": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 54,
          column: 15
        }
      },
      "20": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 33
        }
      },
      "21": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 34
        }
      },
      "22": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "23": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "24": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "25": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 64
        }
      },
      "26": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 33
          }
        },
        loc: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "POST",
        decl: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 19
          }
        },
        loc: {
          start: {
            line: 22,
            column: 25
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 22
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 18,
            column: 38
          }
        }, {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 20,
            column: 5
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 14
          }
        }, {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 32
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/auth/2fa-verify/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { connectToDatabase } from '@/lib/db';\nimport VerificationCode from '@/lib/db/models/verification-code.model';\nimport { auth } from '@/auth';\nimport { sendNotification } from '@/lib/utils/notification';\nimport { logger } from '@/lib/api/services/logging';\n\nexport async function POST(req: NextRequest) {\n  try {\n    await connectToDatabase();\n    const session = await auth();\n    if (!session?.user?.id) {\n      return NextResponse.json({ success: false, error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { code } = await req.json();\n    const verification = await VerificationCode.findOne({\n      userId: session.user.id,\n      code,\n      type: '2fa',\n      used: false,\n      expiresAt: { $gt: new Date() },\n    });\n\n    if (!verification) {\n      logger.warn('Invalid or expired 2FA code', { userId: session.user.id, code });\n      return NextResponse.json({ success: false, error: 'Invalid or expired code' }, { status: 400 });\n    }\n\n    verification.used = true;\n    await verification.save();\n\n    // Send notification for successful 2FA verification\n    await sendNotification({\n      userId: session.user.id,\n      type: 'verification',\n      title: '2FA Verification Successful',\n      message: 'Your two-factor authentication code was successfully verified.',\n      channels: ['email', 'in_app'],\n      data: { verificationType: '2fa' },\n    });\n\n    logger.info('2FA verification successful', { userId: session.user.id });\n    return NextResponse.json({ success: true });\n  } catch (error) {\n    logger.error('2FA verification error:', error);\n    return NextResponse.json({ success: false, error: 'Verification failed' }, { status: 500 });\n  }\n}"],
      names: ["POST", "req", "connectToDatabase", "session", "auth", "user", "id", "NextResponse", "json", "success", "error", "status", "code", "verification", "VerificationCode", "findOne", "userId", "type", "used", "expiresAt", "$gt", "Date", "logger", "warn", "save", "sendNotification", "title", "message", "channels", "data", "verificationType", "info"],
      mappings: ";;;;+BAOsBA;;;eAAAA;;;wBAPoB;oBACR;8EACL;sBACR;8BACY;yBACV;;;;;;AAEhB,eAAeA,KAAKC,GAAgB;IACzC,IAAI;QACF,MAAMC,IAAAA,qBAAiB;QACvB,MAAMC,UAAU,MAAMC,IAAAA,UAAI;QAC1B,IAAI,CAACD,SAASE,MAAMC,IAAI;YACtB,OAAOC,oBAAY,CAACC,IAAI,CAAC;gBAAEC,SAAS;gBAAOC,OAAO;YAAe,GAAG;gBAAEC,QAAQ;YAAI;QACpF;QAEA,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMX,IAAIO,IAAI;QAC/B,MAAMK,eAAe,MAAMC,8BAAgB,CAACC,OAAO,CAAC;YAClDC,QAAQb,QAAQE,IAAI,CAACC,EAAE;YACvBM;YACAK,MAAM;YACNC,MAAM;YACNC,WAAW;gBAAEC,KAAK,IAAIC;YAAO;QAC/B;QAEA,IAAI,CAACR,cAAc;YACjBS,eAAM,CAACC,IAAI,CAAC,+BAA+B;gBAAEP,QAAQb,QAAQE,IAAI,CAACC,EAAE;gBAAEM;YAAK;YAC3E,OAAOL,oBAAY,CAACC,IAAI,CAAC;gBAAEC,SAAS;gBAAOC,OAAO;YAA0B,GAAG;gBAAEC,QAAQ;YAAI;QAC/F;QAEAE,aAAaK,IAAI,GAAG;QACpB,MAAML,aAAaW,IAAI;QAEvB,oDAAoD;QACpD,MAAMC,IAAAA,8BAAgB,EAAC;YACrBT,QAAQb,QAAQE,IAAI,CAACC,EAAE;YACvBW,MAAM;YACNS,OAAO;YACPC,SAAS;YACTC,UAAU;gBAAC;gBAAS;aAAS;YAC7BC,MAAM;gBAAEC,kBAAkB;YAAM;QAClC;QAEAR,eAAM,CAACS,IAAI,CAAC,+BAA+B;YAAEf,QAAQb,QAAQE,IAAI,CAACC,EAAE;QAAC;QACrE,OAAOC,oBAAY,CAACC,IAAI,CAAC;YAAEC,SAAS;QAAK;IAC3C,EAAE,OAAOC,OAAO;QACdY,eAAM,CAACZ,KAAK,CAAC,2BAA2BA;QACxC,OAAOH,oBAAY,CAACC,IAAI,CAAC;YAAEC,SAAS;YAAOC,OAAO;QAAsB,GAAG;YAAEC,QAAQ;QAAI;IAC3F;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c4e8dd9c110274e143e0ebc06412c31fedc400f6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1u3w1a9coq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1u3w1a9coq();
cov_1u3w1a9coq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1u3w1a9coq().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1u3w1a9coq().f[0]++;
    cov_1u3w1a9coq().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_1u3w1a9coq().s[3]++, require("next/server"));
const _db =
/* istanbul ignore next */
(cov_1u3w1a9coq().s[4]++, require("../../../../lib/db"));
const _verificationcodemodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_1u3w1a9coq().s[5]++, _interop_require_default(require("../../../../lib/db/models/verification-code.model")));
const _auth =
/* istanbul ignore next */
(cov_1u3w1a9coq().s[6]++, require("../../../../auth"));
const _notification =
/* istanbul ignore next */
(cov_1u3w1a9coq().s[7]++, require("../../../../lib/utils/notification"));
const _logging =
/* istanbul ignore next */
(cov_1u3w1a9coq().s[8]++, require("../../../../lib/api/services/logging"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1u3w1a9coq().f[1]++;
  cov_1u3w1a9coq().s[9]++;
  return /* istanbul ignore next */(cov_1u3w1a9coq().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1u3w1a9coq().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1u3w1a9coq().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1u3w1a9coq().b[0][1]++, {
    default: obj
  });
}
async function POST(req) {
  /* istanbul ignore next */
  cov_1u3w1a9coq().f[2]++;
  cov_1u3w1a9coq().s[10]++;
  try {
    /* istanbul ignore next */
    cov_1u3w1a9coq().s[11]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_1u3w1a9coq().s[12]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_1u3w1a9coq().s[13]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_1u3w1a9coq().b[2][0]++;
      cov_1u3w1a9coq().s[14]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Unauthorized'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1u3w1a9coq().b[2][1]++;
    }
    const {
      code
    } =
    /* istanbul ignore next */
    (cov_1u3w1a9coq().s[15]++, await req.json());
    const verification =
    /* istanbul ignore next */
    (cov_1u3w1a9coq().s[16]++, await _verificationcodemodel.default.findOne({
      userId: session.user.id,
      code,
      type: '2fa',
      used: false,
      expiresAt: {
        $gt: new Date()
      }
    }));
    /* istanbul ignore next */
    cov_1u3w1a9coq().s[17]++;
    if (!verification) {
      /* istanbul ignore next */
      cov_1u3w1a9coq().b[3][0]++;
      cov_1u3w1a9coq().s[18]++;
      _logging.logger.warn('Invalid or expired 2FA code', {
        userId: session.user.id,
        code
      });
      /* istanbul ignore next */
      cov_1u3w1a9coq().s[19]++;
      return _server.NextResponse.json({
        success: false,
        error: 'Invalid or expired code'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1u3w1a9coq().b[3][1]++;
    }
    cov_1u3w1a9coq().s[20]++;
    verification.used = true;
    /* istanbul ignore next */
    cov_1u3w1a9coq().s[21]++;
    await verification.save();
    // Send notification for successful 2FA verification
    /* istanbul ignore next */
    cov_1u3w1a9coq().s[22]++;
    await (0, _notification.sendNotification)({
      userId: session.user.id,
      type: 'verification',
      title: '2FA Verification Successful',
      message: 'Your two-factor authentication code was successfully verified.',
      channels: ['email', 'in_app'],
      data: {
        verificationType: '2fa'
      }
    });
    /* istanbul ignore next */
    cov_1u3w1a9coq().s[23]++;
    _logging.logger.info('2FA verification successful', {
      userId: session.user.id
    });
    /* istanbul ignore next */
    cov_1u3w1a9coq().s[24]++;
    return _server.NextResponse.json({
      success: true
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1u3w1a9coq().s[25]++;
    _logging.logger.error('2FA verification error:', error);
    /* istanbul ignore next */
    cov_1u3w1a9coq().s[26]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Verification failed'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQT1NUIiwicmVxIiwiY292XzF1M3cxYTljb3EiLCJmIiwicyIsIl9kYiIsImNvbm5lY3RUb0RhdGFiYXNlIiwic2Vzc2lvbiIsIl9hdXRoIiwiYXV0aCIsInVzZXIiLCJpZCIsImIiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsInN1Y2Nlc3MiLCJlcnJvciIsInN0YXR1cyIsImNvZGUiLCJ2ZXJpZmljYXRpb24iLCJfdmVyaWZpY2F0aW9uY29kZW1vZGVsIiwiZGVmYXVsdCIsImZpbmRPbmUiLCJ1c2VySWQiLCJ0eXBlIiwidXNlZCIsImV4cGlyZXNBdCIsIiRndCIsIkRhdGUiLCJfbG9nZ2luZyIsImxvZ2dlciIsIndhcm4iLCJzYXZlIiwiX25vdGlmaWNhdGlvbiIsInNlbmROb3RpZmljYXRpb24iLCJ0aXRsZSIsIm1lc3NhZ2UiLCJjaGFubmVscyIsImRhdGEiLCJ2ZXJpZmljYXRpb25UeXBlIiwiaW5mbyJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9hcHAvYXBpL2F1dGgvMmZhLXZlcmlmeS9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgY29ubmVjdFRvRGF0YWJhc2UgfSBmcm9tICdAL2xpYi9kYic7XG5pbXBvcnQgVmVyaWZpY2F0aW9uQ29kZSBmcm9tICdAL2xpYi9kYi9tb2RlbHMvdmVyaWZpY2F0aW9uLWNvZGUubW9kZWwnO1xuaW1wb3J0IHsgYXV0aCB9IGZyb20gJ0AvYXV0aCc7XG5pbXBvcnQgeyBzZW5kTm90aWZpY2F0aW9uIH0gZnJvbSAnQC9saWIvdXRpbHMvbm90aWZpY2F0aW9uJztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ0AvbGliL2FwaS9zZXJ2aWNlcy9sb2dnaW5nJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxOiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGF3YWl0IGNvbm5lY3RUb0RhdGFiYXNlKCk7XG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGF1dGgoKTtcbiAgICBpZiAoIXNlc3Npb24/LnVzZXI/LmlkKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6ICdVbmF1dGhvcml6ZWQnIH0sIHsgc3RhdHVzOiA0MDEgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgeyBjb2RlIH0gPSBhd2FpdCByZXEuanNvbigpO1xuICAgIGNvbnN0IHZlcmlmaWNhdGlvbiA9IGF3YWl0IFZlcmlmaWNhdGlvbkNvZGUuZmluZE9uZSh7XG4gICAgICB1c2VySWQ6IHNlc3Npb24udXNlci5pZCxcbiAgICAgIGNvZGUsXG4gICAgICB0eXBlOiAnMmZhJyxcbiAgICAgIHVzZWQ6IGZhbHNlLFxuICAgICAgZXhwaXJlc0F0OiB7ICRndDogbmV3IERhdGUoKSB9LFxuICAgIH0pO1xuXG4gICAgaWYgKCF2ZXJpZmljYXRpb24pIHtcbiAgICAgIGxvZ2dlci53YXJuKCdJbnZhbGlkIG9yIGV4cGlyZWQgMkZBIGNvZGUnLCB7IHVzZXJJZDogc2Vzc2lvbi51c2VyLmlkLCBjb2RlIH0pO1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnSW52YWxpZCBvciBleHBpcmVkIGNvZGUnIH0sIHsgc3RhdHVzOiA0MDAgfSk7XG4gICAgfVxuXG4gICAgdmVyaWZpY2F0aW9uLnVzZWQgPSB0cnVlO1xuICAgIGF3YWl0IHZlcmlmaWNhdGlvbi5zYXZlKCk7XG5cbiAgICAvLyBTZW5kIG5vdGlmaWNhdGlvbiBmb3Igc3VjY2Vzc2Z1bCAyRkEgdmVyaWZpY2F0aW9uXG4gICAgYXdhaXQgc2VuZE5vdGlmaWNhdGlvbih7XG4gICAgICB1c2VySWQ6IHNlc3Npb24udXNlci5pZCxcbiAgICAgIHR5cGU6ICd2ZXJpZmljYXRpb24nLFxuICAgICAgdGl0bGU6ICcyRkEgVmVyaWZpY2F0aW9uIFN1Y2Nlc3NmdWwnLFxuICAgICAgbWVzc2FnZTogJ1lvdXIgdHdvLWZhY3RvciBhdXRoZW50aWNhdGlvbiBjb2RlIHdhcyBzdWNjZXNzZnVsbHkgdmVyaWZpZWQuJyxcbiAgICAgIGNoYW5uZWxzOiBbJ2VtYWlsJywgJ2luX2FwcCddLFxuICAgICAgZGF0YTogeyB2ZXJpZmljYXRpb25UeXBlOiAnMmZhJyB9LFxuICAgIH0pO1xuXG4gICAgbG9nZ2VyLmluZm8oJzJGQSB2ZXJpZmljYXRpb24gc3VjY2Vzc2Z1bCcsIHsgdXNlcklkOiBzZXNzaW9uLnVzZXIuaWQgfSk7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgc3VjY2VzczogdHJ1ZSB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2dnZXIuZXJyb3IoJzJGQSB2ZXJpZmljYXRpb24gZXJyb3I6JywgZXJyb3IpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBlcnJvcjogJ1ZlcmlmaWNhdGlvbiBmYWlsZWQnIH0sIHsgc3RhdHVzOiA1MDAgfSk7XG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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