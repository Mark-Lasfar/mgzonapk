0f3ab8dfe060bfeaf8e5c143c3ad1b36
'use client';
"use strict";

/* istanbul ignore next */
function cov_1uqkiz9spz() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/ui/points-notification.tsx";
  var hash = "bb948122ab42147858a765fc6e57eefdfb4beecb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/ui/points-notification.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 31
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 35
        }
      },
      "7": {
        start: {
          line: 16,
          column: 18
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "8": {
        start: {
          line: 18,
          column: 22
        },
        end: {
          line: 18,
          column: 47
        }
      },
      "9": {
        start: {
          line: 19,
          column: 32
        },
        end: {
          line: 19,
          column: 58
        }
      },
      "10": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 34,
          column: 11
        }
      },
      "11": {
        start: {
          line: 22,
          column: 31
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "12": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 31,
          column: 13
        }
      },
      "13": {
        start: {
          line: 24,
          column: 33
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "14": {
        start: {
          line: 25,
          column: 29
        },
        end: {
          line: 25,
          column: 50
        }
      },
      "15": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 28,
          column: 17
        }
      },
      "16": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 48
        }
      },
      "17": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 63
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 25
        }
      },
      "19": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 45,
          column: 7
        }
      },
      "20": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "21": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 40,
          column: 15
        }
      },
      "22": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 29
        }
      },
      "23": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 46,
          column: 29
        }
      },
      "24": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 66,
          column: 7
        }
      },
      "25": {
        start: {
          line: 61,
          column: 33
        },
        end: {
          line: 61,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "PointsNotification",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 27
          }
        },
        loc: {
          start: {
            line: 17,
            column: 30
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 26
          },
          end: {
            line: 20,
            column: 27
          }
        },
        loc: {
          start: {
            line: 20,
            column: 30
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 22,
            column: 32
          }
        },
        loc: {
          start: {
            line: 22,
            column: 41
          },
          end: {
            line: 32,
            column: 9
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 35,
            column: 27
          }
        },
        loc: {
          start: {
            line: 35,
            column: 30
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 61,
            column: 29
          },
          end: {
            line: 61,
            column: 30
          }
        },
        loc: {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 61,
            column: 48
          }
        },
        line: 61
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 28,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 16
          },
          end: {
            line: 28,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 26,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 20
          },
          end: {
            line: 26,
            column: 32
          }
        }, {
          start: {
            line: 26,
            column: 36
          },
          end: {
            line: 26,
            column: 56
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/ui/points-notification.tsx"],
      sourcesContent: ["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { Card, CardContent } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { useToast } from '@/hooks/use-toast'\n\nexport default function PointsNotification() {\n  const { toast } = useToast()\n  const [points, setPoints] = useState<number | null>(null)\n\n  useEffect(() => {\n    // Simulated API call to check for new points (replace with actual API)\n    const checkNewPoints = async () => {\n      try {\n        const response = await fetch('/api/points/recent')\n        const data = await response.json()\n        if (data.success && data.data.points > 0) {\n          setPoints(data.data.points)\n        }\n      } catch (error) {\n        console.error('Error checking points:', error)\n      }\n    }\n    checkNewPoints()\n  }, [])\n\n  useEffect(() => {\n    if (points) {\n      toast({\n        title: 'Points Earned!',\n        description: `You have earned ${points} points! Check your balance.`,\n      })\n    }\n  }, [points, toast])\n\n  if (!points) return null\n\n  return (\n    <Card className=\"fixed bottom-4 right-4 z-50\">\n      <CardContent className=\"p-4\">\n        <p className=\"font-bold\">New Points: +{points}</p>\n        <Button variant=\"link\" onClick={() => setPoints(null)}>\n          Dismiss\n        </Button>\n      </CardContent>\n    </Card>\n  )\n}"],
      names: ["PointsNotification", "toast", "useToast", "points", "setPoints", "useState", "useEffect", "checkNewPoints", "response", "fetch", "data", "json", "success", "error", "console", "title", "description", "Card", "className", "CardContent", "p", "Button", "variant", "onClick"],
      mappings: "AAAA;;;;;+BAOA;;;eAAwBA;;;;uBALY;sBACF;wBACX;0BACE;AAEV,SAASA;IACtB,MAAM,EAAEC,KAAK,EAAE,GAAGC,IAAAA,kBAAQ;IAC1B,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAAgB;IAEpDC,IAAAA,gBAAS,EAAC;QACR,uEAAuE;QACvE,MAAMC,iBAAiB;YACrB,IAAI;gBACF,MAAMC,WAAW,MAAMC,MAAM;gBAC7B,MAAMC,OAAO,MAAMF,SAASG,IAAI;gBAChC,IAAID,KAAKE,OAAO,IAAIF,KAAKA,IAAI,CAACP,MAAM,GAAG,GAAG;oBACxCC,UAAUM,KAAKA,IAAI,CAACP,MAAM;gBAC5B;YACF,EAAE,OAAOU,OAAO;gBACdC,QAAQD,KAAK,CAAC,0BAA0BA;YAC1C;QACF;QACAN;IACF,GAAG,EAAE;IAELD,IAAAA,gBAAS,EAAC;QACR,IAAIH,QAAQ;YACVF,MAAM;gBACJc,OAAO;gBACPC,aAAa,CAAC,gBAAgB,EAAEb,OAAO,4BAA4B,CAAC;YACtE;QACF;IACF,GAAG;QAACA;QAAQF;KAAM;IAElB,IAAI,CAACE,QAAQ,OAAO;IAEpB,qBACE,qBAACc,UAAI;QAACC,WAAU;kBACd,cAAA,sBAACC,iBAAW;YAACD,WAAU;;8BACrB,sBAACE;oBAAEF,WAAU;;wBAAY;wBAAcf;;;8BACvC,qBAACkB,cAAM;oBAACC,SAAQ;oBAAOC,SAAS,IAAMnB,UAAU;8BAAO;;;;;AAM/D"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bb948122ab42147858a765fc6e57eefdfb4beecb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1uqkiz9spz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1uqkiz9spz();
cov_1uqkiz9spz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1uqkiz9spz().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1uqkiz9spz().f[0]++;
    cov_1uqkiz9spz().s[2]++;
    return PointsNotification;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1uqkiz9spz().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1uqkiz9spz().s[4]++, require("react"));
const _card =
/* istanbul ignore next */
(cov_1uqkiz9spz().s[5]++, require("./card"));
const _button =
/* istanbul ignore next */
(cov_1uqkiz9spz().s[6]++, require("./button"));
const _usetoast =
/* istanbul ignore next */
(cov_1uqkiz9spz().s[7]++, require("../../hooks/use-toast"));
function PointsNotification() {
  /* istanbul ignore next */
  cov_1uqkiz9spz().f[1]++;
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_1uqkiz9spz().s[8]++, (0, _usetoast.useToast)());
  const [points, setPoints] =
  /* istanbul ignore next */
  (cov_1uqkiz9spz().s[9]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_1uqkiz9spz().s[10]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1uqkiz9spz().f[2]++;
    cov_1uqkiz9spz().s[11]++;
    // Simulated API call to check for new points (replace with actual API)
    const checkNewPoints = async () => {
      /* istanbul ignore next */
      cov_1uqkiz9spz().f[3]++;
      cov_1uqkiz9spz().s[12]++;
      try {
        const response =
        /* istanbul ignore next */
        (cov_1uqkiz9spz().s[13]++, await fetch('/api/points/recent'));
        const data =
        /* istanbul ignore next */
        (cov_1uqkiz9spz().s[14]++, await response.json());
        /* istanbul ignore next */
        cov_1uqkiz9spz().s[15]++;
        if (
        /* istanbul ignore next */
        (cov_1uqkiz9spz().b[1][0]++, data.success) &&
        /* istanbul ignore next */
        (cov_1uqkiz9spz().b[1][1]++, data.data.points > 0)) {
          /* istanbul ignore next */
          cov_1uqkiz9spz().b[0][0]++;
          cov_1uqkiz9spz().s[16]++;
          setPoints(data.data.points);
        } else
        /* istanbul ignore next */
        {
          cov_1uqkiz9spz().b[0][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1uqkiz9spz().s[17]++;
        console.error('Error checking points:', error);
      }
    };
    /* istanbul ignore next */
    cov_1uqkiz9spz().s[18]++;
    checkNewPoints();
  }, []);
  /* istanbul ignore next */
  cov_1uqkiz9spz().s[19]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1uqkiz9spz().f[4]++;
    cov_1uqkiz9spz().s[20]++;
    if (points) {
      /* istanbul ignore next */
      cov_1uqkiz9spz().b[2][0]++;
      cov_1uqkiz9spz().s[21]++;
      toast({
        title: 'Points Earned!',
        description: `You have earned ${points} points! Check your balance.`
      });
    } else
    /* istanbul ignore next */
    {
      cov_1uqkiz9spz().b[2][1]++;
    }
  }, [points, toast]);
  /* istanbul ignore next */
  cov_1uqkiz9spz().s[22]++;
  if (!points) {
    /* istanbul ignore next */
    cov_1uqkiz9spz().b[3][0]++;
    cov_1uqkiz9spz().s[23]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1uqkiz9spz().b[3][1]++;
  }
  cov_1uqkiz9spz().s[24]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
    className: "fixed bottom-4 right-4 z-50",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
      className: "p-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
        className: "font-bold",
        children: ["New Points: +", points]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
        variant: "link",
        onClick: () => {
          /* istanbul ignore next */
          cov_1uqkiz9spz().f[5]++;
          cov_1uqkiz9spz().s[25]++;
          return setPoints(null);
        },
        children: "Dismiss"
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQb2ludHNOb3RpZmljYXRpb24iLCJjb3ZfMXVxa2l6OXNweiIsImYiLCJ0b2FzdCIsInMiLCJfdXNldG9hc3QiLCJ1c2VUb2FzdCIsInBvaW50cyIsInNldFBvaW50cyIsIl9yZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiY2hlY2tOZXdQb2ludHMiLCJyZXNwb25zZSIsImZldGNoIiwiZGF0YSIsImpzb24iLCJiIiwic3VjY2VzcyIsImVycm9yIiwiY29uc29sZSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJfanN4cnVudGltZSIsImpzeCIsIl9jYXJkIiwiQ2FyZCIsImNsYXNzTmFtZSIsImpzeHMiLCJDYXJkQ29udGVudCIsIl9idXR0b24iLCJCdXR0b24iLCJ2YXJpYW50Iiwib25DbGljayJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9jb21wb25lbnRzL3VpL3BvaW50cy1ub3RpZmljYXRpb24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBDYXJkLCBDYXJkQ29udGVudCB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9jYXJkJ1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2J1dHRvbidcbmltcG9ydCB7IHVzZVRvYXN0IH0gZnJvbSAnQC9ob29rcy91c2UtdG9hc3QnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBvaW50c05vdGlmaWNhdGlvbigpIHtcbiAgY29uc3QgeyB0b2FzdCB9ID0gdXNlVG9hc3QoKVxuICBjb25zdCBbcG9pbnRzLCBzZXRQb2ludHNdID0gdXNlU3RhdGU8bnVtYmVyIHwgbnVsbD4obnVsbClcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIFNpbXVsYXRlZCBBUEkgY2FsbCB0byBjaGVjayBmb3IgbmV3IHBvaW50cyAocmVwbGFjZSB3aXRoIGFjdHVhbCBBUEkpXG4gICAgY29uc3QgY2hlY2tOZXdQb2ludHMgPSBhc3luYyAoKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3BvaW50cy9yZWNlbnQnKVxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MgJiYgZGF0YS5kYXRhLnBvaW50cyA+IDApIHtcbiAgICAgICAgICBzZXRQb2ludHMoZGF0YS5kYXRhLnBvaW50cylcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgY2hlY2tpbmcgcG9pbnRzOicsIGVycm9yKVxuICAgICAgfVxuICAgIH1cbiAgICBjaGVja05ld1BvaW50cygpXG4gIH0sIFtdKVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHBvaW50cykge1xuICAgICAgdG9hc3Qoe1xuICAgICAgICB0aXRsZTogJ1BvaW50cyBFYXJuZWQhJyxcbiAgICAgICAgZGVzY3JpcHRpb246IGBZb3UgaGF2ZSBlYXJuZWQgJHtwb2ludHN9IHBvaW50cyEgQ2hlY2sgeW91ciBiYWxhbmNlLmAsXG4gICAgICB9KVxuICAgIH1cbiAgfSwgW3BvaW50cywgdG9hc3RdKVxuXG4gIGlmICghcG9pbnRzKSByZXR1cm4gbnVsbFxuXG4gIHJldHVybiAoXG4gICAgPENhcmQgY2xhc3NOYW1lPVwiZml4ZWQgYm90dG9tLTQgcmlnaHQtNCB6LTUwXCI+XG4gICAgICA8Q2FyZENvbnRlbnQgY2xhc3NOYW1lPVwicC00XCI+XG4gICAgICAgIDxwIGNsYXNzTmFtZT1cImZvbnQtYm9sZFwiPk5ldyBQb2ludHM6ICt7cG9pbnRzfTwvcD5cbiAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwibGlua1wiIG9uQ2xpY2s9eygpID0+IHNldFBvaW50cyhudWxsKX0+XG4gICAgICAgICAgRGlzbWlzc1xuICAgICAgICA8L0J1dHRvbj5cbiAgICAgIDwvQ2FyZENvbnRlbnQ+XG4gICAgPC9DYXJkPlxuICApXG59Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkFPQTs7Ozs7O1dBQXdCQSxrQkFBQTs7Ozs7Ozs7a0NBTFk7OztrQ0FDRjs7O2tDQUNYOzs7a0NBQ0U7QUFFVixTQUFTQSxtQkFBQTtFQUFBO0VBQUFDLGNBQUEsR0FBQUMsQ0FBQTtFQUN0QixNQUFNO0lBQUVDO0VBQUssQ0FBRTtFQUFBO0VBQUEsQ0FBQUYs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