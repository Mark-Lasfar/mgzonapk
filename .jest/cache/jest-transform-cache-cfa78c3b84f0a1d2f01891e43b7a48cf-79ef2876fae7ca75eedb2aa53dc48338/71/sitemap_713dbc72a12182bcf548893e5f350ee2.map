{"version":3,"names":["cov_1mlhrbmi9m","actualCoverage","s","GET","f","default","sitemap","revalidate","STATIC_PAGES","path","priority","DEFAULT_BASE_URL","getBaseUrl","url","startsWith","b","replace","createStaticRoutes","baseUrl","now","Date","_routing","routing","locales","flatMap","locale","map","lastModified","changeFrequency","createProductRoutes","products","_productmodel","find","isPublished","deletedAt","$exists","select","lean","product","slug","updatedAt","_db","connectToDatabase","site","_settingactions","getSetting","entries","xml","entry","toISOString","join","_server","NextResponse","headers","err","console","error","status","fallbackBase","route","Math","max"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/sitemap.ts"],"sourcesContent":["import { MetadataRoute } from 'next'\nimport { NextResponse } from 'next/server'\nimport { getSetting } from '@/lib/actions/setting.actions'\nimport Product from '@/lib/db/models/product.model'\nimport { connectToDatabase } from '@/lib/db'\nimport { routing } from '@/i18n/routing'\n\ntype SitemapEntry = {\n  url: string\n  lastModified: Date\n  changeFrequency: 'always' | 'hourly' | 'daily' | 'weekly' | 'monthly' | 'yearly' | 'never'\n  priority: number\n}\n\nconst STATIC_PAGES: { path: string; priority: number }[] = [\n  { path: '', priority: 1.0 },\n  { path: '/about-us', priority: 0.7 },\n  { path: '/contact-us', priority: 0.7 },\n  { path: '/products', priority: 0.8 },\n  { path: '/categories', priority: 0.8 },\n  { path: '/cart', priority: 0.6 },\n  { path: '/checkout', priority: 0.6 },\n  { path: '/account', priority: 0.5 },\n  { path: '/orders', priority: 0.5 },\n  { path: '/wishlist', priority: 0.5 },\n  { path: '/privacy-policy', priority: 0.4 },\n  { path: '/terms-of-service', priority: 0.4 },\n  { path: '/shipping-policy', priority: 0.4 },\n  { path: '/return-policy', priority: 0.4 },\n  { path: '/faq', priority: 0.4 },\n  { path: '/blog', priority: 0.9 },\n  { path: '/search', priority: 0.8 },\n]\n\nconst DEFAULT_BASE_URL = 'https://hager-zon.vercel.app'\n\nconst getBaseUrl = (url?: string): string => {\n  if (url?.startsWith(DEFAULT_BASE_URL)) {\n    return url.replace(/\\/+$/, '')\n  }\n  return DEFAULT_BASE_URL\n}\n\nconst createStaticRoutes = (baseUrl: string): SitemapEntry[] => {\n  const now = new Date()\n  return routing.locales.flatMap((locale) =>\n    STATIC_PAGES.map(({ path, priority }) => ({\n      url: `${baseUrl}/${locale}${path}`,\n      lastModified: now,\n      changeFrequency: 'weekly',\n      priority,\n    }))\n  )\n}\n\nconst createProductRoutes = async (baseUrl: string): Promise<SitemapEntry[]> => {\n  const products = await Product.find({\n    isPublished: true,\n    deletedAt: { $exists: false },\n  })\n    .select('slug updatedAt')\n    .lean()\n\n  return products.flatMap((product) =>\n    routing.locales.map((locale) => ({\n      url: `${baseUrl}/${locale}/product/${product.slug}`,\n      lastModified: product.updatedAt || new Date(),\n      changeFrequency: 'daily',\n      priority: 0.8,\n    }))\n  )\n}\n\nexport async function GET() {\n  try {\n    await connectToDatabase()\n    const { site: { url } } = await getSetting()\n    const baseUrl = getBaseUrl(url)\n\n    const entries = [\n      ...createStaticRoutes(baseUrl),\n      ...(await createProductRoutes(baseUrl)),\n    ]\n\n    const xml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n${entries\n  .map(\n    (entry) => `\n  <url>\n    <loc>${entry.url}</loc>\n    <lastmod>${entry.lastModified.toISOString()}</lastmod>\n    <changefreq>${entry.changeFrequency}</changefreq>\n    <priority>${entry.priority}</priority>\n  </url>`\n  )\n  .join('')}\n</urlset>`\n\n    return new NextResponse(xml, {\n      headers: {\n        'Content-Type': 'application/xml',\n        'Cache-Control': 'public, max-age=3600, stale-while-revalidate=59',\n      },\n    })\n  } catch (err) {\n    console.error('Sitemap XML generation error:', err)\n    return new NextResponse('<urlset></urlset>', { status: 500 })\n  }\n}\n\n// للـ metadata routing\nexport default async function sitemap(): Promise<MetadataRoute.Sitemap> {\n  try {\n    await connectToDatabase()\n    const { site: { url } } = await getSetting()\n    const baseUrl = getBaseUrl(url)\n\n    return [\n      ...createStaticRoutes(baseUrl),\n      ...(await createProductRoutes(baseUrl)),\n    ]\n  } catch (error) {\n    console.error('Error generating sitemap:', error)\n    const fallbackBase = DEFAULT_BASE_URL\n    return createStaticRoutes(fallbackBase).map((route) => ({\n      ...route,\n      priority: Math.max(route.priority - 0.2, 0),\n    }))\n  }\n}\n\nexport const revalidate = 3600\n"],"mappings":"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","ignoreList":[]}