b2bd981165f74c68d21341b88b1e1542
'use server';
"use strict";

/* istanbul ignore next */
function cov_1y8lmtzck3() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/product.actions.ts";
  var hash = "4da2ff7124c2e80afecb84928e0d9f4ac013ed1f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/product.actions.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 70,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 32
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 26
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 33
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 32
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 36
        }
      },
      "14": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 32
        }
      },
      "15": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 34
        }
      },
      "16": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 34
        }
      },
      "17": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 44
        }
      },
      "18": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 33
        }
      },
      "19": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 29
        }
      },
      "20": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 35
        }
      },
      "21": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 36
        }
      },
      "22": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 29
        }
      },
      "23": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 28
        }
      },
      "24": {
        start: {
          line: 72,
          column: 36
        },
        end: {
          line: 72,
          column: 99
        }
      },
      "25": {
        start: {
          line: 73,
          column: 15
        },
        end: {
          line: 73,
          column: 36
        }
      },
      "26": {
        start: {
          line: 74,
          column: 15
        },
        end: {
          line: 74,
          column: 34
        }
      },
      "27": {
        start: {
          line: 75,
          column: 14
        },
        end: {
          line: 75,
          column: 35
        }
      },
      "28": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 76,
          column: 52
        }
      },
      "29": {
        start: {
          line: 77,
          column: 32
        },
        end: {
          line: 77,
          column: 77
        }
      },
      "30": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 78,
          column: 50
        }
      },
      "31": {
        start: {
          line: 79,
          column: 26
        },
        end: {
          line: 79,
          column: 56
        }
      },
      "32": {
        start: {
          line: 80,
          column: 26
        },
        end: {
          line: 80,
          column: 67
        }
      },
      "33": {
        start: {
          line: 81,
          column: 17
        },
        end: {
          line: 81,
          column: 57
        }
      },
      "34": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 55
        }
      },
      "35": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 86,
          column: 6
        }
      },
      "36": {
        start: {
          line: 89,
          column: 27
        },
        end: {
          line: 98,
          column: 1
        }
      },
      "37": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 43
        }
      },
      "38": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "39": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 40
        }
      },
      "40": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 109,
          column: 6
        }
      },
      "41": {
        start: {
          line: 112,
          column: 25
        },
        end: {
          line: 112,
          column: 51
        }
      },
      "42": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 116,
          column: 7
        }
      },
      "43": {
        start: {
          line: 119,
          column: 27
        },
        end: {
          line: 119,
          column: 78
        }
      },
      "44": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "45": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 51
        }
      },
      "46": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 123,
          column: 31
        }
      },
      "47": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 217,
          column: 5
        }
      },
      "48": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 43
        }
      },
      "49": {
        start: {
          line: 128,
          column: 41
        },
        end: {
          line: 128,
          column: 80
        }
      },
      "50": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 34
        }
      },
      "51": {
        start: {
          line: 130,
          column: 28
        },
        end: {
          line: 130,
          column: 30
        }
      },
      "52": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "53": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 157,
          column: 14
        }
      },
      "54": {
        start: {
          line: 159,
          column: 28
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "55": {
        start: {
          line: 170,
          column: 21
        },
        end: {
          line: 170,
          column: 39
        }
      },
      "56": {
        start: {
          line: 171,
          column: 42
        },
        end: {
          line: 187,
          column: 10
        }
      },
      "57": {
        start: {
          line: 188,
          column: 34
        },
        end: {
          line: 194,
          column: 15
        }
      },
      "58": {
        start: {
          line: 188,
          column: 59
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "59": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 200,
          column: 11
        }
      },
      "60": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 207,
          column: 10
        }
      },
      "61": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 65
        }
      },
      "62": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 216,
          column: 10
        }
      },
      "63": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 220,
          column: 58
        }
      },
      "64": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 221,
          column: 31
        }
      },
      "65": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 434,
          column: 5
        }
      },
      "66": {
        start: {
          line: 223,
          column: 47
        },
        end: {
          line: 223,
          column: 73
        }
      },
      "67": {
        start: {
          line: 224,
          column: 29
        },
        end: {
          line: 224,
          column: 39
        }
      },
      "68": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "69": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 75
        }
      },
      "70": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 43
        }
      },
      "71": {
        start: {
          line: 229,
          column: 23
        },
        end: {
          line: 229,
          column: 51
        }
      },
      "72": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 233,
          column: 11
        }
      },
      "73": {
        start: {
          line: 235,
          column: 30
        },
        end: {
          line: 238,
          column: 10
        }
      },
      "74": {
        start: {
          line: 240,
          column: 32
        },
        end: {
          line: 242,
          column: 27
        }
      },
      "75": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "76": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 88
        }
      },
      "77": {
        start: {
          line: 247,
          column: 25
        },
        end: {
          line: 247,
          column: 77
        }
      },
      "78": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "79": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 58
        }
      },
      "80": {
        start: {
          line: 252,
          column: 34
        },
        end: {
          line: 259,
          column: 10
        }
      },
      "81": {
        start: {
          line: 261,
          column: 39
        },
        end: {
          line: 274,
          column: 10
        }
      },
      "82": {
        start: {
          line: 262,
          column: 34
        },
        end: {
          line: 267,
          column: 17
        }
      },
      "83": {
        start: {
          line: 263,
          column: 35
        },
        end: {
          line: 263,
          column: 90
        }
      },
      "84": {
        start: {
          line: 263,
          column: 67
        },
        end: {
          line: 263,
          column: 86
        }
      },
      "85": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 264,
          column: 44
        }
      },
      "86": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 265,
          column: 47
        }
      },
      "87": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 42
        }
      },
      "88": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 273,
          column: 14
        }
      },
      "89": {
        start: {
          line: 275,
          column: 27
        },
        end: {
          line: 275,
          column: 103
        }
      },
      "90": {
        start: {
          line: 275,
          column: 75
        },
        end: {
          line: 275,
          column: 99
        }
      },
      "91": {
        start: {
          line: 277,
          column: 31
        },
        end: {
          line: 304,
          column: 14
        }
      },
      "92": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 302,
          column: 15
        }
      },
      "93": {
        start: {
          line: 279,
          column: 38
        },
        end: {
          line: 279,
          column: 89
        }
      },
      "94": {
        start: {
          line: 279,
          column: 58
        },
        end: {
          line: 279,
          column: 88
        }
      },
      "95": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 301,
          column: 17
        }
      },
      "96": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 281,
          column: 70
        }
      },
      "97": {
        start: {
          line: 282,
          column: 20
        },
        end: {
          line: 282,
          column: 71
        }
      },
      "98": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 293,
          column: 23
        }
      },
      "99": {
        start: {
          line: 284,
          column: 45
        },
        end: {
          line: 284,
          column: 105
        }
      },
      "100": {
        start: {
          line: 284,
          column: 75
        },
        end: {
          line: 284,
          column: 104
        }
      },
      "101": {
        start: {
          line: 285,
          column: 24
        },
        end: {
          line: 292,
          column: 25
        }
      },
      "102": {
        start: {
          line: 286,
          column: 28
        },
        end: {
          line: 286,
          column: 76
        }
      },
      "103": {
        start: {
          line: 287,
          column: 28
        },
        end: {
          line: 287,
          column: 77
        }
      },
      "104": {
        start: {
          line: 289,
          column: 28
        },
        end: {
          line: 291,
          column: 31
        }
      },
      "105": {
        start: {
          line: 295,
          column: 20
        },
        end: {
          line: 300,
          column: 23
        }
      },
      "106": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 29
        }
      },
      "107": {
        start: {
          line: 306,
          column: 26
        },
        end: {
          line: 306,
          column: 53
        }
      },
      "108": {
        start: {
          line: 307,
          column: 23
        },
        end: {
          line: 307,
          column: 66
        }
      },
      "109": {
        start: {
          line: 308,
          column: 27
        },
        end: {
          line: 308,
          column: 72
        }
      },
      "110": {
        start: {
          line: 309,
          column: 29
        },
        end: {
          line: 309,
          column: 55
        }
      },
      "111": {
        start: {
          line: 310,
          column: 33
        },
        end: {
          line: 310,
          column: 63
        }
      },
      "112": {
        start: {
          line: 312,
          column: 28
        },
        end: {
          line: 363,
          column: 9
        }
      },
      "113": {
        start: {
          line: 358,
          column: 124
        },
        end: {
          line: 358,
          column: 139
        }
      },
      "114": {
        start: {
          line: 365,
          column: 24
        },
        end: {
          line: 369,
          column: 10
        }
      },
      "115": {
        start: {
          line: 370,
          column: 31
        },
        end: {
          line: 370,
          column: 41
        }
      },
      "116": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 382,
          column: 17
        }
      },
      "117": {
        start: {
          line: 372,
          column: 66
        },
        end: {
          line: 382,
          column: 14
        }
      },
      "118": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 387,
          column: 11
        }
      },
      "119": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 42
        }
      },
      "120": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 65
        }
      },
      "121": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 54
        }
      },
      "122": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 70
        }
      },
      "123": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 397,
          column: 11
        }
      },
      "124": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 402,
          column: 10
        }
      },
      "125": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 41
        }
      },
      "126": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 405,
          column: 56
        }
      },
      "127": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 426,
          column: 9
        }
      },
      "128": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 413,
          column: 13
        }
      },
      "129": {
        start: {
          line: 408,
          column: 16
        },
        end: {
          line: 412,
          column: 18
        }
      },
      "130": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 420,
          column: 13
        }
      },
      "131": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 419,
          column: 18
        }
      },
      "132": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 425,
          column: 14
        }
      },
      "133": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 431,
          column: 10
        }
      },
      "134": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 433,
          column: 29
        }
      },
      "135": {
        start: {
          line: 437,
          column: 20
        },
        end: {
          line: 437,
          column: 58
        }
      },
      "136": {
        start: {
          line: 438,
          column: 4
        },
        end: {
          line: 438,
          column: 31
        }
      },
      "137": {
        start: {
          line: 439,
          column: 4
        },
        end: {
          line: 629,
          column: 5
        }
      },
      "138": {
        start: {
          line: 440,
          column: 47
        },
        end: {
          line: 440,
          column: 73
        }
      },
      "139": {
        start: {
          line: 441,
          column: 27
        },
        end: {
          line: 441,
          column: 37
        }
      },
      "140": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 442,
          column: 43
        }
      },
      "141": {
        start: {
          line: 444,
          column: 30
        },
        end: {
          line: 444,
          column: 79
        }
      },
      "142": {
        start: {
          line: 446,
          column: 32
        },
        end: {
          line: 446,
          column: 104
        }
      },
      "143": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 449,
          column: 9
        }
      },
      "144": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 448,
          column: 49
        }
      },
      "145": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 453,
          column: 9
        }
      },
      "146": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 452,
          column: 44
        }
      },
      "147": {
        start: {
          line: 455,
          column: 23
        },
        end: {
          line: 455,
          column: 112
        }
      },
      "148": {
        start: {
          line: 457,
          column: 25
        },
        end: {
          line: 457,
          column: 77
        }
      },
      "149": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 460,
          column: 9
        }
      },
      "150": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 459,
          column: 58
        }
      },
      "151": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 470,
          column: 11
        }
      },
      "152": {
        start: {
          line: 472,
          column: 39
        },
        end: {
          line: 485,
          column: 10
        }
      },
      "153": {
        start: {
          line: 473,
          column: 34
        },
        end: {
          line: 478,
          column: 17
        }
      },
      "154": {
        start: {
          line: 474,
          column: 35
        },
        end: {
          line: 474,
          column: 90
        }
      },
      "155": {
        start: {
          line: 474,
          column: 67
        },
        end: {
          line: 474,
          column: 86
        }
      },
      "156": {
        start: {
          line: 475,
          column: 16
        },
        end: {
          line: 475,
          column: 44
        }
      },
      "157": {
        start: {
          line: 476,
          column: 16
        },
        end: {
          line: 476,
          column: 47
        }
      },
      "158": {
        start: {
          line: 477,
          column: 16
        },
        end: {
          line: 477,
          column: 42
        }
      },
      "159": {
        start: {
          line: 479,
          column: 12
        },
        end: {
          line: 484,
          column: 14
        }
      },
      "160": {
        start: {
          line: 486,
          column: 27
        },
        end: {
          line: 486,
          column: 103
        }
      },
      "161": {
        start: {
          line: 486,
          column: 75
        },
        end: {
          line: 486,
          column: 99
        }
      },
      "162": {
        start: {
          line: 488,
          column: 31
        },
        end: {
          line: 515,
          column: 14
        }
      },
      "163": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 513,
          column: 15
        }
      },
      "164": {
        start: {
          line: 490,
          column: 38
        },
        end: {
          line: 490,
          column: 89
        }
      },
      "165": {
        start: {
          line: 490,
          column: 58
        },
        end: {
          line: 490,
          column: 88
        }
      },
      "166": {
        start: {
          line: 491,
          column: 16
        },
        end: {
          line: 512,
          column: 17
        }
      },
      "167": {
        start: {
          line: 492,
          column: 20
        },
        end: {
          line: 492,
          column: 70
        }
      },
      "168": {
        start: {
          line: 493,
          column: 20
        },
        end: {
          line: 493,
          column: 71
        }
      },
      "169": {
        start: {
          line: 494,
          column: 20
        },
        end: {
          line: 504,
          column: 23
        }
      },
      "170": {
        start: {
          line: 495,
          column: 45
        },
        end: {
          line: 495,
          column: 105
        }
      },
      "171": {
        start: {
          line: 495,
          column: 75
        },
        end: {
          line: 495,
          column: 104
        }
      },
      "172": {
        start: {
          line: 496,
          column: 24
        },
        end: {
          line: 503,
          column: 25
        }
      },
      "173": {
        start: {
          line: 497,
          column: 28
        },
        end: {
          line: 497,
          column: 76
        }
      },
      "174": {
        start: {
          line: 498,
          column: 28
        },
        end: {
          line: 498,
          column: 77
        }
      },
      "175": {
        start: {
          line: 500,
          column: 28
        },
        end: {
          line: 502,
          column: 31
        }
      },
      "176": {
        start: {
          line: 506,
          column: 20
        },
        end: {
          line: 511,
          column: 23
        }
      },
      "177": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 514,
          column: 29
        }
      },
      "178": {
        start: {
          line: 517,
          column: 22
        },
        end: {
          line: 517,
          column: 45
        }
      },
      "179": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 532,
          column: 9
        }
      },
      "180": {
        start: {
          line: 519,
          column: 30
        },
        end: {
          line: 519,
          column: 57
        }
      },
      "181": {
        start: {
          line: 520,
          column: 27
        },
        end: {
          line: 520,
          column: 98
        }
      },
      "182": {
        start: {
          line: 521,
          column: 31
        },
        end: {
          line: 521,
          column: 76
        }
      },
      "183": {
        start: {
          line: 522,
          column: 33
        },
        end: {
          line: 522,
          column: 59
        }
      },
      "184": {
        start: {
          line: 523,
          column: 37
        },
        end: {
          line: 523,
          column: 67
        }
      },
      "185": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 531,
          column: 14
        }
      },
      "186": {
        start: {
          line: 534,
          column: 37
        },
        end: {
          line: 534,
          column: 145
        }
      },
      "187": {
        start: {
          line: 536,
          column: 27
        },
        end: {
          line: 560,
          column: 9
        }
      },
      "188": {
        start: {
          line: 557,
          column: 124
        },
        end: {
          line: 557,
          column: 139
        }
      },
      "189": {
        start: {
          line: 562,
          column: 31
        },
        end: {
          line: 565,
          column: 10
        }
      },
      "190": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 577,
          column: 17
        }
      },
      "191": {
        start: {
          line: 567,
          column: 66
        },
        end: {
          line: 577,
          column: 14
        }
      },
      "192": {
        start: {
          line: 579,
          column: 8
        },
        end: {
          line: 583,
          column: 9
        }
      },
      "193": {
        start: {
          line: 580,
          column: 12
        },
        end: {
          line: 582,
          column: 15
        }
      },
      "194": {
        start: {
          line: 584,
          column: 8
        },
        end: {
          line: 584,
          column: 42
        }
      },
      "195": {
        start: {
          line: 585,
          column: 8
        },
        end: {
          line: 585,
          column: 65
        }
      },
      "196": {
        start: {
          line: 586,
          column: 8
        },
        end: {
          line: 586,
          column: 54
        }
      },
      "197": {
        start: {
          line: 587,
          column: 8
        },
        end: {
          line: 587,
          column: 71
        }
      },
      "198": {
        start: {
          line: 588,
          column: 8
        },
        end: {
          line: 592,
          column: 11
        }
      },
      "199": {
        start: {
          line: 593,
          column: 8
        },
        end: {
          line: 597,
          column: 10
        }
      },
      "200": {
        start: {
          line: 599,
          column: 8
        },
        end: {
          line: 599,
          column: 41
        }
      },
      "201": {
        start: {
          line: 600,
          column: 8
        },
        end: {
          line: 600,
          column: 54
        }
      },
      "202": {
        start: {
          line: 601,
          column: 8
        },
        end: {
          line: 621,
          column: 9
        }
      },
      "203": {
        start: {
          line: 602,
          column: 12
        },
        end: {
          line: 608,
          column: 13
        }
      },
      "204": {
        start: {
          line: 603,
          column: 16
        },
        end: {
          line: 607,
          column: 18
        }
      },
      "205": {
        start: {
          line: 609,
          column: 12
        },
        end: {
          line: 615,
          column: 13
        }
      },
      "206": {
        start: {
          line: 610,
          column: 16
        },
        end: {
          line: 614,
          column: 18
        }
      },
      "207": {
        start: {
          line: 616,
          column: 12
        },
        end: {
          line: 620,
          column: 14
        }
      },
      "208": {
        start: {
          line: 622,
          column: 8
        },
        end: {
          line: 626,
          column: 10
        }
      },
      "209": {
        start: {
          line: 628,
          column: 8
        },
        end: {
          line: 628,
          column: 29
        }
      },
      "210": {
        start: {
          line: 632,
          column: 20
        },
        end: {
          line: 632,
          column: 58
        }
      },
      "211": {
        start: {
          line: 633,
          column: 4
        },
        end: {
          line: 633,
          column: 31
        }
      },
      "212": {
        start: {
          line: 634,
          column: 4
        },
        end: {
          line: 712,
          column: 5
        }
      },
      "213": {
        start: {
          line: 635,
          column: 47
        },
        end: {
          line: 635,
          column: 73
        }
      },
      "214": {
        start: {
          line: 636,
          column: 29
        },
        end: {
          line: 636,
          column: 39
        }
      },
      "215": {
        start: {
          line: 637,
          column: 8
        },
        end: {
          line: 637,
          column: 43
        }
      },
      "216": {
        start: {
          line: 639,
          column: 24
        },
        end: {
          line: 639,
          column: 81
        }
      },
      "217": {
        start: {
          line: 640,
          column: 8
        },
        end: {
          line: 642,
          column: 9
        }
      },
      "218": {
        start: {
          line: 641,
          column: 12
        },
        end: {
          line: 641,
          column: 49
        }
      },
      "219": {
        start: {
          line: 644,
          column: 8
        },
        end: {
          line: 646,
          column: 9
        }
      },
      "220": {
        start: {
          line: 645,
          column: 12
        },
        end: {
          line: 645,
          column: 44
        }
      },
      "221": {
        start: {
          line: 648,
          column: 25
        },
        end: {
          line: 648,
          column: 71
        }
      },
      "222": {
        start: {
          line: 649,
          column: 8
        },
        end: {
          line: 651,
          column: 9
        }
      },
      "223": {
        start: {
          line: 650,
          column: 12
        },
        end: {
          line: 650,
          column: 58
        }
      },
      "224": {
        start: {
          line: 653,
          column: 8
        },
        end: {
          line: 653,
          column: 67
        }
      },
      "225": {
        start: {
          line: 655,
          column: 8
        },
        end: {
          line: 655,
          column: 75
        }
      },
      "226": {
        start: {
          line: 657,
          column: 8
        },
        end: {
          line: 662,
          column: 9
        }
      },
      "227": {
        start: {
          line: 658,
          column: 12
        },
        end: {
          line: 661,
          column: 15
        }
      },
      "228": {
        start: {
          line: 663,
          column: 8
        },
        end: {
          line: 668,
          column: 11
        }
      },
      "229": {
        start: {
          line: 669,
          column: 8
        },
        end: {
          line: 669,
          column: 42
        }
      },
      "230": {
        start: {
          line: 670,
          column: 8
        },
        end: {
          line: 670,
          column: 65
        }
      },
      "231": {
        start: {
          line: 671,
          column: 8
        },
        end: {
          line: 671,
          column: 54
        }
      },
      "232": {
        start: {
          line: 672,
          column: 8
        },
        end: {
          line: 672,
          column: 63
        }
      },
      "233": {
        start: {
          line: 673,
          column: 8
        },
        end: {
          line: 681,
          column: 10
        }
      },
      "234": {
        start: {
          line: 683,
          column: 8
        },
        end: {
          line: 683,
          column: 41
        }
      },
      "235": {
        start: {
          line: 684,
          column: 8
        },
        end: {
          line: 688,
          column: 11
        }
      },
      "236": {
        start: {
          line: 689,
          column: 8
        },
        end: {
          line: 704,
          column: 9
        }
      },
      "237": {
        start: {
          line: 690,
          column: 12
        },
        end: {
          line: 696,
          column: 13
        }
      },
      "238": {
        start: {
          line: 691,
          column: 16
        },
        end: {
          line: 695,
          column: 18
        }
      },
      "239": {
        start: {
          line: 697,
          column: 12
        },
        end: {
          line: 703,
          column: 13
        }
      },
      "240": {
        start: {
          line: 698,
          column: 16
        },
        end: {
          line: 702,
          column: 18
        }
      },
      "241": {
        start: {
          line: 705,
          column: 8
        },
        end: {
          line: 709,
          column: 10
        }
      },
      "242": {
        start: {
          line: 711,
          column: 8
        },
        end: {
          line: 711,
          column: 29
        }
      },
      "243": {
        start: {
          line: 715,
          column: 20
        },
        end: {
          line: 715,
          column: 58
        }
      },
      "244": {
        start: {
          line: 716,
          column: 4
        },
        end: {
          line: 716,
          column: 31
        }
      },
      "245": {
        start: {
          line: 717,
          column: 4
        },
        end: {
          line: 768,
          column: 5
        }
      },
      "246": {
        start: {
          line: 718,
          column: 47
        },
        end: {
          line: 718,
          column: 73
        }
      },
      "247": {
        start: {
          line: 719,
          column: 8
        },
        end: {
          line: 721,
          column: 9
        }
      },
      "248": {
        start: {
          line: 720,
          column: 12
        },
        end: {
          line: 720,
          column: 44
        }
      },
      "249": {
        start: {
          line: 722,
          column: 8
        },
        end: {
          line: 722,
          column: 43
        }
      },
      "250": {
        start: {
          line: 723,
          column: 24
        },
        end: {
          line: 723,
          column: 88
        }
      },
      "251": {
        start: {
          line: 724,
          column: 8
        },
        end: {
          line: 726,
          column: 9
        }
      },
      "252": {
        start: {
          line: 725,
          column: 12
        },
        end: {
          line: 725,
          column: 49
        }
      },
      "253": {
        start: {
          line: 727,
          column: 27
        },
        end: {
          line: 737,
          column: 9
        }
      },
      "254": {
        start: {
          line: 738,
          column: 31
        },
        end: {
          line: 741,
          column: 10
        }
      },
      "255": {
        start: {
          line: 742,
          column: 8
        },
        end: {
          line: 742,
          column: 42
        }
      },
      "256": {
        start: {
          line: 743,
          column: 8
        },
        end: {
          line: 743,
          column: 54
        }
      },
      "257": {
        start: {
          line: 744,
          column: 8
        },
        end: {
          line: 744,
          column: 65
        }
      },
      "258": {
        start: {
          line: 745,
          column: 8
        },
        end: {
          line: 747,
          column: 9
        }
      },
      "259": {
        start: {
          line: 746,
          column: 12
        },
        end: {
          line: 746,
          column: 67
        }
      },
      "260": {
        start: {
          line: 748,
          column: 8
        },
        end: {
          line: 752,
          column: 11
        }
      },
      "261": {
        start: {
          line: 753,
          column: 8
        },
        end: {
          line: 757,
          column: 10
        }
      },
      "262": {
        start: {
          line: 759,
          column: 8
        },
        end: {
          line: 759,
          column: 41
        }
      },
      "263": {
        start: {
          line: 760,
          column: 8
        },
        end: {
          line: 760,
          column: 54
        }
      },
      "264": {
        start: {
          line: 761,
          column: 8
        },
        end: {
          line: 765,
          column: 10
        }
      },
      "265": {
        start: {
          line: 767,
          column: 8
        },
        end: {
          line: 767,
          column: 29
        }
      },
      "266": {
        start: {
          line: 771,
          column: 20
        },
        end: {
          line: 771,
          column: 58
        }
      },
      "267": {
        start: {
          line: 772,
          column: 4
        },
        end: {
          line: 772,
          column: 31
        }
      },
      "268": {
        start: {
          line: 773,
          column: 4
        },
        end: {
          line: 850,
          column: 5
        }
      },
      "269": {
        start: {
          line: 774,
          column: 37
        },
        end: {
          line: 774,
          column: 63
        }
      },
      "270": {
        start: {
          line: 775,
          column: 28
        },
        end: {
          line: 775,
          column: 38
        }
      },
      "271": {
        start: {
          line: 776,
          column: 8
        },
        end: {
          line: 778,
          column: 11
        }
      },
      "272": {
        start: {
          line: 779,
          column: 8
        },
        end: {
          line: 779,
          column: 43
        }
      },
      "273": {
        start: {
          line: 781,
          column: 24
        },
        end: {
          line: 781,
          column: 88
        }
      },
      "274": {
        start: {
          line: 782,
          column: 8
        },
        end: {
          line: 784,
          column: 9
        }
      },
      "275": {
        start: {
          line: 783,
          column: 12
        },
        end: {
          line: 783,
          column: 49
        }
      },
      "276": {
        start: {
          line: 786,
          column: 8
        },
        end: {
          line: 788,
          column: 9
        }
      },
      "277": {
        start: {
          line: 787,
          column: 12
        },
        end: {
          line: 787,
          column: 65
        }
      },
      "278": {
        start: {
          line: 790,
          column: 25
        },
        end: {
          line: 790,
          column: 71
        }
      },
      "279": {
        start: {
          line: 791,
          column: 8
        },
        end: {
          line: 793,
          column: 9
        }
      },
      "280": {
        start: {
          line: 792,
          column: 12
        },
        end: {
          line: 792,
          column: 58
        }
      },
      "281": {
        start: {
          line: 795,
          column: 26
        },
        end: {
          line: 795,
          column: 76
        }
      },
      "282": {
        start: {
          line: 797,
          column: 30
        },
        end: {
          line: 809,
          column: 10
        }
      },
      "283": {
        start: {
          line: 798,
          column: 12
        },
        end: {
          line: 807,
          column: 13
        }
      },
      "284": {
        start: {
          line: 799,
          column: 16
        },
        end: {
          line: 806,
          column: 18
        }
      },
      "285": {
        start: {
          line: 808,
          column: 12
        },
        end: {
          line: 808,
          column: 22
        }
      },
      "286": {
        start: {
          line: 810,
          column: 27
        },
        end: {
          line: 810,
          column: 80
        }
      },
      "287": {
        start: {
          line: 810,
          column: 59
        },
        end: {
          line: 810,
          column: 76
        }
      },
      "288": {
        start: {
          line: 812,
          column: 31
        },
        end: {
          line: 826,
          column: 10
        }
      },
      "289": {
        start: {
          line: 819,
          column: 119
        },
        end: {
          line: 819,
          column: 134
        }
      },
      "290": {
        start: {
          line: 827,
          column: 8
        },
        end: {
          line: 827,
          column: 42
        }
      },
      "291": {
        start: {
          line: 828,
          column: 8
        },
        end: {
          line: 828,
          column: 54
        }
      },
      "292": {
        start: {
          line: 829,
          column: 8
        },
        end: {
          line: 829,
          column: 65
        }
      },
      "293": {
        start: {
          line: 830,
          column: 8
        },
        end: {
          line: 830,
          column: 70
        }
      },
      "294": {
        start: {
          line: 831,
          column: 8
        },
        end: {
          line: 839,
          column: 10
        }
      },
      "295": {
        start: {
          line: 841,
          column: 8
        },
        end: {
          line: 841,
          column: 41
        }
      },
      "296": {
        start: {
          line: 842,
          column: 8
        },
        end: {
          line: 842,
          column: 54
        }
      },
      "297": {
        start: {
          line: 843,
          column: 8
        },
        end: {
          line: 847,
          column: 10
        }
      },
      "298": {
        start: {
          line: 849,
          column: 8
        },
        end: {
          line: 849,
          column: 29
        }
      },
      "299": {
        start: {
          line: 853,
          column: 20
        },
        end: {
          line: 853,
          column: 58
        }
      },
      "300": {
        start: {
          line: 854,
          column: 4
        },
        end: {
          line: 854,
          column: 31
        }
      },
      "301": {
        start: {
          line: 855,
          column: 4
        },
        end: {
          line: 961,
          column: 5
        }
      },
      "302": {
        start: {
          line: 856,
          column: 37
        },
        end: {
          line: 856,
          column: 63
        }
      },
      "303": {
        start: {
          line: 857,
          column: 8
        },
        end: {
          line: 857,
          column: 43
        }
      },
      "304": {
        start: {
          line: 859,
          column: 8
        },
        end: {
          line: 861,
          column: 9
        }
      },
      "305": {
        start: {
          line: 860,
          column: 12
        },
        end: {
          line: 860,
          column: 50
        }
      },
      "306": {
        start: {
          line: 862,
          column: 8
        },
        end: {
          line: 864,
          column: 9
        }
      },
      "307": {
        start: {
          line: 863,
          column: 12
        },
        end: {
          line: 863,
          column: 62
        }
      },
      "308": {
        start: {
          line: 865,
          column: 8
        },
        end: {
          line: 867,
          column: 9
        }
      },
      "309": {
        start: {
          line: 866,
          column: 12
        },
        end: {
          line: 866,
          column: 77
        }
      },
      "310": {
        start: {
          line: 868,
          column: 8
        },
        end: {
          line: 870,
          column: 9
        }
      },
      "311": {
        start: {
          line: 869,
          column: 12
        },
        end: {
          line: 869,
          column: 74
        }
      },
      "312": {
        start: {
          line: 872,
          column: 24
        },
        end: {
          line: 872,
          column: 88
        }
      },
      "313": {
        start: {
          line: 873,
          column: 8
        },
        end: {
          line: 875,
          column: 9
        }
      },
      "314": {
        start: {
          line: 874,
          column: 12
        },
        end: {
          line: 874,
          column: 49
        }
      },
      "315": {
        start: {
          line: 877,
          column: 31
        },
        end: {
          line: 877,
          column: 96
        }
      },
      "316": {
        start: {
          line: 877,
          column: 62
        },
        end: {
          line: 877,
          column: 95
        }
      },
      "317": {
        start: {
          line: 878,
          column: 8
        },
        end: {
          line: 880,
          column: 9
        }
      },
      "318": {
        start: {
          line: 879,
          column: 12
        },
        end: {
          line: 879,
          column: 70
        }
      },
      "319": {
        start: {
          line: 882,
          column: 23
        },
        end: {
          line: 891,
          column: 9
        }
      },
      "320": {
        start: {
          line: 892,
          column: 8
        },
        end: {
          line: 892,
          column: 37
        }
      },
      "321": {
        start: {
          line: 894,
          column: 8
        },
        end: {
          line: 896,
          column: 11
        }
      },
      "322": {
        start: {
          line: 898,
          column: 23
        },
        end: {
          line: 898,
          column: 72
        }
      },
      "323": {
        start: {
          line: 899,
          column: 8
        },
        end: {
          line: 908,
          column: 11
        }
      },
      "324": {
        start: {
          line: 909,
          column: 8
        },
        end: {
          line: 909,
          column: 42
        }
      },
      "325": {
        start: {
          line: 910,
          column: 8
        },
        end: {
          line: 910,
          column: 63
        }
      },
      "326": {
        start: {
          line: 911,
          column: 8
        },
        end: {
          line: 917,
          column: 11
        }
      },
      "327": {
        start: {
          line: 918,
          column: 8
        },
        end: {
          line: 922,
          column: 10
        }
      },
      "328": {
        start: {
          line: 924,
          column: 8
        },
        end: {
          line: 924,
          column: 41
        }
      },
      "329": {
        start: {
          line: 925,
          column: 8
        },
        end: {
          line: 925,
          column: 53
        }
      },
      "330": {
        start: {
          line: 926,
          column: 8
        },
        end: {
          line: 953,
          column: 9
        }
      },
      "331": {
        start: {
          line: 927,
          column: 12
        },
        end: {
          line: 933,
          column: 13
        }
      },
      "332": {
        start: {
          line: 928,
          column: 16
        },
        end: {
          line: 932,
          column: 18
        }
      },
      "333": {
        start: {
          line: 934,
          column: 12
        },
        end: {
          line: 940,
          column: 13
        }
      },
      "334": {
        start: {
          line: 935,
          column: 16
        },
        end: {
          line: 939,
          column: 18
        }
      },
      "335": {
        start: {
          line: 941,
          column: 12
        },
        end: {
          line: 947,
          column: 13
        }
      },
      "336": {
        start: {
          line: 942,
          column: 16
        },
        end: {
          line: 946,
          column: 18
        }
      },
      "337": {
        start: {
          line: 948,
          column: 12
        },
        end: {
          line: 952,
          column: 14
        }
      },
      "338": {
        start: {
          line: 954,
          column: 8
        },
        end: {
          line: 958,
          column: 10
        }
      },
      "339": {
        start: {
          line: 960,
          column: 8
        },
        end: {
          line: 960,
          column: 29
        }
      },
      "340": {
        start: {
          line: 964,
          column: 4
        },
        end: {
          line: 1021,
          column: 5
        }
      },
      "341": {
        start: {
          line: 965,
          column: 8
        },
        end: {
          line: 965,
          column: 43
        }
      },
      "342": {
        start: {
          line: 966,
          column: 27
        },
        end: {
          line: 1016,
          column: 10
        }
      },
      "343": {
        start: {
          line: 1017,
          column: 8
        },
        end: {
          line: 1017,
          column: 54
        }
      },
      "344": {
        start: {
          line: 1019,
          column: 8
        },
        end: {
          line: 1019,
          column: 59
        }
      },
      "345": {
        start: {
          line: 1020,
          column: 8
        },
        end: {
          line: 1020,
          column: 18
        }
      },
      "346": {
        start: {
          line: 1024,
          column: 4
        },
        end: {
          line: 1082,
          column: 5
        }
      },
      "347": {
        start: {
          line: 1025,
          column: 8
        },
        end: {
          line: 1025,
          column: 43
        }
      },
      "348": {
        start: {
          line: 1026,
          column: 25
        },
        end: {
          line: 1077,
          column: 10
        }
      },
      "349": {
        start: {
          line: 1078,
          column: 8
        },
        end: {
          line: 1078,
          column: 52
        }
      },
      "350": {
        start: {
          line: 1080,
          column: 8
        },
        end: {
          line: 1080,
          column: 66
        }
      },
      "351": {
        start: {
          line: 1081,
          column: 8
        },
        end: {
          line: 1081,
          column: 18
        }
      },
      "352": {
        start: {
          line: 1085,
          column: 4
        },
        end: {
          line: 1111,
          column: 5
        }
      },
      "353": {
        start: {
          line: 1086,
          column: 8
        },
        end: {
          line: 1086,
          column: 43
        }
      },
      "354": {
        start: {
          line: 1087,
          column: 22
        },
        end: {
          line: 1094,
          column: 9
        }
      },
      "355": {
        start: {
          line: 1095,
          column: 8
        },
        end: {
          line: 1100,
          column: 9
        }
      },
      "356": {
        start: {
          line: 1096,
          column: 12
        },
        end: {
          line: 1096,
          column: 36
        }
      },
      "357": {
        start: {
          line: 1097,
          column: 12
        },
        end: {
          line: 1099,
          column: 14
        }
      },
      "358": {
        start: {
          line: 1101,
          column: 27
        },
        end: {
          line: 1105,
          column: 9
        }
      },
      "359": {
        start: {
          line: 1106,
          column: 25
        },
        end: {
          line: 1106,
          column: 101
        }
      },
      "360": {
        start: {
          line: 1107,
          column: 8
        },
        end: {
          line: 1107,
          column: 52
        }
      },
      "361": {
        start: {
          line: 1109,
          column: 8
        },
        end: {
          line: 1109,
          column: 64
        }
      },
      "362": {
        start: {
          line: 1110,
          column: 8
        },
        end: {
          line: 1110,
          column: 18
        }
      },
      "363": {
        start: {
          line: 1114,
          column: 4
        },
        end: {
          line: 1129,
          column: 5
        }
      },
      "364": {
        start: {
          line: 1115,
          column: 8
        },
        end: {
          line: 1115,
          column: 43
        }
      },
      "365": {
        start: {
          line: 1116,
          column: 25
        },
        end: {
          line: 1124,
          column: 63
        }
      },
      "366": {
        start: {
          line: 1125,
          column: 8
        },
        end: {
          line: 1125,
          column: 52
        }
      },
      "367": {
        start: {
          line: 1127,
          column: 8
        },
        end: {
          line: 1127,
          column: 64
        }
      },
      "368": {
        start: {
          line: 1128,
          column: 8
        },
        end: {
          line: 1128,
          column: 18
        }
      },
      "369": {
        start: {
          line: 1132,
          column: 4
        },
        end: {
          line: 1199,
          column: 5
        }
      },
      "370": {
        start: {
          line: 1133,
          column: 8
        },
        end: {
          line: 1133,
          column: 43
        }
      },
      "371": {
        start: {
          line: 1134,
          column: 41
        },
        end: {
          line: 1134,
          column: 80
        }
      },
      "372": {
        start: {
          line: 1135,
          column: 8
        },
        end: {
          line: 1135,
          column: 34
        }
      },
      "373": {
        start: {
          line: 1136,
          column: 28
        },
        end: {
          line: 1142,
          column: 9
        }
      },
      "374": {
        start: {
          line: 1143,
          column: 8
        },
        end: {
          line: 1148,
          column: 9
        }
      },
      "375": {
        start: {
          line: 1144,
          column: 12
        },
        end: {
          line: 1147,
          column: 14
        }
      },
      "376": {
        start: {
          line: 1149,
          column: 8
        },
        end: {
          line: 1151,
          column: 9
        }
      },
      "377": {
        start: {
          line: 1150,
          column: 12
        },
        end: {
          line: 1150,
          column: 44
        }
      },
      "378": {
        start: {
          line: 1152,
          column: 8
        },
        end: {
          line: 1154,
          column: 9
        }
      },
      "379": {
        start: {
          line: 1153,
          column: 12
        },
        end: {
          line: 1153,
          column: 35
        }
      },
      "380": {
        start: {
          line: 1155,
          column: 8
        },
        end: {
          line: 1159,
          column: 9
        }
      },
      "381": {
        start: {
          line: 1156,
          column: 12
        },
        end: {
          line: 1158,
          column: 14
        }
      },
      "382": {
        start: {
          line: 1160,
          column: 8
        },
        end: {
          line: 1166,
          column: 9
        }
      },
      "383": {
        start: {
          line: 1161,
          column: 31
        },
        end: {
          line: 1161,
          column: 59
        }
      },
      "384": {
        start: {
          line: 1162,
          column: 12
        },
        end: {
          line: 1165,
          column: 14
        }
      },
      "385": {
        start: {
          line: 1167,
          column: 22
        },
        end: {
          line: 1177,
          column: 9
        }
      },
      "386": {
        start: {
          line: 1178,
          column: 21
        },
        end: {
          line: 1178,
          column: 47
        }
      },
      "387": {
        start: {
          line: 1179,
          column: 42
        },
        end: {
          line: 1182,
          column: 10
        }
      },
      "388": {
        start: {
          line: 1183,
          column: 8
        },
        end: {
          line: 1189,
          column: 10
        }
      },
      "389": {
        start: {
          line: 1191,
          column: 8
        },
        end: {
          line: 1191,
          column: 57
        }
      },
      "390": {
        start: {
          line: 1192,
          column: 8
        },
        end: {
          line: 1198,
          column: 10
        }
      },
      "391": {
        start: {
          line: 1202,
          column: 4
        },
        end: {
          line: 1261,
          column: 5
        }
      },
      "392": {
        start: {
          line: 1203,
          column: 8
        },
        end: {
          line: 1205,
          column: 9
        }
      },
      "393": {
        start: {
          line: 1204,
          column: 12
        },
        end: {
          line: 1204,
          column: 50
        }
      },
      "394": {
        start: {
          line: 1206,
          column: 8
        },
        end: {
          line: 1206,
          column: 43
        }
      },
      "395": {
        start: {
          line: 1207,
          column: 24
        },
        end: {
          line: 1207,
          column: 100
        }
      },
      "396": {
        start: {
          line: 1208,
          column: 8
        },
        end: {
          line: 1210,
          column: 9
        }
      },
      "397": {
        start: {
          line: 1209,
          column: 12
        },
        end: {
          line: 1209,
          column: 49
        }
      },
      "398": {
        start: {
          line: 1211,
          column: 33
        },
        end: {
          line: 1215,
          column: 9
        }
      },
      "399": {
        start: {
          line: 1216,
          column: 29
        },
        end: {
          line: 1216,
          column: 55
        }
      },
      "400": {
        start: {
          line: 1217,
          column: 8
        },
        end: {
          line: 1221,
          column: 11
        }
      },
      "401": {
        start: {
          line: 1222,
          column: 8
        },
        end: {
          line: 1229,
          column: 10
        }
      },
      "402": {
        start: {
          line: 1231,
          column: 8
        },
        end: {
          line: 1235,
          column: 11
        }
      },
      "403": {
        start: {
          line: 1236,
          column: 8
        },
        end: {
          line: 1251,
          column: 9
        }
      },
      "404": {
        start: {
          line: 1237,
          column: 12
        },
        end: {
          line: 1243,
          column: 13
        }
      },
      "405": {
        start: {
          line: 1238,
          column: 16
        },
        end: {
          line: 1242,
          column: 18
        }
      },
      "406": {
        start: {
          line: 1244,
          column: 12
        },
        end: {
          line: 1250,
          column: 13
        }
      },
      "407": {
        start: {
          line: 1245,
          column: 16
        },
        end: {
          line: 1249,
          column: 18
        }
      },
      "408": {
        start: {
          line: 1252,
          column: 8
        },
        end: {
          line: 1260,
          column: 10
        }
      },
      "409": {
        start: {
          line: 1264,
          column: 4
        },
        end: {
          line: 1275,
          column: 5
        }
      },
      "410": {
        start: {
          line: 1265,
          column: 8
        },
        end: {
          line: 1265,
          column: 43
        }
      },
      "411": {
        start: {
          line: 1266,
          column: 24
        },
        end: {
          line: 1270,
          column: 17
        }
      },
      "412": {
        start: {
          line: 1271,
          column: 8
        },
        end: {
          line: 1271,
          column: 59
        }
      },
      "413": {
        start: {
          line: 1271,
          column: 22
        },
        end: {
          line: 1271,
          column: 59
        }
      },
      "414": {
        start: {
          line: 1272,
          column: 8
        },
        end: {
          line: 1272,
          column: 51
        }
      },
      "415": {
        start: {
          line: 1274,
          column: 8
        },
        end: {
          line: 1274,
          column: 56
        }
      },
      "416": {
        start: {
          line: 1278,
          column: 4
        },
        end: {
          line: 1297,
          column: 5
        }
      },
      "417": {
        start: {
          line: 1279,
          column: 8
        },
        end: {
          line: 1279,
          column: 43
        }
      },
      "418": {
        start: {
          line: 1280,
          column: 25
        },
        end: {
          line: 1292,
          column: 63
        }
      },
      "419": {
        start: {
          line: 1293,
          column: 8
        },
        end: {
          line: 1293,
          column: 52
        }
      },
      "420": {
        start: {
          line: 1295,
          column: 8
        },
        end: {
          line: 1295,
          column: 65
        }
      },
      "421": {
        start: {
          line: 1296,
          column: 8
        },
        end: {
          line: 1296,
          column: 18
        }
      },
      "422": {
        start: {
          line: 1300,
          column: 4
        },
        end: {
          line: 1326,
          column: 5
        }
      },
      "423": {
        start: {
          line: 1301,
          column: 41
        },
        end: {
          line: 1301,
          column: 80
        }
      },
      "424": {
        start: {
          line: 1302,
          column: 8
        },
        end: {
          line: 1302,
          column: 34
        }
      },
      "425": {
        start: {
          line: 1303,
          column: 8
        },
        end: {
          line: 1303,
          column: 43
        }
      },
      "426": {
        start: {
          line: 1304,
          column: 27
        },
        end: {
          line: 1304,
          column: 53
        }
      },
      "427": {
        start: {
          line: 1305,
          column: 27
        },
        end: {
          line: 1311,
          column: 9
        }
      },
      "428": {
        start: {
          line: 1312,
          column: 25
        },
        end: {
          line: 1314,
          column: 47
        }
      },
      "429": {
        start: {
          line: 1315,
          column: 30
        },
        end: {
          line: 1315,
          column: 84
        }
      },
      "430": {
        start: {
          line: 1316,
          column: 8
        },
        end: {
          line: 1319,
          column: 10
        }
      },
      "431": {
        start: {
          line: 1321,
          column: 8
        },
        end: {
          line: 1321,
          column: 65
        }
      },
      "432": {
        start: {
          line: 1322,
          column: 8
        },
        end: {
          line: 1325,
          column: 10
        }
      },
      "433": {
        start: {
          line: 1329,
          column: 4
        },
        end: {
          line: 1360,
          column: 5
        }
      },
      "434": {
        start: {
          line: 1330,
          column: 8
        },
        end: {
          line: 1330,
          column: 43
        }
      },
      "435": {
        start: {
          line: 1331,
          column: 21
        },
        end: {
          line: 1355,
          column: 10
        }
      },
      "436": {
        start: {
          line: 1356,
          column: 8
        },
        end: {
          line: 1356,
          column: 169
        }
      },
      "437": {
        start: {
          line: 1356,
          column: 48
        },
        end: {
          line: 1356,
          column: 66
        }
      },
      "438": {
        start: {
          line: 1356,
          column: 79
        },
        end: {
          line: 1356,
          column: 161
        }
      },
      "439": {
        start: {
          line: 1356,
          column: 106
        },
        end: {
          line: 1356,
          column: 150
        }
      },
      "440": {
        start: {
          line: 1358,
          column: 8
        },
        end: {
          line: 1358,
          column: 53
        }
      },
      "441": {
        start: {
          line: 1359,
          column: 8
        },
        end: {
          line: 1359,
          column: 18
        }
      },
      "442": {
        start: {
          line: 1363,
          column: 4
        },
        end: {
          line: 1373,
          column: 5
        }
      },
      "443": {
        start: {
          line: 1364,
          column: 8
        },
        end: {
          line: 1364,
          column: 43
        }
      },
      "444": {
        start: {
          line: 1365,
          column: 27
        },
        end: {
          line: 1368,
          column: 31
        }
      },
      "445": {
        start: {
          line: 1369,
          column: 8
        },
        end: {
          line: 1369,
          column: 26
        }
      },
      "446": {
        start: {
          line: 1371,
          column: 8
        },
        end: {
          line: 1371,
          column: 59
        }
      },
      "447": {
        start: {
          line: 1372,
          column: 8
        },
        end: {
          line: 1372,
          column: 18
        }
      },
      "448": {
        start: {
          line: 1376,
          column: 4
        },
        end: {
          line: 1458,
          column: 5
        }
      },
      "449": {
        start: {
          line: 1377,
          column: 8
        },
        end: {
          line: 1377,
          column: 43
        }
      },
      "450": {
        start: {
          line: 1378,
          column: 28
        },
        end: {
          line: 1380,
          column: 9
        }
      },
      "451": {
        start: {
          line: 1381,
          column: 8
        },
        end: {
          line: 1408,
          column: 9
        }
      },
      "452": {
        start: {
          line: 1382,
          column: 12
        },
        end: {
          line: 1407,
          column: 14
        }
      },
      "453": {
        start: {
          line: 1409,
          column: 21
        },
        end: {
          line: 1409,
          column: 39
        }
      },
      "454": {
        start: {
          line: 1410,
          column: 42
        },
        end: {
          line: 1428,
          column: 10
        }
      },
      "455": {
        start: {
          line: 1429,
          column: 34
        },
        end: {
          line: 1435,
          column: 15
        }
      },
      "456": {
        start: {
          line: 1429,
          column: 59
        },
        end: {
          line: 1435,
          column: 13
        }
      },
      "457": {
        start: {
          line: 1436,
          column: 8
        },
        end: {
          line: 1441,
          column: 11
        }
      },
      "458": {
        start: {
          line: 1442,
          column: 8
        },
        end: {
          line: 1448,
          column: 10
        }
      },
      "459": {
        start: {
          line: 1450,
          column: 8
        },
        end: {
          line: 1450,
          column: 60
        }
      },
      "460": {
        start: {
          line: 1451,
          column: 8
        },
        end: {
          line: 1457,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 20
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 16,
            column: 20
          }
        },
        loc: {
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 23
          }
        },
        loc: {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 20
          },
          end: {
            line: 22,
            column: 21
          }
        },
        loc: {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 25,
            column: 29
          }
        },
        loc: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 28,
            column: 17
          }
        },
        loc: {
          start: {
            line: 28,
            column: 27
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 24
          }
        },
        loc: {
          start: {
            line: 31,
            column: 34
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 34,
            column: 21
          }
        },
        loc: {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 37,
            column: 23
          }
        },
        loc: {
          start: {
            line: 37,
            column: 33
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 26
          },
          end: {
            line: 40,
            column: 27
          }
        },
        loc: {
          start: {
            line: 40,
            column: 37
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 43,
            column: 22
          },
          end: {
            line: 43,
            column: 23
          }
        },
        loc: {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 46,
            column: 24
          },
          end: {
            line: 46,
            column: 25
          }
        },
        loc: {
          start: {
            line: 46,
            column: 35
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 25
          }
        },
        loc: {
          start: {
            line: 49,
            column: 35
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 49
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 52,
            column: 34
          },
          end: {
            line: 52,
            column: 35
          }
        },
        loc: {
          start: {
            line: 52,
            column: 45
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 52
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 55,
            column: 23
          },
          end: {
            line: 55,
            column: 24
          }
        },
        loc: {
          start: {
            line: 55,
            column: 34
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 55
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 58,
            column: 19
          },
          end: {
            line: 58,
            column: 20
          }
        },
        loc: {
          start: {
            line: 58,
            column: 30
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 58
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 61,
            column: 25
          },
          end: {
            line: 61,
            column: 26
          }
        },
        loc: {
          start: {
            line: 61,
            column: 36
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 61
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 64,
            column: 26
          },
          end: {
            line: 64,
            column: 27
          }
        },
        loc: {
          start: {
            line: 64,
            column: 37
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 64
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 67,
            column: 20
          }
        },
        loc: {
          start: {
            line: 67,
            column: 30
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 67
      },
      "20": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 83,
            column: 9
          },
          end: {
            line: 83,
            column: 33
          }
        },
        loc: {
          start: {
            line: 83,
            column: 39
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 83
      },
      "21": {
        name: "getCurrentUserInfo",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 33
          }
        },
        loc: {
          start: {
            line: 100,
            column: 36
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 100
      },
      "22": {
        name: "logOperation",
        decl: {
          start: {
            line: 111,
            column: 15
          },
          end: {
            line: 111,
            column: 27
          }
        },
        loc: {
          start: {
            line: 111,
            column: 48
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 111
      },
      "23": {
        name: "validateSeller",
        decl: {
          start: {
            line: 118,
            column: 15
          },
          end: {
            line: 118,
            column: 29
          }
        },
        loc: {
          start: {
            line: 118,
            column: 38
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 118
      },
      "24": {
        name: "getAllProductsForAdmin",
        decl: {
          start: {
            line: 125,
            column: 15
          },
          end: {
            line: 125,
            column: 37
          }
        },
        loc: {
          start: {
            line: 125,
            column: 88
          },
          end: {
            line: 218,
            column: 1
          }
        },
        line: 125
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 188,
            column: 47
          },
          end: {
            line: 188,
            column: 48
          }
        },
        loc: {
          start: {
            line: 188,
            column: 59
          },
          end: {
            line: 194,
            column: 13
          }
        },
        line: 188
      },
      "26": {
        name: "createProduct",
        decl: {
          start: {
            line: 219,
            column: 15
          },
          end: {
            line: 219,
            column: 28
          }
        },
        loc: {
          start: {
            line: 219,
            column: 35
          },
          end: {
            line: 435,
            column: 1
          }
        },
        line: 219
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 261,
            column: 71
          },
          end: {
            line: 261,
            column: 72
          }
        },
        loc: {
          start: {
            line: 261,
            column: 84
          },
          end: {
            line: 274,
            column: 9
          }
        },
        line: 261
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 262,
            column: 58
          },
          end: {
            line: 262,
            column: 59
          }
        },
        loc: {
          start: {
            line: 262,
            column: 74
          },
          end: {
            line: 267,
            column: 13
          }
        },
        line: 262
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 263,
            column: 54
          },
          end: {
            line: 263,
            column: 55
          }
        },
        loc: {
          start: {
            line: 263,
            column: 67
          },
          end: {
            line: 263,
            column: 86
          }
        },
        line: 263
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 275,
            column: 57
          },
          end: {
            line: 275,
            column: 58
          }
        },
        loc: {
          start: {
            line: 275,
            column: 75
          },
          end: {
            line: 275,
            column: 99
          }
        },
        line: 275
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 277,
            column: 61
          },
          end: {
            line: 277,
            column: 62
          }
        },
        loc: {
          start: {
            line: 277,
            column: 85
          },
          end: {
            line: 304,
            column: 9
          }
        },
        line: 277
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 278,
            column: 37
          },
          end: {
            line: 278,
            column: 38
          }
        },
        loc: {
          start: {
            line: 278,
            column: 55
          },
          end: {
            line: 302,
            column: 13
          }
        },
        line: 278
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 279,
            column: 53
          },
          end: {
            line: 279,
            column: 54
          }
        },
        loc: {
          start: {
            line: 279,
            column: 58
          },
          end: {
            line: 279,
            column: 88
          }
        },
        line: 279
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 283,
            column: 49
          },
          end: {
            line: 283,
            column: 50
          }
        },
        loc: {
          start: {
            line: 283,
            column: 66
          },
          end: {
            line: 293,
            column: 21
          }
        },
        line: 283
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 284,
            column: 70
          },
          end: {
            line: 284,
            column: 71
          }
        },
        loc: {
          start: {
            line: 284,
            column: 75
          },
          end: {
            line: 284,
            column: 104
          }
        },
        line: 284
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 358,
            column: 118
          },
          end: {
            line: 358,
            column: 119
          }
        },
        loc: {
          start: {
            line: 358,
            column: 124
          },
          end: {
            line: 358,
            column: 139
          }
        },
        line: 358
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 372,
            column: 53
          },
          end: {
            line: 372,
            column: 54
          }
        },
        loc: {
          start: {
            line: 372,
            column: 66
          },
          end: {
            line: 382,
            column: 14
          }
        },
        line: 372
      },
      "38": {
        name: "updateProduct",
        decl: {
          start: {
            line: 436,
            column: 15
          },
          end: {
            line: 436,
            column: 28
          }
        },
        loc: {
          start: {
            line: 436,
            column: 35
          },
          end: {
            line: 630,
            column: 1
          }
        },
        line: 436
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 472,
            column: 71
          },
          end: {
            line: 472,
            column: 72
          }
        },
        loc: {
          start: {
            line: 472,
            column: 84
          },
          end: {
            line: 485,
            column: 9
          }
        },
        line: 472
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 473,
            column: 58
          },
          end: {
            line: 473,
            column: 59
          }
        },
        loc: {
          start: {
            line: 473,
            column: 74
          },
          end: {
            line: 478,
            column: 13
          }
        },
        line: 473
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 474,
            column: 54
          },
          end: {
            line: 474,
            column: 55
          }
        },
        loc: {
          start: {
            line: 474,
            column: 67
          },
          end: {
            line: 474,
            column: 86
          }
        },
        line: 474
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 486,
            column: 57
          },
          end: {
            line: 486,
            column: 58
          }
        },
        loc: {
          start: {
            line: 486,
            column: 75
          },
          end: {
            line: 486,
            column: 99
          }
        },
        line: 486
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 488,
            column: 61
          },
          end: {
            line: 488,
            column: 62
          }
        },
        loc: {
          start: {
            line: 488,
            column: 85
          },
          end: {
            line: 515,
            column: 9
          }
        },
        line: 488
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 489,
            column: 37
          },
          end: {
            line: 489,
            column: 38
          }
        },
        loc: {
          start: {
            line: 489,
            column: 55
          },
          end: {
            line: 513,
            column: 13
          }
        },
        line: 489
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 490,
            column: 53
          },
          end: {
            line: 490,
            column: 54
          }
        },
        loc: {
          start: {
            line: 490,
            column: 58
          },
          end: {
            line: 490,
            column: 88
          }
        },
        line: 490
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 494,
            column: 49
          },
          end: {
            line: 494,
            column: 50
          }
        },
        loc: {
          start: {
            line: 494,
            column: 66
          },
          end: {
            line: 504,
            column: 21
          }
        },
        line: 494
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 495,
            column: 70
          },
          end: {
            line: 495,
            column: 71
          }
        },
        loc: {
          start: {
            line: 495,
            column: 75
          },
          end: {
            line: 495,
            column: 104
          }
        },
        line: 495
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 557,
            column: 118
          },
          end: {
            line: 557,
            column: 119
          }
        },
        loc: {
          start: {
            line: 557,
            column: 124
          },
          end: {
            line: 557,
            column: 139
          }
        },
        line: 557
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 567,
            column: 53
          },
          end: {
            line: 567,
            column: 54
          }
        },
        loc: {
          start: {
            line: 567,
            column: 66
          },
          end: {
            line: 577,
            column: 14
          }
        },
        line: 567
      },
      "50": {
        name: "deleteProduct",
        decl: {
          start: {
            line: 631,
            column: 15
          },
          end: {
            line: 631,
            column: 28
          }
        },
        loc: {
          start: {
            line: 631,
            column: 33
          },
          end: {
            line: 713,
            column: 1
          }
        },
        line: 631
      },
      "51": {
        name: "reviewProduct",
        decl: {
          start: {
            line: 714,
            column: 15
          },
          end: {
            line: 714,
            column: 28
          }
        },
        loc: {
          start: {
            line: 714,
            column: 57
          },
          end: {
            line: 769,
            column: 1
          }
        },
        line: 714
      },
      "52": {
        name: "syncProductInventory",
        decl: {
          start: {
            line: 770,
            column: 15
          },
          end: {
            line: 770,
            column: 35
          }
        },
        loc: {
          start: {
            line: 770,
            column: 47
          },
          end: {
            line: 851,
            column: 1
          }
        },
        line: 770
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 797,
            column: 56
          },
          end: {
            line: 797,
            column: 57
          }
        },
        loc: {
          start: {
            line: 797,
            column: 62
          },
          end: {
            line: 809,
            column: 9
          }
        },
        line: 797
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 810,
            column: 48
          },
          end: {
            line: 810,
            column: 49
          }
        },
        loc: {
          start: {
            line: 810,
            column: 59
          },
          end: {
            line: 810,
            column: 76
          }
        },
        line: 810
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 819,
            column: 113
          },
          end: {
            line: 819,
            column: 114
          }
        },
        loc: {
          start: {
            line: 819,
            column: 119
          },
          end: {
            line: 819,
            column: 134
          }
        },
        line: 819
      },
      "56": {
        name: "submitProductReview",
        decl: {
          start: {
            line: 852,
            column: 15
          },
          end: {
            line: 852,
            column: 34
          }
        },
        loc: {
          start: {
            line: 852,
            column: 102
          },
          end: {
            line: 962,
            column: 1
          }
        },
        line: 852
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 877,
            column: 52
          },
          end: {
            line: 877,
            column: 53
          }
        },
        loc: {
          start: {
            line: 877,
            column: 62
          },
          end: {
            line: 877,
            column: 95
          }
        },
        line: 877
      },
      "58": {
        name: "getProductCategories",
        decl: {
          start: {
            line: 963,
            column: 15
          },
          end: {
            line: 963,
            column: 35
          }
        },
        loc: {
          start: {
            line: 963,
            column: 47
          },
          end: {
            line: 1022,
            column: 1
          }
        },
        line: 963
      },
      "59": {
        name: "getProductsForCard",
        decl: {
          start: {
            line: 1023,
            column: 15
          },
          end: {
            line: 1023,
            column: 33
          }
        },
        loc: {
          start: {
            line: 1023,
            column: 54
          },
          end: {
            line: 1083,
            column: 1
          }
        },
        line: 1023
      },
      "60": {
        name: "getProductsByTag",
        decl: {
          start: {
            line: 1084,
            column: 15
          },
          end: {
            line: 1084,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1084,
            column: 71
          },
          end: {
            line: 1112,
            column: 1
          }
        },
        line: 1084
      },
      "61": {
        name: "getLatestProducts",
        decl: {
          start: {
            line: 1113,
            column: 15
          },
          end: {
            line: 1113,
            column: 32
          }
        },
        loc: {
          start: {
            line: 1113,
            column: 53
          },
          end: {
            line: 1130,
            column: 1
          }
        },
        line: 1113
      },
      "62": {
        name: "getAllProducts",
        decl: {
          start: {
            line: 1131,
            column: 15
          },
          end: {
            line: 1131,
            column: 29
          }
        },
        loc: {
          start: {
            line: 1131,
            column: 126
          },
          end: {
            line: 1200,
            column: 1
          }
        },
        line: 1131
      },
      "63": {
        name: "getProductById",
        decl: {
          start: {
            line: 1201,
            column: 15
          },
          end: {
            line: 1201,
            column: 29
          }
        },
        loc: {
          start: {
            line: 1201,
            column: 41
          },
          end: {
            line: 1262,
            column: 1
          }
        },
        line: 1201
      },
      "64": {
        name: "getProductBySlug",
        decl: {
          start: {
            line: 1263,
            column: 15
          },
          end: {
            line: 1263,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1263,
            column: 38
          },
          end: {
            line: 1276,
            column: 1
          }
        },
        line: 1263
      },
      "65": {
        name: "getRelatedProducts",
        decl: {
          start: {
            line: 1277,
            column: 15
          },
          end: {
            line: 1277,
            column: 33
          }
        },
        loc: {
          start: {
            line: 1277,
            column: 70
          },
          end: {
            line: 1298,
            column: 1
          }
        },
        line: 1277
      },
      "66": {
        name: "getRelatedProductsByCategory",
        decl: {
          start: {
            line: 1299,
            column: 15
          },
          end: {
            line: 1299,
            column: 43
          }
        },
        loc: {
          start: {
            line: 1299,
            column: 90
          },
          end: {
            line: 1327,
            column: 1
          }
        },
        line: 1299
      },
      "67": {
        name: "getAllTags",
        decl: {
          start: {
            line: 1328,
            column: 15
          },
          end: {
            line: 1328,
            column: 25
          }
        },
        loc: {
          start: {
            line: 1328,
            column: 28
          },
          end: {
            line: 1361,
            column: 1
          }
        },
        line: 1328
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 1356,
            column: 40
          },
          end: {
            line: 1356,
            column: 41
          }
        },
        loc: {
          start: {
            line: 1356,
            column: 48
          },
          end: {
            line: 1356,
            column: 66
          }
        },
        line: 1356
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 1356,
            column: 72
          },
          end: {
            line: 1356,
            column: 73
          }
        },
        loc: {
          start: {
            line: 1356,
            column: 79
          },
          end: {
            line: 1356,
            column: 161
          }
        },
        line: 1356
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 1356,
            column: 98
          },
          end: {
            line: 1356,
            column: 99
          }
        },
        loc: {
          start: {
            line: 1356,
            column: 106
          },
          end: {
            line: 1356,
            column: 150
          }
        },
        line: 1356
      },
      "71": {
        name: "getAllCategories",
        decl: {
          start: {
            line: 1362,
            column: 15
          },
          end: {
            line: 1362,
            column: 31
          }
        },
        loc: {
          start: {
            line: 1362,
            column: 34
          },
          end: {
            line: 1374,
            column: 1
          }
        },
        line: 1362
      },
      "72": {
        name: "getSellerProducts",
        decl: {
          start: {
            line: 1375,
            column: 15
          },
          end: {
            line: 1375,
            column: 32
          }
        },
        loc: {
          start: {
            line: 1375,
            column: 81
          },
          end: {
            line: 1459,
            column: 1
          }
        },
        line: 1375
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 1429,
            column: 47
          },
          end: {
            line: 1429,
            column: 48
          }
        },
        loc: {
          start: {
            line: 1429,
            column: 59
          },
          end: {
            line: 1435,
            column: 13
          }
        },
        line: 1429
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 84,
            column: 11
          },
          end: {
            line: 86,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 35
          },
          end: {
            line: 84,
            column: 38
          }
        }, {
          start: {
            line: 84,
            column: 41
          },
          end: {
            line: 86,
            column: 5
          }
        }],
        line: 84
      },
      "1": {
        loc: {
          start: {
            line: 84,
            column: 11
          },
          end: {
            line: 84,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 11
          },
          end: {
            line: 84,
            column: 14
          }
        }, {
          start: {
            line: 84,
            column: 18
          },
          end: {
            line: 84,
            column: 32
          }
        }],
        line: 84
      },
      "2": {
        loc: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "3": {
        loc: {
          start: {
            line: 107,
            column: 18
          },
          end: {
            line: 107,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 18
          },
          end: {
            line: 107,
            column: 35
          }
        }, {
          start: {
            line: 107,
            column: 39
          },
          end: {
            line: 107,
            column: 57
          }
        }, {
          start: {
            line: 107,
            column: 61
          },
          end: {
            line: 107,
            column: 76
          }
        }],
        line: 107
      },
      "4": {
        loc: {
          start: {
            line: 108,
            column: 18
          },
          end: {
            line: 108,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 18
          },
          end: {
            line: 108,
            column: 35
          }
        }, {
          start: {
            line: 108,
            column: 39
          },
          end: {
            line: 108,
            column: 45
          }
        }],
        line: 108
      },
      "5": {
        loc: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "6": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 120,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 120,
            column: 31
          }
        }, {
          start: {
            line: 120,
            column: 35
          },
          end: {
            line: 120,
            column: 55
          }
        }],
        line: 120
      },
      "7": {
        loc: {
          start: {
            line: 125,
            column: 40
          },
          end: {
            line: 125,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 125,
            column: 48
          },
          end: {
            line: 125,
            column: 50
          }
        }],
        line: 125
      },
      "8": {
        loc: {
          start: {
            line: 125,
            column: 52
          },
          end: {
            line: 125,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 125,
            column: 59
          },
          end: {
            line: 125,
            column: 60
          }
        }],
        line: 125
      },
      "9": {
        loc: {
          start: {
            line: 125,
            column: 62
          },
          end: {
            line: 125,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 125,
            column: 69
          },
          end: {
            line: 125,
            column: 77
          }
        }],
        line: 125
      },
      "10": {
        loc: {
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 129,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 129,
            column: 21
          }
        }, {
          start: {
            line: 129,
            column: 25
          },
          end: {
            line: 129,
            column: 33
          }
        }],
        line: 129
      },
      "11": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "12": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 131,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 131,
            column: 17
          }
        }, {
          start: {
            line: 131,
            column: 21
          },
          end: {
            line: 131,
            column: 36
          }
        }],
        line: 131
      },
      "13": {
        loc: {
          start: {
            line: 159,
            column: 28
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 159,
            column: 54
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        }],
        line: 159
      },
      "14": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 43
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        }],
        line: 161
      },
      "15": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 43
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        }],
        line: 163
      },
      "16": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 45
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 169,
            column: 9
          }
        }],
        line: 165
      },
      "17": {
        loc: {
          start: {
            line: 192,
            column: 28
          },
          end: {
            line: 192,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 28
          },
          end: {
            line: 192,
            column: 51
          }
        }, {
          start: {
            line: 192,
            column: 55
          },
          end: {
            line: 192,
            column: 56
          }
        }],
        line: 192
      },
      "18": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "19": {
        loc: {
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 225,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 225,
            column: 33
          }
        }, {
          start: {
            line: 225,
            column: 37
          },
          end: {
            line: 225,
            column: 57
          }
        }],
        line: 225
      },
      "20": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "21": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "22": {
        loc: {
          start: {
            line: 256,
            column: 22
          },
          end: {
            line: 256,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 22
          },
          end: {
            line: 256,
            column: 62
          }
        }, {
          start: {
            line: 256,
            column: 66
          },
          end: {
            line: 256,
            column: 67
          }
        }],
        line: 256
      },
      "23": {
        loc: {
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 301,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 301,
            column: 17
          }
        }, {
          start: {
            line: 294,
            column: 23
          },
          end: {
            line: 301,
            column: 17
          }
        }],
        line: 280
      },
      "24": {
        loc: {
          start: {
            line: 285,
            column: 24
          },
          end: {
            line: 292,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 24
          },
          end: {
            line: 292,
            column: 25
          }
        }, {
          start: {
            line: 288,
            column: 31
          },
          end: {
            line: 292,
            column: 25
          }
        }],
        line: 285
      },
      "25": {
        loc: {
          start: {
            line: 307,
            column: 30
          },
          end: {
            line: 307,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 30
          },
          end: {
            line: 307,
            column: 59
          }
        }, {
          start: {
            line: 307,
            column: 63
          },
          end: {
            line: 307,
            column: 65
          }
        }],
        line: 307
      },
      "26": {
        loc: {
          start: {
            line: 308,
            column: 27
          },
          end: {
            line: 308,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 27
          },
          end: {
            line: 308,
            column: 67
          }
        }, {
          start: {
            line: 308,
            column: 71
          },
          end: {
            line: 308,
            column: 72
          }
        }],
        line: 308
      },
      "27": {
        loc: {
          start: {
            line: 320,
            column: 23
          },
          end: {
            line: 320,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 320,
            column: 23
          },
          end: {
            line: 320,
            column: 54
          }
        }, {
          start: {
            line: 320,
            column: 58
          },
          end: {
            line: 320,
            column: 67
          }
        }],
        line: 320
      },
      "28": {
        loc: {
          start: {
            line: 335,
            column: 25
          },
          end: {
            line: 335,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 335,
            column: 25
          },
          end: {
            line: 335,
            column: 50
          }
        }, {
          start: {
            line: 335,
            column: 54
          },
          end: {
            line: 335,
            column: 59
          }
        }],
        line: 335
      },
      "29": {
        loc: {
          start: {
            line: 357,
            column: 20
          },
          end: {
            line: 357,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 357,
            column: 48
          },
          end: {
            line: 357,
            column: 57
          }
        }, {
          start: {
            line: 357,
            column: 60
          },
          end: {
            line: 357,
            column: 67
          }
        }],
        line: 357
      },
      "30": {
        loc: {
          start: {
            line: 358,
            column: 29
          },
          end: {
            line: 358,
            column: 168
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 358,
            column: 48
          },
          end: {
            line: 358,
            column: 62
          }
        }, {
          start: {
            line: 358,
            column: 65
          },
          end: {
            line: 358,
            column: 168
          }
        }],
        line: 358
      },
      "31": {
        loc: {
          start: {
            line: 358,
            column: 65
          },
          end: {
            line: 358,
            column: 168
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 358,
            column: 144
          },
          end: {
            line: 358,
            column: 155
          }
        }, {
          start: {
            line: 358,
            column: 158
          },
          end: {
            line: 358,
            column: 168
          }
        }],
        line: 358
      },
      "32": {
        loc: {
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 426,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 426,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "33": {
        loc: {
          start: {
            line: 407,
            column: 12
          },
          end: {
            line: 413,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 12
          },
          end: {
            line: 413,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "34": {
        loc: {
          start: {
            line: 407,
            column: 16
          },
          end: {
            line: 407,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 407,
            column: 16
          },
          end: {
            line: 407,
            column: 51
          }
        }, {
          start: {
            line: 407,
            column: 55
          },
          end: {
            line: 407,
            column: 85
          }
        }],
        line: 407
      },
      "35": {
        loc: {
          start: {
            line: 414,
            column: 12
          },
          end: {
            line: 420,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 414,
            column: 12
          },
          end: {
            line: 420,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 414
      },
      "36": {
        loc: {
          start: {
            line: 447,
            column: 8
          },
          end: {
            line: 449,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 447,
            column: 8
          },
          end: {
            line: 449,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 447
      },
      "37": {
        loc: {
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 453,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 453,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "38": {
        loc: {
          start: {
            line: 451,
            column: 12
          },
          end: {
            line: 451,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 451,
            column: 12
          },
          end: {
            line: 451,
            column: 32
          }
        }, {
          start: {
            line: 451,
            column: 36
          },
          end: {
            line: 451,
            column: 82
          }
        }],
        line: 451
      },
      "39": {
        loc: {
          start: {
            line: 455,
            column: 44
          },
          end: {
            line: 455,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 455,
            column: 67
          },
          end: {
            line: 455,
            column: 102
          }
        }, {
          start: {
            line: 455,
            column: 105
          },
          end: {
            line: 455,
            column: 111
          }
        }],
        line: 455
      },
      "40": {
        loc: {
          start: {
            line: 458,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 458,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 458
      },
      "41": {
        loc: {
          start: {
            line: 467,
            column: 22
          },
          end: {
            line: 467,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 467,
            column: 22
          },
          end: {
            line: 467,
            column: 62
          }
        }, {
          start: {
            line: 467,
            column: 66
          },
          end: {
            line: 467,
            column: 67
          }
        }],
        line: 467
      },
      "42": {
        loc: {
          start: {
            line: 491,
            column: 16
          },
          end: {
            line: 512,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 16
          },
          end: {
            line: 512,
            column: 17
          }
        }, {
          start: {
            line: 505,
            column: 23
          },
          end: {
            line: 512,
            column: 17
          }
        }],
        line: 491
      },
      "43": {
        loc: {
          start: {
            line: 496,
            column: 24
          },
          end: {
            line: 503,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 496,
            column: 24
          },
          end: {
            line: 503,
            column: 25
          }
        }, {
          start: {
            line: 499,
            column: 31
          },
          end: {
            line: 503,
            column: 25
          }
        }],
        line: 496
      },
      "44": {
        loc: {
          start: {
            line: 518,
            column: 8
          },
          end: {
            line: 532,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 518,
            column: 8
          },
          end: {
            line: 532,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 518
      },
      "45": {
        loc: {
          start: {
            line: 518,
            column: 12
          },
          end: {
            line: 518,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 518,
            column: 12
          },
          end: {
            line: 518,
            column: 57
          }
        }, {
          start: {
            line: 518,
            column: 61
          },
          end: {
            line: 518,
            column: 125
          }
        }],
        line: 518
      },
      "46": {
        loc: {
          start: {
            line: 520,
            column: 34
          },
          end: {
            line: 520,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 520,
            column: 34
          },
          end: {
            line: 520,
            column: 63
          }
        }, {
          start: {
            line: 520,
            column: 67
          },
          end: {
            line: 520,
            column: 97
          }
        }],
        line: 520
      },
      "47": {
        loc: {
          start: {
            line: 521,
            column: 31
          },
          end: {
            line: 521,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 31
          },
          end: {
            line: 521,
            column: 71
          }
        }, {
          start: {
            line: 521,
            column: 75
          },
          end: {
            line: 521,
            column: 76
          }
        }],
        line: 521
      },
      "48": {
        loc: {
          start: {
            line: 530,
            column: 26
          },
          end: {
            line: 530,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 530,
            column: 26
          },
          end: {
            line: 530,
            column: 57
          }
        }, {
          start: {
            line: 530,
            column: 61
          },
          end: {
            line: 530,
            column: 93
          }
        }],
        line: 530
      },
      "49": {
        loc: {
          start: {
            line: 534,
            column: 37
          },
          end: {
            line: 534,
            column: 145
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 534,
            column: 37
          },
          end: {
            line: 534,
            column: 69
          }
        }, {
          start: {
            line: 534,
            column: 73
          },
          end: {
            line: 534,
            column: 89
          }
        }, {
          start: {
            line: 534,
            column: 93
          },
          end: {
            line: 534,
            column: 127
          }
        }, {
          start: {
            line: 534,
            column: 131
          },
          end: {
            line: 534,
            column: 145
          }
        }],
        line: 534
      },
      "50": {
        loc: {
          start: {
            line: 544,
            column: 23
          },
          end: {
            line: 544,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 544,
            column: 23
          },
          end: {
            line: 544,
            column: 54
          }
        }, {
          start: {
            line: 544,
            column: 58
          },
          end: {
            line: 544,
            column: 85
          }
        }],
        line: 544
      },
      "51": {
        loc: {
          start: {
            line: 556,
            column: 20
          },
          end: {
            line: 556,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 556,
            column: 48
          },
          end: {
            line: 556,
            column: 106
          }
        }, {
          start: {
            line: 556,
            column: 109
          },
          end: {
            line: 556,
            column: 116
          }
        }],
        line: 556
      },
      "52": {
        loc: {
          start: {
            line: 556,
            column: 48
          },
          end: {
            line: 556,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 556,
            column: 86
          },
          end: {
            line: 556,
            column: 94
          }
        }, {
          start: {
            line: 556,
            column: 97
          },
          end: {
            line: 556,
            column: 106
          }
        }],
        line: 556
      },
      "53": {
        loc: {
          start: {
            line: 557,
            column: 29
          },
          end: {
            line: 557,
            column: 168
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 557,
            column: 48
          },
          end: {
            line: 557,
            column: 62
          }
        }, {
          start: {
            line: 557,
            column: 65
          },
          end: {
            line: 557,
            column: 168
          }
        }],
        line: 557
      },
      "54": {
        loc: {
          start: {
            line: 557,
            column: 65
          },
          end: {
            line: 557,
            column: 168
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 557,
            column: 144
          },
          end: {
            line: 557,
            column: 155
          }
        }, {
          start: {
            line: 557,
            column: 158
          },
          end: {
            line: 557,
            column: 168
          }
        }],
        line: 557
      },
      "55": {
        loc: {
          start: {
            line: 579,
            column: 8
          },
          end: {
            line: 583,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 579,
            column: 8
          },
          end: {
            line: 583,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 579
      },
      "56": {
        loc: {
          start: {
            line: 581,
            column: 24
          },
          end: {
            line: 581,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 581,
            column: 43
          },
          end: {
            line: 581,
            column: 65
          }
        }, {
          start: {
            line: 581,
            column: 68
          },
          end: {
            line: 581,
            column: 91
          }
        }],
        line: 581
      },
      "57": {
        loc: {
          start: {
            line: 601,
            column: 8
          },
          end: {
            line: 621,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 601,
            column: 8
          },
          end: {
            line: 621,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 601
      },
      "58": {
        loc: {
          start: {
            line: 602,
            column: 12
          },
          end: {
            line: 608,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 602,
            column: 12
          },
          end: {
            line: 608,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 602
      },
      "59": {
        loc: {
          start: {
            line: 609,
            column: 12
          },
          end: {
            line: 615,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 609,
            column: 12
          },
          end: {
            line: 615,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 609
      },
      "60": {
        loc: {
          start: {
            line: 640,
            column: 8
          },
          end: {
            line: 642,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 640,
            column: 8
          },
          end: {
            line: 642,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 640
      },
      "61": {
        loc: {
          start: {
            line: 644,
            column: 8
          },
          end: {
            line: 646,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 644,
            column: 8
          },
          end: {
            line: 646,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 644
      },
      "62": {
        loc: {
          start: {
            line: 644,
            column: 12
          },
          end: {
            line: 644,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 644,
            column: 12
          },
          end: {
            line: 644,
            column: 32
          }
        }, {
          start: {
            line: 644,
            column: 36
          },
          end: {
            line: 644,
            column: 74
          }
        }],
        line: 644
      },
      "63": {
        loc: {
          start: {
            line: 649,
            column: 8
          },
          end: {
            line: 651,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 649,
            column: 8
          },
          end: {
            line: 651,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 649
      },
      "64": {
        loc: {
          start: {
            line: 657,
            column: 8
          },
          end: {
            line: 662,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 657,
            column: 8
          },
          end: {
            line: 662,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 657
      },
      "65": {
        loc: {
          start: {
            line: 689,
            column: 8
          },
          end: {
            line: 704,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 689,
            column: 8
          },
          end: {
            line: 704,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 689
      },
      "66": {
        loc: {
          start: {
            line: 690,
            column: 12
          },
          end: {
            line: 696,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 690,
            column: 12
          },
          end: {
            line: 696,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 690
      },
      "67": {
        loc: {
          start: {
            line: 697,
            column: 12
          },
          end: {
            line: 703,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 697,
            column: 12
          },
          end: {
            line: 703,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 697
      },
      "68": {
        loc: {
          start: {
            line: 719,
            column: 8
          },
          end: {
            line: 721,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 719,
            column: 8
          },
          end: {
            line: 721,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 719
      },
      "69": {
        loc: {
          start: {
            line: 724,
            column: 8
          },
          end: {
            line: 726,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 724,
            column: 8
          },
          end: {
            line: 726,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 724
      },
      "70": {
        loc: {
          start: {
            line: 728,
            column: 20
          },
          end: {
            line: 728,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 728,
            column: 31
          },
          end: {
            line: 728,
            column: 39
          }
        }, {
          start: {
            line: 728,
            column: 42
          },
          end: {
            line: 728,
            column: 52
          }
        }],
        line: 728
      },
      "71": {
        loc: {
          start: {
            line: 733,
            column: 23
          },
          end: {
            line: 733,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 733,
            column: 23
          },
          end: {
            line: 733,
            column: 28
          }
        }, {
          start: {
            line: 733,
            column: 32
          },
          end: {
            line: 733,
            column: 34
          }
        }],
        line: 733
      },
      "72": {
        loc: {
          start: {
            line: 745,
            column: 8
          },
          end: {
            line: 747,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 745,
            column: 8
          },
          end: {
            line: 747,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 745
      },
      "73": {
        loc: {
          start: {
            line: 748,
            column: 38
          },
          end: {
            line: 748,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 748,
            column: 49
          },
          end: {
            line: 748,
            column: 59
          }
        }, {
          start: {
            line: 748,
            column: 62
          },
          end: {
            line: 748,
            column: 72
          }
        }],
        line: 748
      },
      "74": {
        loc: {
          start: {
            line: 755,
            column: 32
          },
          end: {
            line: 755,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 755,
            column: 43
          },
          end: {
            line: 755,
            column: 53
          }
        }, {
          start: {
            line: 755,
            column: 56
          },
          end: {
            line: 755,
            column: 66
          }
        }],
        line: 755
      },
      "75": {
        loc: {
          start: {
            line: 782,
            column: 8
          },
          end: {
            line: 784,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 782,
            column: 8
          },
          end: {
            line: 784,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 782
      },
      "76": {
        loc: {
          start: {
            line: 786,
            column: 8
          },
          end: {
            line: 788,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 786,
            column: 8
          },
          end: {
            line: 788,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 786
      },
      "77": {
        loc: {
          start: {
            line: 791,
            column: 8
          },
          end: {
            line: 793,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 791,
            column: 8
          },
          end: {
            line: 793,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 791
      },
      "78": {
        loc: {
          start: {
            line: 798,
            column: 12
          },
          end: {
            line: 807,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 798,
            column: 12
          },
          end: {
            line: 807,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 798
      },
      "79": {
        loc: {
          start: {
            line: 819,
            column: 33
          },
          end: {
            line: 819,
            column: 163
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 819,
            column: 52
          },
          end: {
            line: 819,
            column: 66
          }
        }, {
          start: {
            line: 819,
            column: 69
          },
          end: {
            line: 819,
            column: 163
          }
        }],
        line: 819
      },
      "80": {
        loc: {
          start: {
            line: 819,
            column: 69
          },
          end: {
            line: 819,
            column: 163
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 819,
            column: 139
          },
          end: {
            line: 819,
            column: 150
          }
        }, {
          start: {
            line: 819,
            column: 153
          },
          end: {
            line: 819,
            column: 163
          }
        }],
        line: 819
      },
      "81": {
        loc: {
          start: {
            line: 852,
            column: 72
          },
          end: {
            line: 852,
            column: 98
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 852,
            column: 93
          },
          end: {
            line: 852,
            column: 98
          }
        }],
        line: 852
      },
      "82": {
        loc: {
          start: {
            line: 859,
            column: 8
          },
          end: {
            line: 861,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 859,
            column: 8
          },
          end: {
            line: 861,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 859
      },
      "83": {
        loc: {
          start: {
            line: 862,
            column: 8
          },
          end: {
            line: 864,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 862,
            column: 8
          },
          end: {
            line: 864,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 862
      },
      "84": {
        loc: {
          start: {
            line: 862,
            column: 12
          },
          end: {
            line: 862,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 862,
            column: 12
          },
          end: {
            line: 862,
            column: 22
          }
        }, {
          start: {
            line: 862,
            column: 26
          },
          end: {
            line: 862,
            column: 36
          }
        }],
        line: 862
      },
      "85": {
        loc: {
          start: {
            line: 865,
            column: 8
          },
          end: {
            line: 867,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 865,
            column: 8
          },
          end: {
            line: 867,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 865
      },
      "86": {
        loc: {
          start: {
            line: 865,
            column: 12
          },
          end: {
            line: 865,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 865,
            column: 12
          },
          end: {
            line: 865,
            column: 19
          }
        }, {
          start: {
            line: 865,
            column: 24
          },
          end: {
            line: 865,
            column: 43
          }
        }, {
          start: {
            line: 865,
            column: 47
          },
          end: {
            line: 865,
            column: 67
          }
        }],
        line: 865
      },
      "87": {
        loc: {
          start: {
            line: 868,
            column: 8
          },
          end: {
            line: 870,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 868,
            column: 8
          },
          end: {
            line: 870,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 868
      },
      "88": {
        loc: {
          start: {
            line: 868,
            column: 12
          },
          end: {
            line: 868,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 868,
            column: 12
          },
          end: {
            line: 868,
            column: 17
          }
        }, {
          start: {
            line: 868,
            column: 22
          },
          end: {
            line: 868,
            column: 38
          }
        }, {
          start: {
            line: 868,
            column: 42
          },
          end: {
            line: 868,
            column: 60
          }
        }],
        line: 868
      },
      "89": {
        loc: {
          start: {
            line: 873,
            column: 8
          },
          end: {
            line: 875,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 873,
            column: 8
          },
          end: {
            line: 875,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 873
      },
      "90": {
        loc: {
          start: {
            line: 878,
            column: 8
          },
          end: {
            line: 880,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 878,
            column: 8
          },
          end: {
            line: 880,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 878
      },
      "91": {
        loc: {
          start: {
            line: 903,
            column: 87
          },
          end: {
            line: 903,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 903,
            column: 97
          },
          end: {
            line: 903,
            column: 111
          }
        }, {
          start: {
            line: 903,
            column: 114
          },
          end: {
            line: 903,
            column: 116
          }
        }],
        line: 903
      },
      "92": {
        loc: {
          start: {
            line: 926,
            column: 8
          },
          end: {
            line: 953,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 926,
            column: 8
          },
          end: {
            line: 953,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 926
      },
      "93": {
        loc: {
          start: {
            line: 927,
            column: 12
          },
          end: {
            line: 933,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 927,
            column: 12
          },
          end: {
            line: 933,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 927
      },
      "94": {
        loc: {
          start: {
            line: 934,
            column: 12
          },
          end: {
            line: 940,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 934,
            column: 12
          },
          end: {
            line: 940,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 934
      },
      "95": {
        loc: {
          start: {
            line: 941,
            column: 12
          },
          end: {
            line: 947,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 941,
            column: 12
          },
          end: {
            line: 947,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 941
      },
      "96": {
        loc: {
          start: {
            line: 963,
            column: 36
          },
          end: {
            line: 963,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 963,
            column: 44
          },
          end: {
            line: 963,
            column: 45
          }
        }],
        line: 963
      },
      "97": {
        loc: {
          start: {
            line: 1023,
            column: 41
          },
          end: {
            line: 1023,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1023,
            column: 49
          },
          end: {
            line: 1023,
            column: 50
          }
        }],
        line: 1023
      },
      "98": {
        loc: {
          start: {
            line: 1084,
            column: 39
          },
          end: {
            line: 1084,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1084,
            column: 47
          },
          end: {
            line: 1084,
            column: 49
          }
        }],
        line: 1084
      },
      "99": {
        loc: {
          start: {
            line: 1084,
            column: 51
          },
          end: {
            line: 1084,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1084,
            column: 60
          },
          end: {
            line: 1084,
            column: 67
          }
        }],
        line: 1084
      },
      "100": {
        loc: {
          start: {
            line: 1095,
            column: 8
          },
          end: {
            line: 1100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1095,
            column: 8
          },
          end: {
            line: 1100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1095
      },
      "101": {
        loc: {
          start: {
            line: 1101,
            column: 27
          },
          end: {
            line: 1105,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1101,
            column: 48
          },
          end: {
            line: 1103,
            column: 9
          }
        }, {
          start: {
            line: 1103,
            column: 12
          },
          end: {
            line: 1105,
            column: 9
          }
        }],
        line: 1101
      },
      "102": {
        loc: {
          start: {
            line: 1113,
            column: 33
          },
          end: {
            line: 1113,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1113,
            column: 49
          },
          end: {
            line: 1113,
            column: 51
          }
        }],
        line: 1113
      },
      "103": {
        loc: {
          start: {
            line: 1113,
            column: 35
          },
          end: {
            line: 1113,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1113,
            column: 43
          },
          end: {
            line: 1113,
            column: 44
          }
        }],
        line: 1113
      },
      "104": {
        loc: {
          start: {
            line: 1131,
            column: 32
          },
          end: {
            line: 1131,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1131,
            column: 40
          },
          end: {
            line: 1131,
            column: 42
          }
        }],
        line: 1131
      },
      "105": {
        loc: {
          start: {
            line: 1131,
            column: 44
          },
          end: {
            line: 1131,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1131,
            column: 55
          },
          end: {
            line: 1131,
            column: 60
          }
        }],
        line: 1131
      },
      "106": {
        loc: {
          start: {
            line: 1131,
            column: 62
          },
          end: {
            line: 1131,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1131,
            column: 68
          },
          end: {
            line: 1131,
            column: 73
          }
        }],
        line: 1131
      },
      "107": {
        loc: {
          start: {
            line: 1131,
            column: 75
          },
          end: {
            line: 1131,
            column: 90
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1131,
            column: 82
          },
          end: {
            line: 1131,
            column: 90
          }
        }],
        line: 1131
      },
      "108": {
        loc: {
          start: {
            line: 1131,
            column: 92
          },
          end: {
            line: 1131,
            column: 100
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1131,
            column: 99
          },
          end: {
            line: 1131,
            column: 100
          }
        }],
        line: 1131
      },
      "109": {
        loc: {
          start: {
            line: 1135,
            column: 16
          },
          end: {
            line: 1135,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1135,
            column: 16
          },
          end: {
            line: 1135,
            column: 21
          }
        }, {
          start: {
            line: 1135,
            column: 25
          },
          end: {
            line: 1135,
            column: 33
          }
        }],
        line: 1135
      },
      "110": {
        loc: {
          start: {
            line: 1143,
            column: 8
          },
          end: {
            line: 1148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1143,
            column: 8
          },
          end: {
            line: 1148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1143
      },
      "111": {
        loc: {
          start: {
            line: 1143,
            column: 12
          },
          end: {
            line: 1143,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1143,
            column: 12
          },
          end: {
            line: 1143,
            column: 17
          }
        }, {
          start: {
            line: 1143,
            column: 21
          },
          end: {
            line: 1143,
            column: 36
          }
        }],
        line: 1143
      },
      "112": {
        loc: {
          start: {
            line: 1149,
            column: 8
          },
          end: {
            line: 1151,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1149,
            column: 8
          },
          end: {
            line: 1151,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1149
      },
      "113": {
        loc: {
          start: {
            line: 1149,
            column: 12
          },
          end: {
            line: 1149,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1149,
            column: 12
          },
          end: {
            line: 1149,
            column: 20
          }
        }, {
          start: {
            line: 1149,
            column: 24
          },
          end: {
            line: 1149,
            column: 42
          }
        }],
        line: 1149
      },
      "114": {
        loc: {
          start: {
            line: 1152,
            column: 8
          },
          end: {
            line: 1154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1152,
            column: 8
          },
          end: {
            line: 1154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1152
      },
      "115": {
        loc: {
          start: {
            line: 1152,
            column: 12
          },
          end: {
            line: 1152,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1152,
            column: 12
          },
          end: {
            line: 1152,
            column: 15
          }
        }, {
          start: {
            line: 1152,
            column: 19
          },
          end: {
            line: 1152,
            column: 32
          }
        }],
        line: 1152
      },
      "116": {
        loc: {
          start: {
            line: 1155,
            column: 8
          },
          end: {
            line: 1159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1155,
            column: 8
          },
          end: {
            line: 1159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1155
      },
      "117": {
        loc: {
          start: {
            line: 1155,
            column: 12
          },
          end: {
            line: 1155,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1155,
            column: 12
          },
          end: {
            line: 1155,
            column: 18
          }
        }, {
          start: {
            line: 1155,
            column: 22
          },
          end: {
            line: 1155,
            column: 38
          }
        }],
        line: 1155
      },
      "118": {
        loc: {
          start: {
            line: 1160,
            column: 8
          },
          end: {
            line: 1166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1160,
            column: 8
          },
          end: {
            line: 1166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1160
      },
      "119": {
        loc: {
          start: {
            line: 1160,
            column: 12
          },
          end: {
            line: 1160,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1160,
            column: 12
          },
          end: {
            line: 1160,
            column: 17
          }
        }, {
          start: {
            line: 1160,
            column: 21
          },
          end: {
            line: 1160,
            column: 36
          }
        }],
        line: 1160
      },
      "120": {
        loc: {
          start: {
            line: 1167,
            column: 22
          },
          end: {
            line: 1177,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1167,
            column: 48
          },
          end: {
            line: 1169,
            column: 9
          }
        }, {
          start: {
            line: 1169,
            column: 12
          },
          end: {
            line: 1177,
            column: 9
          }
        }],
        line: 1167
      },
      "121": {
        loc: {
          start: {
            line: 1169,
            column: 12
          },
          end: {
            line: 1177,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1169,
            column: 43
          },
          end: {
            line: 1171,
            column: 9
          }
        }, {
          start: {
            line: 1171,
            column: 12
          },
          end: {
            line: 1177,
            column: 9
          }
        }],
        line: 1169
      },
      "122": {
        loc: {
          start: {
            line: 1171,
            column: 12
          },
          end: {
            line: 1177,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1171,
            column: 43
          },
          end: {
            line: 1173,
            column: 9
          }
        }, {
          start: {
            line: 1173,
            column: 12
          },
          end: {
            line: 1177,
            column: 9
          }
        }],
        line: 1171
      },
      "123": {
        loc: {
          start: {
            line: 1173,
            column: 12
          },
          end: {
            line: 1177,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1173,
            column: 45
          },
          end: {
            line: 1175,
            column: 9
          }
        }, {
          start: {
            line: 1175,
            column: 12
          },
          end: {
            line: 1177,
            column: 9
          }
        }],
        line: 1173
      },
      "124": {
        loc: {
          start: {
            line: 1203,
            column: 8
          },
          end: {
            line: 1205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1203,
            column: 8
          },
          end: {
            line: 1205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1203
      },
      "125": {
        loc: {
          start: {
            line: 1203,
            column: 12
          },
          end: {
            line: 1203,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1203,
            column: 12
          },
          end: {
            line: 1203,
            column: 22
          }
        }, {
          start: {
            line: 1203,
            column: 26
          },
          end: {
            line: 1203,
            column: 78
          }
        }],
        line: 1203
      },
      "126": {
        loc: {
          start: {
            line: 1208,
            column: 8
          },
          end: {
            line: 1210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1208,
            column: 8
          },
          end: {
            line: 1210,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1208
      },
      "127": {
        loc: {
          start: {
            line: 1213,
            column: 23
          },
          end: {
            line: 1213,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1213,
            column: 43
          },
          end: {
            line: 1213,
            column: 84
          }
        }, {
          start: {
            line: 1213,
            column: 87
          },
          end: {
            line: 1213,
            column: 96
          }
        }],
        line: 1213
      },
      "128": {
        loc: {
          start: {
            line: 1214,
            column: 23
          },
          end: {
            line: 1214,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 1214,
            column: 43
          },
          end: {
            line: 1214,
            column: 84
          }
        }, {
          start: {
            line: 1214,
            column: 87
          },
          end: {
            line: 1214,
            column: 96
          }
        }],
        line: 1214
      },
      "129": {
        loc: {
          start: {
            line: 1236,
            column: 8
          },
          end: {
            line: 1251,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1236,
            column: 8
          },
          end: {
            line: 1251,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1236
      },
      "130": {
        loc: {
          start: {
            line: 1237,
            column: 12
          },
          end: {
            line: 1243,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1237,
            column: 12
          },
          end: {
            line: 1243,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1237
      },
      "131": {
        loc: {
          start: {
            line: 1244,
            column: 12
          },
          end: {
            line: 1250,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1244,
            column: 12
          },
          end: {
            line: 1250,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1244
      },
      "132": {
        loc: {
          start: {
            line: 1271,
            column: 8
          },
          end: {
            line: 1271,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1271,
            column: 8
          },
          end: {
            line: 1271,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1271
      },
      "133": {
        loc: {
          start: {
            line: 1277,
            column: 57
          },
          end: {
            line: 1277,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1277,
            column: 65
          },
          end: {
            line: 1277,
            column: 66
          }
        }],
        line: 1277
      },
      "134": {
        loc: {
          start: {
            line: 1299,
            column: 67
          },
          end: {
            line: 1299,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1299,
            column: 75
          },
          end: {
            line: 1299,
            column: 76
          }
        }],
        line: 1299
      },
      "135": {
        loc: {
          start: {
            line: 1299,
            column: 78
          },
          end: {
            line: 1299,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1299,
            column: 85
          },
          end: {
            line: 1299,
            column: 86
          }
        }],
        line: 1299
      },
      "136": {
        loc: {
          start: {
            line: 1302,
            column: 16
          },
          end: {
            line: 1302,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1302,
            column: 16
          },
          end: {
            line: 1302,
            column: 21
          }
        }, {
          start: {
            line: 1302,
            column: 25
          },
          end: {
            line: 1302,
            column: 33
          }
        }],
        line: 1302
      },
      "137": {
        loc: {
          start: {
            line: 1356,
            column: 15
          },
          end: {
            line: 1356,
            column: 168
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1356,
            column: 15
          },
          end: {
            line: 1356,
            column: 162
          }
        }, {
          start: {
            line: 1356,
            column: 166
          },
          end: {
            line: 1356,
            column: 168
          }
        }],
        line: 1356
      },
      "138": {
        loc: {
          start: {
            line: 1375,
            column: 45
          },
          end: {
            line: 1375,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1375,
            column: 53
          },
          end: {
            line: 1375,
            column: 55
          }
        }],
        line: 1375
      },
      "139": {
        loc: {
          start: {
            line: 1375,
            column: 57
          },
          end: {
            line: 1375,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1375,
            column: 64
          },
          end: {
            line: 1375,
            column: 65
          }
        }],
        line: 1375
      },
      "140": {
        loc: {
          start: {
            line: 1375,
            column: 67
          },
          end: {
            line: 1375,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1375,
            column: 75
          },
          end: {
            line: 1375,
            column: 77
          }
        }],
        line: 1375
      },
      "141": {
        loc: {
          start: {
            line: 1381,
            column: 8
          },
          end: {
            line: 1408,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1381,
            column: 8
          },
          end: {
            line: 1408,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1381
      },
      "142": {
        loc: {
          start: {
            line: 1433,
            column: 28
          },
          end: {
            line: 1433,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1433,
            column: 28
          },
          end: {
            line: 1433,
            column: 51
          }
        }, {
          start: {
            line: 1433,
            column: 55
          },
          end: {
            line: 1433,
            column: 56
          }
        }],
        line: 1433
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0,
      "394": 0,
      "395": 0,
      "396": 0,
      "397": 0,
      "398": 0,
      "399": 0,
      "400": 0,
      "401": 0,
      "402": 0,
      "403": 0,
      "404": 0,
      "405": 0,
      "406": 0,
      "407": 0,
      "408": 0,
      "409": 0,
      "410": 0,
      "411": 0,
      "412": 0,
      "413": 0,
      "414": 0,
      "415": 0,
      "416": 0,
      "417": 0,
      "418": 0,
      "419": 0,
      "420": 0,
      "421": 0,
      "422": 0,
      "423": 0,
      "424": 0,
      "425": 0,
      "426": 0,
      "427": 0,
      "428": 0,
      "429": 0,
      "430": 0,
      "431": 0,
      "432": 0,
      "433": 0,
      "434": 0,
      "435": 0,
      "436": 0,
      "437": 0,
      "438": 0,
      "439": 0,
      "440": 0,
      "441": 0,
      "442": 0,
      "443": 0,
      "444": 0,
      "445": 0,
      "446": 0,
      "447": 0,
      "448": 0,
      "449": 0,
      "450": 0,
      "451": 0,
      "452": 0,
      "453": 0,
      "454": 0,
      "455": 0,
      "456": 0,
      "457": 0,
      "458": 0,
      "459": 0,
      "460": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0, 0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0, 0],
      "87": [0, 0],
      "88": [0, 0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0, 0],
      "94": [0, 0],
      "95": [0, 0],
      "96": [0],
      "97": [0],
      "98": [0],
      "99": [0],
      "100": [0, 0],
      "101": [0, 0],
      "102": [0],
      "103": [0],
      "104": [0],
      "105": [0],
      "106": [0],
      "107": [0],
      "108": [0],
      "109": [0, 0],
      "110": [0, 0],
      "111": [0, 0],
      "112": [0, 0],
      "113": [0, 0],
      "114": [0, 0],
      "115": [0, 0],
      "116": [0, 0],
      "117": [0, 0],
      "118": [0, 0],
      "119": [0, 0],
      "120": [0, 0],
      "121": [0, 0],
      "122": [0, 0],
      "123": [0, 0],
      "124": [0, 0],
      "125": [0, 0],
      "126": [0, 0],
      "127": [0, 0],
      "128": [0, 0],
      "129": [0, 0],
      "130": [0, 0],
      "131": [0, 0],
      "132": [0, 0],
      "133": [0],
      "134": [0],
      "135": [0],
      "136": [0, 0],
      "137": [0, 0],
      "138": [0],
      "139": [0],
      "140": [0],
      "141": [0, 0],
      "142": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/product.actions.ts"],
      sourcesContent: ["'use server'\n\nimport { connectToDatabase } from '@/lib/db'\nimport Product, { IProduct } from '@/lib/db/models/product.model'\nimport { revalidatePath } from 'next/cache'\nimport { formatError } from '../utils'\nimport { auth } from '@/auth'\nimport { getSetting } from './setting.actions'\nimport mongoose from 'mongoose'\nimport { updateSellerMetrics, getSellerByUserId } from './seller.actions'\nimport { updateWarehouseStock } from './warehouse.actions'\nimport { z } from 'zod'\nimport { ProductInputSchema, ProductUpdateSchema } from '../validator/product.validator'\nimport { WarehouseProvider } from '../services/warehouse/types'\nimport { ShipBobService } from '../services/warehouse/shipbob'\nimport { FourPXService } from '../services/warehouse/fourpx'\n\n// Warehouse providers configuration\nconst warehouseProviders: { [key: string]: WarehouseProvider } = {\n  ShipBob: new ShipBobService({\n    apiKey: process.env.SHIPBOB_API_KEY!,\n    apiUrl: process.env.SHIPBOB_API_URL!,\n  }),\n  '4PX': new FourPXService({\n    apiKey: process.env.FOURPX_API_KEY!,\n    apiUrl: process.env.FOURPX_API_URL!,\n  }),\n}\n\n// Types\ntype ProductSortOption =\n  | 'latest'\n  | 'best-selling'\n  | 'price-low-to-high'\n  | 'price-high-to-low'\n  | 'avg-customer-review'\n\ninterface ProductQueryFilters {\n  search?: string\n  category?: string\n  tag?: string\n  minPrice?: number\n  maxPrice?: number\n  rating?: number\n  status?: 'active' | 'draft' | 'pending' | 'rejected'\n  stock?: number\n}\n\ninterface ProductListResponse {\n  products: IProduct[]\n  totalPages: number\n  totalProducts: number\n  from: number\n  to: number\n}\n\ninterface ProductResponse {\n  success: boolean\n  message: string\n  data?: any\n  metadata?: any\n  code?: string\n}\n\n// Helper Functions\nasync function getCurrentUserInfo() {\n  const session = await auth()\n  if (!session?.user?.id) {\n    throw new Error('Unauthorized')\n  }\n  return {\n    userId: session.user.id,\n    userName: session.user.name || session.user.email || session.user.id,\n    userRole: session.user.role || 'USER',\n  }\n}\n\nasync function logOperation(operation: string, details: any) {\n  const { userName } = await getCurrentUserInfo()\n  console.log(`[${new Date().toISOString()}] \uD83D\uDCDD ${operation}:`, {\n    user: userName,\n    ...details,\n  })\n}\n\nasync function validateSeller(userId: string) {\n  const sellerResponse = await getSellerByUserId(userId)\n  if (!sellerResponse.success || !sellerResponse.data) {\n    throw new Error('Seller account required')\n  }\n  return sellerResponse.data\n}\n\n// GET ALL PRODUCTS FOR ADMIN\nexport async function getAllProductsForAdmin({\n  query = '',\n  page = 1,\n  sort = 'latest',\n  limit,\n}: {\n  query?: string\n  page?: number\n  sort?: string\n  limit?: number\n}): Promise<ProductListResponse> {\n  try {\n    await connectToDatabase()\n\n    const {\n      common: { pageSize },\n    } = await getSetting()\n    limit = limit || pageSize\n\n    const queryFilter: any = {}\n    if (query && query !== 'all') {\n      queryFilter.$or = [\n        { name: { $regex: query, $options: 'i' } },\n        { category: { $regex: query, $options: 'i' } },\n        { brand: { $regex: query, $options: 'i' } },\n        { slug: { $regex: query, $options: 'i' } },\n      ]\n    }\n\n    const sortOptions: Record<string, 1 | -1> =\n      sort === 'best-selling'\n        ? { 'metrics.sales': -1 }\n        : sort === 'price-low-to-high'\n        ? { price: 1 }\n        : sort === 'price-high-to-low'\n        ? { price: -1 }\n        : sort === 'avg-customer-review'\n        ? { avgRating: -1 }\n        : { updatedAt: -1 }\n\n    const skip = (page - 1) * limit\n\n    const [products, totalProducts] = await Promise.all([\n      Product.find(queryFilter)\n        .sort(sortOptions)\n        .skip(skip)\n        .limit(limit)\n        .select({\n          name: 1,\n          slug: 1,\n          price: 1,\n          category: 1,\n          countInStock: 1,\n          isPublished: 1,\n          avgRating: 1,\n          updatedAt: 1,\n          pricing: 1,\n          metrics: 1,\n          status: 1,\n          warehouseData: 1,\n        })\n        .lean(),\n      Product.countDocuments(queryFilter),\n    ])\n\n    const formattedProducts = products.map((product) => ({\n      ...product,\n      metrics: {\n        ...product.metrics,\n        rating: product.metrics?.rating || 0,\n      },\n    }))\n\n    await logOperation('Admin Products List Retrieved', {\n      total: totalProducts,\n      page,\n      limit,\n      sort,\n    })\n\n    return {\n      products: JSON.parse(JSON.stringify(formattedProducts)),\n      totalPages: Math.ceil(totalProducts / limit),\n      totalProducts,\n      from: skip + 1,\n      to: skip + products.length,\n    }\n  } catch (error) {\n    console.error('Error in getAllProductsForAdmin:', error)\n    return {\n      products: [],\n      totalPages: 0,\n      totalProducts: 0,\n      from: 0,\n      to: 0,\n    }\n  }\n}\n\n// CREATE PRODUCT\nexport async function createProduct(data: z.infer<typeof ProductInputSchema>): Promise<ProductResponse> {\n  const session = await mongoose.startSession()\n  session.startTransaction()\n\n  try {\n    const { userId, userName, userRole } = await getCurrentUserInfo()\n    const creationTime = new Date()\n\n    if (userRole !== 'seller' && userRole !== 'Admin') {\n      throw new Error('Only sellers and admins can create products')\n    }\n\n    await connectToDatabase()\n    const seller = await validateSeller(userId)\n\n    await logOperation('Creating Product', {\n      name: data.name,\n      seller: seller.businessName,\n    })\n\n    // Validate input data\n    const validatedData = ProductInputSchema.parse({\n      ...data,\n      sellerId: seller._id,\n    })\n\n    // Check for duplicate slug\n    const existingProduct = await Product.findOne({ slug: validatedData.slug }).session(session)\n    if (existingProduct) {\n      throw new Error('This slug already exists. Please choose a different one.')\n    }\n\n    // Initialize warehouse provider\n    const provider = warehouseProviders[validatedData.warehouse.provider]\n    if (!provider) {\n      throw new Error('Invalid warehouse provider')\n    }\n\n    // Create product in warehouse\n    const warehouseResponse = await provider.createProduct({\n      sku: validatedData.warehouse.sku,\n      name: validatedData.name,\n      description: validatedData.description,\n      quantity: validatedData.warehouseData[0]?.quantity || 0,\n      dimensions: validatedData.warehouse.dimensions,\n      weight: validatedData.warehouse.weight,\n    })\n\n    // Process warehouse data and calculate total stock\n    const processedWarehouseData = validatedData.warehouseData.map((warehouse) => {\n      const totalQuantity = warehouse.colors.reduce((total, color) => {\n        const colorTotal = color.sizes.reduce((sum, size) => sum + size.quantity, 0)\n        color.quantity = colorTotal\n        color.inStock = colorTotal > 0\n        return total + colorTotal\n      }, 0)\n\n      return {\n        ...warehouse,\n        quantity: totalQuantity,\n        lastUpdated: creationTime,\n        updatedBy: userName,\n      }\n    })\n\n    const totalStock = processedWarehouseData.reduce((sum, warehouse) => sum + warehouse.quantity, 0)\n\n    // Combine colors from all warehouses\n    const combinedColors = processedWarehouseData.reduce((allColors: any[], warehouse) => {\n      warehouse.colors.forEach((warehouseColor) => {\n        const existingColor = allColors.find((c) => c.name === warehouseColor.name)\n        if (existingColor) {\n          existingColor.quantity += warehouseColor.quantity\n          existingColor.inStock = existingColor.quantity > 0\n          warehouseColor.sizes.forEach((warehouseSize) => {\n            const existingSize = existingColor.sizes.find((s) => s.name === warehouseSize.name)\n            if (existingSize) {\n              existingSize.quantity += warehouseSize.quantity\n              existingSize.inStock = existingSize.quantity > 0\n            } else {\n              existingColor.sizes.push({ ...warehouseSize })\n            }\n          })\n        } else {\n          allColors.push({\n            ...warehouseColor,\n            sizes: [...warehouseColor.sizes],\n          })\n        }\n      })\n      return allColors\n    }, [])\n\n    // Calculate pricing\n    const basePrice = Number(validatedData.price)\n    const markup = Number(validatedData.pricing?.markup || 30)\n    const commission = seller.subscription.features?.commission || 3\n    const markupAmount = basePrice * (markup / 100)\n    const commissionAmount = basePrice * (commission / 100)\n\n    // Prepare product data\n    const productData = {\n      ...validatedData,\n      name: validatedData.name.trim(),\n      slug: validatedData.slug.trim(),\n      category: validatedData.category.trim(),\n      brand: validatedData.brand.trim(),\n      description: validatedData.description.trim(),\n      price: basePrice,\n      listPrice: Number(validatedData.listPrice) || basePrice,\n      countInStock: totalStock,\n      warehouseData: processedWarehouseData,\n      warehouse: {\n        ...validatedData.warehouse,\n        externalId: warehouseResponse.id,\n      },\n      colors: combinedColors,\n      sizes: ['S', 'M', 'L', 'XL', 'XXL'],\n      isPublished: validatedData.isPublished || false,\n      sellerId: seller._id,\n      seller: {\n        name: seller.businessName,\n        email: seller.email,\n        subscription: seller.subscription.plan,\n      },\n      pricing: {\n        basePrice,\n        markup,\n        profit: markupAmount - commissionAmount,\n        commission: commissionAmount,\n        finalPrice: basePrice + markupAmount,\n        discount: validatedData.pricing?.discount,\n      },\n      metrics: {\n        views: 0,\n        sales: 0,\n        revenue: 0,\n        returns: 0,\n        rating: 0,\n      },\n      status: validatedData.isPublished ? 'pending' : 'draft',\n      inventoryStatus:\n        totalStock === 0\n          ? 'OUT_OF_STOCK'\n          : totalStock <= Math.min(...processedWarehouseData.map((wh) => wh.minimumStock))\n            ? 'LOW_STOCK'\n            : 'IN_STOCK',\n      createdBy: userName,\n      updatedBy: userName,\n      createdAt: creationTime,\n      updatedAt: creationTime,\n    }\n\n    // Create product\n    const product = await Product.create([productData], { session })\n    const createdProduct = product[0]\n\n    // Update warehouse stock\n    await Promise.all(\n      processedWarehouseData.map((warehouse) =>\n        updateWarehouseStock({\n          productId: createdProduct._id,\n          warehouseId: warehouse.warehouseId,\n          quantity: warehouse.quantity,\n          sku: warehouse.sku,\n          location: warehouse.location,\n          minimumStock: warehouse.minimumStock,\n          reorderPoint: warehouse.reorderPoint,\n          colors: warehouse.colors,\n          updatedBy: userName,\n        })\n      )\n    )\n\n    // Update seller metrics\n    await updateSellerMetrics(seller._id, {\n      productsCount: '+1',\n      lastProductCreated: creationTime,\n    })\n\n    await session.commitTransaction()\n\n    revalidatePath('/seller/dashboard/products')\n    revalidatePath('/admin/products')\n    revalidatePath(`/product/${createdProduct.slug}`)\n\n    await logOperation('Product Created Successfully', {\n      productId: createdProduct._id,\n      name: createdProduct.name,\n      totalStock,\n      colorsCount: createdProduct.colors.length,\n    })\n\n    return {\n      success: true,\n      message: 'Product created successfully',\n      data: createdProduct,\n    }\n  } catch (error) {\n    await session.abortTransaction()\n    console.error('Product creation error:', error)\n\n    if (error instanceof Error) {\n      if (error.message.includes('duplicate') || error.message.includes('slug')) {\n        return {\n          success: false,\n          message: 'This slug already exists. Please choose a different one.',\n          code: 'DUPLICATE_SLUG',\n        }\n      }\n      if (error.message.includes('validation failed')) {\n        return {\n          success: false,\n          message: 'Please check that all required fields are filled correctly.',\n          code: 'VALIDATION_ERROR',\n        }\n      }\n      return {\n        success: false,\n        message: error.message,\n        code: 'INTERNAL_ERROR',\n      }\n    }\n\n    return {\n      success: false,\n      message: formatError(error),\n      code: 'INTERNAL_ERROR',\n    }\n  } finally {\n    session.endSession()\n  }\n}\n\n// UPDATE PRODUCT\nexport async function updateProduct(data: z.infer<typeof ProductUpdateSchema>): Promise<ProductResponse> {\n  const session = await mongoose.startSession()\n  session.startTransaction()\n\n  try {\n    const { userId, userName, userRole } = await getCurrentUserInfo()\n    const updateTime = new Date()\n\n    await connectToDatabase()\n\n    // Validate input data\n    const validatedData = ProductUpdateSchema.parse(data)\n\n    // Verify product existence and ownership\n    const existingProduct = await Product.findById(validatedData._id).session(session)\n    if (!existingProduct) {\n      throw new Error('Product not found')\n    }\n\n    // Check authorization\n    if (userRole !== 'Admin' && existingProduct.sellerId.toString() !== userId) {\n      throw new Error('Unauthorized')\n    }\n\n    // Get seller information\n    const seller = await validateSeller(\n      userRole === 'ADMIN' ? existingProduct.sellerId.toString() : userId\n    )\n\n    // Initialize warehouse provider\n    const provider = warehouseProviders[validatedData.warehouse.provider]\n    if (!provider) {\n      throw new Error('Invalid warehouse provider')\n    }\n\n    // Update product in warehouse\n    await provider.updateProduct({\n      externalId: existingProduct.warehouse.externalId,\n      sku: validatedData.warehouse.sku,\n      name: validatedData.name,\n      description: validatedData.description,\n      quantity: validatedData.warehouseData[0]?.quantity || 0,\n      dimensions: validatedData.warehouse.dimensions,\n      weight: validatedData.warehouse.weight,\n    })\n\n    // Process warehouse data and calculate total stock\n    const processedWarehouseData = validatedData.warehouseData.map((warehouse) => {\n      const totalQuantity = warehouse.colors.reduce((total, color) => {\n        const colorTotal = color.sizes.reduce((sum, size) => sum + size.quantity, 0)\n        color.quantity = colorTotal\n        color.inStock = colorTotal > 0\n        return total + colorTotal\n      }, 0)\n\n      return {\n        ...warehouse,\n        quantity: totalQuantity,\n        lastUpdated: updateTime,\n        updatedBy: userName,\n      }\n    })\n\n    const totalStock = processedWarehouseData.reduce((sum, warehouse) => sum + warehouse.quantity, 0)\n\n    // Combine colors from all warehouses\n    const combinedColors = processedWarehouseData.reduce((allColors: any[], warehouse) => {\n      warehouse.colors.forEach((warehouseColor) => {\n        const existingColor = allColors.find((c) => c.name === warehouseColor.name)\n        if (existingColor) {\n          existingColor.quantity += warehouseColor.quantity\n          existingColor.inStock = existingColor.quantity > 0\n          warehouseColor.sizes.forEach((warehouseSize) => {\n            const existingSize = existingColor.sizes.find((s) => s.name === warehouseSize.name)\n            if (existingSize) {\n              existingSize.quantity += warehouseSize.quantity\n              existingSize.inStock = existingSize.quantity > 0\n            } else {\n              existingColor.sizes.push({ ...warehouseSize })\n            }\n          })\n        } else {\n          allColors.push({\n            ...warehouseColor,\n            sizes: [...warehouseColor.sizes],\n          })\n        }\n      })\n      return allColors\n    }, [])\n\n    // Calculate pricing if price or markup changed\n    let pricing = existingProduct.pricing\n    if (\n      validatedData.price !== existingProduct.price ||\n      validatedData.pricing?.markup !== existingProduct.pricing.markup\n    ) {\n      const basePrice = Number(validatedData.price)\n      const markup = Number(validatedData.pricing?.markup || existingProduct.pricing.markup)\n      const commission = seller.subscription.features?.commission || 3\n      const markupAmount = basePrice * (markup / 100)\n      const commissionAmount = basePrice * (commission / 100)\n\n      pricing = {\n        basePrice,\n        markup,\n        profit: markupAmount - commissionAmount,\n        commission: commissionAmount,\n        finalPrice: basePrice + markupAmount,\n        discount: validatedData.pricing?.discount || existingProduct.pricing.discount,\n      }\n    }\n\n    // Check if stock status has changed\n    const isStockStatusChanged =\n      (existingProduct.countInStock > 0 && totalStock === 0) ||\n      (existingProduct.countInStock === 0 && totalStock > 0)\n\n    // Prepare update data\n    const updateData = {\n      ...validatedData,\n      name: validatedData.name.trim(),\n      slug: validatedData.slug.trim(),\n      category: validatedData.category.trim(),\n      brand: validatedData.brand.trim(),\n      description: validatedData.description.trim(),\n      price: Number(validatedData.price),\n      listPrice: Number(validatedData.listPrice) || Number(validatedData.price),\n      countInStock: totalStock,\n      warehouseData: processedWarehouseData,\n      colors: combinedColors,\n      sizes: ['S', 'M', 'L', 'XL', 'XXL'],\n      pricing,\n      status: validatedData.isPublished\n        ? existingProduct.status === 'active'\n          ? 'active'\n          : 'pending'\n        : 'draft',\n      inventoryStatus:\n        totalStock === 0\n          ? 'OUT_OF_STOCK'\n          : totalStock <= Math.min(...processedWarehouseData.map((wh) => wh.minimumStock))\n            ? 'LOW_STOCK'\n            : 'IN_STOCK',\n      updatedAt: updateTime,\n      updatedBy: userName,\n    }\n\n    // Update the product\n    const updatedProduct = await Product.findByIdAndUpdate(validatedData._id, updateData, {\n      new: true,\n      session,\n    })\n\n    // Update warehouse stock\n    await Promise.all(\n      processedWarehouseData.map((warehouse) =>\n        updateWarehouseStock({\n          productId: updatedProduct._id,\n          warehouseId: warehouse.warehouseId,\n          quantity: warehouse.quantity,\n          sku: warehouse.sku,\n          location: warehouse.location,\n          minimumStock: warehouse.minimumStock,\n          reorderPoint: warehouse.reorderPoint,\n          colors: warehouse.colors,\n          updatedBy: userName,\n        })\n      )\n    )\n\n    // Update seller metrics if stock status changed\n    if (isStockStatusChanged) {\n      await updateSellerMetrics(seller._id, {\n        action: totalStock === 0 ? 'product_out_of_stock' : 'product_back_in_stock',\n      })\n    }\n\n    await session.commitTransaction()\n\n    revalidatePath('/seller/dashboard/products')\n    revalidatePath('/admin/products')\n    revalidatePath(`/product/${updatedProduct?.slug}`)\n\n    await logOperation('Product Updated', {\n      productId: updatedProduct?._id,\n      name: updatedProduct?.name,\n      seller: seller.businessName,\n    })\n\n    return {\n      success: true,\n      message: 'Product updated successfully',\n      data: updatedProduct,\n    }\n  } catch (error) {\n    await session.abortTransaction()\n    console.error('Product update error:', error)\n\n    if (error instanceof Error) {\n      if (error.message.includes('Unauthorized')) {\n        return {\n          success: false,\n          message: 'You do not have permission to update this product',\n          code: 'UNAUTHORIZED',\n        }\n      }\n      if (error.message.includes('Product not found')) {\n        return {\n          success: false,\n          message: 'The product you are trying to update does not exist',\n          code: 'NOT_FOUND',\n        }\n      }\n      return {\n        success: false,\n        message: error.message,\n        code: 'INTERNAL_ERROR',\n      }\n    }\n\n    return {\n      success: false,\n      message: formatError(error),\n      code: 'INTERNAL_ERROR',\n    }\n  } finally {\n    session.endSession()\n  }\n}\n\n// DELETE PRODUCT\nexport async function deleteProduct(id: string): Promise<ProductResponse> {\n  const session = await mongoose.startSession()\n  session.startTransaction()\n\n  try {\n    const { userId, userName, userRole } = await getCurrentUserInfo()\n    const deletionTime = new Date()\n\n    await connectToDatabase()\n\n    // Find the product\n    const product = await Product.findById(id).session(session)\n    if (!product) {\n      throw new Error('Product not found')\n    }\n\n    // Check authorization\n    if (userRole !== 'ADMIN' && product.sellerId.toString() !== userId) {\n      throw new Error('Unauthorized')\n    }\n\n    // Initialize warehouse provider\n    const provider = warehouseProviders[product.warehouse.provider]\n    if (!provider) {\n      throw new Error('Invalid warehouse provider')\n    }\n\n    // Delete product from warehouse\n    await provider.deleteProduct(product.warehouse.externalId)\n\n    // Delete the product\n    await Product.findByIdAndDelete(id).session(session)\n\n    // Update seller metrics\n    if (product.sellerId) {\n      await updateSellerMetrics(product.sellerId, {\n        productsCount: '-1',\n        lastUpdated: deletionTime,\n      })\n    }\n\n    await logOperation('Product Deleted', {\n      productId: id,\n      name: product.name,\n      deletedBy: userName,\n      timestamp: deletionTime,\n    })\n\n    await session.commitTransaction()\n\n    revalidatePath('/seller/dashboard/products')\n    revalidatePath('/admin/products')\n    revalidatePath(`/product/${product.slug}`)\n\n    return {\n      success: true,\n      message: 'Product deleted successfully',\n      metadata: {\n        deletedAt: deletionTime,\n        deletedBy: userName,\n        productId: id,\n      },\n    }\n  } catch (error) {\n    await session.abortTransaction()\n    console.error('Delete product error:', {\n      error,\n      productId: id,\n      timestamp: new Date(),\n    })\n\n    if (error instanceof Error) {\n      if (error.message.includes('Unauthorized')) {\n        return {\n          success: false,\n          message: 'You do not have permission to delete this product',\n          code: 'UNAUTHORIZED',\n        }\n      }\n      if (error.message.includes('Product not found')) {\n        return {\n          success: false,\n          message: 'The product you are trying to delete does not exist',\n          code: 'NOT_FOUND',\n        }\n      }\n    }\n\n    return {\n      success: false,\n      message: formatError(error),\n      code: 'INTERNAL_ERROR',\n    }\n  } finally {\n    session.endSession()\n  }\n}\n\n// REVIEW PRODUCT (Admin only)\nexport async function reviewProduct(\n  productId: string,\n  approved: boolean,\n  notes?: string\n): Promise<ProductResponse> {\n  const session = await mongoose.startSession()\n  session.startTransaction()\n\n  try {\n    const { userId, userName, userRole } = await getCurrentUserInfo()\n    if (userRole !== 'ADMIN') {\n      throw new Error('Unauthorized')\n    }\n\n    await connectToDatabase()\n\n    const product = await Product.findById(productId).session(session)\n    if (!product) {\n      throw new Error('Product not found')\n    }\n\n    const updateData = {\n      status: approved ? 'active' : 'rejected',\n      adminReview: {\n        approved,\n        reviewedAt: new Date(),\n        reviewedBy: userId,\n        notes: notes || '',\n      },\n      updatedAt: new Date(),\n      updatedBy: userName,\n    }\n\n    const updatedProduct = await Product.findByIdAndUpdate(productId, updateData, {\n      new: true,\n      session,\n    })\n\n    await session.commitTransaction()\n\n    revalidatePath('/admin/products')\n    revalidatePath('/seller/dashboard/products')\n    if (approved) {\n      revalidatePath(`/product/${product.slug}`)\n    }\n\n    await logOperation(`Product ${approved ? 'Approved' : 'Rejected'}`, {\n      productId,\n      name: product.name,\n      reviewedBy: userName,\n    })\n\n    return {\n      success: true,\n      message: `Product ${approved ? 'approved' : 'rejected'} successfully`,\n      data: updatedProduct,\n    }\n  } catch (error) {\n    await session.abortTransaction()\n    console.error('Product review error:', error)\n    return {\n      success: false,\n      message: formatError(error),\n      code: 'INTERNAL_ERROR',\n    }\n  } finally {\n    session.endSession()\n  }\n}\n\n// SYNC PRODUCT INVENTORY\nexport async function syncProductInventory(productId: string): Promise<ProductResponse> {\n  const session = await mongoose.startSession()\n  session.startTransaction()\n\n  try {\n    const { userId, userName } = await getCurrentUserInfo()\n    const currentDate = new Date()\n\n    await logOperation('Syncing Inventory', {\n      productId,\n    })\n\n    await connectToDatabase()\n\n    // Find existing product\n    const product = await Product.findById(productId).session(session)\n    if (!product) {\n      throw new Error('Product not found')\n    }\n\n    // Verify seller authorization\n    if (product.sellerId.toString() !== userId) {\n      throw new Error('Unauthorized to sync this product')\n    }\n\n    // Initialize warehouse provider\n    const provider = warehouseProviders[product.warehouse.provider]\n    if (!provider) {\n      throw new Error('Invalid warehouse provider')\n    }\n\n    // Get inventory from warehouse\n    const inventory = await provider.getInventory(product.warehouse.sku)\n\n    // Update warehouse data\n    const warehouseData = product.warehouseData.map((wh: any) => {\n      if (wh.sku === product.warehouse.sku) {\n        return {\n          ...wh,\n          quantity: inventory.quantity,\n          location: inventory.location,\n          lastSync: currentDate,\n          lastUpdated: currentDate,\n          updatedBy: userName,\n        }\n      }\n      return wh\n    })\n\n    const totalStock = warehouseData.reduce((sum: number, wh: any) => sum + wh.quantity, 0)\n\n    // Update product in database\n    const updatedProduct = await Product.findByIdAndUpdate(\n      productId,\n      {\n        $set: {\n          warehouseData,\n          countInStock: totalStock,\n          'warehouse.availableQuantity': totalStock,\n          'warehouse.location': inventory.location,\n          'warehouse.lastSync': currentDate,\n          inventoryStatus:\n            totalStock === 0\n              ? 'OUT_OF_STOCK'\n              : totalStock <= Math.min(...warehouseData.map((wh: any) => wh.minimumStock))\n                ? 'LOW_STOCK'\n                : 'IN_STOCK',\n          updatedAt: currentDate,\n          updatedBy: userName,\n        },\n      },\n      { new: true, session }\n    )\n\n    await session.commitTransaction()\n\n    revalidatePath('/admin/products')\n    revalidatePath('/seller/dashboard/products')\n    revalidatePath(`/product/${updatedProduct.slug}`)\n\n    return {\n      success: true,\n      message: 'Inventory synced successfully',\n      data: {\n        inventory,\n        totalStock,\n        lastSync: currentDate,\n      },\n    }\n  } catch (error) {\n    await session.abortTransaction()\n    console.error('Inventory sync error:', error)\n    return {\n      success: false,\n      message: formatError(error),\n      code: 'INTERNAL_ERROR',\n    }\n  } finally {\n    session.endSession()\n  }\n}\n\n// SUBMIT PRODUCT REVIEW\nexport async function submitProductReview({\n  productId,\n  rating,\n  title,\n  comment,\n  isVerifiedPurchase = false,\n}: {\n  productId: string;\n  rating: number;\n  title?: string;\n  comment?: string;\n  isVerifiedPurchase?: boolean;\n}): Promise<ProductResponse> {\n  const session = await mongoose.startSession();\n  session.startTransaction();\n\n  try {\n    const { userId, userName } = await getCurrentUserInfo();\n    await connectToDatabase();\n\n    // Validate input\n    if (!mongoose.Types.ObjectId.isValid(productId)) {\n      throw new Error('Invalid product ID');\n    }\n    if (rating < 1 || rating > 5) {\n      throw new Error('Rating must be between 1 and 5');\n    }\n    if (comment && (comment.length < 10 || comment.length > 500)) {\n      throw new Error('Comment must be between 10 and 500 characters');\n    }\n    if (title && (title.length < 3 || title.length > 100)) {\n      throw new Error('Title must be between 3 and 100 characters');\n    }\n\n    // Find product\n    const product = await Product.findById(productId).session(session);\n    if (!product) {\n      throw new Error('Product not found');\n    }\n\n    // Check if user already reviewed\n    const existingReview = product.reviews.find(\n      (review: any) => review.user.toString() === userId\n    );\n    if (existingReview) {\n      throw new Error('You have already reviewed this product');\n    }\n\n    // Add review\n    const review = {\n      user: userId,\n      name: userName,\n      rating,\n      title: title?.trim(),\n      comment: comment?.trim(),\n      isVerifiedPurchase,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n    product.reviews.push(review);\n\n    // Save product (pre-save hook will update ratingDistribution, metrics.rating, and numReviews)\n    await product.save({ session });\n\n    // Notify seller\n    const seller = await validateSeller(product.sellerId.toString());\n    await sendNotification({\n      userId: product.sellerId.toString(),\n      type: 'product_reviewed',\n      title: 'New Product Review',\n      message: `Your product \"${product.name}\" received a ${rating}-star review${comment ? `: ${comment}` : ''}`,\n      channels: ['email', 'in_app'],\n    });\n\n    await session.commitTransaction();\n\n    revalidatePath(`/product/${product.slug}`);\n\n    await logOperation('Product Review Submitted', {\n      productId,\n      userId,\n      rating,\n      title,\n      comment,\n    });\n\n    return {\n      success: true,\n      message: 'Review submitted successfully',\n      data: review,\n    };\n  } catch (error) {\n    await session.abortTransaction();\n    console.error('Submit review error:', error);\n    if (error instanceof Error) {\n      if (error.message.includes('Invalid product ID')) {\n        return {\n          success: false,\n          message: 'Please provide a valid product ID',\n          code: 'INVALID_ID',\n        };\n      }\n      if (error.message.includes('Product not found')) {\n        return {\n          success: false,\n          message: 'The product you are trying to review does not exist',\n          code: 'NOT_FOUND',\n        };\n      }\n      if (error.message.includes('You have already reviewed')) {\n        return {\n          success: false,\n          message: 'You have already submitted a review for this product',\n          code: 'DUPLICATE_REVIEW',\n        };\n      }\n      return {\n        success: false,\n        message: error.message,\n        code: 'INTERNAL_ERROR',\n      };\n    }\n    return {\n      success: false,\n      message: formatError(error),\n      code: 'INTERNAL_ERROR',\n    };\n  } finally {\n    session.endSession();\n  }\n}\n\n// GET PRODUCT CATEGORIES\nexport async function getProductCategories(limit = 4): Promise<any[]> {\n  try {\n    await connectToDatabase()\n\n    const categories = await Product.aggregate([\n      {\n        $match: {\n          isPublished: true,\n          status: 'active',\n          countInStock: { $gt: 0 },\n        },\n      },\n      {\n        $group: {\n          _id: '$category',\n          productCount: { $sum: 1 },\n          totalSales: { $sum: '$metrics.sales' },\n          image: { $first: '$images' },\n          latestProduct: {\n            $first: {\n              name: '$name',\n              slug: '$slug',\n              images: '$images',\n            },\n          },\n        },\n      },\n      {\n        $sort: {\n          productCount: -1,\n          totalSales: -1,\n        },\n      },\n      {\n        $limit: limit,\n      },\n      {\n        $project: {\n          name: '$_id',\n          image: { $first: '$latestProduct.images' },\n          slug: '$latestProduct.slug',\n          productCount: 1,\n        },\n      },\n    ])\n\n    return JSON.parse(JSON.stringify(categories))\n  } catch (error) {\n    console.error('Error fetching categories:', error)\n    return []\n  }\n}\n\n// GET PRODUCTS FOR CARD\nexport async function getProductsForCard({\n  tag,\n  limit = 4,\n}: {\n  tag: string\n  limit?: number\n}): Promise<\n  {\n    name: string\n    slug: string\n    images: string[]\n    price: number\n    metrics: any\n    href?: string\n    image?: string\n  }[]\n> {\n  try {\n    await connectToDatabase()\n\n    const products = await Product.aggregate([\n      {\n        $match: {\n          tags: { $in: [tag] },\n          isPublished: true,\n          status: 'active',\n          countInStock: { $gt: 0 },\n        },\n      },\n      {\n        $addFields: {\n          href: { $concat: ['/product/', '$slug'] },\n          image: { $arrayElemAt: ['$images', 0] },\n        },\n      },\n      {\n        $project: {\n          name: 1,\n          slug: 1,\n          images: 1,\n          price: 1,\n          metrics: 1,\n          href: 1,\n          image: 1,\n        },\n      },\n      { $sort: { 'metrics.sales': -1, createdAt: -1 } },\n      { $limit: limit },\n    ])\n\n    return JSON.parse(JSON.stringify(products))\n  } catch (error) {\n    console.error('Error fetching products for card:', error)\n    return []\n  }\n}\n\n// GET PRODUCTS BY TAG\nexport async function getProductsByTag({\n  tag,\n  limit = 10,\n  sortBy = 'sales',\n}: {\n  tag: string\n  limit?: number\n  sortBy?: 'sales' | 'createdAt'\n}): Promise<IProduct[]> {\n  try {\n    await connectToDatabase()\n\n    const query: any = {\n      tags: { $in: [tag] },\n      isPublished: true,\n    }\n\n    if (sortBy === 'sales') {\n      query.status = 'active'\n      query.countInStock = { $gt: 0 }\n    }\n\n    const sortOption = sortBy === 'sales' ? { 'metrics.sales': -1 } : { createdAt: -1 }\n\n    const products = await Product.find(query).sort(sortOption).limit(limit).lean()\n\n    return JSON.parse(JSON.stringify(products))\n  } catch (error) {\n    console.error('Error fetching products by tag:', error)\n    return []\n  }\n}\n\n// GET LATEST PRODUCTS\nexport async function getLatestProducts({ limit = 4 }: { limit?: number } = {}): Promise<IProduct[]> {\n  try {\n    await connectToDatabase()\n\n    const products = await Product.find({\n      isPublished: true,\n      status: 'active',\n      countInStock: { $gt: 0 },\n    })\n      .sort({ createdAt: -1 })\n      .limit(limit)\n      .select('name images slug price')\n      .lean()\n\n    return JSON.parse(JSON.stringify(products))\n  } catch (error) {\n    console.error('Error fetching latest products:', error)\n    return []\n  }\n}\n\n// GET ALL PRODUCTS\nexport async function getAllProducts({\n  query = '',\n  category = 'all',\n  tag = 'all',\n  sort = 'latest',\n  page = 1,\n  limit,\n  price,\n  rating,\n}: {\n  query?: string\n  category?: string\n  tag?: string\n  sort?: ProductSortOption | string\n  page?: number\n  limit?: number\n  price?: string\n  rating?: string\n}): Promise<ProductListResponse> {\n  try {\n    await connectToDatabase()\n\n    const {\n      common: { pageSize },\n    } = await getSetting()\n    limit = limit || pageSize\n\n    const queryFilter: any = {\n      isPublished: true,\n      status: 'active',\n      countInStock: { $gt: 0 },\n    }\n\n    if (query && query !== 'all') {\n      queryFilter.name = { $regex: query, $options: 'i' }\n    }\n\n    if (category && category !== 'all') {\n      queryFilter.category = category\n    }\n\n    if (tag && tag !== 'all') {\n      queryFilter.tags = tag\n    }\n\n    if (rating && rating !== 'all') {\n      queryFilter['metrics.rating'] = { $gte: Number(rating) }\n    }\n\n    if (price && price !== 'all') {\n      const [min, max] = price.split('-').map(Number)\n      queryFilter['pricing.finalPrice'] = {\n        $gte: min,\n        $lte: max,\n      }\n    }\n\n    const order: Record<string, 1 | -1> =\n      sort === 'best-selling'\n        ? { 'metrics.sales': -1 }\n        : sort === 'price-low-to-high'\n        ? { 'pricing.finalPrice': 1 }\n        : sort === 'price-high-to-low'\n        ? { 'pricing.finalPrice': -1 }\n        : sort === 'avg-customer-review'\n        ? { 'metrics.rating': -1 }\n        : { createdAt: -1 }\n\n    const skip = limit * (Number(page) - 1)\n\n    const [products, totalProducts] = await Promise.all([\n      Product.find(queryFilter).sort(order).skip(skip).limit(limit).lean(),\n      Product.countDocuments(queryFilter),\n    ])\n\n    return {\n      products: JSON.parse(JSON.stringify(products)) as IProduct[],\n      totalPages: Math.ceil(totalProducts / limit),\n      totalProducts,\n      from: skip + 1,\n      to: skip + products.length,\n    }\n  } catch (error) {\n    console.error('Error fetching products:', error)\n    return {\n      products: [],\n      totalPages: 0,\n      totalProducts: 0,\n      from: 0,\n      to: 0,\n    }\n  }\n}\n\n// GET PRODUCT BY ID\nexport async function getProductById(productId: string): Promise<ProductResponse> {\n  try {\n    if (!productId || !mongoose.Types.ObjectId.isValid(productId)) {\n      throw new Error('Invalid product ID')\n    }\n\n    await connectToDatabase()\n\n    const product = await Product.findById(productId).lean().select('-__v').exec()\n\n    if (!product) {\n      throw new Error('Product not found')\n    }\n\n    const formattedProduct = {\n      ...product,\n      createdAt: product.createdAt ? new Date(product.createdAt).toISOString() : undefined,\n      updatedAt: product.updatedAt ? new Date(product.updatedAt).toISOString() : undefined,\n    }\n\n    const { userName } = await getCurrentUserInfo()\n    await logOperation('Product Accessed', {\n      productId,\n      timestamp: new Date(),\n      accessedBy: userName,\n    })\n\n    return {\n      success: true,\n      data: JSON.parse(JSON.stringify(formattedProduct)) as IProduct,\n      metadata: {\n        accessed: new Date().toISOString(),\n        by: userName,\n      },\n    }\n  } catch (error) {\n    console.error('Error fetching product:', {\n      productId,\n      error,\n      timestamp: new Date(),\n    })\n\n    if (error instanceof Error) {\n      if (error.message.includes('Invalid product ID')) {\n        return {\n          success: false,\n          message: 'Please provide a valid product ID',\n          code: 'INVALID_ID',\n        }\n      }\n      if (error.message.includes('Product not found')) {\n        return {\n          success: false,\n          message: 'The requested product does not exist',\n          code: 'NOT_FOUND',\n        }\n      }\n    }\n\n    return {\n      success: false,\n      message: formatError(error),\n      code: 'INTERNAL_ERROR',\n      metadata: {\n        timestamp: new Date().toISOString(),\n        requestedId: productId,\n      },\n    }\n  }\n}\n\n// GET PRODUCT BY SLUG\nexport async function getProductBySlug(slug: string): Promise<IProduct> {\n  try {\n    await connectToDatabase()\n    const product = await Product.findOne({\n      slug,\n      isPublished: true,\n      status: 'active',\n    }).lean()\n\n    if (!product) throw new Error('Product not found')\n\n    return JSON.parse(JSON.stringify(product)) as IProduct\n  } catch (error) {\n    throw new Error(formatError(error))\n  }\n}\n\n// GET RELATED PRODUCTS\nexport async function getRelatedProducts({\n  category,\n  productId,\n  limit = 4,\n}: {\n  category: string\n  productId: string\n  limit?: number\n}): Promise<IProduct[]> {\n  try {\n    await connectToDatabase()\n\n    const products = await Product.find({\n      _id: { $ne: productId },\n      category,\n      isPublished: true,\n      status: 'active',\n      countInStock: { $gt: 0 },\n    })\n      .sort({ 'metrics.sales': -1 })\n      .limit(limit)\n      .select('name images slug price')\n      .lean()\n\n    return JSON.parse(JSON.stringify(products))\n  } catch (error) {\n    console.error('Error fetching related products:', error)\n    return []\n  }\n}\n\n// GET RELATED PRODUCTS BY CATEGORY\nexport async function getRelatedProductsByCategory({\n  category,\n  productId,\n  limit = 4,\n  page = 1,\n}: {\n  category: string\n  productId: string\n  limit?: number\n  page: number\n}): Promise<{ data: IProduct[]; totalPages: number }> {\n  try {\n    const {\n      common: { pageSize },\n    } = await getSetting()\n\n    limit = limit || pageSize\n    await connectToDatabase()\n\n    const skipAmount = (Number(page) - 1) * limit\n    const conditions = {\n      isPublished: true,\n      category,\n      _id: { $ne: productId },\n    }\n\n    const products = await Product.find(conditions)\n      .sort({ 'metrics.sales': -1 })\n      .skip(skipAmount)\n      .limit(limit)\n      .lean()\n\n    const productsCount = await Product.countDocuments(conditions)\n\n    return {\n      data: JSON.parse(JSON.stringify(products)) as IProduct[],\n      totalPages: Math.ceil(productsCount / limit),\n    }\n  } catch (error) {\n    console.error('Error fetching related products:', error)\n    return { data: [], totalPages: 0 }\n  }\n}\n\n// GET ALL TAGS\nexport async function getAllTags(): Promise<string[]> {\n  try {\n    await connectToDatabase()\n\n    const tags = await Product.aggregate([\n      {\n        $match: {\n          isPublished: true,\n          status: 'active',\n        },\n      },\n      { $unwind: '$tags' },\n      { $group: { _id: null, uniqueTags: { $addToSet: '$tags' } } },\n      { $project: { _id: 0, uniqueTags: 1 } },\n    ])\n\n    return (\n      tags[0]?.uniqueTags\n        .sort((a: string, b: string) => a.localeCompare(b))\n        .map((tag: string) =>\n          tag\n            .split('-')\n            .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ')\n        ) || []\n    )\n  } catch (error) {\n    console.error('Error fetching tags:', error)\n    return []\n  }\n}\n\n// GET ALL CATEGORIES\nexport async function getAllCategories(): Promise<string[]> {\n  try {\n    await connectToDatabase()\n\n    const categories = await Product.find({\n      isPublished: true,\n      status: 'active',\n    }).distinct('category')\n\n    return categories\n  } catch (error) {\n    console.error('Error fetching categories:', error)\n    return []\n  }\n}\n\n// GET ALL PRODUCTS FOR A SPECIFIC SELLER\nexport async function getSellerProducts({\n  sellerId,\n  query = '',\n  page = 1,\n  limit = 10,\n}: {\n  sellerId: string\n  query?: string\n  page?: number\n  limit?: number\n}): Promise<ProductListResponse> {\n  try {\n    await connectToDatabase()\n\n    const queryFilter: any = { sellerId }\n    if (query) {\n      queryFilter.$or = [\n        { name: { $regex: query, $options: 'i' } },\n        { category: { $regex: query, $options: 'i' } },\n        { brand: { $regex: query, $options: 'i' } },\n        { slug: { $regex: query, $options: 'i' } },\n      ]\n    }\n\n    const skip = (page - 1) * limit\n\n    const [products, totalProducts] = await Promise.all([\n      Product.find(queryFilter)\n        .sort({ updatedAt: -1 })\n        .skip(skip)\n        .limit(limit)\n        .select({\n          name: 1,\n          slug: 1,\n          price: 1,\n          category: 1,\n          countInStock: 1,\n          isPublished: 1,\n          avgRating: 1,\n          updatedAt: 1,\n          pricing: 1,\n          metrics: 1,\n          status: 1,\n          warehouseData: 1,\n        })\n        .lean(),\n      Product.countDocuments(queryFilter),\n    ])\n\n    const formattedProducts = products.map((product) => ({\n      ...product,\n      metrics: {\n        ...product.metrics,\n        rating: product.metrics?.rating || 0,\n      },\n    }))\n\n    await logOperation('Seller Products List Retrieved', {\n      sellerId,\n      total: totalProducts,\n      page,\n      limit,\n    })\n\n    return {\n      products: JSON.parse(JSON.stringify(formattedProducts)),\n      totalPages: Math.ceil(totalProducts / limit),\n      totalProducts,\n      from: skip + 1,\n      to: skip + products.length,\n    }\n  } catch (error) {\n    console.error('Error in getSellerProducts:', error)\n    return {\n      products: [],\n      totalPages: 0,\n      totalProducts: 0,\n      from: 0,\n      to: 0,\n    }\n  }\n}"],
      names: ["createProduct", "deleteProduct", "getAllCategories", "getAllProducts", "getAllProductsForAdmin", "getAllTags", "getLatestProducts", "getProductById", "getProductBySlug", "getProductCategories", "getProductsByTag", "getProductsForCard", "getRelatedProducts", "getRelatedProductsByCategory", "getSellerProducts", "reviewProduct", "submitProductReview", "syncProductInventory", "updateProduct", "warehouseProviders", "ShipBob", "ShipBobService", "apiKey", "process", "env", "SHIPBOB_API_KEY", "apiUrl", "SHIPBOB_API_URL", "FourPXService", "FOURPX_API_KEY", "FOURPX_API_URL", "getCurrentUserInfo", "session", "auth", "user", "id", "Error", "userId", "userName", "name", "email", "userRole", "role", "logOperation", "operation", "details", "console", "log", "Date", "toISOString", "validateSeller", "sellerResponse", "getSellerByUserId", "success", "data", "query", "page", "sort", "limit", "connectToDatabase", "common", "pageSize", "getSetting", "queryFilter", "$or", "$regex", "$options", "category", "brand", "slug", "sortOptions", "price", "avgRating", "updatedAt", "skip", "products", "totalProducts", "Promise", "all", "Product", "find", "select", "countInStock", "isPublished", "pricing", "metrics", "status", "warehouseData", "lean", "countDocuments", "formattedProducts", "map", "product", "rating", "total", "JSON", "parse", "stringify", "totalPages", "Math", "ceil", "from", "to", "length", "error", "mongoose", "startSession", "startTransaction", "creationTime", "seller", "businessName", "validatedData", "ProductInputSchema", "sellerId", "_id", "existingProduct", "findOne", "provider", "warehouse", "warehouseResponse", "sku", "description", "quantity", "dimensions", "weight", "processedWarehouseData", "totalQuantity", "colors", "reduce", "color", "colorTotal", "sizes", "sum", "size", "inStock", "lastUpdated", "updatedBy", "totalStock", "combinedColors", "allColors", "forEach", "warehouseColor", "existingColor", "c", "warehouseSize", "existingSize", "s", "push", "basePrice", "Number", "markup", "commission", "subscription", "features", "markupAmount", "commissionAmount", "productData", "trim", "listPrice", "externalId", "plan", "profit", "finalPrice", "discount", "views", "sales", "revenue", "returns", "inventoryStatus", "min", "wh", "minimumStock", "createdBy", "createdAt", "create", "createdProduct", "updateWarehouseStock", "productId", "warehouseId", "location", "reorderPoint", "updateSellerMetrics", "productsCount", "lastProductCreated", "commitTransaction", "revalidatePath", "colorsCount", "message", "abortTransaction", "includes", "code", "formatError", "endSession", "updateTime", "ProductUpdateSchema", "findById", "toString", "isStockStatusChanged", "updateData", "updatedProduct", "findByIdAndUpdate", "new", "action", "deletionTime", "findByIdAndDelete", "deletedBy", "timestamp", "metadata", "deletedAt", "approved", "notes", "adminReview", "reviewedAt", "reviewedBy", "currentDate", "inventory", "getInventory", "lastSync", "$set", "title", "comment", "isVerifiedPurchase", "Types", "ObjectId", "isValid", "existingReview", "reviews", "review", "save", "sendNotification", "type", "channels", "categories", "aggregate", "$match", "$gt", "$group", "productCount", "$sum", "totalSales", "image", "$first", "latestProduct", "images", "$sort", "$limit", "$project", "tag", "tags", "$in", "$addFields", "href", "$concat", "$arrayElemAt", "sortBy", "sortOption", "$gte", "max", "split", "$lte", "order", "exec", "formattedProduct", "undefined", "accessedBy", "accessed", "by", "requestedId", "$ne", "skipAmount", "conditions", "$unwind", "uniqueTags", "$addToSet", "a", "b", "localeCompare", "word", "charAt", "toUpperCase", "slice", "join", "distinct"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4da2ff7124c2e80afecb84928e0d9f4ac013ed1f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1y8lmtzck3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1y8lmtzck3();
cov_1y8lmtzck3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[0]++;
  cov_1y8lmtzck3().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_1y8lmtzck3().s[3]++;
_export(exports, {
  createProduct: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[1]++;
    cov_1y8lmtzck3().s[4]++;
    return createProduct;
  },
  deleteProduct: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[2]++;
    cov_1y8lmtzck3().s[5]++;
    return deleteProduct;
  },
  getAllCategories: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[3]++;
    cov_1y8lmtzck3().s[6]++;
    return getAllCategories;
  },
  getAllProducts: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[4]++;
    cov_1y8lmtzck3().s[7]++;
    return getAllProducts;
  },
  getAllProductsForAdmin: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[5]++;
    cov_1y8lmtzck3().s[8]++;
    return getAllProductsForAdmin;
  },
  getAllTags: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[6]++;
    cov_1y8lmtzck3().s[9]++;
    return getAllTags;
  },
  getLatestProducts: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[7]++;
    cov_1y8lmtzck3().s[10]++;
    return getLatestProducts;
  },
  getProductById: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[8]++;
    cov_1y8lmtzck3().s[11]++;
    return getProductById;
  },
  getProductBySlug: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[9]++;
    cov_1y8lmtzck3().s[12]++;
    return getProductBySlug;
  },
  getProductCategories: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[10]++;
    cov_1y8lmtzck3().s[13]++;
    return getProductCategories;
  },
  getProductsByTag: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[11]++;
    cov_1y8lmtzck3().s[14]++;
    return getProductsByTag;
  },
  getProductsForCard: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[12]++;
    cov_1y8lmtzck3().s[15]++;
    return getProductsForCard;
  },
  getRelatedProducts: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[13]++;
    cov_1y8lmtzck3().s[16]++;
    return getRelatedProducts;
  },
  getRelatedProductsByCategory: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[14]++;
    cov_1y8lmtzck3().s[17]++;
    return getRelatedProductsByCategory;
  },
  getSellerProducts: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[15]++;
    cov_1y8lmtzck3().s[18]++;
    return getSellerProducts;
  },
  reviewProduct: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[16]++;
    cov_1y8lmtzck3().s[19]++;
    return reviewProduct;
  },
  submitProductReview: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[17]++;
    cov_1y8lmtzck3().s[20]++;
    return submitProductReview;
  },
  syncProductInventory: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[18]++;
    cov_1y8lmtzck3().s[21]++;
    return syncProductInventory;
  },
  updateProduct: function () {
    /* istanbul ignore next */
    cov_1y8lmtzck3().f[19]++;
    cov_1y8lmtzck3().s[22]++;
    return updateProduct;
  }
});
const _db =
/* istanbul ignore next */
(cov_1y8lmtzck3().s[23]++, require("../db"));
const _productmodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_1y8lmtzck3().s[24]++, _interop_require_default(require("../db/models/product.model")));
const _cache =
/* istanbul ignore next */
(cov_1y8lmtzck3().s[25]++, require("next/cache"));
const _utils =
/* istanbul ignore next */
(cov_1y8lmtzck3().s[26]++, require("../utils"));
const _auth =
/* istanbul ignore next */
(cov_1y8lmtzck3().s[27]++, require("../../auth"));
const _settingactions =
/* istanbul ignore next */
(cov_1y8lmtzck3().s[28]++, require("./setting.actions"));
const _mongoose =
/* istanbul ignore next */
(/*#__PURE__*/cov_1y8lmtzck3().s[29]++, _interop_require_default(require("mongoose")));
const _selleractions =
/* istanbul ignore next */
(cov_1y8lmtzck3().s[30]++, require("./seller.actions"));
const _warehouseactions =
/* istanbul ignore next */
(cov_1y8lmtzck3().s[31]++, require("./warehouse.actions"));
const _productvalidator =
/* istanbul ignore next */
(cov_1y8lmtzck3().s[32]++, require("../validator/product.validator"));
const _shipbob =
/* istanbul ignore next */
(cov_1y8lmtzck3().s[33]++, require("../services/warehouse/shipbob"));
const _fourpx =
/* istanbul ignore next */
(cov_1y8lmtzck3().s[34]++, require("../services/warehouse/fourpx"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[20]++;
  cov_1y8lmtzck3().s[35]++;
  return /* istanbul ignore next */(cov_1y8lmtzck3().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[0][1]++, {
    default: obj
  });
}
// Warehouse providers configuration
const warehouseProviders =
/* istanbul ignore next */
(cov_1y8lmtzck3().s[36]++, {
  ShipBob: new _shipbob.ShipBobService({
    apiKey: process.env.SHIPBOB_API_KEY,
    apiUrl: process.env.SHIPBOB_API_URL
  }),
  '4PX': new _fourpx.FourPXService({
    apiKey: process.env.FOURPX_API_KEY,
    apiUrl: process.env.FOURPX_API_URL
  })
});
// Helper Functions
async function getCurrentUserInfo() {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[21]++;
  const session =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().s[37]++, await (0, _auth.auth)());
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[38]++;
  if (!session?.user?.id) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().b[2][0]++;
    cov_1y8lmtzck3().s[39]++;
    throw new Error('Unauthorized');
  } else
  /* istanbul ignore next */
  {
    cov_1y8lmtzck3().b[2][1]++;
  }
  cov_1y8lmtzck3().s[40]++;
  return {
    userId: session.user.id,
    userName:
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[3][0]++, session.user.name) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[3][1]++, session.user.email) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[3][2]++, session.user.id),
    userRole:
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[4][0]++, session.user.role) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[4][1]++, 'USER')
  };
}
async function logOperation(operation, details) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[22]++;
  const {
    userName
  } =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().s[41]++, await getCurrentUserInfo());
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[42]++;
  console.log(`[${new Date().toISOString()}] 📝 ${operation}:`, {
    user: userName,
    ...details
  });
}
async function validateSeller(userId) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[23]++;
  const sellerResponse =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().s[43]++, await (0, _selleractions.getSellerByUserId)(userId));
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[44]++;
  if (
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[6][0]++, !sellerResponse.success) ||
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[6][1]++, !sellerResponse.data)) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().b[5][0]++;
    cov_1y8lmtzck3().s[45]++;
    throw new Error('Seller account required');
  } else
  /* istanbul ignore next */
  {
    cov_1y8lmtzck3().b[5][1]++;
  }
  cov_1y8lmtzck3().s[46]++;
  return sellerResponse.data;
}
async function getAllProductsForAdmin({
  query =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[7][0]++, ''),
  page =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[8][0]++, 1),
  sort =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[9][0]++, 'latest'),
  limit
}) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[24]++;
  cov_1y8lmtzck3().s[47]++;
  try {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[48]++;
    await (0, _db.connectToDatabase)();
    const {
      common: {
        pageSize
      }
    } =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[49]++, await (0, _settingactions.getSetting)());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[50]++;
    limit =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[10][0]++, limit) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[10][1]++, pageSize);
    const queryFilter =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[51]++, {});
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[12][0]++, query) &&
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[12][1]++, query !== 'all')) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[11][0]++;
      cov_1y8lmtzck3().s[53]++;
      queryFilter.$or = [{
        name: {
          $regex: query,
          $options: 'i'
        }
      }, {
        category: {
          $regex: query,
          $options: 'i'
        }
      }, {
        brand: {
          $regex: query,
          $options: 'i'
        }
      }, {
        slug: {
          $regex: query,
          $options: 'i'
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[11][1]++;
    }
    const sortOptions =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[54]++, sort === 'best-selling' ?
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[13][0]++, {
      'metrics.sales': -1
    }) :
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[13][1]++, sort === 'price-low-to-high' ?
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[14][0]++, {
      price: 1
    }) :
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[14][1]++, sort === 'price-high-to-low' ?
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[15][0]++, {
      price: -1
    }) :
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[15][1]++, sort === 'avg-customer-review' ?
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[16][0]++, {
      avgRating: -1
    }) :
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[16][1]++, {
      updatedAt: -1
    })))));
    const skip =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[55]++, (page - 1) * limit);
    const [products, totalProducts] =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[56]++, await Promise.all([_productmodel.default.find(queryFilter).sort(sortOptions).skip(skip).limit(limit).select({
      name: 1,
      slug: 1,
      price: 1,
      category: 1,
      countInStock: 1,
      isPublished: 1,
      avgRating: 1,
      updatedAt: 1,
      pricing: 1,
      metrics: 1,
      status: 1,
      warehouseData: 1
    }).lean(), _productmodel.default.countDocuments(queryFilter)]));
    const formattedProducts =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[57]++, products.map(product => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[25]++;
      cov_1y8lmtzck3().s[58]++;
      return {
        ...product,
        metrics: {
          ...product.metrics,
          rating:
          /* istanbul ignore next */
          (cov_1y8lmtzck3().b[17][0]++, product.metrics?.rating) ||
          /* istanbul ignore next */
          (cov_1y8lmtzck3().b[17][1]++, 0)
        }
      };
    }));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[59]++;
    await logOperation('Admin Products List Retrieved', {
      total: totalProducts,
      page,
      limit,
      sort
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[60]++;
    return {
      products: JSON.parse(JSON.stringify(formattedProducts)),
      totalPages: Math.ceil(totalProducts / limit),
      totalProducts,
      from: skip + 1,
      to: skip + products.length
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[61]++;
    console.error('Error in getAllProductsForAdmin:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[62]++;
    return {
      products: [],
      totalPages: 0,
      totalProducts: 0,
      from: 0,
      to: 0
    };
  }
}
async function createProduct(data) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[26]++;
  const session =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().s[63]++, await _mongoose.default.startSession());
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[64]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[65]++;
  try {
    const {
      userId,
      userName,
      userRole
    } =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[66]++, await getCurrentUserInfo());
    const creationTime =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[67]++, new Date());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[68]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[19][0]++, userRole !== 'seller') &&
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[19][1]++, userRole !== 'Admin')) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[18][0]++;
      cov_1y8lmtzck3().s[69]++;
      throw new Error('Only sellers and admins can create products');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[18][1]++;
    }
    cov_1y8lmtzck3().s[70]++;
    await (0, _db.connectToDatabase)();
    const seller =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[71]++, await validateSeller(userId));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[72]++;
    await logOperation('Creating Product', {
      name: data.name,
      seller: seller.businessName
    });
    // Validate input data
    const validatedData =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[73]++, _productvalidator.ProductInputSchema.parse({
      ...data,
      sellerId: seller._id
    }));
    // Check for duplicate slug
    const existingProduct =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[74]++, await _productmodel.default.findOne({
      slug: validatedData.slug
    }).session(session));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[75]++;
    if (existingProduct) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[20][0]++;
      cov_1y8lmtzck3().s[76]++;
      throw new Error('This slug already exists. Please choose a different one.');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[20][1]++;
    }
    // Initialize warehouse provider
    const provider =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[77]++, warehouseProviders[validatedData.warehouse.provider]);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[78]++;
    if (!provider) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[21][0]++;
      cov_1y8lmtzck3().s[79]++;
      throw new Error('Invalid warehouse provider');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[21][1]++;
    }
    // Create product in warehouse
    const warehouseResponse =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[80]++, await provider.createProduct({
      sku: validatedData.warehouse.sku,
      name: validatedData.name,
      description: validatedData.description,
      quantity:
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[22][0]++, validatedData.warehouseData[0]?.quantity) ||
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[22][1]++, 0),
      dimensions: validatedData.warehouse.dimensions,
      weight: validatedData.warehouse.weight
    }));
    // Process warehouse data and calculate total stock
    const processedWarehouseData =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[81]++, validatedData.warehouseData.map(warehouse => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[27]++;
      const totalQuantity =
      /* istanbul ignore next */
      (cov_1y8lmtzck3().s[82]++, warehouse.colors.reduce((total, color) => {
        /* istanbul ignore next */
        cov_1y8lmtzck3().f[28]++;
        const colorTotal =
        /* istanbul ignore next */
        (cov_1y8lmtzck3().s[83]++, color.sizes.reduce((sum, size) => {
          /* istanbul ignore next */
          cov_1y8lmtzck3().f[29]++;
          cov_1y8lmtzck3().s[84]++;
          return sum + size.quantity;
        }, 0));
        /* istanbul ignore next */
        cov_1y8lmtzck3().s[85]++;
        color.quantity = colorTotal;
        /* istanbul ignore next */
        cov_1y8lmtzck3().s[86]++;
        color.inStock = colorTotal > 0;
        /* istanbul ignore next */
        cov_1y8lmtzck3().s[87]++;
        return total + colorTotal;
      }, 0));
      /* istanbul ignore next */
      cov_1y8lmtzck3().s[88]++;
      return {
        ...warehouse,
        quantity: totalQuantity,
        lastUpdated: creationTime,
        updatedBy: userName
      };
    }));
    const totalStock =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[89]++, processedWarehouseData.reduce((sum, warehouse) => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[30]++;
      cov_1y8lmtzck3().s[90]++;
      return sum + warehouse.quantity;
    }, 0));
    // Combine colors from all warehouses
    const combinedColors =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[91]++, processedWarehouseData.reduce((allColors, warehouse) => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[31]++;
      cov_1y8lmtzck3().s[92]++;
      warehouse.colors.forEach(warehouseColor => {
        /* istanbul ignore next */
        cov_1y8lmtzck3().f[32]++;
        const existingColor =
        /* istanbul ignore next */
        (cov_1y8lmtzck3().s[93]++, allColors.find(c => {
          /* istanbul ignore next */
          cov_1y8lmtzck3().f[33]++;
          cov_1y8lmtzck3().s[94]++;
          return c.name === warehouseColor.name;
        }));
        /* istanbul ignore next */
        cov_1y8lmtzck3().s[95]++;
        if (existingColor) {
          /* istanbul ignore next */
          cov_1y8lmtzck3().b[23][0]++;
          cov_1y8lmtzck3().s[96]++;
          existingColor.quantity += warehouseColor.quantity;
          /* istanbul ignore next */
          cov_1y8lmtzck3().s[97]++;
          existingColor.inStock = existingColor.quantity > 0;
          /* istanbul ignore next */
          cov_1y8lmtzck3().s[98]++;
          warehouseColor.sizes.forEach(warehouseSize => {
            /* istanbul ignore next */
            cov_1y8lmtzck3().f[34]++;
            const existingSize =
            /* istanbul ignore next */
            (cov_1y8lmtzck3().s[99]++, existingColor.sizes.find(s => {
              /* istanbul ignore next */
              cov_1y8lmtzck3().f[35]++;
              cov_1y8lmtzck3().s[100]++;
              return s.name === warehouseSize.name;
            }));
            /* istanbul ignore next */
            cov_1y8lmtzck3().s[101]++;
            if (existingSize) {
              /* istanbul ignore next */
              cov_1y8lmtzck3().b[24][0]++;
              cov_1y8lmtzck3().s[102]++;
              existingSize.quantity += warehouseSize.quantity;
              /* istanbul ignore next */
              cov_1y8lmtzck3().s[103]++;
              existingSize.inStock = existingSize.quantity > 0;
            } else {
              /* istanbul ignore next */
              cov_1y8lmtzck3().b[24][1]++;
              cov_1y8lmtzck3().s[104]++;
              existingColor.sizes.push({
                ...warehouseSize
              });
            }
          });
        } else {
          /* istanbul ignore next */
          cov_1y8lmtzck3().b[23][1]++;
          cov_1y8lmtzck3().s[105]++;
          allColors.push({
            ...warehouseColor,
            sizes: [...warehouseColor.sizes]
          });
        }
      });
      /* istanbul ignore next */
      cov_1y8lmtzck3().s[106]++;
      return allColors;
    }, []));
    // Calculate pricing
    const basePrice =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[107]++, Number(validatedData.price));
    const markup =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[108]++, Number(
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[25][0]++, validatedData.pricing?.markup) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[25][1]++, 30)));
    const commission =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[109]++,
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[26][0]++, seller.subscription.features?.commission) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[26][1]++, 3));
    const markupAmount =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[110]++, basePrice * (markup / 100));
    const commissionAmount =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[111]++, basePrice * (commission / 100));
    // Prepare product data
    const productData =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[112]++, {
      ...validatedData,
      name: validatedData.name.trim(),
      slug: validatedData.slug.trim(),
      category: validatedData.category.trim(),
      brand: validatedData.brand.trim(),
      description: validatedData.description.trim(),
      price: basePrice,
      listPrice:
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[27][0]++, Number(validatedData.listPrice)) ||
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[27][1]++, basePrice),
      countInStock: totalStock,
      warehouseData: processedWarehouseData,
      warehouse: {
        ...validatedData.warehouse,
        externalId: warehouseResponse.id
      },
      colors: combinedColors,
      sizes: ['S', 'M', 'L', 'XL', 'XXL'],
      isPublished:
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[28][0]++, validatedData.isPublished) ||
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[28][1]++, false),
      sellerId: seller._id,
      seller: {
        name: seller.businessName,
        email: seller.email,
        subscription: seller.subscription.plan
      },
      pricing: {
        basePrice,
        markup,
        profit: markupAmount - commissionAmount,
        commission: commissionAmount,
        finalPrice: basePrice + markupAmount,
        discount: validatedData.pricing?.discount
      },
      metrics: {
        views: 0,
        sales: 0,
        revenue: 0,
        returns: 0,
        rating: 0
      },
      status: validatedData.isPublished ?
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[29][0]++, 'pending') :
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[29][1]++, 'draft'),
      inventoryStatus: totalStock === 0 ?
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[30][0]++, 'OUT_OF_STOCK') :
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[30][1]++, totalStock <= Math.min(...processedWarehouseData.map(wh => {
        /* istanbul ignore next */
        cov_1y8lmtzck3().f[36]++;
        cov_1y8lmtzck3().s[113]++;
        return wh.minimumStock;
      })) ?
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[31][0]++, 'LOW_STOCK') :
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[31][1]++, 'IN_STOCK')),
      createdBy: userName,
      updatedBy: userName,
      createdAt: creationTime,
      updatedAt: creationTime
    });
    // Create product
    const product =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[114]++, await _productmodel.default.create([productData], {
      session
    }));
    const createdProduct =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[115]++, product[0]);
    // Update warehouse stock
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[116]++;
    await Promise.all(processedWarehouseData.map(warehouse => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[37]++;
      cov_1y8lmtzck3().s[117]++;
      return (0, _warehouseactions.updateWarehouseStock)({
        productId: createdProduct._id,
        warehouseId: warehouse.warehouseId,
        quantity: warehouse.quantity,
        sku: warehouse.sku,
        location: warehouse.location,
        minimumStock: warehouse.minimumStock,
        reorderPoint: warehouse.reorderPoint,
        colors: warehouse.colors,
        updatedBy: userName
      });
    }));
    // Update seller metrics
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[118]++;
    await (0, _selleractions.updateSellerMetrics)(seller._id, {
      productsCount: '+1',
      lastProductCreated: creationTime
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[119]++;
    await session.commitTransaction();
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[120]++;
    (0, _cache.revalidatePath)('/seller/dashboard/products');
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[121]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[122]++;
    (0, _cache.revalidatePath)(`/product/${createdProduct.slug}`);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[123]++;
    await logOperation('Product Created Successfully', {
      productId: createdProduct._id,
      name: createdProduct.name,
      totalStock,
      colorsCount: createdProduct.colors.length
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[124]++;
    return {
      success: true,
      message: 'Product created successfully',
      data: createdProduct
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[125]++;
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[126]++;
    console.error('Product creation error:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[127]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[32][0]++;
      cov_1y8lmtzck3().s[128]++;
      if (
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[34][0]++, error.message.includes('duplicate')) ||
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[34][1]++, error.message.includes('slug'))) {
        /* istanbul ignore next */
        cov_1y8lmtzck3().b[33][0]++;
        cov_1y8lmtzck3().s[129]++;
        return {
          success: false,
          message: 'This slug already exists. Please choose a different one.',
          code: 'DUPLICATE_SLUG'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1y8lmtzck3().b[33][1]++;
      }
      cov_1y8lmtzck3().s[130]++;
      if (error.message.includes('validation failed')) {
        /* istanbul ignore next */
        cov_1y8lmtzck3().b[35][0]++;
        cov_1y8lmtzck3().s[131]++;
        return {
          success: false,
          message: 'Please check that all required fields are filled correctly.',
          code: 'VALIDATION_ERROR'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1y8lmtzck3().b[35][1]++;
      }
      cov_1y8lmtzck3().s[132]++;
      return {
        success: false,
        message: error.message,
        code: 'INTERNAL_ERROR'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[32][1]++;
    }
    cov_1y8lmtzck3().s[133]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error),
      code: 'INTERNAL_ERROR'
    };
  } finally {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[134]++;
    session.endSession();
  }
}
async function updateProduct(data) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[38]++;
  const session =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().s[135]++, await _mongoose.default.startSession());
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[136]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[137]++;
  try {
    const {
      userId,
      userName,
      userRole
    } =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[138]++, await getCurrentUserInfo());
    const updateTime =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[139]++, new Date());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[140]++;
    await (0, _db.connectToDatabase)();
    // Validate input data
    const validatedData =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[141]++, _productvalidator.ProductUpdateSchema.parse(data));
    // Verify product existence and ownership
    const existingProduct =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[142]++, await _productmodel.default.findById(validatedData._id).session(session));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[143]++;
    if (!existingProduct) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[36][0]++;
      cov_1y8lmtzck3().s[144]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[36][1]++;
    }
    // Check authorization
    cov_1y8lmtzck3().s[145]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[38][0]++, userRole !== 'Admin') &&
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[38][1]++, existingProduct.sellerId.toString() !== userId)) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[37][0]++;
      cov_1y8lmtzck3().s[146]++;
      throw new Error('Unauthorized');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[37][1]++;
    }
    // Get seller information
    const seller =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[147]++, await validateSeller(userRole === 'ADMIN' ?
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[39][0]++, existingProduct.sellerId.toString()) :
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[39][1]++, userId)));
    // Initialize warehouse provider
    const provider =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[148]++, warehouseProviders[validatedData.warehouse.provider]);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[149]++;
    if (!provider) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[40][0]++;
      cov_1y8lmtzck3().s[150]++;
      throw new Error('Invalid warehouse provider');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[40][1]++;
    }
    // Update product in warehouse
    cov_1y8lmtzck3().s[151]++;
    await provider.updateProduct({
      externalId: existingProduct.warehouse.externalId,
      sku: validatedData.warehouse.sku,
      name: validatedData.name,
      description: validatedData.description,
      quantity:
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[41][0]++, validatedData.warehouseData[0]?.quantity) ||
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[41][1]++, 0),
      dimensions: validatedData.warehouse.dimensions,
      weight: validatedData.warehouse.weight
    });
    // Process warehouse data and calculate total stock
    const processedWarehouseData =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[152]++, validatedData.warehouseData.map(warehouse => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[39]++;
      const totalQuantity =
      /* istanbul ignore next */
      (cov_1y8lmtzck3().s[153]++, warehouse.colors.reduce((total, color) => {
        /* istanbul ignore next */
        cov_1y8lmtzck3().f[40]++;
        const colorTotal =
        /* istanbul ignore next */
        (cov_1y8lmtzck3().s[154]++, color.sizes.reduce((sum, size) => {
          /* istanbul ignore next */
          cov_1y8lmtzck3().f[41]++;
          cov_1y8lmtzck3().s[155]++;
          return sum + size.quantity;
        }, 0));
        /* istanbul ignore next */
        cov_1y8lmtzck3().s[156]++;
        color.quantity = colorTotal;
        /* istanbul ignore next */
        cov_1y8lmtzck3().s[157]++;
        color.inStock = colorTotal > 0;
        /* istanbul ignore next */
        cov_1y8lmtzck3().s[158]++;
        return total + colorTotal;
      }, 0));
      /* istanbul ignore next */
      cov_1y8lmtzck3().s[159]++;
      return {
        ...warehouse,
        quantity: totalQuantity,
        lastUpdated: updateTime,
        updatedBy: userName
      };
    }));
    const totalStock =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[160]++, processedWarehouseData.reduce((sum, warehouse) => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[42]++;
      cov_1y8lmtzck3().s[161]++;
      return sum + warehouse.quantity;
    }, 0));
    // Combine colors from all warehouses
    const combinedColors =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[162]++, processedWarehouseData.reduce((allColors, warehouse) => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[43]++;
      cov_1y8lmtzck3().s[163]++;
      warehouse.colors.forEach(warehouseColor => {
        /* istanbul ignore next */
        cov_1y8lmtzck3().f[44]++;
        const existingColor =
        /* istanbul ignore next */
        (cov_1y8lmtzck3().s[164]++, allColors.find(c => {
          /* istanbul ignore next */
          cov_1y8lmtzck3().f[45]++;
          cov_1y8lmtzck3().s[165]++;
          return c.name === warehouseColor.name;
        }));
        /* istanbul ignore next */
        cov_1y8lmtzck3().s[166]++;
        if (existingColor) {
          /* istanbul ignore next */
          cov_1y8lmtzck3().b[42][0]++;
          cov_1y8lmtzck3().s[167]++;
          existingColor.quantity += warehouseColor.quantity;
          /* istanbul ignore next */
          cov_1y8lmtzck3().s[168]++;
          existingColor.inStock = existingColor.quantity > 0;
          /* istanbul ignore next */
          cov_1y8lmtzck3().s[169]++;
          warehouseColor.sizes.forEach(warehouseSize => {
            /* istanbul ignore next */
            cov_1y8lmtzck3().f[46]++;
            const existingSize =
            /* istanbul ignore next */
            (cov_1y8lmtzck3().s[170]++, existingColor.sizes.find(s => {
              /* istanbul ignore next */
              cov_1y8lmtzck3().f[47]++;
              cov_1y8lmtzck3().s[171]++;
              return s.name === warehouseSize.name;
            }));
            /* istanbul ignore next */
            cov_1y8lmtzck3().s[172]++;
            if (existingSize) {
              /* istanbul ignore next */
              cov_1y8lmtzck3().b[43][0]++;
              cov_1y8lmtzck3().s[173]++;
              existingSize.quantity += warehouseSize.quantity;
              /* istanbul ignore next */
              cov_1y8lmtzck3().s[174]++;
              existingSize.inStock = existingSize.quantity > 0;
            } else {
              /* istanbul ignore next */
              cov_1y8lmtzck3().b[43][1]++;
              cov_1y8lmtzck3().s[175]++;
              existingColor.sizes.push({
                ...warehouseSize
              });
            }
          });
        } else {
          /* istanbul ignore next */
          cov_1y8lmtzck3().b[42][1]++;
          cov_1y8lmtzck3().s[176]++;
          allColors.push({
            ...warehouseColor,
            sizes: [...warehouseColor.sizes]
          });
        }
      });
      /* istanbul ignore next */
      cov_1y8lmtzck3().s[177]++;
      return allColors;
    }, []));
    // Calculate pricing if price or markup changed
    let pricing =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[178]++, existingProduct.pricing);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[179]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[45][0]++, validatedData.price !== existingProduct.price) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[45][1]++, validatedData.pricing?.markup !== existingProduct.pricing.markup)) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[44][0]++;
      const basePrice =
      /* istanbul ignore next */
      (cov_1y8lmtzck3().s[180]++, Number(validatedData.price));
      const markup =
      /* istanbul ignore next */
      (cov_1y8lmtzck3().s[181]++, Number(
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[46][0]++, validatedData.pricing?.markup) ||
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[46][1]++, existingProduct.pricing.markup)));
      const commission =
      /* istanbul ignore next */
      (cov_1y8lmtzck3().s[182]++,
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[47][0]++, seller.subscription.features?.commission) ||
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[47][1]++, 3));
      const markupAmount =
      /* istanbul ignore next */
      (cov_1y8lmtzck3().s[183]++, basePrice * (markup / 100));
      const commissionAmount =
      /* istanbul ignore next */
      (cov_1y8lmtzck3().s[184]++, basePrice * (commission / 100));
      /* istanbul ignore next */
      cov_1y8lmtzck3().s[185]++;
      pricing = {
        basePrice,
        markup,
        profit: markupAmount - commissionAmount,
        commission: commissionAmount,
        finalPrice: basePrice + markupAmount,
        discount:
        /* istanbul ignore next */
        (cov_1y8lmtzck3().b[48][0]++, validatedData.pricing?.discount) ||
        /* istanbul ignore next */
        (cov_1y8lmtzck3().b[48][1]++, existingProduct.pricing.discount)
      };
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[44][1]++;
    }
    // Check if stock status has changed
    const isStockStatusChanged =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[186]++,
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[49][0]++, existingProduct.countInStock > 0) &&
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[49][1]++, totalStock === 0) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[49][2]++, existingProduct.countInStock === 0) &&
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[49][3]++, totalStock > 0));
    // Prepare update data
    const updateData =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[187]++, {
      ...validatedData,
      name: validatedData.name.trim(),
      slug: validatedData.slug.trim(),
      category: validatedData.category.trim(),
      brand: validatedData.brand.trim(),
      description: validatedData.description.trim(),
      price: Number(validatedData.price),
      listPrice:
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[50][0]++, Number(validatedData.listPrice)) ||
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[50][1]++, Number(validatedData.price)),
      countInStock: totalStock,
      warehouseData: processedWarehouseData,
      colors: combinedColors,
      sizes: ['S', 'M', 'L', 'XL', 'XXL'],
      pricing,
      status: validatedData.isPublished ?
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[51][0]++, existingProduct.status === 'active' ?
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[52][0]++, 'active') :
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[52][1]++, 'pending')) :
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[51][1]++, 'draft'),
      inventoryStatus: totalStock === 0 ?
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[53][0]++, 'OUT_OF_STOCK') :
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[53][1]++, totalStock <= Math.min(...processedWarehouseData.map(wh => {
        /* istanbul ignore next */
        cov_1y8lmtzck3().f[48]++;
        cov_1y8lmtzck3().s[188]++;
        return wh.minimumStock;
      })) ?
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[54][0]++, 'LOW_STOCK') :
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[54][1]++, 'IN_STOCK')),
      updatedAt: updateTime,
      updatedBy: userName
    });
    // Update the product
    const updatedProduct =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[189]++, await _productmodel.default.findByIdAndUpdate(validatedData._id, updateData, {
      new: true,
      session
    }));
    // Update warehouse stock
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[190]++;
    await Promise.all(processedWarehouseData.map(warehouse => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[49]++;
      cov_1y8lmtzck3().s[191]++;
      return (0, _warehouseactions.updateWarehouseStock)({
        productId: updatedProduct._id,
        warehouseId: warehouse.warehouseId,
        quantity: warehouse.quantity,
        sku: warehouse.sku,
        location: warehouse.location,
        minimumStock: warehouse.minimumStock,
        reorderPoint: warehouse.reorderPoint,
        colors: warehouse.colors,
        updatedBy: userName
      });
    }));
    // Update seller metrics if stock status changed
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[192]++;
    if (isStockStatusChanged) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[55][0]++;
      cov_1y8lmtzck3().s[193]++;
      await (0, _selleractions.updateSellerMetrics)(seller._id, {
        action: totalStock === 0 ?
        /* istanbul ignore next */
        (cov_1y8lmtzck3().b[56][0]++, 'product_out_of_stock') :
        /* istanbul ignore next */
        (cov_1y8lmtzck3().b[56][1]++, 'product_back_in_stock')
      });
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[55][1]++;
    }
    cov_1y8lmtzck3().s[194]++;
    await session.commitTransaction();
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[195]++;
    (0, _cache.revalidatePath)('/seller/dashboard/products');
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[196]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[197]++;
    (0, _cache.revalidatePath)(`/product/${updatedProduct?.slug}`);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[198]++;
    await logOperation('Product Updated', {
      productId: updatedProduct?._id,
      name: updatedProduct?.name,
      seller: seller.businessName
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[199]++;
    return {
      success: true,
      message: 'Product updated successfully',
      data: updatedProduct
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[200]++;
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[201]++;
    console.error('Product update error:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[202]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[57][0]++;
      cov_1y8lmtzck3().s[203]++;
      if (error.message.includes('Unauthorized')) {
        /* istanbul ignore next */
        cov_1y8lmtzck3().b[58][0]++;
        cov_1y8lmtzck3().s[204]++;
        return {
          success: false,
          message: 'You do not have permission to update this product',
          code: 'UNAUTHORIZED'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1y8lmtzck3().b[58][1]++;
      }
      cov_1y8lmtzck3().s[205]++;
      if (error.message.includes('Product not found')) {
        /* istanbul ignore next */
        cov_1y8lmtzck3().b[59][0]++;
        cov_1y8lmtzck3().s[206]++;
        return {
          success: false,
          message: 'The product you are trying to update does not exist',
          code: 'NOT_FOUND'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1y8lmtzck3().b[59][1]++;
      }
      cov_1y8lmtzck3().s[207]++;
      return {
        success: false,
        message: error.message,
        code: 'INTERNAL_ERROR'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[57][1]++;
    }
    cov_1y8lmtzck3().s[208]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error),
      code: 'INTERNAL_ERROR'
    };
  } finally {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[209]++;
    session.endSession();
  }
}
async function deleteProduct(id) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[50]++;
  const session =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().s[210]++, await _mongoose.default.startSession());
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[211]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[212]++;
  try {
    const {
      userId,
      userName,
      userRole
    } =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[213]++, await getCurrentUserInfo());
    const deletionTime =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[214]++, new Date());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[215]++;
    await (0, _db.connectToDatabase)();
    // Find the product
    const product =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[216]++, await _productmodel.default.findById(id).session(session));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[217]++;
    if (!product) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[60][0]++;
      cov_1y8lmtzck3().s[218]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[60][1]++;
    }
    // Check authorization
    cov_1y8lmtzck3().s[219]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[62][0]++, userRole !== 'ADMIN') &&
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[62][1]++, product.sellerId.toString() !== userId)) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[61][0]++;
      cov_1y8lmtzck3().s[220]++;
      throw new Error('Unauthorized');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[61][1]++;
    }
    // Initialize warehouse provider
    const provider =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[221]++, warehouseProviders[product.warehouse.provider]);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[222]++;
    if (!provider) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[63][0]++;
      cov_1y8lmtzck3().s[223]++;
      throw new Error('Invalid warehouse provider');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[63][1]++;
    }
    // Delete product from warehouse
    cov_1y8lmtzck3().s[224]++;
    await provider.deleteProduct(product.warehouse.externalId);
    // Delete the product
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[225]++;
    await _productmodel.default.findByIdAndDelete(id).session(session);
    // Update seller metrics
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[226]++;
    if (product.sellerId) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[64][0]++;
      cov_1y8lmtzck3().s[227]++;
      await (0, _selleractions.updateSellerMetrics)(product.sellerId, {
        productsCount: '-1',
        lastUpdated: deletionTime
      });
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[64][1]++;
    }
    cov_1y8lmtzck3().s[228]++;
    await logOperation('Product Deleted', {
      productId: id,
      name: product.name,
      deletedBy: userName,
      timestamp: deletionTime
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[229]++;
    await session.commitTransaction();
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[230]++;
    (0, _cache.revalidatePath)('/seller/dashboard/products');
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[231]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[232]++;
    (0, _cache.revalidatePath)(`/product/${product.slug}`);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[233]++;
    return {
      success: true,
      message: 'Product deleted successfully',
      metadata: {
        deletedAt: deletionTime,
        deletedBy: userName,
        productId: id
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[234]++;
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[235]++;
    console.error('Delete product error:', {
      error,
      productId: id,
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[236]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[65][0]++;
      cov_1y8lmtzck3().s[237]++;
      if (error.message.includes('Unauthorized')) {
        /* istanbul ignore next */
        cov_1y8lmtzck3().b[66][0]++;
        cov_1y8lmtzck3().s[238]++;
        return {
          success: false,
          message: 'You do not have permission to delete this product',
          code: 'UNAUTHORIZED'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1y8lmtzck3().b[66][1]++;
      }
      cov_1y8lmtzck3().s[239]++;
      if (error.message.includes('Product not found')) {
        /* istanbul ignore next */
        cov_1y8lmtzck3().b[67][0]++;
        cov_1y8lmtzck3().s[240]++;
        return {
          success: false,
          message: 'The product you are trying to delete does not exist',
          code: 'NOT_FOUND'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1y8lmtzck3().b[67][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[65][1]++;
    }
    cov_1y8lmtzck3().s[241]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error),
      code: 'INTERNAL_ERROR'
    };
  } finally {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[242]++;
    session.endSession();
  }
}
async function reviewProduct(productId, approved, notes) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[51]++;
  const session =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().s[243]++, await _mongoose.default.startSession());
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[244]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[245]++;
  try {
    const {
      userId,
      userName,
      userRole
    } =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[246]++, await getCurrentUserInfo());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[247]++;
    if (userRole !== 'ADMIN') {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[68][0]++;
      cov_1y8lmtzck3().s[248]++;
      throw new Error('Unauthorized');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[68][1]++;
    }
    cov_1y8lmtzck3().s[249]++;
    await (0, _db.connectToDatabase)();
    const product =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[250]++, await _productmodel.default.findById(productId).session(session));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[251]++;
    if (!product) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[69][0]++;
      cov_1y8lmtzck3().s[252]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[69][1]++;
    }
    const updateData =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[253]++, {
      status: approved ?
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[70][0]++, 'active') :
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[70][1]++, 'rejected'),
      adminReview: {
        approved,
        reviewedAt: new Date(),
        reviewedBy: userId,
        notes:
        /* istanbul ignore next */
        (cov_1y8lmtzck3().b[71][0]++, notes) ||
        /* istanbul ignore next */
        (cov_1y8lmtzck3().b[71][1]++, '')
      },
      updatedAt: new Date(),
      updatedBy: userName
    });
    const updatedProduct =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[254]++, await _productmodel.default.findByIdAndUpdate(productId, updateData, {
      new: true,
      session
    }));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[255]++;
    await session.commitTransaction();
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[256]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[257]++;
    (0, _cache.revalidatePath)('/seller/dashboard/products');
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[258]++;
    if (approved) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[72][0]++;
      cov_1y8lmtzck3().s[259]++;
      (0, _cache.revalidatePath)(`/product/${product.slug}`);
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[72][1]++;
    }
    cov_1y8lmtzck3().s[260]++;
    await logOperation(`Product ${approved ?
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[73][0]++, 'Approved') :
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[73][1]++, 'Rejected')}`, {
      productId,
      name: product.name,
      reviewedBy: userName
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[261]++;
    return {
      success: true,
      message: `Product ${approved ?
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[74][0]++, 'approved') :
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[74][1]++, 'rejected')} successfully`,
      data: updatedProduct
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[262]++;
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[263]++;
    console.error('Product review error:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[264]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error),
      code: 'INTERNAL_ERROR'
    };
  } finally {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[265]++;
    session.endSession();
  }
}
async function syncProductInventory(productId) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[52]++;
  const session =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().s[266]++, await _mongoose.default.startSession());
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[267]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[268]++;
  try {
    const {
      userId,
      userName
    } =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[269]++, await getCurrentUserInfo());
    const currentDate =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[270]++, new Date());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[271]++;
    await logOperation('Syncing Inventory', {
      productId
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[272]++;
    await (0, _db.connectToDatabase)();
    // Find existing product
    const product =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[273]++, await _productmodel.default.findById(productId).session(session));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[274]++;
    if (!product) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[75][0]++;
      cov_1y8lmtzck3().s[275]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[75][1]++;
    }
    // Verify seller authorization
    cov_1y8lmtzck3().s[276]++;
    if (product.sellerId.toString() !== userId) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[76][0]++;
      cov_1y8lmtzck3().s[277]++;
      throw new Error('Unauthorized to sync this product');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[76][1]++;
    }
    // Initialize warehouse provider
    const provider =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[278]++, warehouseProviders[product.warehouse.provider]);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[279]++;
    if (!provider) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[77][0]++;
      cov_1y8lmtzck3().s[280]++;
      throw new Error('Invalid warehouse provider');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[77][1]++;
    }
    // Get inventory from warehouse
    const inventory =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[281]++, await provider.getInventory(product.warehouse.sku));
    // Update warehouse data
    const warehouseData =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[282]++, product.warehouseData.map(wh => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[53]++;
      cov_1y8lmtzck3().s[283]++;
      if (wh.sku === product.warehouse.sku) {
        /* istanbul ignore next */
        cov_1y8lmtzck3().b[78][0]++;
        cov_1y8lmtzck3().s[284]++;
        return {
          ...wh,
          quantity: inventory.quantity,
          location: inventory.location,
          lastSync: currentDate,
          lastUpdated: currentDate,
          updatedBy: userName
        };
      } else
      /* istanbul ignore next */
      {
        cov_1y8lmtzck3().b[78][1]++;
      }
      cov_1y8lmtzck3().s[285]++;
      return wh;
    }));
    const totalStock =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[286]++, warehouseData.reduce((sum, wh) => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[54]++;
      cov_1y8lmtzck3().s[287]++;
      return sum + wh.quantity;
    }, 0));
    // Update product in database
    const updatedProduct =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[288]++, await _productmodel.default.findByIdAndUpdate(productId, {
      $set: {
        warehouseData,
        countInStock: totalStock,
        'warehouse.availableQuantity': totalStock,
        'warehouse.location': inventory.location,
        'warehouse.lastSync': currentDate,
        inventoryStatus: totalStock === 0 ?
        /* istanbul ignore next */
        (cov_1y8lmtzck3().b[79][0]++, 'OUT_OF_STOCK') :
        /* istanbul ignore next */
        (cov_1y8lmtzck3().b[79][1]++, totalStock <= Math.min(...warehouseData.map(wh => {
          /* istanbul ignore next */
          cov_1y8lmtzck3().f[55]++;
          cov_1y8lmtzck3().s[289]++;
          return wh.minimumStock;
        })) ?
        /* istanbul ignore next */
        (cov_1y8lmtzck3().b[80][0]++, 'LOW_STOCK') :
        /* istanbul ignore next */
        (cov_1y8lmtzck3().b[80][1]++, 'IN_STOCK')),
        updatedAt: currentDate,
        updatedBy: userName
      }
    }, {
      new: true,
      session
    }));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[290]++;
    await session.commitTransaction();
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[291]++;
    (0, _cache.revalidatePath)('/admin/products');
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[292]++;
    (0, _cache.revalidatePath)('/seller/dashboard/products');
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[293]++;
    (0, _cache.revalidatePath)(`/product/${updatedProduct.slug}`);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[294]++;
    return {
      success: true,
      message: 'Inventory synced successfully',
      data: {
        inventory,
        totalStock,
        lastSync: currentDate
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[295]++;
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[296]++;
    console.error('Inventory sync error:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[297]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error),
      code: 'INTERNAL_ERROR'
    };
  } finally {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[298]++;
    session.endSession();
  }
}
async function submitProductReview({
  productId,
  rating,
  title,
  comment,
  isVerifiedPurchase =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[81][0]++, false)
}) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[56]++;
  const session =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().s[299]++, await _mongoose.default.startSession());
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[300]++;
  session.startTransaction();
  /* istanbul ignore next */
  cov_1y8lmtzck3().s[301]++;
  try {
    const {
      userId,
      userName
    } =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[302]++, await getCurrentUserInfo());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[303]++;
    await (0, _db.connectToDatabase)();
    // Validate input
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[304]++;
    if (!_mongoose.default.Types.ObjectId.isValid(productId)) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[82][0]++;
      cov_1y8lmtzck3().s[305]++;
      throw new Error('Invalid product ID');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[82][1]++;
    }
    cov_1y8lmtzck3().s[306]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[84][0]++, rating < 1) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[84][1]++, rating > 5)) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[83][0]++;
      cov_1y8lmtzck3().s[307]++;
      throw new Error('Rating must be between 1 and 5');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[83][1]++;
    }
    cov_1y8lmtzck3().s[308]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[86][0]++, comment) && (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[86][1]++, comment.length < 10) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[86][2]++, comment.length > 500))) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[85][0]++;
      cov_1y8lmtzck3().s[309]++;
      throw new Error('Comment must be between 10 and 500 characters');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[85][1]++;
    }
    cov_1y8lmtzck3().s[310]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[88][0]++, title) && (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[88][1]++, title.length < 3) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[88][2]++, title.length > 100))) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[87][0]++;
      cov_1y8lmtzck3().s[311]++;
      throw new Error('Title must be between 3 and 100 characters');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[87][1]++;
    }
    // Find product
    const product =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[312]++, await _productmodel.default.findById(productId).session(session));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[313]++;
    if (!product) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[89][0]++;
      cov_1y8lmtzck3().s[314]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[89][1]++;
    }
    // Check if user already reviewed
    const existingReview =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[315]++, product.reviews.find(review => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[57]++;
      cov_1y8lmtzck3().s[316]++;
      return review.user.toString() === userId;
    }));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[317]++;
    if (existingReview) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[90][0]++;
      cov_1y8lmtzck3().s[318]++;
      throw new Error('You have already reviewed this product');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[90][1]++;
    }
    // Add review
    const review =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[319]++, {
      user: userId,
      name: userName,
      rating,
      title: title?.trim(),
      comment: comment?.trim(),
      isVerifiedPurchase,
      createdAt: new Date(),
      updatedAt: new Date()
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[320]++;
    product.reviews.push(review);
    // Save product (pre-save hook will update ratingDistribution, metrics.rating, and numReviews)
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[321]++;
    await product.save({
      session
    });
    // Notify seller
    const seller =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[322]++, await validateSeller(product.sellerId.toString()));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[323]++;
    await sendNotification({
      userId: product.sellerId.toString(),
      type: 'product_reviewed',
      title: 'New Product Review',
      message: `Your product "${product.name}" received a ${rating}-star review${comment ?
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[91][0]++, `: ${comment}`) :
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[91][1]++, '')}`,
      channels: ['email', 'in_app']
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[324]++;
    await session.commitTransaction();
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[325]++;
    (0, _cache.revalidatePath)(`/product/${product.slug}`);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[326]++;
    await logOperation('Product Review Submitted', {
      productId,
      userId,
      rating,
      title,
      comment
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[327]++;
    return {
      success: true,
      message: 'Review submitted successfully',
      data: review
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[328]++;
    await session.abortTransaction();
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[329]++;
    console.error('Submit review error:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[330]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[92][0]++;
      cov_1y8lmtzck3().s[331]++;
      if (error.message.includes('Invalid product ID')) {
        /* istanbul ignore next */
        cov_1y8lmtzck3().b[93][0]++;
        cov_1y8lmtzck3().s[332]++;
        return {
          success: false,
          message: 'Please provide a valid product ID',
          code: 'INVALID_ID'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1y8lmtzck3().b[93][1]++;
      }
      cov_1y8lmtzck3().s[333]++;
      if (error.message.includes('Product not found')) {
        /* istanbul ignore next */
        cov_1y8lmtzck3().b[94][0]++;
        cov_1y8lmtzck3().s[334]++;
        return {
          success: false,
          message: 'The product you are trying to review does not exist',
          code: 'NOT_FOUND'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1y8lmtzck3().b[94][1]++;
      }
      cov_1y8lmtzck3().s[335]++;
      if (error.message.includes('You have already reviewed')) {
        /* istanbul ignore next */
        cov_1y8lmtzck3().b[95][0]++;
        cov_1y8lmtzck3().s[336]++;
        return {
          success: false,
          message: 'You have already submitted a review for this product',
          code: 'DUPLICATE_REVIEW'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1y8lmtzck3().b[95][1]++;
      }
      cov_1y8lmtzck3().s[337]++;
      return {
        success: false,
        message: error.message,
        code: 'INTERNAL_ERROR'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[92][1]++;
    }
    cov_1y8lmtzck3().s[338]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error),
      code: 'INTERNAL_ERROR'
    };
  } finally {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[339]++;
    session.endSession();
  }
}
async function getProductCategories(limit =
/* istanbul ignore next */
(cov_1y8lmtzck3().b[96][0]++, 4)) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[58]++;
  cov_1y8lmtzck3().s[340]++;
  try {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[341]++;
    await (0, _db.connectToDatabase)();
    const categories =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[342]++, await _productmodel.default.aggregate([{
      $match: {
        isPublished: true,
        status: 'active',
        countInStock: {
          $gt: 0
        }
      }
    }, {
      $group: {
        _id: '$category',
        productCount: {
          $sum: 1
        },
        totalSales: {
          $sum: '$metrics.sales'
        },
        image: {
          $first: '$images'
        },
        latestProduct: {
          $first: {
            name: '$name',
            slug: '$slug',
            images: '$images'
          }
        }
      }
    }, {
      $sort: {
        productCount: -1,
        totalSales: -1
      }
    }, {
      $limit: limit
    }, {
      $project: {
        name: '$_id',
        image: {
          $first: '$latestProduct.images'
        },
        slug: '$latestProduct.slug',
        productCount: 1
      }
    }]));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[343]++;
    return JSON.parse(JSON.stringify(categories));
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[344]++;
    console.error('Error fetching categories:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[345]++;
    return [];
  }
}
async function getProductsForCard({
  tag,
  limit =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[97][0]++, 4)
}) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[59]++;
  cov_1y8lmtzck3().s[346]++;
  try {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[347]++;
    await (0, _db.connectToDatabase)();
    const products =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[348]++, await _productmodel.default.aggregate([{
      $match: {
        tags: {
          $in: [tag]
        },
        isPublished: true,
        status: 'active',
        countInStock: {
          $gt: 0
        }
      }
    }, {
      $addFields: {
        href: {
          $concat: ['/product/', '$slug']
        },
        image: {
          $arrayElemAt: ['$images', 0]
        }
      }
    }, {
      $project: {
        name: 1,
        slug: 1,
        images: 1,
        price: 1,
        metrics: 1,
        href: 1,
        image: 1
      }
    }, {
      $sort: {
        'metrics.sales': -1,
        createdAt: -1
      }
    }, {
      $limit: limit
    }]));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[349]++;
    return JSON.parse(JSON.stringify(products));
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[350]++;
    console.error('Error fetching products for card:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[351]++;
    return [];
  }
}
async function getProductsByTag({
  tag,
  limit =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[98][0]++, 10),
  sortBy =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[99][0]++, 'sales')
}) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[60]++;
  cov_1y8lmtzck3().s[352]++;
  try {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[353]++;
    await (0, _db.connectToDatabase)();
    const query =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[354]++, {
      tags: {
        $in: [tag]
      },
      isPublished: true
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[355]++;
    if (sortBy === 'sales') {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[100][0]++;
      cov_1y8lmtzck3().s[356]++;
      query.status = 'active';
      /* istanbul ignore next */
      cov_1y8lmtzck3().s[357]++;
      query.countInStock = {
        $gt: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[100][1]++;
    }
    const sortOption =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[358]++, sortBy === 'sales' ?
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[101][0]++, {
      'metrics.sales': -1
    }) :
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[101][1]++, {
      createdAt: -1
    }));
    const products =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[359]++, await _productmodel.default.find(query).sort(sortOption).limit(limit).lean());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[360]++;
    return JSON.parse(JSON.stringify(products));
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[361]++;
    console.error('Error fetching products by tag:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[362]++;
    return [];
  }
}
async function getLatestProducts({
  limit =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[103][0]++, 4)
} =
/* istanbul ignore next */
(cov_1y8lmtzck3().b[102][0]++, {})) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[61]++;
  cov_1y8lmtzck3().s[363]++;
  try {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[364]++;
    await (0, _db.connectToDatabase)();
    const products =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[365]++, await _productmodel.default.find({
      isPublished: true,
      status: 'active',
      countInStock: {
        $gt: 0
      }
    }).sort({
      createdAt: -1
    }).limit(limit).select('name images slug price').lean());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[366]++;
    return JSON.parse(JSON.stringify(products));
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[367]++;
    console.error('Error fetching latest products:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[368]++;
    return [];
  }
}
async function getAllProducts({
  query =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[104][0]++, ''),
  category =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[105][0]++, 'all'),
  tag =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[106][0]++, 'all'),
  sort =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[107][0]++, 'latest'),
  page =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[108][0]++, 1),
  limit,
  price,
  rating
}) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[62]++;
  cov_1y8lmtzck3().s[369]++;
  try {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[370]++;
    await (0, _db.connectToDatabase)();
    const {
      common: {
        pageSize
      }
    } =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[371]++, await (0, _settingactions.getSetting)());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[372]++;
    limit =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[109][0]++, limit) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[109][1]++, pageSize);
    const queryFilter =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[373]++, {
      isPublished: true,
      status: 'active',
      countInStock: {
        $gt: 0
      }
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[374]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[111][0]++, query) &&
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[111][1]++, query !== 'all')) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[110][0]++;
      cov_1y8lmtzck3().s[375]++;
      queryFilter.name = {
        $regex: query,
        $options: 'i'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[110][1]++;
    }
    cov_1y8lmtzck3().s[376]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[113][0]++, category) &&
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[113][1]++, category !== 'all')) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[112][0]++;
      cov_1y8lmtzck3().s[377]++;
      queryFilter.category = category;
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[112][1]++;
    }
    cov_1y8lmtzck3().s[378]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[115][0]++, tag) &&
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[115][1]++, tag !== 'all')) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[114][0]++;
      cov_1y8lmtzck3().s[379]++;
      queryFilter.tags = tag;
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[114][1]++;
    }
    cov_1y8lmtzck3().s[380]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[117][0]++, rating) &&
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[117][1]++, rating !== 'all')) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[116][0]++;
      cov_1y8lmtzck3().s[381]++;
      queryFilter['metrics.rating'] = {
        $gte: Number(rating)
      };
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[116][1]++;
    }
    cov_1y8lmtzck3().s[382]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[119][0]++, price) &&
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[119][1]++, price !== 'all')) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[118][0]++;
      const [min, max] =
      /* istanbul ignore next */
      (cov_1y8lmtzck3().s[383]++, price.split('-').map(Number));
      /* istanbul ignore next */
      cov_1y8lmtzck3().s[384]++;
      queryFilter['pricing.finalPrice'] = {
        $gte: min,
        $lte: max
      };
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[118][1]++;
    }
    const order =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[385]++, sort === 'best-selling' ?
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[120][0]++, {
      'metrics.sales': -1
    }) :
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[120][1]++, sort === 'price-low-to-high' ?
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[121][0]++, {
      'pricing.finalPrice': 1
    }) :
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[121][1]++, sort === 'price-high-to-low' ?
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[122][0]++, {
      'pricing.finalPrice': -1
    }) :
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[122][1]++, sort === 'avg-customer-review' ?
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[123][0]++, {
      'metrics.rating': -1
    }) :
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[123][1]++, {
      createdAt: -1
    })))));
    const skip =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[386]++, limit * (Number(page) - 1));
    const [products, totalProducts] =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[387]++, await Promise.all([_productmodel.default.find(queryFilter).sort(order).skip(skip).limit(limit).lean(), _productmodel.default.countDocuments(queryFilter)]));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[388]++;
    return {
      products: JSON.parse(JSON.stringify(products)),
      totalPages: Math.ceil(totalProducts / limit),
      totalProducts,
      from: skip + 1,
      to: skip + products.length
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[389]++;
    console.error('Error fetching products:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[390]++;
    return {
      products: [],
      totalPages: 0,
      totalProducts: 0,
      from: 0,
      to: 0
    };
  }
}
async function getProductById(productId) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[63]++;
  cov_1y8lmtzck3().s[391]++;
  try {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[392]++;
    if (
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[125][0]++, !productId) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[125][1]++, !_mongoose.default.Types.ObjectId.isValid(productId))) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[124][0]++;
      cov_1y8lmtzck3().s[393]++;
      throw new Error('Invalid product ID');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[124][1]++;
    }
    cov_1y8lmtzck3().s[394]++;
    await (0, _db.connectToDatabase)();
    const product =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[395]++, await _productmodel.default.findById(productId).lean().select('-__v').exec());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[396]++;
    if (!product) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[126][0]++;
      cov_1y8lmtzck3().s[397]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[126][1]++;
    }
    const formattedProduct =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[398]++, {
      ...product,
      createdAt: product.createdAt ?
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[127][0]++, new Date(product.createdAt).toISOString()) :
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[127][1]++, undefined),
      updatedAt: product.updatedAt ?
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[128][0]++, new Date(product.updatedAt).toISOString()) :
      /* istanbul ignore next */
      (cov_1y8lmtzck3().b[128][1]++, undefined)
    });
    const {
      userName
    } =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[399]++, await getCurrentUserInfo());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[400]++;
    await logOperation('Product Accessed', {
      productId,
      timestamp: new Date(),
      accessedBy: userName
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[401]++;
    return {
      success: true,
      data: JSON.parse(JSON.stringify(formattedProduct)),
      metadata: {
        accessed: new Date().toISOString(),
        by: userName
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[402]++;
    console.error('Error fetching product:', {
      productId,
      error,
      timestamp: new Date()
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[403]++;
    if (error instanceof Error) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[129][0]++;
      cov_1y8lmtzck3().s[404]++;
      if (error.message.includes('Invalid product ID')) {
        /* istanbul ignore next */
        cov_1y8lmtzck3().b[130][0]++;
        cov_1y8lmtzck3().s[405]++;
        return {
          success: false,
          message: 'Please provide a valid product ID',
          code: 'INVALID_ID'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1y8lmtzck3().b[130][1]++;
      }
      cov_1y8lmtzck3().s[406]++;
      if (error.message.includes('Product not found')) {
        /* istanbul ignore next */
        cov_1y8lmtzck3().b[131][0]++;
        cov_1y8lmtzck3().s[407]++;
        return {
          success: false,
          message: 'The requested product does not exist',
          code: 'NOT_FOUND'
        };
      } else
      /* istanbul ignore next */
      {
        cov_1y8lmtzck3().b[131][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[129][1]++;
    }
    cov_1y8lmtzck3().s[408]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error),
      code: 'INTERNAL_ERROR',
      metadata: {
        timestamp: new Date().toISOString(),
        requestedId: productId
      }
    };
  }
}
async function getProductBySlug(slug) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[64]++;
  cov_1y8lmtzck3().s[409]++;
  try {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[410]++;
    await (0, _db.connectToDatabase)();
    const product =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[411]++, await _productmodel.default.findOne({
      slug,
      isPublished: true,
      status: 'active'
    }).lean());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[412]++;
    if (!product) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[132][0]++;
      cov_1y8lmtzck3().s[413]++;
      throw new Error('Product not found');
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[132][1]++;
    }
    cov_1y8lmtzck3().s[414]++;
    return JSON.parse(JSON.stringify(product));
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[415]++;
    throw new Error((0, _utils.formatError)(error));
  }
}
async function getRelatedProducts({
  category,
  productId,
  limit =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[133][0]++, 4)
}) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[65]++;
  cov_1y8lmtzck3().s[416]++;
  try {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[417]++;
    await (0, _db.connectToDatabase)();
    const products =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[418]++, await _productmodel.default.find({
      _id: {
        $ne: productId
      },
      category,
      isPublished: true,
      status: 'active',
      countInStock: {
        $gt: 0
      }
    }).sort({
      'metrics.sales': -1
    }).limit(limit).select('name images slug price').lean());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[419]++;
    return JSON.parse(JSON.stringify(products));
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[420]++;
    console.error('Error fetching related products:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[421]++;
    return [];
  }
}
async function getRelatedProductsByCategory({
  category,
  productId,
  limit =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[134][0]++, 4),
  page =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[135][0]++, 1)
}) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[66]++;
  cov_1y8lmtzck3().s[422]++;
  try {
    const {
      common: {
        pageSize
      }
    } =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[423]++, await (0, _settingactions.getSetting)());
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[424]++;
    limit =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[136][0]++, limit) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[136][1]++, pageSize);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[425]++;
    await (0, _db.connectToDatabase)();
    const skipAmount =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[426]++, (Number(page) - 1) * limit);
    const conditions =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[427]++, {
      isPublished: true,
      category,
      _id: {
        $ne: productId
      }
    });
    const products =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[428]++, await _productmodel.default.find(conditions).sort({
      'metrics.sales': -1
    }).skip(skipAmount).limit(limit).lean());
    const productsCount =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[429]++, await _productmodel.default.countDocuments(conditions));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[430]++;
    return {
      data: JSON.parse(JSON.stringify(products)),
      totalPages: Math.ceil(productsCount / limit)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[431]++;
    console.error('Error fetching related products:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[432]++;
    return {
      data: [],
      totalPages: 0
    };
  }
}
async function getAllTags() {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[67]++;
  cov_1y8lmtzck3().s[433]++;
  try {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[434]++;
    await (0, _db.connectToDatabase)();
    const tags =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[435]++, await _productmodel.default.aggregate([{
      $match: {
        isPublished: true,
        status: 'active'
      }
    }, {
      $unwind: '$tags'
    }, {
      $group: {
        _id: null,
        uniqueTags: {
          $addToSet: '$tags'
        }
      }
    }, {
      $project: {
        _id: 0,
        uniqueTags: 1
      }
    }]));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[436]++;
    return /* istanbul ignore next */(cov_1y8lmtzck3().b[137][0]++, tags[0]?.uniqueTags.sort((a, b) => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[68]++;
      cov_1y8lmtzck3().s[437]++;
      return a.localeCompare(b);
    }).map(tag => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[69]++;
      cov_1y8lmtzck3().s[438]++;
      return tag.split('-').map(word => {
        /* istanbul ignore next */
        cov_1y8lmtzck3().f[70]++;
        cov_1y8lmtzck3().s[439]++;
        return word.charAt(0).toUpperCase() + word.slice(1);
      }).join(' ');
    })) ||
    /* istanbul ignore next */
    (cov_1y8lmtzck3().b[137][1]++, []);
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[440]++;
    console.error('Error fetching tags:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[441]++;
    return [];
  }
}
async function getAllCategories() {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[71]++;
  cov_1y8lmtzck3().s[442]++;
  try {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[443]++;
    await (0, _db.connectToDatabase)();
    const categories =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[444]++, await _productmodel.default.find({
      isPublished: true,
      status: 'active'
    }).distinct('category'));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[445]++;
    return categories;
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[446]++;
    console.error('Error fetching categories:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[447]++;
    return [];
  }
}
async function getSellerProducts({
  sellerId,
  query =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[138][0]++, ''),
  page =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[139][0]++, 1),
  limit =
  /* istanbul ignore next */
  (cov_1y8lmtzck3().b[140][0]++, 10)
}) {
  /* istanbul ignore next */
  cov_1y8lmtzck3().f[72]++;
  cov_1y8lmtzck3().s[448]++;
  try {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[449]++;
    await (0, _db.connectToDatabase)();
    const queryFilter =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[450]++, {
      sellerId
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[451]++;
    if (query) {
      /* istanbul ignore next */
      cov_1y8lmtzck3().b[141][0]++;
      cov_1y8lmtzck3().s[452]++;
      queryFilter.$or = [{
        name: {
          $regex: query,
          $options: 'i'
        }
      }, {
        category: {
          $regex: query,
          $options: 'i'
        }
      }, {
        brand: {
          $regex: query,
          $options: 'i'
        }
      }, {
        slug: {
          $regex: query,
          $options: 'i'
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_1y8lmtzck3().b[141][1]++;
    }
    const skip =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[453]++, (page - 1) * limit);
    const [products, totalProducts] =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[454]++, await Promise.all([_productmodel.default.find(queryFilter).sort({
      updatedAt: -1
    }).skip(skip).limit(limit).select({
      name: 1,
      slug: 1,
      price: 1,
      category: 1,
      countInStock: 1,
      isPublished: 1,
      avgRating: 1,
      updatedAt: 1,
      pricing: 1,
      metrics: 1,
      status: 1,
      warehouseData: 1
    }).lean(), _productmodel.default.countDocuments(queryFilter)]));
    const formattedProducts =
    /* istanbul ignore next */
    (cov_1y8lmtzck3().s[455]++, products.map(product => {
      /* istanbul ignore next */
      cov_1y8lmtzck3().f[73]++;
      cov_1y8lmtzck3().s[456]++;
      return {
        ...product,
        metrics: {
          ...product.metrics,
          rating:
          /* istanbul ignore next */
          (cov_1y8lmtzck3().b[142][0]++, product.metrics?.rating) ||
          /* istanbul ignore next */
          (cov_1y8lmtzck3().b[142][1]++, 0)
        }
      };
    }));
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[457]++;
    await logOperation('Seller Products List Retrieved', {
      sellerId,
      total: totalProducts,
      page,
      limit
    });
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[458]++;
    return {
      products: JSON.parse(JSON.stringify(formattedProducts)),
      totalPages: Math.ceil(totalProducts / limit),
      totalProducts,
      from: skip + 1,
      to: skip + products.length
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[459]++;
    console.error('Error in getSellerProducts:', error);
    /* istanbul ignore next */
    cov_1y8lmtzck3().s[460]++;
    return {
      products: [],
      totalPages: 0,
      totalProducts: 0,
      from: 0,
      to: 0
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,