7e95ae7e2415a58cc6d70eb1ada56135
"use strict";

/* istanbul ignore next */
function cov_r721cd73q() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/products/import/route.ts";
  var hash = "f9b332fb9da76c11190dbd93aa96f195a92278ca";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/products/import/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 36
        },
        end: {
          line: 12,
          column: 112
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "7": {
        start: {
          line: 20,
          column: 63
        },
        end: {
          line: 20,
          column: 79
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "9": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 28,
          column: 15
        }
      },
      "10": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 35,
          column: 10
        }
      },
      "11": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 39,
          column: 11
        }
      },
      "12": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "POST",
        decl: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 19
          }
        },
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 24
          }
        }, {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 22,
            column: 43
          }
        }, {
          start: {
            line: 22,
            column: 47
          },
          end: {
            line: 22,
            column: 61
          }
        }],
        line: 22
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/products/import/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport Product from '@/lib/db/models/product.model';\n\nexport async function POST(req: NextRequest) {\n  try {\n    const { productData, sourceSellerId, sourceStoreId } = await req.json();\n\n    // Verify required data\n    if (!productData || (!sourceSellerId && !sourceStoreId)) {\n      return NextResponse.json(\n        { success: false, message: 'Missing required fields' },\n        { status: 400 }\n      );\n    }\n\n    // Create a new product in the system\n    const newProduct = await Product.create({\n      ...productData,\n      sourceSellerId,\n      sourceStoreId,\n    });\n\n    return NextResponse.json({ success: true, data: newProduct });\n  } catch (error: any) {\n    return NextResponse.json(\n      { success: false, message: error.message },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["POST", "req", "productData", "sourceSellerId", "sourceStoreId", "json", "NextResponse", "success", "message", "status", "newProduct", "Product", "create", "data", "error"],
      mappings: ";;;;+BAGsBA;;;eAAAA;;;wBAHoB;qEACtB;;;;;;AAEb,eAAeA,KAAKC,GAAgB;IACzC,IAAI;QACF,MAAM,EAAEC,WAAW,EAAEC,cAAc,EAAEC,aAAa,EAAE,GAAG,MAAMH,IAAII,IAAI;QAErE,uBAAuB;QACvB,IAAI,CAACH,eAAgB,CAACC,kBAAkB,CAACC,eAAgB;YACvD,OAAOE,oBAAY,CAACD,IAAI,CACtB;gBAAEE,SAAS;gBAAOC,SAAS;YAA0B,GACrD;gBAAEC,QAAQ;YAAI;QAElB;QAEA,qCAAqC;QACrC,MAAMC,aAAa,MAAMC,qBAAO,CAACC,MAAM,CAAC;YACtC,GAAGV,WAAW;YACdC;YACAC;QACF;QAEA,OAAOE,oBAAY,CAACD,IAAI,CAAC;YAAEE,SAAS;YAAMM,MAAMH;QAAW;IAC7D,EAAE,OAAOI,OAAY;QACnB,OAAOR,oBAAY,CAACD,IAAI,CACtB;YAAEE,SAAS;YAAOC,SAASM,MAAMN,OAAO;QAAC,GACzC;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f9b332fb9da76c11190dbd93aa96f195a92278ca"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_r721cd73q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_r721cd73q();
cov_r721cd73q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_r721cd73q().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_r721cd73q().f[0]++;
    cov_r721cd73q().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_r721cd73q().s[3]++, require("next/server"));
const _productmodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_r721cd73q().s[4]++, _interop_require_default(require("../../../../lib/db/models/product.model")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_r721cd73q().f[1]++;
  cov_r721cd73q().s[5]++;
  return /* istanbul ignore next */(cov_r721cd73q().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_r721cd73q().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_r721cd73q().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_r721cd73q().b[0][1]++, {
    default: obj
  });
}
async function POST(req) {
  /* istanbul ignore next */
  cov_r721cd73q().f[2]++;
  cov_r721cd73q().s[6]++;
  try {
    const {
      productData,
      sourceSellerId,
      sourceStoreId
    } =
    /* istanbul ignore next */
    (cov_r721cd73q().s[7]++, await req.json());
    // Verify required data
    /* istanbul ignore next */
    cov_r721cd73q().s[8]++;
    if (
    /* istanbul ignore next */
    (cov_r721cd73q().b[3][0]++, !productData) ||
    /* istanbul ignore next */
    (cov_r721cd73q().b[3][1]++, !sourceSellerId) &&
    /* istanbul ignore next */
    (cov_r721cd73q().b[3][2]++, !sourceStoreId)) {
      /* istanbul ignore next */
      cov_r721cd73q().b[2][0]++;
      cov_r721cd73q().s[9]++;
      return _server.NextResponse.json({
        success: false,
        message: 'Missing required fields'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_r721cd73q().b[2][1]++;
    }
    // Create a new product in the system
    const newProduct =
    /* istanbul ignore next */
    (cov_r721cd73q().s[10]++, await _productmodel.default.create({
      ...productData,
      sourceSellerId,
      sourceStoreId
    }));
    /* istanbul ignore next */
    cov_r721cd73q().s[11]++;
    return _server.NextResponse.json({
      success: true,
      data: newProduct
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_r721cd73q().s[12]++;
    return _server.NextResponse.json({
      success: false,
      message: error.message
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQT1NUIiwicmVxIiwiY292X3I3MjFjZDczcSIsImYiLCJzIiwicHJvZHVjdERhdGEiLCJzb3VyY2VTZWxsZXJJZCIsInNvdXJjZVN0b3JlSWQiLCJqc29uIiwiYiIsIl9zZXJ2ZXIiLCJOZXh0UmVzcG9uc2UiLCJzdWNjZXNzIiwibWVzc2FnZSIsInN0YXR1cyIsIm5ld1Byb2R1Y3QiLCJfcHJvZHVjdG1vZGVsIiwiZGVmYXVsdCIsImNyZWF0ZSIsImRhdGEiLCJlcnJvciJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9hcHAvYXBpL3Byb2R1Y3RzL2ltcG9ydC9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IFByb2R1Y3QgZnJvbSAnQC9saWIvZGIvbW9kZWxzL3Byb2R1Y3QubW9kZWwnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXE6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBwcm9kdWN0RGF0YSwgc291cmNlU2VsbGVySWQsIHNvdXJjZVN0b3JlSWQgfSA9IGF3YWl0IHJlcS5qc29uKCk7XG5cbiAgICAvLyBWZXJpZnkgcmVxdWlyZWQgZGF0YVxuICAgIGlmICghcHJvZHVjdERhdGEgfHwgKCFzb3VyY2VTZWxsZXJJZCAmJiAhc291cmNlU3RvcmVJZCkpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBzdWNjZXNzOiBmYWxzZSwgbWVzc2FnZTogJ01pc3NpbmcgcmVxdWlyZWQgZmllbGRzJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gQ3JlYXRlIGEgbmV3IHByb2R1Y3QgaW4gdGhlIHN5c3RlbVxuICAgIGNvbnN0IG5ld1Byb2R1Y3QgPSBhd2FpdCBQcm9kdWN0LmNyZWF0ZSh7XG4gICAgICAuLi5wcm9kdWN0RGF0YSxcbiAgICAgIHNvdXJjZVNlbGxlcklkLFxuICAgICAgc291cmNlU3RvcmVJZCxcbiAgICB9KTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IHRydWUsIGRhdGE6IG5ld1Byb2R1Y3QgfSk7XG4gIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApO1xuICB9XG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQUdzQjs7Ozs7O1dBQUFBLElBQUE7Ozs7O2lDQUhvQjs7O3VFQUN0Qjs7Ozs7Ozs7Ozs7Ozs7O0FBRWIsZUFBZUEsS0FBS0MsR0FBZ0I7RUFBQTtFQUFBQyxhQUFBLEdBQUFDLENBQUE7RUFBQUQsYUFBQSxHQUFBRSxDQUFBO0VBQ3pDLElBQUk7SUFDRixNQUFNO01BQUVDLFdBQVc7TUFBRUMsY0FBYztNQUFFQztJQUFhLENBQUU7SUFBQTtJQUFBLENBQUFMLGFBQUEsR0FBQUUsQ0FBQSxPQUFHLE1BQU1ILEdBQUEsQ0FBSU8sSUFBSTtJQUVyRTtJQUFBO0lBQUFOLGFBQUEsR0FBQUUsQ0FBQTtJQUNBO0lBQUk7SUFBQSxDQUFBRixhQUFBLEdBQUFPLENBQUEsV0FBQ0osV0FBQTtJQUFnQjtJQUFBLENBQUFILGFBQUEsR0FBQU8sQ0FBQSxXQUFDSCxjQUFBO0lBQUE7SUFBQSxDQUFBSixhQUFBLEdBQUFPLENBQUEsVUFBa0IsQ0FBQ0YsYUFBQSxHQUFnQjtNQUFBO01BQUFMLGFBQUEsR0FBQU8sQ0FBQTtNQUFBUCxhQUFBLEdBQUFFLENBQUE7TUFDdkQsT0FBT00sT0FBQSxDQUFBQyxZQUFZLENBQUNILElBQUksQ0FDdEI7UUFBRUksT0FBQSxFQUFTO1FBQU9DLE9BQUEsRUFBUztNQUEwQixHQUNyRDtRQUFFQyxNQUFBLEVBQVE7TUFBSTtJQUVsQjtJQUFBO0lBQUE7TUFBQVosYUFBQSxHQUFBTyxDQUFBO0lBQUE7SUFFQTtJQUNBLE1BQU1NLFVBQUE7SUFBQTtJQUFBLENBQUFiLGFBQUEsR0FBQUUsQ0FBQSxRQUFhLE1BQU1ZLGFBQUEsQ0FBQUMsT0FBTyxDQUFDQyxNQUFNLENBQUM7TUFDdEMsR0FBR2IsV0FBVztNQUNkQyxjQUFBO01BQ0FDO0lBQ0Y7SUFBQTtJQUFBTCxhQUFBLEdBQUFFLENBQUE7SUFFQSxPQUFPTSxPQUFBLENBQUFDLFlBQVksQ0FBQ0gsSUFBSSxDQUFDO01BQUVJLE9BQUEsRUFBUztNQUFNTyxJQUFBLEVBQU1KO0lBQVc7RUFDN0QsRUFBRSxPQUFPSyxLQUFBLEVBQVk7SUFBQTtJQUFBbEIsYUFBQSxHQUFBRSxDQUFBO0lBQ25CLE9BQU9NLE9BQUEsQ0FBQUMsWUFBWSxDQUFDSCxJQUFJLENBQ3RCO01BQUVJLE9BQUEsRUFBUztNQUFPQyxPQUFBLEVBQVNPLEtBQUEsQ0FBTVA7SUFBUSxHQUN6QztNQUFFQyxNQUFBLEVBQVE7SUFBSTtFQUVsQjtBQUNGIiwiaWdub3JlTGlzdCI6W119