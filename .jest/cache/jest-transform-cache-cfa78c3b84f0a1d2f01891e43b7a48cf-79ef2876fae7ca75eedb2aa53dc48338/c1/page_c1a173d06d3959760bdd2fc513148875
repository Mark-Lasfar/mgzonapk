319b7f154c19be03e076939448967dc3
"use strict";

/* istanbul ignore next */
function cov_e0kk78mr3() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/pod/designs/page.tsx";
  var hash = "a5063cb6e5ea6ee44f1498f825b50a746bb24626";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/pod/designs/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 26
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 14
        },
        end: {
          line: 20,
          column: 50
        }
      },
      "8": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 75
        }
      },
      "9": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 84
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "11": {
        start: {
          line: 28,
          column: 17
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "12": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 43
        }
      },
      "13": {
        start: {
          line: 33,
          column: 17
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "14": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 36,
          column: 6
        }
      },
      "15": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 50,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        },
        loc: {
          start: {
            line: 12,
            column: 24
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 14
          },
          end: {
            line: 15,
            column: 15
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "PODDesigns",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 25
          }
        },
        loc: {
          start: {
            line: 31,
            column: 44
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 31
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 35
          },
          end: {
            line: 24,
            column: 38
          }
        }, {
          start: {
            line: 24,
            column: 41
          },
          end: {
            line: 26,
            column: 5
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 14
          }
        }, {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 32
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 42
          }
        }, {
          start: {
            line: 33,
            column: 46
          },
          end: {
            line: 33,
            column: 47
          }
        }],
        line: 33
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/pod/designs/page.tsx"],
      sourcesContent: ["import { Metadata } from 'next'\nimport { auth } from '@/auth'\nimport { getPODDesigns } from '@/lib/actions/pod.actions'\nimport DesignList from './design-list'\n\nexport const metadata: Metadata = {\n  title: 'Print on Demand Designs',\n}\n\nexport default async function PODDesigns({\n  searchParams,\n}: {\n  searchParams: { page?: string }\n}) {\n  const session = await auth()\n  const page = Number(searchParams.page) || 1\n  const { data } = await getPODDesigns(session?.user.id!, { page })\n\n  return (\n    <div className=\"space-y-4\">\n      <h1 className=\"text-2xl font-bold\">Print on Demand Designs</h1>\n      <DesignList designs={data.designs} totalPages={data.totalPages} page={page} />\n    </div>\n  )\n}"],
      names: ["PODDesigns", "metadata", "title", "searchParams", "session", "auth", "page", "Number", "data", "getPODDesigns", "user", "id", "div", "className", "h1", "DesignList", "designs", "totalPages"],
      mappings: ";;;;;;;;;;;IASA,OAeC;eAf6BA;;IAJjBC,QAAQ;eAARA;;;;sBAJQ;4BACS;mEACP;;;;;;AAEhB,MAAMA,WAAqB;IAChCC,OAAO;AACT;AAEe,eAAeF,WAAW,EACvCG,YAAY,EAGb;IACC,MAAMC,UAAU,MAAMC,IAAAA,UAAI;IAC1B,MAAMC,OAAOC,OAAOJ,aAAaG,IAAI,KAAK;IAC1C,MAAM,EAAEE,IAAI,EAAE,GAAG,MAAMC,IAAAA,yBAAa,EAACL,SAASM,KAAKC,IAAK;QAAEL;IAAK;IAE/D,qBACE,sBAACM;QAAIC,WAAU;;0BACb,qBAACC;gBAAGD,WAAU;0BAAqB;;0BACnC,qBAACE,mBAAU;gBAACC,SAASR,KAAKQ,OAAO;gBAAEC,YAAYT,KAAKS,UAAU;gBAAEX,MAAMA;;;;AAG5E"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a5063cb6e5ea6ee44f1498f825b50a746bb24626"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_e0kk78mr3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_e0kk78mr3();
cov_e0kk78mr3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_e0kk78mr3().f[0]++;
  cov_e0kk78mr3().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_e0kk78mr3().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_e0kk78mr3().s[3]++;
_export(exports, {
  default: function () {
    /* istanbul ignore next */
    cov_e0kk78mr3().f[1]++;
    cov_e0kk78mr3().s[4]++;
    return PODDesigns;
  },
  metadata: function () {
    /* istanbul ignore next */
    cov_e0kk78mr3().f[2]++;
    cov_e0kk78mr3().s[5]++;
    return metadata;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_e0kk78mr3().s[6]++, require("react/jsx-runtime"));
const _auth =
/* istanbul ignore next */
(cov_e0kk78mr3().s[7]++, require("../../../../../../../auth"));
const _podactions =
/* istanbul ignore next */
(cov_e0kk78mr3().s[8]++, require("../../../../../../../lib/actions/pod.actions"));
const _designlist =
/* istanbul ignore next */
(/*#__PURE__*/cov_e0kk78mr3().s[9]++, _interop_require_default(require("./design-list")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_e0kk78mr3().f[3]++;
  cov_e0kk78mr3().s[10]++;
  return /* istanbul ignore next */(cov_e0kk78mr3().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_e0kk78mr3().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_e0kk78mr3().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_e0kk78mr3().b[0][1]++, {
    default: obj
  });
}
const metadata =
/* istanbul ignore next */
(cov_e0kk78mr3().s[11]++, {
  title: 'Print on Demand Designs'
});
async function PODDesigns({
  searchParams
}) {
  /* istanbul ignore next */
  cov_e0kk78mr3().f[4]++;
  const session =
  /* istanbul ignore next */
  (cov_e0kk78mr3().s[12]++, await (0, _auth.auth)());
  const page =
  /* istanbul ignore next */
  (cov_e0kk78mr3().s[13]++,
  /* istanbul ignore next */
  (cov_e0kk78mr3().b[2][0]++, Number(searchParams.page)) ||
  /* istanbul ignore next */
  (cov_e0kk78mr3().b[2][1]++, 1));
  const {
    data
  } =
  /* istanbul ignore next */
  (cov_e0kk78mr3().s[14]++, await (0, _podactions.getPODDesigns)(session?.user.id, {
    page
  }));
  /* istanbul ignore next */
  cov_e0kk78mr3().s[15]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-4",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
      className: "text-2xl font-bold",
      children: "Print on Demand Designs"
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_designlist.default, {
      designs: data.designs,
      totalPages: data.totalPages,
      page: page
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZWZhdWx0IiwiY292X2Uwa2s3OG1yMyIsImYiLCJzIiwiUE9ERGVzaWducyIsIm1ldGFkYXRhIiwidGl0bGUiLCJzZWFyY2hQYXJhbXMiLCJzZXNzaW9uIiwiX2F1dGgiLCJhdXRoIiwicGFnZSIsImIiLCJOdW1iZXIiLCJkYXRhIiwiX3BvZGFjdGlvbnMiLCJnZXRQT0REZXNpZ25zIiwidXNlciIsImlkIiwiX2pzeHJ1bnRpbWUiLCJqc3hzIiwiY2xhc3NOYW1lIiwianN4IiwiX2Rlc2lnbmxpc3QiLCJkZXNpZ25zIiwidG90YWxQYWdlcyJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9hcHAvW2xvY2FsZV0vKHJvb3QpL3NlbGxlci9kYXNoYm9hcmQvcG9kL2Rlc2lnbnMvcGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWV0YWRhdGEgfSBmcm9tICduZXh0J1xuaW1wb3J0IHsgYXV0aCB9IGZyb20gJ0AvYXV0aCdcbmltcG9ydCB7IGdldFBPRERlc2lnbnMgfSBmcm9tICdAL2xpYi9hY3Rpb25zL3BvZC5hY3Rpb25zJ1xuaW1wb3J0IERlc2lnbkxpc3QgZnJvbSAnLi9kZXNpZ24tbGlzdCdcblxuZXhwb3J0IGNvbnN0IG1ldGFkYXRhOiBNZXRhZGF0YSA9IHtcbiAgdGl0bGU6ICdQcmludCBvbiBEZW1hbmQgRGVzaWducycsXG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIFBPRERlc2lnbnMoe1xuICBzZWFyY2hQYXJhbXMsXG59OiB7XG4gIHNlYXJjaFBhcmFtczogeyBwYWdlPzogc3RyaW5nIH1cbn0pIHtcbiAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGF1dGgoKVxuICBjb25zdCBwYWdlID0gTnVtYmVyKHNlYXJjaFBhcmFtcy5wYWdlKSB8fCAxXG4gIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgZ2V0UE9ERGVzaWducyhzZXNzaW9uPy51c2VyLmlkISwgeyBwYWdlIH0pXG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNFwiPlxuICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtMnhsIGZvbnQtYm9sZFwiPlByaW50IG9uIERlbWFuZCBEZXNpZ25zPC9oMT5cbiAgICAgIDxEZXNpZ25MaXN0IGRlc2lnbnM9e2RhdGEuZGVzaWduc30gdG90YWxQYWdlcz17ZGF0YS50b3RhbFBhZ2VzfSBwYWdlPXtwYWdlfSAvPlxuICAgIDwvZGl2PlxuICApXG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBU0FBLE9BZUMsV0FBQUEsQ0FBQTtJQUFBO0lBQUFDLGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7V0FmNkJDLFVBQUE7O0VBSmpCQyxRQUFRLFdBQUFBLENBQUE7SUFBQTtJQUFBSixhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO1dBQVJFLFFBQUE7Ozs7Ozs7O2lDQUpROzs7aUNBQ1M7Ozt1RUFDUDs7Ozs7Ozs7Ozs7Ozs7O0FBRWhCLE1BQU1BLFFBQUE7QUFBQTtBQUFBLENBQUFKLGFBQUEsR0FBQUUsQ0FBQSxRQUFxQjtFQUNoQ0csS0FBQSxFQUFPO0FBQ1Q7QUFFZSxlQUFlRixXQUFXO0VBQ3ZDRztBQUFZLENBR2I7RUFBQTtFQUFBTixhQUFBLEdBQUFDLENBQUE7RUFDQyxNQUFNTSxPQUFBO0VBQUE7RUFBQSxDQUFBUCxhQUFBLEdBQUFFLENBQUEsUUFBVSxNQUFNLElBQUFNLEtBQUEsQ0FBQUMsSUFBSTtFQUMxQixNQUFNQyxJQUFBO0VBQUE7RUFBQSxDQUFBVixhQUFBLEdBQUFFLENBQUE7RUFBTztFQUFBLENBQUFGLGFBQUEsR0FBQVcsQ0FBQSxVQUFBQyxNQUFBLENBQU9OLFlBQUEsQ0FBYUksSUFBSTtFQUFBO0VBQUEsQ0FBQVYsYUFBQSxHQUFBVyxDQUFBLFVBQUs7RUFDMUMsTUFBTTtJQUFFRTtFQUFJLENBQUU7RUFBQTtFQUFBLENBQUFiLGFBQUEsR0FBQUUsQ0FBQSxRQUFHLE1BQU0sSUFBQVksV0FBQSxDQUFBQyxhQUFhLEVBQUNSLE9BQUEsRUFBU1MsSUFBQSxDQUFLQyxFQUFBLEVBQUs7SUFBRVA7RUFBSztFQUFBO0VBQUFWLGFBQUEsR0FBQUUsQ0FBQTtFQUUvRCxvQkFDRSxJQUFBZ0IsV0FBQSxDQUFBQyxJQUFBLEVBQUM7SUFBSUMsU0FBQSxFQUFVOzRCQUNiLElBQUFGLFdBQUEsQ0FBQUcsR0FBQSxFQUFDO01BQUdELFNBQUEsRUFBVTtnQkFBcUI7cUJBQ25DLElBQUFGLFdBQUEsQ0FBQUcsR0FBQSxFQUFDQyxXQUFBLENBQUF2QixPQUFVO01BQUN3QixPQUFBLEVBQVNWLElBQUEsQ0FBS1UsT0FBTztNQUFFQyxVQUFBLEVBQVlYLElBQUEsQ0FBS1csVUFBVTtNQUFFZCxJQUFBLEVBQU1BOzs7QUFHNUUiLCJpZ25vcmVMaXN0IjpbXX0=