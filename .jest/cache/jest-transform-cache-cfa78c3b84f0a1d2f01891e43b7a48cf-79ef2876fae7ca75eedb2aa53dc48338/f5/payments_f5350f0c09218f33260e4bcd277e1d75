339bba0f81298f300d0dd8429d1c298f
"use strict";

/* istanbul ignore next */
function cov_2ra3kbgffo() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/utils/payments.ts";
  var hash = "3e8c53a38f3f5239144f53e5cd5a0021b0071c01";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/utils/payments.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 36
        }
      },
      "3": {
        start: {
          line: 11,
          column: 30
        },
        end: {
          line: 11,
          column: 73
        }
      },
      "4": {
        start: {
          line: 12,
          column: 41
        },
        end: {
          line: 12,
          column: 105
        }
      },
      "5": {
        start: {
          line: 13,
          column: 46
        },
        end: {
          line: 13,
          column: 120
        }
      },
      "6": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 28
        }
      },
      "7": {
        start: {
          line: 15,
          column: 35
        },
        end: {
          line: 15,
          column: 97
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "9": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 23,
          column: 2
        }
      },
      "10": {
        start: {
          line: 24,
          column: 21
        },
        end: {
          line: 24,
          column: 205
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 39
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "13": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "15": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 48
        }
      },
      "16": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "17": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 61
        }
      },
      "18": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "19": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "20": {
        start: {
          line: 46,
          column: 28
        },
        end: {
          line: 70,
          column: 14
        }
      },
      "21": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 31
        }
      },
      "22": {
        start: {
          line: 72,
          column: 15
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "23": {
        start: {
          line: 73,
          column: 28
        },
        end: {
          line: 73,
          column: 87
        }
      },
      "24": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 86,
          column: 15
        }
      },
      "25": {
        start: {
          line: 87,
          column: 29
        },
        end: {
          line: 87,
          column: 64
        }
      },
      "26": {
        start: {
          line: 88,
          column: 34
        },
        end: {
          line: 88,
          column: 52
        }
      },
      "27": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "28": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 79
        }
      },
      "29": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 54
        }
      },
      "30": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 62
        }
      },
      "31": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "createPaymentSession",
        decl: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 35
          }
        },
        loc: {
          start: {
            line: 25,
            column: 82
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 129
          },
          end: {
            line: 24,
            column: 163
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 129
          },
          end: {
            line: 24,
            column: 157
          }
        }, {
          start: {
            line: 24,
            column: 161
          },
          end: {
            line: 24,
            column: 163
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 165
          },
          end: {
            line: 24,
            column: 203
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 165
          },
          end: {
            line: 24,
            column: 197
          }
        }, {
          start: {
            line: 24,
            column: 201
          },
          end: {
            line: 24,
            column: 203
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: 72,
            column: 15
          },
          end: {
            line: 97,
            column: 9
          }
        }],
        line: 45
      },
      "7": {
        loc: {
          start: {
            line: 72,
            column: 15
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 15
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: 95,
            column: 15
          },
          end: {
            line: 97,
            column: 9
          }
        }],
        line: 72
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/utils/payments.ts"],
      sourcesContent: ["import Stripe from 'stripe';\nimport paypal from '@paypal/checkout-server-sdk';\nimport SubscriptionOrder from '@/lib/db/models/subscription-order.model';\nimport { connectToDatabase } from '@/lib/db';\nimport Seller from '@/lib/db/models/seller.model';\n\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {\n  apiVersion: '2023-10-16',\n});\n\nconst paypalClient = new paypal.core.PayPalHttpClient(\n  new paypal.core.SandboxEnvironment(\n    process.env.PAYPAL_CLIENT_ID || '',\n    process.env.PAYPAL_CLIENT_SECRET || ''\n  )\n);\n\ninterface PaymentSessionParams {\n  userId: string;\n  planId: string;\n  amount: number;\n  currency: string;\n  method: 'stripe' | 'paypal';\n}\n\nexport async function createPaymentSession({\n  userId,\n  planId,\n  amount,\n  currency,\n  method,\n}: PaymentSessionParams): Promise<string> {\n  await connectToDatabase();\n\n  try {\n    const seller = await Seller.findOne({ userId });\n    if (!seller) {\n      throw new Error('Seller not found');\n    }\n    if (!seller.bankInfo.verified) {\n      throw new Error('Bank information not verified');\n    }\n\n    const order = await SubscriptionOrder.create({\n      userId,\n      planId,\n      amount,\n      currency,\n      paymentMethod: method,\n      isPaid: false,\n    });\n\n    if (method === 'stripe') {\n      const session = await stripe.checkout.sessions.create({\n        payment_method_types: ['card'],\n        line_items: [\n          {\n            price_data: {\n              currency,\n              product_data: {\n                name: `Subscription Plan ${planId}`,\n              },\n              unit_amount: Math.round(amount * 100),\n            },\n            quantity: 1,\n          },\n        ],\n        mode: 'payment',\n        success_url: `${process.env.NEXT_PUBLIC_BASE_URL}/checkout/${order._id}/stripe-payment-success`,\n        cancel_url: `${process.env.NEXT_PUBLIC_BASE_URL}/account/subscriptions`,\n        metadata: {\n          userId,\n          planId,\n          orderId: order._id.toString(),\n        },\n      });\n\n      return session.url!;\n    } else if (method === 'paypal') {\n      const request = new paypal.orders.OrdersCreateRequest();\n      request.requestBody({\n        intent: 'CAPTURE',\n        purchase_units: [\n          {\n            amount: {\n              currency_code: currency,\n              value: amount.toFixed(2),\n            },\n            description: `Subscription Plan ${planId}`,\n            custom_id: order._id.toString(),\n          },\n        ],\n      });\n\n      const response = await paypalClient.execute(request);\n      const paypalOrderId = response.result.id;\n\n      await SubscriptionOrder.findByIdAndUpdate(order._id, { paymentResult: { id: paypalOrderId } });\n\n      return `${process.env.NEXT_PUBLIC_BASE_URL}/checkout/${order._id}`;\n    } else {\n      throw new Error('Invalid payment method');\n    }\n  } catch (error) {\n    console.error('Create payment session error:', error);\n    throw error;\n  }\n}"],
      names: ["createPaymentSession", "stripe", "Stripe", "process", "env", "STRIPE_SECRET_KEY", "apiVersion", "paypalClient", "paypal", "core", "PayPalHttpClient", "SandboxEnvironment", "PAYPAL_CLIENT_ID", "PAYPAL_CLIENT_SECRET", "userId", "planId", "amount", "currency", "method", "connectToDatabase", "seller", "Seller", "findOne", "Error", "bankInfo", "verified", "order", "SubscriptionOrder", "create", "paymentMethod", "isPaid", "session", "checkout", "sessions", "payment_method_types", "line_items", "price_data", "product_data", "name", "unit_amount", "Math", "round", "quantity", "mode", "success_url", "NEXT_PUBLIC_BASE_URL", "_id", "cancel_url", "metadata", "orderId", "toString", "url", "request", "orders", "OrdersCreateRequest", "requestBody", "intent", "purchase_units", "currency_code", "value", "toFixed", "description", "custom_id", "response", "execute", "paypalOrderId", "result", "id", "findByIdAndUpdate", "paymentResult", "error", "console"],
      mappings: ";;;;+BAyBsBA;;;eAAAA;;;+DAzBH;0EACA;+EACW;oBACI;oEACf;;;;;;AAEnB,MAAMC,SAAS,IAAIC,eAAM,CAACC,QAAQC,GAAG,CAACC,iBAAiB,EAAG;IACxDC,YAAY;AACd;AAEA,MAAMC,eAAe,IAAIC,0BAAM,CAACC,IAAI,CAACC,gBAAgB,CACnD,IAAIF,0BAAM,CAACC,IAAI,CAACE,kBAAkB,CAChCR,QAAQC,GAAG,CAACQ,gBAAgB,IAAI,IAChCT,QAAQC,GAAG,CAACS,oBAAoB,IAAI;AAYjC,eAAeb,qBAAqB,EACzCc,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,QAAQ,EACRC,MAAM,EACe;IACrB,MAAMC,IAAAA,qBAAiB;IAEvB,IAAI;QACF,MAAMC,SAAS,MAAMC,oBAAM,CAACC,OAAO,CAAC;YAAER;QAAO;QAC7C,IAAI,CAACM,QAAQ;YACX,MAAM,IAAIG,MAAM;QAClB;QACA,IAAI,CAACH,OAAOI,QAAQ,CAACC,QAAQ,EAAE;YAC7B,MAAM,IAAIF,MAAM;QAClB;QAEA,MAAMG,QAAQ,MAAMC,+BAAiB,CAACC,MAAM,CAAC;YAC3Cd;YACAC;YACAC;YACAC;YACAY,eAAeX;YACfY,QAAQ;QACV;QAEA,IAAIZ,WAAW,UAAU;YACvB,MAAMa,UAAU,MAAM9B,OAAO+B,QAAQ,CAACC,QAAQ,CAACL,MAAM,CAAC;gBACpDM,sBAAsB;oBAAC;iBAAO;gBAC9BC,YAAY;oBACV;wBACEC,YAAY;4BACVnB;4BACAoB,cAAc;gCACZC,MAAM,CAAC,kBAAkB,EAAEvB,QAAQ;4BACrC;4BACAwB,aAAaC,KAAKC,KAAK,CAACzB,SAAS;wBACnC;wBACA0B,UAAU;oBACZ;iBACD;gBACDC,MAAM;gBACNC,aAAa,GAAGzC,QAAQC,GAAG,CAACyC,oBAAoB,CAAC,UAAU,EAAEnB,MAAMoB,GAAG,CAAC,uBAAuB,CAAC;gBAC/FC,YAAY,GAAG5C,QAAQC,GAAG,CAACyC,oBAAoB,CAAC,sBAAsB,CAAC;gBACvEG,UAAU;oBACRlC;oBACAC;oBACAkC,SAASvB,MAAMoB,GAAG,CAACI,QAAQ;gBAC7B;YACF;YAEA,OAAOnB,QAAQoB,GAAG;QACpB,OAAO,IAAIjC,WAAW,UAAU;YAC9B,MAAMkC,UAAU,IAAI5C,0BAAM,CAAC6C,MAAM,CAACC,mBAAmB;YACrDF,QAAQG,WAAW,CAAC;gBAClBC,QAAQ;gBACRC,gBAAgB;oBACd;wBACEzC,QAAQ;4BACN0C,eAAezC;4BACf0C,OAAO3C,OAAO4C,OAAO,CAAC;wBACxB;wBACAC,aAAa,CAAC,kBAAkB,EAAE9C,QAAQ;wBAC1C+C,WAAWpC,MAAMoB,GAAG,CAACI,QAAQ;oBAC/B;iBACD;YACH;YAEA,MAAMa,WAAW,MAAMxD,aAAayD,OAAO,CAACZ;YAC5C,MAAMa,gBAAgBF,SAASG,MAAM,CAACC,EAAE;YAExC,MAAMxC,+BAAiB,CAACyC,iBAAiB,CAAC1C,MAAMoB,GAAG,EAAE;gBAAEuB,eAAe;oBAAEF,IAAIF;gBAAc;YAAE;YAE5F,OAAO,GAAG9D,QAAQC,GAAG,CAACyC,oBAAoB,CAAC,UAAU,EAAEnB,MAAMoB,GAAG,EAAE;QACpE,OAAO;YACL,MAAM,IAAIvB,MAAM;QAClB;IACF,EAAE,OAAO+C,OAAO;QACdC,QAAQD,KAAK,CAAC,iCAAiCA;QAC/C,MAAMA;IACR;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3e8c53a38f3f5239144f53e5cd5a0021b0071c01"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ra3kbgffo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ra3kbgffo();
cov_2ra3kbgffo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ra3kbgffo().s[1]++;
Object.defineProperty(exports, "createPaymentSession", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2ra3kbgffo().f[0]++;
    cov_2ra3kbgffo().s[2]++;
    return createPaymentSession;
  }
});
const _stripe =
/* istanbul ignore next */
(/*#__PURE__*/cov_2ra3kbgffo().s[3]++, _interop_require_default(require("stripe")));
const _checkoutserversdk =
/* istanbul ignore next */
(/*#__PURE__*/cov_2ra3kbgffo().s[4]++, _interop_require_default(require("@paypal/checkout-server-sdk")));
const _subscriptionordermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_2ra3kbgffo().s[5]++, _interop_require_default(require("../db/models/subscription-order.model")));
const _db =
/* istanbul ignore next */
(cov_2ra3kbgffo().s[6]++, require("../db"));
const _sellermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_2ra3kbgffo().s[7]++, _interop_require_default(require("../db/models/seller.model")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2ra3kbgffo().f[1]++;
  cov_2ra3kbgffo().s[8]++;
  return /* istanbul ignore next */(cov_2ra3kbgffo().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2ra3kbgffo().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2ra3kbgffo().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2ra3kbgffo().b[0][1]++, {
    default: obj
  });
}
const stripe =
/* istanbul ignore next */
(cov_2ra3kbgffo().s[9]++, new _stripe.default(process.env.STRIPE_SECRET_KEY, {
  apiVersion: '2023-10-16'
}));
const paypalClient =
/* istanbul ignore next */
(cov_2ra3kbgffo().s[10]++, new _checkoutserversdk.default.core.PayPalHttpClient(new _checkoutserversdk.default.core.SandboxEnvironment(
/* istanbul ignore next */
(cov_2ra3kbgffo().b[2][0]++, process.env.PAYPAL_CLIENT_ID) ||
/* istanbul ignore next */
(cov_2ra3kbgffo().b[2][1]++, ''),
/* istanbul ignore next */
(cov_2ra3kbgffo().b[3][0]++, process.env.PAYPAL_CLIENT_SECRET) ||
/* istanbul ignore next */
(cov_2ra3kbgffo().b[3][1]++, ''))));
async function createPaymentSession({
  userId,
  planId,
  amount,
  currency,
  method
}) {
  /* istanbul ignore next */
  cov_2ra3kbgffo().f[2]++;
  cov_2ra3kbgffo().s[11]++;
  await (0, _db.connectToDatabase)();
  /* istanbul ignore next */
  cov_2ra3kbgffo().s[12]++;
  try {
    const seller =
    /* istanbul ignore next */
    (cov_2ra3kbgffo().s[13]++, await _sellermodel.default.findOne({
      userId
    }));
    /* istanbul ignore next */
    cov_2ra3kbgffo().s[14]++;
    if (!seller) {
      /* istanbul ignore next */
      cov_2ra3kbgffo().b[4][0]++;
      cov_2ra3kbgffo().s[15]++;
      throw new Error('Seller not found');
    } else
    /* istanbul ignore next */
    {
      cov_2ra3kbgffo().b[4][1]++;
    }
    cov_2ra3kbgffo().s[16]++;
    if (!seller.bankInfo.verified) {
      /* istanbul ignore next */
      cov_2ra3kbgffo().b[5][0]++;
      cov_2ra3kbgffo().s[17]++;
      throw new Error('Bank information not verified');
    } else
    /* istanbul ignore next */
    {
      cov_2ra3kbgffo().b[5][1]++;
    }
    const order =
    /* istanbul ignore next */
    (cov_2ra3kbgffo().s[18]++, await _subscriptionordermodel.default.create({
      userId,
      planId,
      amount,
      currency,
      paymentMethod: method,
      isPaid: false
    }));
    /* istanbul ignore next */
    cov_2ra3kbgffo().s[19]++;
    if (method === 'stripe') {
      /* istanbul ignore next */
      cov_2ra3kbgffo().b[6][0]++;
      const session =
      /* istanbul ignore next */
      (cov_2ra3kbgffo().s[20]++, await stripe.checkout.sessions.create({
        payment_method_types: ['card'],
        line_items: [{
          price_data: {
            currency,
            product_data: {
              name: `Subscription Plan ${planId}`
            },
            unit_amount: Math.round(amount * 100)
          },
          quantity: 1
        }],
        mode: 'payment',
        success_url: `${process.env.NEXT_PUBLIC_BASE_URL}/checkout/${order._id}/stripe-payment-success`,
        cancel_url: `${process.env.NEXT_PUBLIC_BASE_URL}/account/subscriptions`,
        metadata: {
          userId,
          planId,
          orderId: order._id.toString()
        }
      }));
      /* istanbul ignore next */
      cov_2ra3kbgffo().s[21]++;
      return session.url;
    } else {
      /* istanbul ignore next */
      cov_2ra3kbgffo().b[6][1]++;
      cov_2ra3kbgffo().s[22]++;
      if (method === 'paypal') {
        /* istanbul ignore next */
        cov_2ra3kbgffo().b[7][0]++;
        const request =
        /* istanbul ignore next */
        (cov_2ra3kbgffo().s[23]++, new _checkoutserversdk.default.orders.OrdersCreateRequest());
        /* istanbul ignore next */
        cov_2ra3kbgffo().s[24]++;
        request.requestBody({
          intent: 'CAPTURE',
          purchase_units: [{
            amount: {
              currency_code: currency,
              value: amount.toFixed(2)
            },
            description: `Subscription Plan ${planId}`,
            custom_id: order._id.toString()
          }]
        });
        const response =
        /* istanbul ignore next */
        (cov_2ra3kbgffo().s[25]++, await paypalClient.execute(request));
        const paypalOrderId =
        /* istanbul ignore next */
        (cov_2ra3kbgffo().s[26]++, response.result.id);
        /* istanbul ignore next */
        cov_2ra3kbgffo().s[27]++;
        await _subscriptionordermodel.default.findByIdAndUpdate(order._id, {
          paymentResult: {
            id: paypalOrderId
          }
        });
        /* istanbul ignore next */
        cov_2ra3kbgffo().s[28]++;
        return `${process.env.NEXT_PUBLIC_BASE_URL}/checkout/${order._id}`;
      } else {
        /* istanbul ignore next */
        cov_2ra3kbgffo().b[7][1]++;
        cov_2ra3kbgffo().s[29]++;
        throw new Error('Invalid payment method');
      }
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2ra3kbgffo().s[30]++;
    console.error('Create payment session error:', error);
    /* istanbul ignore next */
    cov_2ra3kbgffo().s[31]++;
    throw error;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,