4cab99db8e9b5ec56f9db7c06080f58e
'use server';
"use strict";

/* istanbul ignore next */
function cov_14s0caklag() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/subscription.actions.ts";
  var hash = "d21567e106106528ee04598b46e1455439726bce";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/subscription.actions.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 39
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 34
        }
      },
      "7": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 28
        }
      },
      "8": {
        start: {
          line: 24,
          column: 35
        },
        end: {
          line: 24,
          column: 97
        }
      },
      "9": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 34
        }
      },
      "10": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 6
        }
      },
      "11": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 43
        }
      },
      "13": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "15": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 41,
          column: 14
        }
      },
      "16": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 51,
          column: 10
        }
      },
      "18": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "19": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 43
        }
      },
      "20": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 57,
          column: 65
        }
      },
      "21": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 35
        }
      },
      "22": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "23": {
        start: {
          line: 60,
          column: 27
        },
        end: {
          line: 62,
          column: 31
        }
      },
      "24": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 61
        }
      },
      "25": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 63,
          column: 61
        }
      },
      "26": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 70,
          column: 14
        }
      },
      "27": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 73,
          column: 15
        }
      },
      "28": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 46
        }
      },
      "29": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 78,
          column: 14
        }
      },
      "30": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 45
        }
      },
      "31": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 24
        }
      },
      "32": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 33
        }
      },
      "33": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 89,
          column: 10
        }
      },
      "34": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "35": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 43
        }
      },
      "36": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 65
        }
      },
      "37": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 35
        }
      },
      "38": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "39": {
        start: {
          line: 98,
          column: 27
        },
        end: {
          line: 100,
          column: 31
        }
      },
      "40": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 61
        }
      },
      "41": {
        start: {
          line: 101,
          column: 25
        },
        end: {
          line: 101,
          column: 61
        }
      },
      "42": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 53
        }
      },
      "43": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 53
        }
      },
      "44": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 106,
          column: 15
        }
      },
      "45": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 46
        }
      },
      "46": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 111,
          column: 14
        }
      },
      "47": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 45
        }
      },
      "48": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 24
        }
      },
      "49": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 33
        }
      },
      "50": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 122,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 25
          }
        },
        loc: {
          start: {
            line: 13,
            column: 35
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 29
          },
          end: {
            line: 16,
            column: 30
          }
        },
        loc: {
          start: {
            line: 16,
            column: 40
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 19,
            column: 25
          }
        },
        loc: {
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "getSubscriptionByUserId",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 38
          }
        },
        loc: {
          start: {
            line: 31,
            column: 47
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "updateSubscription",
        decl: {
          start: {
            line: 54,
            column: 15
          },
          end: {
            line: 54,
            column: 33
          }
        },
        loc: {
          start: {
            line: 54,
            column: 58
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 54
      },
      "7": {
        name: "cancelSubscription",
        decl: {
          start: {
            line: 92,
            column: 15
          },
          end: {
            line: 92,
            column: 33
          }
        },
        loc: {
          start: {
            line: 92,
            column: 42
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 92
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 35
          },
          end: {
            line: 27,
            column: 38
          }
        }, {
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 29,
            column: 5
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 14
          }
        }, {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 32
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "4": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/actions/subscription.actions.ts"],
      sourcesContent: ["'use server'\n\nimport { connectToDatabase } from '../db'\nimport Seller, { ISeller } from '../db/models/seller.model'\nimport { formatError } from '../utils'\n\nexport async function getSubscriptionByUserId(userId: string): Promise<{\n  success: boolean\n  data?: ISeller['subscription']\n  message?: string\n}> {\n  try {\n    await connectToDatabase()\n    const seller = await Seller.findOne({ userId })\n    if (!seller) {\n      return { success: false, message: 'Seller not found' }\n    }\n    return { success: true, data: seller.subscription }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\n\nexport async function updateSubscription(\n  userId: string,\n  plan: 'Basic' | 'Pro' | 'VIP',\n  features: { productsLimit: number; commission: number; prioritySupport: boolean; instantPayouts: boolean }\n): Promise<{ success: boolean; message: string }> {\n  try {\n    await connectToDatabase()\n    const session = await Seller.startSession()\n    session.startTransaction()\n    try {\n      const seller = await Seller.findOne({ userId }).session(session)\n      if (!seller) throw new Error('Seller not found')\n      seller.subscription = {\n        plan,\n        startDate: new Date(),\n        endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days\n        status: 'active',\n        features,\n      }\n      await seller.save({ session })\n      await session.commitTransaction()\n      return { success: true, message: 'Subscription updated successfully' }\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}\n\nexport async function cancelSubscription(userId: string): Promise<{ success: boolean; message: string }> {\n  try {\n    await connectToDatabase()\n    const session = await Seller.startSession()\n    session.startTransaction()\n    try {\n      const seller = await Seller.findOne({ userId }).session(session)\n      if (!seller) throw new Error('Seller not found')\n      seller.subscription.status = 'cancelled'\n      seller.subscription.endDate = new Date()\n      await seller.save({ session })\n      await session.commitTransaction()\n      return { success: true, message: 'Subscription cancelled successfully' }\n    } catch (error) {\n      await session.abortTransaction()\n      throw error\n    } finally {\n      session.endSession()\n    }\n  } catch (error) {\n    return { success: false, message: formatError(error) }\n  }\n}"],
      names: ["cancelSubscription", "getSubscriptionByUserId", "updateSubscription", "userId", "connectToDatabase", "seller", "Seller", "findOne", "success", "message", "data", "subscription", "error", "formatError", "plan", "features", "session", "startSession", "startTransaction", "Error", "startDate", "Date", "endDate", "now", "status", "save", "commitTransaction", "abortTransaction", "endSession"],
      mappings: "AAAA;;;;;;;;;;;;IAwDsBA,kBAAkB;eAAlBA;;IAlDAC,uBAAuB;eAAvBA;;IAiBAC,kBAAkB;eAAlBA;;;oBArBY;oEACF;uBACJ;;;;;;AAErB,eAAeD,wBAAwBE,MAAc;IAK1D,IAAI;QACF,MAAMC,IAAAA,qBAAiB;QACvB,MAAMC,SAAS,MAAMC,oBAAM,CAACC,OAAO,CAAC;YAAEJ;QAAO;QAC7C,IAAI,CAACE,QAAQ;YACX,OAAO;gBAAEG,SAAS;gBAAOC,SAAS;YAAmB;QACvD;QACA,OAAO;YAAED,SAAS;YAAME,MAAML,OAAOM,YAAY;QAAC;IACpD,EAAE,OAAOC,OAAO;QACd,OAAO;YAAEJ,SAAS;YAAOC,SAASI,IAAAA,kBAAW,EAACD;QAAO;IACvD;AACF;AAEO,eAAeV,mBACpBC,MAAc,EACdW,IAA6B,EAC7BC,QAA0G;IAE1G,IAAI;QACF,MAAMX,IAAAA,qBAAiB;QACvB,MAAMY,UAAU,MAAMV,oBAAM,CAACW,YAAY;QACzCD,QAAQE,gBAAgB;QACxB,IAAI;YACF,MAAMb,SAAS,MAAMC,oBAAM,CAACC,OAAO,CAAC;gBAAEJ;YAAO,GAAGa,OAAO,CAACA;YACxD,IAAI,CAACX,QAAQ,MAAM,IAAIc,MAAM;YAC7Bd,OAAOM,YAAY,GAAG;gBACpBG;gBACAM,WAAW,IAAIC;gBACfC,SAAS,IAAID,KAAKA,KAAKE,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK;gBACnDC,QAAQ;gBACRT;YACF;YACA,MAAMV,OAAOoB,IAAI,CAAC;gBAAET;YAAQ;YAC5B,MAAMA,QAAQU,iBAAiB;YAC/B,OAAO;gBAAElB,SAAS;gBAAMC,SAAS;YAAoC;QACvE,EAAE,OAAOG,OAAO;YACd,MAAMI,QAAQW,gBAAgB;YAC9B,MAAMf;QACR,SAAU;YACRI,QAAQY,UAAU;QACpB;IACF,EAAE,OAAOhB,OAAO;QACd,OAAO;YAAEJ,SAAS;YAAOC,SAASI,IAAAA,kBAAW,EAACD;QAAO;IACvD;AACF;AAEO,eAAeZ,mBAAmBG,MAAc;IACrD,IAAI;QACF,MAAMC,IAAAA,qBAAiB;QACvB,MAAMY,UAAU,MAAMV,oBAAM,CAACW,YAAY;QACzCD,QAAQE,gBAAgB;QACxB,IAAI;YACF,MAAMb,SAAS,MAAMC,oBAAM,CAACC,OAAO,CAAC;gBAAEJ;YAAO,GAAGa,OAAO,CAACA;YACxD,IAAI,CAACX,QAAQ,MAAM,IAAIc,MAAM;YAC7Bd,OAAOM,YAAY,CAACa,MAAM,GAAG;YAC7BnB,OAAOM,YAAY,CAACW,OAAO,GAAG,IAAID;YAClC,MAAMhB,OAAOoB,IAAI,CAAC;gBAAET;YAAQ;YAC5B,MAAMA,QAAQU,iBAAiB;YAC/B,OAAO;gBAAElB,SAAS;gBAAMC,SAAS;YAAsC;QACzE,EAAE,OAAOG,OAAO;YACd,MAAMI,QAAQW,gBAAgB;YAC9B,MAAMf;QACR,SAAU;YACRI,QAAQY,UAAU;QACpB;IACF,EAAE,OAAOhB,OAAO;QACd,OAAO;YAAEJ,SAAS;YAAOC,SAASI,IAAAA,kBAAW,EAACD;QAAO;IACvD;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d21567e106106528ee04598b46e1455439726bce"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14s0caklag = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14s0caklag();
cov_14s0caklag().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_14s0caklag().f[0]++;
  cov_14s0caklag().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_14s0caklag().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_14s0caklag().s[3]++;
_export(exports, {
  cancelSubscription: function () {
    /* istanbul ignore next */
    cov_14s0caklag().f[1]++;
    cov_14s0caklag().s[4]++;
    return cancelSubscription;
  },
  getSubscriptionByUserId: function () {
    /* istanbul ignore next */
    cov_14s0caklag().f[2]++;
    cov_14s0caklag().s[5]++;
    return getSubscriptionByUserId;
  },
  updateSubscription: function () {
    /* istanbul ignore next */
    cov_14s0caklag().f[3]++;
    cov_14s0caklag().s[6]++;
    return updateSubscription;
  }
});
const _db =
/* istanbul ignore next */
(cov_14s0caklag().s[7]++, require("../db"));
const _sellermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_14s0caklag().s[8]++, _interop_require_default(require("../db/models/seller.model")));
const _utils =
/* istanbul ignore next */
(cov_14s0caklag().s[9]++, require("../utils"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_14s0caklag().f[4]++;
  cov_14s0caklag().s[10]++;
  return /* istanbul ignore next */(cov_14s0caklag().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_14s0caklag().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_14s0caklag().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_14s0caklag().b[0][1]++, {
    default: obj
  });
}
async function getSubscriptionByUserId(userId) {
  /* istanbul ignore next */
  cov_14s0caklag().f[5]++;
  cov_14s0caklag().s[11]++;
  try {
    /* istanbul ignore next */
    cov_14s0caklag().s[12]++;
    await (0, _db.connectToDatabase)();
    const seller =
    /* istanbul ignore next */
    (cov_14s0caklag().s[13]++, await _sellermodel.default.findOne({
      userId
    }));
    /* istanbul ignore next */
    cov_14s0caklag().s[14]++;
    if (!seller) {
      /* istanbul ignore next */
      cov_14s0caklag().b[2][0]++;
      cov_14s0caklag().s[15]++;
      return {
        success: false,
        message: 'Seller not found'
      };
    } else
    /* istanbul ignore next */
    {
      cov_14s0caklag().b[2][1]++;
    }
    cov_14s0caklag().s[16]++;
    return {
      success: true,
      data: seller.subscription
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_14s0caklag().s[17]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  }
}
async function updateSubscription(userId, plan, features) {
  /* istanbul ignore next */
  cov_14s0caklag().f[6]++;
  cov_14s0caklag().s[18]++;
  try {
    /* istanbul ignore next */
    cov_14s0caklag().s[19]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_14s0caklag().s[20]++, await _sellermodel.default.startSession());
    /* istanbul ignore next */
    cov_14s0caklag().s[21]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_14s0caklag().s[22]++;
    try {
      const seller =
      /* istanbul ignore next */
      (cov_14s0caklag().s[23]++, await _sellermodel.default.findOne({
        userId
      }).session(session));
      /* istanbul ignore next */
      cov_14s0caklag().s[24]++;
      if (!seller) {
        /* istanbul ignore next */
        cov_14s0caklag().b[3][0]++;
        cov_14s0caklag().s[25]++;
        throw new Error('Seller not found');
      } else
      /* istanbul ignore next */
      {
        cov_14s0caklag().b[3][1]++;
      }
      cov_14s0caklag().s[26]++;
      seller.subscription = {
        plan,
        startDate: new Date(),
        endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000),
        status: 'active',
        features
      };
      /* istanbul ignore next */
      cov_14s0caklag().s[27]++;
      await seller.save({
        session
      });
      /* istanbul ignore next */
      cov_14s0caklag().s[28]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_14s0caklag().s[29]++;
      return {
        success: true,
        message: 'Subscription updated successfully'
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_14s0caklag().s[30]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_14s0caklag().s[31]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_14s0caklag().s[32]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_14s0caklag().s[33]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  }
}
async function cancelSubscription(userId) {
  /* istanbul ignore next */
  cov_14s0caklag().f[7]++;
  cov_14s0caklag().s[34]++;
  try {
    /* istanbul ignore next */
    cov_14s0caklag().s[35]++;
    await (0, _db.connectToDatabase)();
    const session =
    /* istanbul ignore next */
    (cov_14s0caklag().s[36]++, await _sellermodel.default.startSession());
    /* istanbul ignore next */
    cov_14s0caklag().s[37]++;
    session.startTransaction();
    /* istanbul ignore next */
    cov_14s0caklag().s[38]++;
    try {
      const seller =
      /* istanbul ignore next */
      (cov_14s0caklag().s[39]++, await _sellermodel.default.findOne({
        userId
      }).session(session));
      /* istanbul ignore next */
      cov_14s0caklag().s[40]++;
      if (!seller) {
        /* istanbul ignore next */
        cov_14s0caklag().b[4][0]++;
        cov_14s0caklag().s[41]++;
        throw new Error('Seller not found');
      } else
      /* istanbul ignore next */
      {
        cov_14s0caklag().b[4][1]++;
      }
      cov_14s0caklag().s[42]++;
      seller.subscription.status = 'cancelled';
      /* istanbul ignore next */
      cov_14s0caklag().s[43]++;
      seller.subscription.endDate = new Date();
      /* istanbul ignore next */
      cov_14s0caklag().s[44]++;
      await seller.save({
        session
      });
      /* istanbul ignore next */
      cov_14s0caklag().s[45]++;
      await session.commitTransaction();
      /* istanbul ignore next */
      cov_14s0caklag().s[46]++;
      return {
        success: true,
        message: 'Subscription cancelled successfully'
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_14s0caklag().s[47]++;
      await session.abortTransaction();
      /* istanbul ignore next */
      cov_14s0caklag().s[48]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_14s0caklag().s[49]++;
      session.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_14s0caklag().s[50]++;
    return {
      success: false,
      message: (0, _utils.formatError)(error)
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,