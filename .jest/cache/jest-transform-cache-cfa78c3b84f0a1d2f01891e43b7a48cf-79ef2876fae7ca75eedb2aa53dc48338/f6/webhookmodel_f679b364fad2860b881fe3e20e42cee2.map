{"version":3,"names":["_default","webhookSchema","cov_2hdq95lkd6","s","_mongoose","Schema","userId","type","String","required","index","url","events","enum","secret","isActive","Boolean","default","createdAt","Date","now","lastTriggered","pre","next","f","isNew","b","_crypto","randomBytes","toString","Webhook","models","model"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/webhook.model.ts"],"sourcesContent":["import { Schema, model, models } from 'mongoose';\nimport { WebhookConfig, WebhookEvent } from '@/lib/api/types';\nimport crypto from 'crypto';\n\nconst webhookSchema = new Schema<WebhookConfig>({\n  userId: {\n    type: String,\n    required: true,\n    index: true,\n  },\n  url: {\n    type: String,\n    required: true,\n  },\n  events: [{\n    type: String,\n    enum: [\n      'order.created',\n      'order.updated',\n      'order.fulfilled',\n      'product.created',\n      'product.updated',\n      'product.deleted',\n      'inventory.updated',\n      'customer.created',\n      'customer.updated',\n    ],\n  }],\n  secret: {\n    type: String,\n    required: true,\n  },\n  isActive: {\n    type: Boolean,\n    default: true,\n  },\n  createdAt: {\n    type: Date,\n    default: Date.now,\n  },\n  lastTriggered: Date,\n});\n\nwebhookSchema.pre('save', function(next) {\n  if (this.isNew) {\n    this.secret = crypto.randomBytes(32).toString('hex');\n  }\n  next();\n});\n\nconst Webhook = models.Webhook || model('Webhook', webhookSchema);\n\nexport default Webhook;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAoDA;;;;;;WAAAA,QAAA;;;;;kCApDsC;;;wEAEnB;;;;;;;;;;;;;;;AAEnB,MAAMC,aAAA;AAAA;AAAA,CAAAC,cAAA,GAAAC,CAAA,OAAgB,IAAIC,SAAA,CAAAC,MAAM,CAAgB;EAC9CC,MAAA,EAAQ;IACNC,IAAA,EAAMC,MAAA;IACNC,QAAA,EAAU;IACVC,KAAA,EAAO;EACT;EACAC,GAAA,EAAK;IACHJ,IAAA,EAAMC,MAAA;IACNC,QAAA,EAAU;EACZ;EACAG,MAAA,EAAQ,CAAC;IACPL,IAAA,EAAMC,MAAA;IACNK,IAAA,EAAM,CACJ,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,qBACA,oBACA;EAEJ,EAAE;EACFC,MAAA,EAAQ;IACNP,IAAA,EAAMC,MAAA;IACNC,QAAA,EAAU;EACZ;EACAM,QAAA,EAAU;IACRR,IAAA,EAAMS,OAAA;IACNC,OAAA,EAAS;EACX;EACAC,SAAA,EAAW;IACTX,IAAA,EAAMY,IAAA;IACNF,OAAA,EAASE,IAAA,CAAKC;EAChB;EACAC,aAAA,EAAeF;AACjB;AAAA;AAAAjB,cAAA,GAAAC,CAAA;AAEAF,aAAA,CAAcqB,GAAG,CAAC,QAAQ,UAASC,IAAI;EAAA;EAAArB,cAAA,GAAAsB,CAAA;EAAAtB,cAAA,GAAAC,CAAA;EACrC,IAAI,IAAI,CAACsB,KAAK,EAAE;IAAA;IAAAvB,cAAA,GAAAwB,CAAA;IAAAxB,cAAA,GAAAC,CAAA;IACd,IAAI,CAACW,MAAM,GAAGa,OAAA,CAAAV,OAAM,CAACW,WAAW,CAAC,IAAIC,QAAQ,CAAC;EAChD;EAAA;EAAA;IAAA3B,cAAA,GAAAwB,CAAA;EAAA;EAAAxB,cAAA,GAAAC,CAAA;EACAoB,IAAA;AACF;AAEA,MAAMO,OAAA;AAAA;AAAA,CAAA5B,cAAA,GAAAC,CAAA;AAAU;AAAA,CAAAD,cAAA,GAAAwB,CAAA,UAAAtB,SAAA,CAAA2B,MAAM,CAACD,OAAO;AAAA;AAAA,CAAA5B,cAAA,GAAAwB,CAAA,UAAI,IAAAtB,SAAA,CAAA4B,KAAK,EAAC,WAAW/B,aAAA;MAEnDD,QAAA;AAAA;AAAA,CAAAE,cAAA,GAAAC,CAAA,QAAe2B,OAAA","ignoreList":[]}