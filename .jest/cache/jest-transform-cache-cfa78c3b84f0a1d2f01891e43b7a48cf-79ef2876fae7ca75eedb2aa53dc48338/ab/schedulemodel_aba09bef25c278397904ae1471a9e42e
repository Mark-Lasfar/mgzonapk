93d130b492f942276bf150f11487e76e
"use strict";

/* istanbul ignore next */
function cov_2knpdl98i7() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/schedule.model.ts";
  var hash = "d979d89048c2f091571aaf3ea804a00d3ede78dc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/schedule.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 32
        },
        end: {
          line: 11,
          column: 77
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 15,
          column: 6
        }
      },
      "5": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 110,
          column: 2
        }
      },
      "6": {
        start: {
          line: 96,
          column: 21
        },
        end: {
          line: 96,
          column: 53
        }
      },
      "7": {
        start: {
          line: 100,
          column: 21
        },
        end: {
          line: 100,
          column: 53
        }
      },
      "8": {
        start: {
          line: 111,
          column: 0
        },
        end: {
          line: 115,
          column: 3
        }
      },
      "9": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 54
        }
      },
      "10": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 113,
          column: 35
        }
      },
      "11": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "12": {
        start: {
          line: 116,
          column: 17
        },
        end: {
          line: 116,
          column: 105
        }
      },
      "13": {
        start: {
          line: 117,
          column: 17
        },
        end: {
          line: 117,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 33
          }
        },
        loc: {
          start: {
            line: 12,
            column: 39
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 96,
            column: 17
          },
          end: {
            line: 96,
            column: 18
          }
        },
        loc: {
          start: {
            line: 96,
            column: 21
          },
          end: {
            line: 96,
            column: 53
          }
        },
        line: 96
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 100,
            column: 17
          },
          end: {
            line: 100,
            column: 18
          }
        },
        loc: {
          start: {
            line: 100,
            column: 21
          },
          end: {
            line: 100,
            column: 53
          }
        },
        line: 100
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 28
          }
        },
        loc: {
          start: {
            line: 111,
            column: 42
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 111
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 11
          },
          end: {
            line: 15,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 35
          },
          end: {
            line: 13,
            column: 38
          }
        }, {
          start: {
            line: 13,
            column: 41
          },
          end: {
            line: 15,
            column: 5
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 11
          },
          end: {
            line: 13,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 11
          },
          end: {
            line: 13,
            column: 14
          }
        }, {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 13,
            column: 32
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 116,
            column: 17
          },
          end: {
            line: 116,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 17
          },
          end: {
            line: 116,
            column: 50
          }
        }, {
          start: {
            line: 116,
            column: 54
          },
          end: {
            line: 116,
            column: 105
          }
        }],
        line: 116
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/schedule.model.ts"],
      sourcesContent: ["import mongoose from 'mongoose';\n\nconst scheduleSchema = new mongoose.Schema({\n  id: { type: String, required: true, unique: true },\n  provider: { type: String, required: true },\n  enabled: { type: Boolean, default: true },\n  frequency: {\n    type: {\n      type: String,\n      enum: ['interval', 'cron'],\n      required: true\n    },\n    value: { type: String, required: true }\n  },\n  timezone: { type: String, default: 'UTC' },\n  filters: { type: mongoose.Schema.Types.Mixed },\n  settings: {\n    retryOnFailure: { type: Boolean, default: true },\n    maxRetries: { type: Number, default: 3 },\n    notifyOnCompletion: { type: Boolean, default: true },\n    notifyOnFailure: { type: Boolean, default: true }\n  },\n  notifications: {\n    email: [String],\n    slack: {\n      webhook: String,\n      channel: String\n    },\n    webhook: {\n      url: String,\n      headers: mongoose.Schema.Types.Mixed\n    }\n  },\n  lastRun: Date,\n  nextRun: Date,\n  status: {\n    type: String,\n    enum: ['active', 'paused', 'error'],\n    default: 'active'\n  },\n  createdAt: { type: Date, default: () => new Date('2025-04-27T02:21:08Z') },\n  updatedAt: { type: Date, default: () => new Date('2025-04-27T02:21:08Z') },\n  createdBy: { type: String, default: 'Mark-Lasfar' },\n  updatedBy: { type: String, default: 'Mark-Lasfar' }\n});\n\nscheduleSchema.pre('save', function(next) {\n  this.updatedAt = new Date('2025-04-27T02:21:08Z');\n  this.updatedBy = 'Mark-Lasfar';\n  next();\n});\n\nconst Schedule = mongoose.models.Schedule || mongoose.model('Schedule', scheduleSchema);\nexport default Schedule;"],
      names: ["scheduleSchema", "mongoose", "Schema", "id", "type", "String", "required", "unique", "provider", "enabled", "Boolean", "default", "frequency", "enum", "value", "timezone", "filters", "Types", "Mixed", "settings", "retryOnFailure", "maxRetries", "Number", "notifyOnCompletion", "notifyOnFailure", "notifications", "email", "slack", "webhook", "channel", "url", "headers", "lastRun", "Date", "nextRun", "status", "createdAt", "updatedAt", "createdBy", "updatedBy", "pre", "next", "Schedule", "models", "model"],
      mappings: ";;;;+BAqDA;;;eAAA;;;iEArDqB;;;;;;AAErB,MAAMA,iBAAiB,IAAIC,iBAAQ,CAACC,MAAM,CAAC;IACzCC,IAAI;QAAEC,MAAMC;QAAQC,UAAU;QAAMC,QAAQ;IAAK;IACjDC,UAAU;QAAEJ,MAAMC;QAAQC,UAAU;IAAK;IACzCG,SAAS;QAAEL,MAAMM;QAASC,SAAS;IAAK;IACxCC,WAAW;QACTR,MAAM;YACJA,MAAMC;YACNQ,MAAM;gBAAC;gBAAY;aAAO;YAC1BP,UAAU;QACZ;QACAQ,OAAO;YAAEV,MAAMC;YAAQC,UAAU;QAAK;IACxC;IACAS,UAAU;QAAEX,MAAMC;QAAQM,SAAS;IAAM;IACzCK,SAAS;QAAEZ,MAAMH,iBAAQ,CAACC,MAAM,CAACe,KAAK,CAACC,KAAK;IAAC;IAC7CC,UAAU;QACRC,gBAAgB;YAAEhB,MAAMM;YAASC,SAAS;QAAK;QAC/CU,YAAY;YAAEjB,MAAMkB;YAAQX,SAAS;QAAE;QACvCY,oBAAoB;YAAEnB,MAAMM;YAASC,SAAS;QAAK;QACnDa,iBAAiB;YAAEpB,MAAMM;YAASC,SAAS;QAAK;IAClD;IACAc,eAAe;QACbC,OAAO;YAACrB;SAAO;QACfsB,OAAO;YACLC,SAASvB;YACTwB,SAASxB;QACX;QACAuB,SAAS;YACPE,KAAKzB;YACL0B,SAAS9B,iBAAQ,CAACC,MAAM,CAACe,KAAK,CAACC,KAAK;QACtC;IACF;IACAc,SAASC;IACTC,SAASD;IACTE,QAAQ;QACN/B,MAAMC;QACNQ,MAAM;YAAC;YAAU;YAAU;SAAQ;QACnCF,SAAS;IACX;IACAyB,WAAW;QAAEhC,MAAM6B;QAAMtB,SAAS,IAAM,IAAIsB,KAAK;IAAwB;IACzEI,WAAW;QAAEjC,MAAM6B;QAAMtB,SAAS,IAAM,IAAIsB,KAAK;IAAwB;IACzEK,WAAW;QAAElC,MAAMC;QAAQM,SAAS;IAAc;IAClD4B,WAAW;QAAEnC,MAAMC;QAAQM,SAAS;IAAc;AACpD;AAEAX,eAAewC,GAAG,CAAC,QAAQ,SAASC,IAAI;IACtC,IAAI,CAACJ,SAAS,GAAG,IAAIJ,KAAK;IAC1B,IAAI,CAACM,SAAS,GAAG;IACjBE;AACF;AAEA,MAAMC,WAAWzC,iBAAQ,CAAC0C,MAAM,CAACD,QAAQ,IAAIzC,iBAAQ,CAAC2C,KAAK,CAAC,YAAY5C;MACxE,WAAe0C"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d979d89048c2f091571aaf3ea804a00d3ede78dc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2knpdl98i7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2knpdl98i7();
cov_2knpdl98i7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2knpdl98i7().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2knpdl98i7().f[0]++;
    cov_2knpdl98i7().s[2]++;
    return _default;
  }
});
const _mongoose =
/* istanbul ignore next */
(/*#__PURE__*/cov_2knpdl98i7().s[3]++, _interop_require_default(require("mongoose")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2knpdl98i7().f[1]++;
  cov_2knpdl98i7().s[4]++;
  return /* istanbul ignore next */(cov_2knpdl98i7().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2knpdl98i7().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2knpdl98i7().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2knpdl98i7().b[0][1]++, {
    default: obj
  });
}
const scheduleSchema =
/* istanbul ignore next */
(cov_2knpdl98i7().s[5]++, new _mongoose.default.Schema({
  id: {
    type: String,
    required: true,
    unique: true
  },
  provider: {
    type: String,
    required: true
  },
  enabled: {
    type: Boolean,
    default: true
  },
  frequency: {
    type: {
      type: String,
      enum: ['interval', 'cron'],
      required: true
    },
    value: {
      type: String,
      required: true
    }
  },
  timezone: {
    type: String,
    default: 'UTC'
  },
  filters: {
    type: _mongoose.default.Schema.Types.Mixed
  },
  settings: {
    retryOnFailure: {
      type: Boolean,
      default: true
    },
    maxRetries: {
      type: Number,
      default: 3
    },
    notifyOnCompletion: {
      type: Boolean,
      default: true
    },
    notifyOnFailure: {
      type: Boolean,
      default: true
    }
  },
  notifications: {
    email: [String],
    slack: {
      webhook: String,
      channel: String
    },
    webhook: {
      url: String,
      headers: _mongoose.default.Schema.Types.Mixed
    }
  },
  lastRun: Date,
  nextRun: Date,
  status: {
    type: String,
    enum: ['active', 'paused', 'error'],
    default: 'active'
  },
  createdAt: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_2knpdl98i7().f[2]++;
      cov_2knpdl98i7().s[6]++;
      return new Date('2025-04-27T02:21:08Z');
    }
  },
  updatedAt: {
    type: Date,
    default: () => {
      /* istanbul ignore next */
      cov_2knpdl98i7().f[3]++;
      cov_2knpdl98i7().s[7]++;
      return new Date('2025-04-27T02:21:08Z');
    }
  },
  createdBy: {
    type: String,
    default: 'Mark-Lasfar'
  },
  updatedBy: {
    type: String,
    default: 'Mark-Lasfar'
  }
}));
/* istanbul ignore next */
cov_2knpdl98i7().s[8]++;
scheduleSchema.pre('save', function (next) {
  /* istanbul ignore next */
  cov_2knpdl98i7().f[4]++;
  cov_2knpdl98i7().s[9]++;
  this.updatedAt = new Date('2025-04-27T02:21:08Z');
  /* istanbul ignore next */
  cov_2knpdl98i7().s[10]++;
  this.updatedBy = 'Mark-Lasfar';
  /* istanbul ignore next */
  cov_2knpdl98i7().s[11]++;
  next();
});
const Schedule =
/* istanbul ignore next */
(cov_2knpdl98i7().s[12]++,
/* istanbul ignore next */
(cov_2knpdl98i7().b[2][0]++, _mongoose.default.models.Schedule) ||
/* istanbul ignore next */
(cov_2knpdl98i7().b[2][1]++, _mongoose.default.model('Schedule', scheduleSchema)));
const _default =
/* istanbul ignore next */
(cov_2knpdl98i7().s[13]++, Schedule);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsInNjaGVkdWxlU2NoZW1hIiwiY292XzJrbnBkbDk4aTciLCJzIiwiX21vbmdvb3NlIiwiZGVmYXVsdCIsIlNjaGVtYSIsImlkIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwidW5pcXVlIiwicHJvdmlkZXIiLCJlbmFibGVkIiwiQm9vbGVhbiIsImZyZXF1ZW5jeSIsImVudW0iLCJ2YWx1ZSIsInRpbWV6b25lIiwiZmlsdGVycyIsIlR5cGVzIiwiTWl4ZWQiLCJzZXR0aW5ncyIsInJldHJ5T25GYWlsdXJlIiwibWF4UmV0cmllcyIsIk51bWJlciIsIm5vdGlmeU9uQ29tcGxldGlvbiIsIm5vdGlmeU9uRmFpbHVyZSIsIm5vdGlmaWNhdGlvbnMiLCJlbWFpbCIsInNsYWNrIiwid2ViaG9vayIsImNoYW5uZWwiLCJ1cmwiLCJoZWFkZXJzIiwibGFzdFJ1biIsIkRhdGUiLCJuZXh0UnVuIiwic3RhdHVzIiwiY3JlYXRlZEF0IiwiZiIsInVwZGF0ZWRBdCIsImNyZWF0ZWRCeSIsInVwZGF0ZWRCeSIsInByZSIsIm5leHQiLCJTY2hlZHVsZSIsImIiLCJtb2RlbHMiLCJtb2RlbCJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9saWIvZGIvbW9kZWxzL3NjaGVkdWxlLm1vZGVsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmNvbnN0IHNjaGVkdWxlU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIGlkOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUsIHVuaXF1ZTogdHJ1ZSB9LFxuICBwcm92aWRlcjogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sXG4gIGVuYWJsZWQ6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogdHJ1ZSB9LFxuICBmcmVxdWVuY3k6IHtcbiAgICB0eXBlOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBlbnVtOiBbJ2ludGVydmFsJywgJ2Nyb24nXSxcbiAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICB2YWx1ZTogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH1cbiAgfSxcbiAgdGltZXpvbmU6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnVVRDJyB9LFxuICBmaWx0ZXJzOiB7IHR5cGU6IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5NaXhlZCB9LFxuICBzZXR0aW5nczoge1xuICAgIHJldHJ5T25GYWlsdXJlOiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IHRydWUgfSxcbiAgICBtYXhSZXRyaWVzOiB7IHR5cGU6IE51bWJlciwgZGVmYXVsdDogMyB9LFxuICAgIG5vdGlmeU9uQ29tcGxldGlvbjogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiB0cnVlIH0sXG4gICAgbm90aWZ5T25GYWlsdXJlOiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IHRydWUgfVxuICB9LFxuICBub3RpZmljYXRpb25zOiB7XG4gICAgZW1haWw6IFtTdHJpbmddLFxuICAgIHNsYWNrOiB7XG4gICAgICB3ZWJob29rOiBTdHJpbmcsXG4gICAgICBjaGFubmVsOiBTdHJpbmdcbiAgICB9LFxuICAgIHdlYmhvb2s6IHtcbiAgICAgIHVybDogU3RyaW5nLFxuICAgICAgaGVhZGVyczogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk1peGVkXG4gICAgfVxuICB9LFxuICBsYXN0UnVuOiBEYXRlLFxuICBuZXh0UnVuOiBEYXRlLFxuICBzdGF0dXM6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgZW51bTogWydhY3RpdmUnLCAncGF1c2VkJywgJ2Vycm9yJ10sXG4gICAgZGVmYXVsdDogJ2FjdGl2ZSdcbiAgfSxcbiAgY3JlYXRlZEF0OiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6ICgpID0+IG5ldyBEYXRlKCcyMDI1LTA0LTI3VDAyOjIxOjA4WicpIH0sXG4gIHVwZGF0ZWRBdDogeyB0eXBlOiBEYXRlLCBkZWZhdWx0OiAoKSA9PiBuZXcgRGF0ZSgnMjAyNS0wNC0yN1QwMjoyMTowOFonKSB9LFxuICBjcmVhdGVkQnk6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnTWFyay1MYXNmYXInIH0sXG4gIHVwZGF0ZWRCeTogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdNYXJrLUxhc2ZhcicgfVxufSk7XG5cbnNjaGVkdWxlU2NoZW1hLnByZSgnc2F2ZScsIGZ1bmN0aW9uKG5leHQpIHtcbiAgdGhpcy51cGRhdGVkQXQgPSBuZXcgRGF0ZSgnMjAyNS0wNC0yN1QwMjoyMTowOFonKTtcbiAgdGhpcy51cGRhdGVkQnkgPSAnTWFyay1MYXNmYXInO1xuICBuZXh0KCk7XG59KTtcblxuY29uc3QgU2NoZWR1bGUgPSBtb25nb29zZS5tb2RlbHMuU2NoZWR1bGUgfHwgbW9uZ29vc2UubW9kZWwoJ1NjaGVkdWxlJywgc2NoZWR1bGVTY2hlbWEpO1xuZXhwb3J0IGRlZmF1bHQgU2NoZWR1bGU7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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