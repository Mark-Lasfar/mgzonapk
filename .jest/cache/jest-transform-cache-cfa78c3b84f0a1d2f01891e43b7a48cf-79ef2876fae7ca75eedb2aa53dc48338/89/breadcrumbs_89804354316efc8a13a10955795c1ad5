b2a29db745896c5b888555901ce25edf
'use client';
"use strict";

/* istanbul ignore next */
function cov_iat6zl5kc() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/breadcrumbs.tsx";
  var hash = "58dbb91dc0cf5e58be8693cb140f0041be7f76f4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/breadcrumbs.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 27
        }
      },
      "3": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 48
        }
      },
      "4": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 74
        }
      },
      "5": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 16,
          column: 46
        }
      },
      "6": {
        start: {
          line: 17,
          column: 38
        },
        end: {
          line: 17,
          column: 92
        }
      },
      "7": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 31
        }
      },
      "8": {
        start: {
          line: 19,
          column: 21
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "9": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 6
        }
      },
      "10": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "11": {
        start: {
          line: 27,
          column: 32
        },
        end: {
          line: 27,
          column: 58
        }
      },
      "12": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 50,
          column: 7
        }
      },
      "13": {
        start: {
          line: 29,
          column: 31
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "14": {
        start: {
          line: 30,
          column: 26
        },
        end: {
          line: 30,
          column: 61
        }
      },
      "15": {
        start: {
          line: 31,
          column: 26
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "16": {
        start: {
          line: 31,
          column: 52
        },
        end: {
          line: 34,
          column: 17
        }
      },
      "17": {
        start: {
          line: 35,
          column: 31
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "18": {
        start: {
          line: 38,
          column: 59
        },
        end: {
          line: 43,
          column: 21
        }
      },
      "19": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 34
        }
      },
      "20": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 25
        }
      },
      "21": {
        start: {
          line: 51,
          column: 18
        },
        end: {
          line: 51,
          column: 53
        }
      },
      "22": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 39
        }
      },
      "23": {
        start: {
          line: 52,
          column: 27
        },
        end: {
          line: 52,
          column: 39
        }
      },
      "24": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 119,
          column: 7
        }
      },
      "25": {
        start: {
          line: 86,
          column: 63
        },
        end: {
          line: 114,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 10
          }
        },
        loc: {
          start: {
            line: 10,
            column: 20
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "Breadcrumbs",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 20
          }
        },
        loc: {
          start: {
            line: 25,
            column: 23
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 25
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 26
          },
          end: {
            line: 28,
            column: 27
          }
        },
        loc: {
          start: {
            line: 28,
            column: 30
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 31
          },
          end: {
            line: 29,
            column: 32
          }
        },
        loc: {
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 46,
            column: 9
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 31,
            column: 36
          },
          end: {
            line: 31,
            column: 37
          }
        },
        loc: {
          start: {
            line: 31,
            column: 52
          },
          end: {
            line: 34,
            column: 17
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 38,
            column: 43
          },
          end: {
            line: 38,
            column: 44
          }
        },
        loc: {
          start: {
            line: 38,
            column: 59
          },
          end: {
            line: 43,
            column: 21
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 86,
            column: 34
          },
          end: {
            line: 86,
            column: 35
          }
        },
        loc: {
          start: {
            line: 86,
            column: 63
          },
          end: {
            line: 114,
            column: 36
          }
        },
        line: 86
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 35
          },
          end: {
            line: 21,
            column: 38
          }
        }, {
          start: {
            line: 21,
            column: 41
          },
          end: {
            line: 23,
            column: 5
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 14
          }
        }, {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 32
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 18
          }
        }, {
          start: {
            line: 55,
            column: 36
          },
          end: {
            line: 57,
            column: 14
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 99,
            column: 62
          },
          end: {
            line: 99,
            column: 156
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 91
          },
          end: {
            line: 99,
            column: 118
          }
        }, {
          start: {
            line: 99,
            column: 121
          },
          end: {
            line: 99,
            column: 156
          }
        }],
        line: 99
      },
      "5": {
        loc: {
          start: {
            line: 101,
            column: 64
          },
          end: {
            line: 101,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 93
          },
          end: {
            line: 101,
            column: 99
          }
        }, {
          start: {
            line: 101,
            column: 102
          },
          end: {
            line: 101,
            column: 111
          }
        }],
        line: 101
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/components/breadcrumbs.tsx"],
      sourcesContent: ["'use client'\n\nimport Link from 'next/link'\nimport { usePathname } from 'next/navigation'\nimport StructuredData from './structured-data'\nimport { Fragment, useEffect, useState } from 'react'\nimport { ChevronRight } from 'lucide-react'\n\ninterface BreadcrumbItem {\n  name: string\n  url: string\n}\n\ninterface BreadcrumbSchemaItem {\n  '@type': 'ListItem'\n  position: number\n  name: string\n  item: string\n}\n\ninterface BreadcrumbSchema {\n  '@context': 'https://schema.org'\n  '@type': 'BreadcrumbList'\n  itemListElement: BreadcrumbSchemaItem[]\n  [key: string]: unknown\n}\n\nexport default function Breadcrumbs() {\n  const pathname = usePathname()\n  const [schema, setSchema] = useState<BreadcrumbSchema | null>(null)\n\n  useEffect(() => {\n    const generateSchema = () => {\n      const paths = pathname.split('/').filter(Boolean)\n      const items: BreadcrumbItem[] = paths.map((path, index) => ({\n        name: path.charAt(0).toUpperCase() + path.slice(1).replace(/-/g, ' '),\n        url: '/' + paths.slice(0, index + 1).join('/'),\n      }))\n\n      const schemaData: BreadcrumbSchema = {\n        '@context': 'https://schema.org',\n        '@type': 'BreadcrumbList',\n        itemListElement: items.map((item, index) => ({\n          '@type': 'ListItem',\n          position: index + 1,\n          name: item.name,\n          item: window.location.origin + item.url,\n        })),\n      }\n\n      setSchema(schemaData)\n    }\n\n    generateSchema()\n  }, [pathname])\n\n  const paths = pathname.split('/').filter(Boolean)\n\n  if (paths.length <= 1) return null\n\n  return (\n    <>\n      {schema && <StructuredData data={schema} />}\n      <nav\n        className=\"flex\"\n        aria-label=\"Breadcrumb\"\n        itemScope\n        itemType=\"https://schema.org/BreadcrumbList\"\n      >\n        <ol className=\"flex items-center space-x-2\">\n          <li\n            itemScope\n            itemType=\"https://schema.org/ListItem\"\n            itemProp=\"itemListElement\"\n          >\n            <Link\n              href=\"/\"\n              className=\"text-gray-500 hover:text-gray-700\"\n              itemProp=\"item\"\n            >\n              <span itemProp=\"name\">Home</span>\n            </Link>\n            <meta itemProp=\"position\" content=\"1\" />\n          </li>\n          {paths.map((path, index) => (\n            <Fragment key={path}>\n              <ChevronRight\n                className=\"h-4 w-4 text-gray-400\"\n                aria-hidden=\"true\"\n              />\n              <li\n                itemScope\n                itemType=\"https://schema.org/ListItem\"\n                itemProp=\"itemListElement\"\n              >\n                <Link\n                  href={'/' + paths.slice(0, index + 1).join('/')}\n                  className={`${\n                    index === paths.length - 1\n                      ? 'text-gray-900 font-medium'\n                      : 'text-gray-500 hover:text-gray-700'\n                  }`}\n                  itemProp=\"item\"\n                  aria-current={index === paths.length - 1 ? 'page' : undefined}\n                >\n                  <span itemProp=\"name\">\n                    {path.charAt(0).toUpperCase() + path.slice(1).replace(/-/g, ' ')}\n                  </span>\n                </Link>\n                <meta itemProp=\"position\" content={`${index + 2}`} />\n              </li>\n            </Fragment>\n          ))}\n        </ol>\n      </nav>\n    </>\n  )\n}\n\n// Current Date and Time (UTC): 2025-04-21 02:48:16\n// Current User's Login: ibrahim-lasfar"],
      names: ["Breadcrumbs", "pathname", "usePathname", "schema", "setSchema", "useState", "useEffect", "generateSchema", "paths", "split", "filter", "Boolean", "items", "map", "path", "index", "name", "charAt", "toUpperCase", "slice", "replace", "url", "join", "schemaData", "itemListElement", "item", "position", "window", "location", "origin", "length", "StructuredData", "data", "nav", "className", "aria-label", "itemScope", "itemType", "ol", "li", "itemProp", "Link", "href", "span", "meta", "content", "Fragment", "ChevronRight", "aria-hidden", "aria-current", "undefined"],
      mappings: "AAAA;;;;;+BA2BA,UA4FA,mDAAmD;CACnD,uCAAuC;;;;eA7FfA;;;;6DAzBP;4BACW;uEACD;uBACmB;6BACjB;;;;;;AAqBd,SAASA;IACtB,MAAMC,WAAWC,IAAAA,uBAAW;IAC5B,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAA0B;IAE9DC,IAAAA,gBAAS,EAAC;QACR,MAAMC,iBAAiB;YACrB,MAAMC,QAAQP,SAASQ,KAAK,CAAC,KAAKC,MAAM,CAACC;YACzC,MAAMC,QAA0BJ,MAAMK,GAAG,CAAC,CAACC,MAAMC,QAAW,CAAA;oBAC1DC,MAAMF,KAAKG,MAAM,CAAC,GAAGC,WAAW,KAAKJ,KAAKK,KAAK,CAAC,GAAGC,OAAO,CAAC,MAAM;oBACjEC,KAAK,MAAMb,MAAMW,KAAK,CAAC,GAAGJ,QAAQ,GAAGO,IAAI,CAAC;gBAC5C,CAAA;YAEA,MAAMC,aAA+B;gBACnC,YAAY;gBACZ,SAAS;gBACTC,iBAAiBZ,MAAMC,GAAG,CAAC,CAACY,MAAMV,QAAW,CAAA;wBAC3C,SAAS;wBACTW,UAAUX,QAAQ;wBAClBC,MAAMS,KAAKT,IAAI;wBACfS,MAAME,OAAOC,QAAQ,CAACC,MAAM,GAAGJ,KAAKJ,GAAG;oBACzC,CAAA;YACF;YAEAjB,UAAUmB;QACZ;QAEAhB;IACF,GAAG;QAACN;KAAS;IAEb,MAAMO,QAAQP,SAASQ,KAAK,CAAC,KAAKC,MAAM,CAACC;IAEzC,IAAIH,MAAMsB,MAAM,IAAI,GAAG,OAAO;IAE9B,qBACE;;YACG3B,wBAAU,qBAAC4B,uBAAc;gBAACC,MAAM7B;;0BACjC,qBAAC8B;gBACCC,WAAU;gBACVC,cAAW;gBACXC,SAAS;gBACTC,UAAS;0BAET,cAAA,sBAACC;oBAAGJ,WAAU;;sCACZ,sBAACK;4BACCH,SAAS;4BACTC,UAAS;4BACTG,UAAS;;8CAET,qBAACC,aAAI;oCACHC,MAAK;oCACLR,WAAU;oCACVM,UAAS;8CAET,cAAA,qBAACG;wCAAKH,UAAS;kDAAO;;;8CAExB,qBAACI;oCAAKJ,UAAS;oCAAWK,SAAQ;;;;wBAEnCrC,MAAMK,GAAG,CAAC,CAACC,MAAMC,sBAChB,sBAAC+B,eAAQ;;kDACP,qBAACC,yBAAY;wCACXb,WAAU;wCACVc,eAAY;;kDAEd,sBAACT;wCACCH,SAAS;wCACTC,UAAS;wCACTG,UAAS;;0DAET,qBAACC,aAAI;gDACHC,MAAM,MAAMlC,MAAMW,KAAK,CAAC,GAAGJ,QAAQ,GAAGO,IAAI,CAAC;gDAC3CY,WAAW,GACTnB,UAAUP,MAAMsB,MAAM,GAAG,IACrB,8BACA,qCACJ;gDACFU,UAAS;gDACTS,gBAAclC,UAAUP,MAAMsB,MAAM,GAAG,IAAI,SAASoB;0DAEpD,cAAA,qBAACP;oDAAKH,UAAS;8DACZ1B,KAAKG,MAAM,CAAC,GAAGC,WAAW,KAAKJ,KAAKK,KAAK,CAAC,GAAGC,OAAO,CAAC,MAAM;;;0DAGhE,qBAACwB;gDAAKJ,UAAS;gDAAWK,SAAS,GAAG9B,QAAQ,GAAG;;;;;+BAxBtCD;;;;;;AAgC3B"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "58dbb91dc0cf5e58be8693cb140f0041be7f76f4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_iat6zl5kc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_iat6zl5kc();
cov_iat6zl5kc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_iat6zl5kc().s[1]++;
Object.defineProperty(exports, "default" // Current Date and Time (UTC): 2025-04-21 02:48:16
// Current User's Login: ibrahim-lasfar
, {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_iat6zl5kc().f[0]++;
    cov_iat6zl5kc().s[2]++;
    return Breadcrumbs;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_iat6zl5kc().s[3]++, require("react/jsx-runtime"));
const _link =
/* istanbul ignore next */
(/*#__PURE__*/cov_iat6zl5kc().s[4]++, _interop_require_default(require("next/link")));
const _navigation =
/* istanbul ignore next */
(cov_iat6zl5kc().s[5]++, require("next/navigation"));
const _structureddata =
/* istanbul ignore next */
(/*#__PURE__*/cov_iat6zl5kc().s[6]++, _interop_require_default(require("./structured-data")));
const _react =
/* istanbul ignore next */
(cov_iat6zl5kc().s[7]++, require("react"));
const _lucidereact =
/* istanbul ignore next */
(cov_iat6zl5kc().s[8]++, require("lucide-react"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_iat6zl5kc().f[1]++;
  cov_iat6zl5kc().s[9]++;
  return /* istanbul ignore next */(cov_iat6zl5kc().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_iat6zl5kc().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_iat6zl5kc().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_iat6zl5kc().b[0][1]++, {
    default: obj
  });
}
function Breadcrumbs() {
  /* istanbul ignore next */
  cov_iat6zl5kc().f[2]++;
  const pathname =
  /* istanbul ignore next */
  (cov_iat6zl5kc().s[10]++, (0, _navigation.usePathname)());
  const [schema, setSchema] =
  /* istanbul ignore next */
  (cov_iat6zl5kc().s[11]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_iat6zl5kc().s[12]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_iat6zl5kc().f[3]++;
    cov_iat6zl5kc().s[13]++;
    const generateSchema = () => {
      /* istanbul ignore next */
      cov_iat6zl5kc().f[4]++;
      const paths =
      /* istanbul ignore next */
      (cov_iat6zl5kc().s[14]++, pathname.split('/').filter(Boolean));
      const items =
      /* istanbul ignore next */
      (cov_iat6zl5kc().s[15]++, paths.map((path, index) => {
        /* istanbul ignore next */
        cov_iat6zl5kc().f[5]++;
        cov_iat6zl5kc().s[16]++;
        return {
          name: path.charAt(0).toUpperCase() + path.slice(1).replace(/-/g, ' '),
          url: '/' + paths.slice(0, index + 1).join('/')
        };
      }));
      const schemaData =
      /* istanbul ignore next */
      (cov_iat6zl5kc().s[17]++, {
        '@context': 'https://schema.org',
        '@type': 'BreadcrumbList',
        itemListElement: items.map((item, index) => {
          /* istanbul ignore next */
          cov_iat6zl5kc().f[6]++;
          cov_iat6zl5kc().s[18]++;
          return {
            '@type': 'ListItem',
            position: index + 1,
            name: item.name,
            item: window.location.origin + item.url
          };
        })
      });
      /* istanbul ignore next */
      cov_iat6zl5kc().s[19]++;
      setSchema(schemaData);
    };
    /* istanbul ignore next */
    cov_iat6zl5kc().s[20]++;
    generateSchema();
  }, [pathname]);
  const paths =
  /* istanbul ignore next */
  (cov_iat6zl5kc().s[21]++, pathname.split('/').filter(Boolean));
  /* istanbul ignore next */
  cov_iat6zl5kc().s[22]++;
  if (paths.length <= 1) {
    /* istanbul ignore next */
    cov_iat6zl5kc().b[2][0]++;
    cov_iat6zl5kc().s[23]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_iat6zl5kc().b[2][1]++;
  }
  cov_iat6zl5kc().s[24]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
    children: [
    /* istanbul ignore next */
    (cov_iat6zl5kc().b[3][0]++, schema) &&
    /* istanbul ignore next */
    (cov_iat6zl5kc().b[3][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_structureddata.default, {
      data: schema
    })), /*#__PURE__*/(0, _jsxruntime.jsx)("nav", {
      className: "flex",
      "aria-label": "Breadcrumb",
      itemScope: true,
      itemType: "https://schema.org/BreadcrumbList",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("ol", {
        className: "flex items-center space-x-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("li", {
          itemScope: true,
          itemType: "https://schema.org/ListItem",
          itemProp: "itemListElement",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_link.default, {
            href: "/",
            className: "text-gray-500 hover:text-gray-700",
            itemProp: "item",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              itemProp: "name",
              children: "Home"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("meta", {
            itemProp: "position",
            content: "1"
          })]
        }), paths.map((path, index) => {
          /* istanbul ignore next */
          cov_iat6zl5kc().f[7]++;
          cov_iat6zl5kc().s[25]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)(_react.Fragment, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ChevronRight, {
              className: "h-4 w-4 text-gray-400",
              "aria-hidden": "true"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("li", {
              itemScope: true,
              itemType: "https://schema.org/ListItem",
              itemProp: "itemListElement",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_link.default, {
                href: '/' + paths.slice(0, index + 1).join('/'),
                className: `${index === paths.length - 1 ?
                /* istanbul ignore next */
                (cov_iat6zl5kc().b[4][0]++, 'text-gray-900 font-medium') :
                /* istanbul ignore next */
                (cov_iat6zl5kc().b[4][1]++, 'text-gray-500 hover:text-gray-700')}`,
                itemProp: "item",
                "aria-current": index === paths.length - 1 ?
                /* istanbul ignore next */
                (cov_iat6zl5kc().b[5][0]++, 'page') :
                /* istanbul ignore next */
                (cov_iat6zl5kc().b[5][1]++, undefined),
                children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  itemProp: "name",
                  children: path.charAt(0).toUpperCase() + path.slice(1).replace(/-/g, ' ')
                })
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("meta", {
                itemProp: "position",
                content: `${index + 2}`
              })]
            })]
          }, path);
        })]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,