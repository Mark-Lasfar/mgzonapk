{"version":3,"names":["cov_2ig6xxdtlh","actualCoverage","s","MyWarehouseService","constructor","config","f","apiKey","apiUrl","request","endpoint","options","b","response","fetch","headers","ok","error","json","Error","message","statusText","getInventoryLevels","productIds","params","join","createOrder","order","method","body","JSON","stringify","getOrder","orderId","getFulfillmentStatus","getWarehouses","getOptimalWarehouse"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/warehouse/myWarehouse.ts"],"sourcesContent":["import { WarehouseService } from './types';\n\nexport class MyWarehouseService implements WarehouseService {\n  private apiKey: string;\n  private apiUrl: string;\n\n  constructor(config: { apiKey: string; apiUrl: string }) {\n    this.apiKey = config.apiKey;\n    this.apiUrl = config.apiUrl;\n  }\n\n  private async request(endpoint: string, options: RequestInit = {}) {\n    const response = await fetch(`${this.apiUrl}${endpoint}`, {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.apiKey}`,\n        ...options.headers,\n      },\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(`MyWarehouse API error: ${error.message || response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  async getInventoryLevels(productIds?: string[]) {\n    const params = productIds ? `?product_ids=${productIds.join(',')}` : '';\n    return this.request(`/inventory${params}`);\n  }\n\n  async createOrder(order: any) {\n    return this.request('/orders', {\n      method: 'POST',\n      body: JSON.stringify(order),\n    });\n  }\n\n  async getOrder(orderId: string) {\n    return this.request(`/orders/${orderId}`);\n  }\n\n  async getFulfillmentStatus(orderId: string) {\n    return this.request(`/orders/${orderId}/fulfillment`);\n  }\n\n  async getWarehouses() {\n    return this.request('/locations');\n  }\n\n  async getOptimalWarehouse(order: any) {\n    return this.request('/locations/optimal', {\n      method: 'POST',\n      body: JSON.stringify(order),\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAWgB;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;+BATH;;;;;;WAAAC,kBAAA;;;AAAN,MAAMA,kBAAA;EAIXC,YAAYC,MAA0C,EAAE;IAAA;IAAAL,cAAA,GAAAM,CAAA;IAAAN,cAAA,GAAAE,CAAA;IACtD,IAAI,CAACK,MAAM,GAAGF,MAAA,CAAOE,MAAM;IAAA;IAAAP,cAAA,GAAAE,CAAA;IAC3B,IAAI,CAACM,MAAM,GAAGH,MAAA,CAAOG,MAAM;EAC7B;EAEA,MAAcC,QAAQC,QAAgB,EAAEC,OAAA;EAAA;EAAA,CAAAX,cAAA,GAAAY,CAAA,UAAuB,CAAC,CAAC,GAAE;IAAA;IAAAZ,cAAA,GAAAM,CAAA;IACjE,MAAMO,QAAA;IAAA;IAAA,CAAAb,cAAA,GAAAE,CAAA,OAAW,MAAMY,KAAA,CAAM,GAAG,IAAI,CAACN,MAAM,GAAGE,QAAA,EAAU,EAAE;MACxD,GAAGC,OAAO;MACVI,OAAA,EAAS;QACP,gBAAgB;QAChB,iBAAiB,UAAU,IAAI,CAACR,MAAM,EAAE;QACxC,GAAGI,OAAA,CAAQI;MACb;IACF;IAAA;IAAAf,cAAA,GAAAE,CAAA;IAEA,IAAI,CAACW,QAAA,CAASG,EAAE,EAAE;MAAA;MAAAhB,cAAA,GAAAY,CAAA;MAChB,MAAMK,KAAA;MAAA;MAAA,CAAAjB,cAAA,GAAAE,CAAA,OAAQ,MAAMW,QAAA,CAASK,IAAI;MAAA;MAAAlB,cAAA,GAAAE,CAAA;MACjC,MAAM,IAAIiB,KAAA,CAAM;MAA0B;MAAA,CAAAnB,cAAA,GAAAY,CAAA,UAAAK,KAAA,CAAMG,OAAO;MAAA;MAAA,CAAApB,cAAA,GAAAY,CAAA,UAAIC,QAAA,CAASQ,UAAU,GAAE;IAClF;IAAA;IAAA;MAAArB,cAAA,GAAAY,CAAA;IAAA;IAAAZ,cAAA,GAAAE,CAAA;IAEA,OAAOW,QAAA,CAASK,IAAI;EACtB;EAEA,MAAMI,mBAAmBC,UAAqB,EAAE;IAAA;IAAAvB,cAAA,GAAAM,CAAA;IAC9C,MAAMkB,MAAA;IAAA;IAAA,CAAAxB,cAAA,GAAAE,CAAA,QAASqB,UAAA;IAAA;IAAA,CAAAvB,cAAA,GAAAY,CAAA,UAAa,gBAAgBW,UAAA,CAAWE,IAAI,CAAC,MAAM;IAAA;IAAA,CAAAzB,cAAA,GAAAY,CAAA,UAAG;IAAA;IAAAZ,cAAA,GAAAE,CAAA;IACrE,OAAO,IAAI,CAACO,OAAO,CAAC,aAAae,MAAA,EAAQ;EAC3C;EAEA,MAAME,YAAYC,KAAU,EAAE;IAAA;IAAA3B,cAAA,GAAAM,CAAA;IAAAN,cAAA,GAAAE,CAAA;IAC5B,OAAO,IAAI,CAACO,OAAO,CAAC,WAAW;MAC7BmB,MAAA,EAAQ;MACRC,IAAA,EAAMC,IAAA,CAAKC,SAAS,CAACJ,KAAA;IACvB;EACF;EAEA,MAAMK,SAASC,OAAe,EAAE;IAAA;IAAAjC,cAAA,GAAAM,CAAA;IAAAN,cAAA,GAAAE,CAAA;IAC9B,OAAO,IAAI,CAACO,OAAO,CAAC,WAAWwB,OAAA,EAAS;EAC1C;EAEA,MAAMC,qBAAqBD,OAAe,EAAE;IAAA;IAAAjC,cAAA,GAAAM,CAAA;IAAAN,cAAA,GAAAE,CAAA;IAC1C,OAAO,IAAI,CAACO,OAAO,CAAC,WAAWwB,OAAA,cAAqB;EACtD;EAEA,MAAME,cAAA,EAAgB;IAAA;IAAAnC,cAAA,GAAAM,CAAA;IAAAN,cAAA,GAAAE,CAAA;IACpB,OAAO,IAAI,CAACO,OAAO,CAAC;EACtB;EAEA,MAAM2B,oBAAoBT,KAAU,EAAE;IAAA;IAAA3B,cAAA,GAAAM,CAAA;IAAAN,cAAA,GAAAE,CAAA;IACpC,OAAO,IAAI,CAACO,OAAO,CAAC,sBAAsB;MACxCmB,MAAA,EAAQ;MACRC,IAAA,EAAMC,IAAA,CAAKC,SAAS,CAACJ,KAAA;IACvB;EACF;AACF","ignoreList":[]}