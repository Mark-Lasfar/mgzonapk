fb41938fcc4658dd2003c7ea5955e5ce
"use strict";

/* istanbul ignore next */
function cov_2ig6xxdtlh() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/warehouse/myWarehouse.ts";
  var hash = "fde13bdb4cb03caedcfd5653cbb7edb8472059ea";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/warehouse/myWarehouse.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 34
        }
      },
      "3": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 36
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "5": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "6": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "7": {
        start: {
          line: 26,
          column: 26
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "8": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 94
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "10": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 32,
          column: 79
        }
      },
      "11": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 51
        }
      },
      "12": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 39,
          column: 11
        }
      },
      "13": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 50
        }
      },
      "14": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 62
        }
      },
      "15": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 42
        }
      },
      "16": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 54,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 42
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 41
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 28
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 40
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 47
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 37
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 50
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 16,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 38
          },
          end: {
            line: 16,
            column: 40
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 54
          },
          end: {
            line: 27,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 54
          },
          end: {
            line: 27,
            column: 67
          }
        }, {
          start: {
            line: 27,
            column: 71
          },
          end: {
            line: 27,
            column: 90
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 23
          },
          end: {
            line: 32,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 36
          },
          end: {
            line: 32,
            column: 74
          }
        }, {
          start: {
            line: 32,
            column: 77
          },
          end: {
            line: 32,
            column: 79
          }
        }],
        line: 32
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/services/warehouse/myWarehouse.ts"],
      sourcesContent: ["import { WarehouseService } from './types';\n\nexport class MyWarehouseService implements WarehouseService {\n  private apiKey: string;\n  private apiUrl: string;\n\n  constructor(config: { apiKey: string; apiUrl: string }) {\n    this.apiKey = config.apiKey;\n    this.apiUrl = config.apiUrl;\n  }\n\n  private async request(endpoint: string, options: RequestInit = {}) {\n    const response = await fetch(`${this.apiUrl}${endpoint}`, {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.apiKey}`,\n        ...options.headers,\n      },\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(`MyWarehouse API error: ${error.message || response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  async getInventoryLevels(productIds?: string[]) {\n    const params = productIds ? `?product_ids=${productIds.join(',')}` : '';\n    return this.request(`/inventory${params}`);\n  }\n\n  async createOrder(order: any) {\n    return this.request('/orders', {\n      method: 'POST',\n      body: JSON.stringify(order),\n    });\n  }\n\n  async getOrder(orderId: string) {\n    return this.request(`/orders/${orderId}`);\n  }\n\n  async getFulfillmentStatus(orderId: string) {\n    return this.request(`/orders/${orderId}/fulfillment`);\n  }\n\n  async getWarehouses() {\n    return this.request('/locations');\n  }\n\n  async getOptimalWarehouse(order: any) {\n    return this.request('/locations/optimal', {\n      method: 'POST',\n      body: JSON.stringify(order),\n    });\n  }\n}\n"],
      names: ["MyWarehouseService", "constructor", "config", "apiKey", "apiUrl", "request", "endpoint", "options", "response", "fetch", "headers", "ok", "error", "json", "Error", "message", "statusText", "getInventoryLevels", "productIds", "params", "join", "createOrder", "order", "method", "body", "JSON", "stringify", "getOrder", "orderId", "getFulfillmentStatus", "getWarehouses", "getOptimalWarehouse"],
      mappings: ";;;;+BAEaA;;;eAAAA;;;AAAN,MAAMA;IAIXC,YAAYC,MAA0C,CAAE;QACtD,IAAI,CAACC,MAAM,GAAGD,OAAOC,MAAM;QAC3B,IAAI,CAACC,MAAM,GAAGF,OAAOE,MAAM;IAC7B;IAEA,MAAcC,QAAQC,QAAgB,EAAEC,UAAuB,CAAC,CAAC,EAAE;QACjE,MAAMC,WAAW,MAAMC,MAAM,GAAG,IAAI,CAACL,MAAM,GAAGE,UAAU,EAAE;YACxD,GAAGC,OAAO;YACVG,SAAS;gBACP,gBAAgB;gBAChB,iBAAiB,CAAC,OAAO,EAAE,IAAI,CAACP,MAAM,EAAE;gBACxC,GAAGI,QAAQG,OAAO;YACpB;QACF;QAEA,IAAI,CAACF,SAASG,EAAE,EAAE;YAChB,MAAMC,QAAQ,MAAMJ,SAASK,IAAI;YACjC,MAAM,IAAIC,MAAM,CAAC,uBAAuB,EAAEF,MAAMG,OAAO,IAAIP,SAASQ,UAAU,EAAE;QAClF;QAEA,OAAOR,SAASK,IAAI;IACtB;IAEA,MAAMI,mBAAmBC,UAAqB,EAAE;QAC9C,MAAMC,SAASD,aAAa,CAAC,aAAa,EAAEA,WAAWE,IAAI,CAAC,MAAM,GAAG;QACrE,OAAO,IAAI,CAACf,OAAO,CAAC,CAAC,UAAU,EAAEc,QAAQ;IAC3C;IAEA,MAAME,YAAYC,KAAU,EAAE;QAC5B,OAAO,IAAI,CAACjB,OAAO,CAAC,WAAW;YAC7BkB,QAAQ;YACRC,MAAMC,KAAKC,SAAS,CAACJ;QACvB;IACF;IAEA,MAAMK,SAASC,OAAe,EAAE;QAC9B,OAAO,IAAI,CAACvB,OAAO,CAAC,CAAC,QAAQ,EAAEuB,SAAS;IAC1C;IAEA,MAAMC,qBAAqBD,OAAe,EAAE;QAC1C,OAAO,IAAI,CAACvB,OAAO,CAAC,CAAC,QAAQ,EAAEuB,QAAQ,YAAY,CAAC;IACtD;IAEA,MAAME,gBAAgB;QACpB,OAAO,IAAI,CAACzB,OAAO,CAAC;IACtB;IAEA,MAAM0B,oBAAoBT,KAAU,EAAE;QACpC,OAAO,IAAI,CAACjB,OAAO,CAAC,sBAAsB;YACxCkB,QAAQ;YACRC,MAAMC,KAAKC,SAAS,CAACJ;QACvB;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fde13bdb4cb03caedcfd5653cbb7edb8472059ea"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ig6xxdtlh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ig6xxdtlh();
cov_2ig6xxdtlh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ig6xxdtlh().s[1]++;
Object.defineProperty(exports, "MyWarehouseService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2ig6xxdtlh().f[0]++;
    cov_2ig6xxdtlh().s[2]++;
    return MyWarehouseService;
  }
});
class MyWarehouseService {
  constructor(config) {
    /* istanbul ignore next */
    cov_2ig6xxdtlh().f[1]++;
    cov_2ig6xxdtlh().s[3]++;
    this.apiKey = config.apiKey;
    /* istanbul ignore next */
    cov_2ig6xxdtlh().s[4]++;
    this.apiUrl = config.apiUrl;
  }
  async request(endpoint, options =
  /* istanbul ignore next */
  (cov_2ig6xxdtlh().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_2ig6xxdtlh().f[2]++;
    const response =
    /* istanbul ignore next */
    (cov_2ig6xxdtlh().s[5]++, await fetch(`${this.apiUrl}${endpoint}`, {
      ...options,
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${this.apiKey}`,
        ...options.headers
      }
    }));
    /* istanbul ignore next */
    cov_2ig6xxdtlh().s[6]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_2ig6xxdtlh().b[1][0]++;
      const error =
      /* istanbul ignore next */
      (cov_2ig6xxdtlh().s[7]++, await response.json());
      /* istanbul ignore next */
      cov_2ig6xxdtlh().s[8]++;
      throw new Error(`MyWarehouse API error: ${
      /* istanbul ignore next */
      (cov_2ig6xxdtlh().b[2][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_2ig6xxdtlh().b[2][1]++, response.statusText)}`);
    } else
    /* istanbul ignore next */
    {
      cov_2ig6xxdtlh().b[1][1]++;
    }
    cov_2ig6xxdtlh().s[9]++;
    return response.json();
  }
  async getInventoryLevels(productIds) {
    /* istanbul ignore next */
    cov_2ig6xxdtlh().f[3]++;
    const params =
    /* istanbul ignore next */
    (cov_2ig6xxdtlh().s[10]++, productIds ?
    /* istanbul ignore next */
    (cov_2ig6xxdtlh().b[3][0]++, `?product_ids=${productIds.join(',')}`) :
    /* istanbul ignore next */
    (cov_2ig6xxdtlh().b[3][1]++, ''));
    /* istanbul ignore next */
    cov_2ig6xxdtlh().s[11]++;
    return this.request(`/inventory${params}`);
  }
  async createOrder(order) {
    /* istanbul ignore next */
    cov_2ig6xxdtlh().f[4]++;
    cov_2ig6xxdtlh().s[12]++;
    return this.request('/orders', {
      method: 'POST',
      body: JSON.stringify(order)
    });
  }
  async getOrder(orderId) {
    /* istanbul ignore next */
    cov_2ig6xxdtlh().f[5]++;
    cov_2ig6xxdtlh().s[13]++;
    return this.request(`/orders/${orderId}`);
  }
  async getFulfillmentStatus(orderId) {
    /* istanbul ignore next */
    cov_2ig6xxdtlh().f[6]++;
    cov_2ig6xxdtlh().s[14]++;
    return this.request(`/orders/${orderId}/fulfillment`);
  }
  async getWarehouses() {
    /* istanbul ignore next */
    cov_2ig6xxdtlh().f[7]++;
    cov_2ig6xxdtlh().s[15]++;
    return this.request('/locations');
  }
  async getOptimalWarehouse(order) {
    /* istanbul ignore next */
    cov_2ig6xxdtlh().f[8]++;
    cov_2ig6xxdtlh().s[16]++;
    return this.request('/locations/optimal', {
      method: 'POST',
      body: JSON.stringify(order)
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmlnNnh4ZHRsaCIsImFjdHVhbENvdmVyYWdlIiwicyIsIk15V2FyZWhvdXNlU2VydmljZSIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwiZiIsImFwaUtleSIsImFwaVVybCIsInJlcXVlc3QiLCJlbmRwb2ludCIsIm9wdGlvbnMiLCJiIiwicmVzcG9uc2UiLCJmZXRjaCIsImhlYWRlcnMiLCJvayIsImVycm9yIiwianNvbiIsIkVycm9yIiwibWVzc2FnZSIsInN0YXR1c1RleHQiLCJnZXRJbnZlbnRvcnlMZXZlbHMiLCJwcm9kdWN0SWRzIiwicGFyYW1zIiwiam9pbiIsImNyZWF0ZU9yZGVyIiwib3JkZXIiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImdldE9yZGVyIiwib3JkZXJJZCIsImdldEZ1bGZpbGxtZW50U3RhdHVzIiwiZ2V0V2FyZWhvdXNlcyIsImdldE9wdGltYWxXYXJlaG91c2UiXSwic291cmNlcyI6WyIvaG9tZS9oYWdlci9uZXcvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyICgzKS9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIvbGliL3NlcnZpY2VzL3dhcmVob3VzZS9teVdhcmVob3VzZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXYXJlaG91c2VTZXJ2aWNlIH0gZnJvbSAnLi90eXBlcyc7XG5cbmV4cG9ydCBjbGFzcyBNeVdhcmVob3VzZVNlcnZpY2UgaW1wbGVtZW50cyBXYXJlaG91c2VTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBhcGlLZXk6IHN0cmluZztcbiAgcHJpdmF0ZSBhcGlVcmw6IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihjb25maWc6IHsgYXBpS2V5OiBzdHJpbmc7IGFwaVVybDogc3RyaW5nIH0pIHtcbiAgICB0aGlzLmFwaUtleSA9IGNvbmZpZy5hcGlLZXk7XG4gICAgdGhpcy5hcGlVcmwgPSBjb25maWcuYXBpVXJsO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyByZXF1ZXN0KGVuZHBvaW50OiBzdHJpbmcsIG9wdGlvbnM6IFJlcXVlc3RJbml0ID0ge30pIHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3RoaXMuYXBpVXJsfSR7ZW5kcG9pbnR9YCwge1xuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7dGhpcy5hcGlLZXl9YCxcbiAgICAgICAgLi4ub3B0aW9ucy5oZWFkZXJzLFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIGNvbnN0IGVycm9yID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBNeVdhcmVob3VzZSBBUEkgZXJyb3I6ICR7ZXJyb3IubWVzc2FnZSB8fCByZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgIH1cblxuICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gIH1cblxuICBhc3luYyBnZXRJbnZlbnRvcnlMZXZlbHMocHJvZHVjdElkcz86IHN0cmluZ1tdKSB7XG4gICAgY29uc3QgcGFyYW1zID0gcHJvZHVjdElkcyA/IGA/cHJvZHVjdF9pZHM9JHtwcm9kdWN0SWRzLmpvaW4oJywnKX1gIDogJyc7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChgL2ludmVudG9yeSR7cGFyYW1zfWApO1xuICB9XG5cbiAgYXN5bmMgY3JlYXRlT3JkZXIob3JkZXI6IGFueSkge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoJy9vcmRlcnMnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KG9yZGVyKSxcbiAgICB9KTtcbiAgfVxuXG4gIGFzeW5jIGdldE9yZGVyKG9yZGVySWQ6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoYC9vcmRlcnMvJHtvcmRlcklkfWApO1xuICB9XG5cbiAgYXN5bmMgZ2V0RnVsZmlsbG1lbnRTdGF0dXMob3JkZXJJZDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChgL29yZGVycy8ke29yZGVySWR9L2Z1bGZpbGxtZW50YCk7XG4gIH1cblxuICBhc3luYyBnZXRXYXJlaG91c2VzKCkge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoJy9sb2NhdGlvbnMnKTtcbiAgfVxuXG4gIGFzeW5jIGdldE9wdGltYWxXYXJlaG91c2Uob3JkZXI6IGFueSkge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoJy9sb2NhdGlvbnMvb3B0aW1hbCcsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkob3JkZXIpLFxuICAgIH0pO1xuICB9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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