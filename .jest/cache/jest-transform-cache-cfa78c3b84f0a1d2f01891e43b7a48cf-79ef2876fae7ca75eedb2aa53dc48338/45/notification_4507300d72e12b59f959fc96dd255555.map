{"version":3,"names":["cov_f3lwgbkyi","actualCoverage","s","NotificationUtils","f","addToCart","sendNotification","EMAIL_RATE_LIMIT","maxEmails","windowMs","emailCounter","count","resetTime","Date","now","resend","_resend","Resend","process","env","RESEND_API_KEY","transporter","_nodemailer","default","createTransport","service","pool","maxConnections","auth","user","GMAIL_USER","pass","GMAIL_APP_PASSWORD","_firebaseadmin","apps","length","b","initializeApp","credential","cert","projectId","FIREBASE_ADMIN_PROJECT_ID","clientEmail","FIREBASE_ADMIN_CLIENT_EMAIL","privateKey","FIREBASE_ADMIN_PRIVATE_KEY","replace","error","console","checkEmailRateLimit","warn","options","_db","connectToDatabase","userId","type","title","message","data","channels","_storageconfig","NOTIFICATION_CONFIG","types","toUpperCase","defaultChannels","priority","expiresAt","metadata","seller","_sellermodel","findOne","notificationSettings","settings","notifications","email","sms","orderUpdates","marketingEmails","pointsNotifications","allowedChannels","filter","channel","success","notificationId","_usermodel","findById","select","Error","notification","_notificationmodel","create","status","read","promises","map","canSendEmail","findByIdAndUpdate","_id","queuedAt","sendEmail","to","subject","html","getEmailTemplate","locale","fcmToken","sendPushNotification","token","body","phone","sendSMS","push","save","Promise","allSettled","markAsSent","isArabic","textAlign","direction","baseTemplate","NEXT_PUBLIC_BASE_URL","SITE_NAME","points","response","emails","send","from","SENDER_EMAIL","tags","name","value","sendMail","id","nodemailerError","messaging","Object","entries","reduce","acc","key","String","android","clickAction","sound","apns","payload","aps","contentAvailable","badge","webpush","headers","Urgency","icon","getUserEmail","getUserPhone","getUserPushToken","markAsRead","getUnreadCount","countDocuments","getUserNotifications","limit","skip","find","sort","createdAt","deleteNotification","findByIdAndDelete","clearAllNotifications","deleteMany","markAllAsRead","updateMany","$set","readAt","product","quantity","t","countInStock","cartItem","productId","price","pricing","finalPrice","productName","Product","$inc"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/utils/notification.ts"],"sourcesContent":["'use server';\n\nimport { Resend } from 'resend';\nimport admin from 'firebase-admin';\nimport nodemailer from 'nodemailer';\nimport { connectToDatabase } from '@/lib/db';\nimport Notification, { INotification, NotificationType, NotificationChannel, NotificationPriority } from '@/lib/models/notification.model';\nimport User from '@/lib/db/models/user.model';\nimport Seller from '@/lib/db/models/seller.model';\nimport { NOTIFICATION_CONFIG } from '@/lib/config/storage.config';\nimport { TFunction } from 'i18next';\nimport { IProduct } from '@/types';\n\n// Rate limiting for emails\nconst EMAIL_RATE_LIMIT = {\n  maxEmails: 100, // Gmail limit: ~100-150 emails per day for free accounts\n  windowMs: 24 * 60 * 60 * 1000, // 24 hours\n};\n\nconst emailCounter: { count: number; resetTime: number } = {\n  count: 0,\n  resetTime: Date.now() + EMAIL_RATE_LIMIT.windowMs,\n};\n\nconst resend = new Resend(process.env.RESEND_API_KEY);\n\nconst transporter = nodemailer.createTransport({\n  service: 'gmail',\n  pool: true,\n  maxConnections: 5,\n  auth: {\n    user: process.env.GMAIL_USER,\n    pass: process.env.GMAIL_APP_PASSWORD,\n  },\n});\n\nif (!admin.apps.length) {\n  try {\n    admin.initializeApp({\n      credential: admin.credential.cert({\n        projectId: process.env.FIREBASE_ADMIN_PROJECT_ID!,\n        clientEmail: process.env.FIREBASE_ADMIN_CLIENT_EMAIL!,\n        privateKey: process.env.FIREBASE_ADMIN_PRIVATE_KEY?.replace(/\\\\n/g, '\\n')!,\n      }),\n    });\n  } catch (error) {\n    console.error('Firebase admin initialization error:', error);\n  }\n}\n\nexport interface NotificationOptions {\n  userId: string;\n  type: NotificationType;\n  title: string;\n  message: string;\n  data?: Record<string, any>;\n  channels?: NotificationChannel[];\n  priority?: NotificationPriority;\n  expiresAt?: Date;\n  metadata?: {\n    browser?: string;\n    device?: string;\n    ip?: string;\n  };\n}\n\nasync function checkEmailRateLimit(): Promise<boolean> {\n  const now = Date.now();\n  if (now > emailCounter.resetTime) {\n    emailCounter.count = 0;\n    emailCounter.resetTime = now + EMAIL_RATE_LIMIT.windowMs;\n  }\n\n  if (emailCounter.count >= EMAIL_RATE_LIMIT.maxEmails) {\n    console.warn('Email rate limit exceeded. Queuing email.');\n    return false;\n  }\n\n  emailCounter.count++;\n  return true;\n}\n\nexport async function sendNotification(options: NotificationOptions) {\n  try {\n    await connectToDatabase();\n\n    const {\n      userId,\n      type,\n      title,\n      message,\n      data = {},\n      channels = NOTIFICATION_CONFIG.types[type.toUpperCase()]?.defaultChannels || ['email'],\n      priority = NOTIFICATION_CONFIG.types[type.toUpperCase()]?.priority || 'medium',\n      expiresAt,\n      metadata,\n    } = options;\n\n    // Check seller notification settings\n    const seller = await Seller.findOne({ userId });\n    const notificationSettings = seller?.settings.notifications || {\n      email: true,\n      sms: false,\n      orderUpdates: true,\n      marketingEmails: false,\n      pointsNotifications: true,\n    };\n\n    // Filter channels based on seller settings\n    const allowedChannels = channels.filter((channel) => {\n      if (channel === 'email' && !notificationSettings.email) return false;\n      if (channel === 'sms' && !notificationSettings.sms) return false;\n      if (channel === 'in_app') return true;\n      if (channel === 'push' && notificationSettings.pointsNotifications) return true;\n      return true;\n    });\n\n    if (allowedChannels.length === 0) {\n      return { success: true, notificationId: null, message: 'No allowed channels' };\n    }\n\n    const user = await User.findById(userId).select('email phone fcmToken locale');\n    if (!user) throw new Error('User not found');\n\n    const notification = await Notification.create({\n      userId,\n      type,\n      title,\n      message,\n      data,\n      channels: allowedChannels,\n      priority,\n      expiresAt,\n      metadata,\n      status: 'pending',\n      read: false,\n    });\n\n    const promises = allowedChannels.map(async (channel) => {\n      try {\n        switch (channel) {\n          case 'email':\n            if (user.email && notificationSettings.email) {\n              const canSendEmail = await checkEmailRateLimit();\n              if (!canSendEmail) {\n                await Notification.findByIdAndUpdate(notification._id, {\n                  status: 'queued',\n                  queuedAt: new Date(),\n                });\n                return;\n              }\n              await sendEmail({\n                to: user.email,\n                subject: title,\n                html: getEmailTemplate(type, title, message, data, user.locale || 'en'),\n                data,\n              });\n            }\n            break;\n          case 'push':\n            if (user.fcmToken && notificationSettings.pointsNotifications) {\n              await sendPushNotification({\n                token: user.fcmToken,\n                title,\n                body: message,\n                data,\n              });\n            }\n            break;\n          case 'sms':\n            if (user.phone && notificationSettings.sms) {\n              await sendSMS({\n                to: user.phone,\n                message: `${title}: ${message}`,\n              });\n            }\n            break;\n          case 'in_app':\n            user.notifications = user.notifications || [];\n            user.notifications.push(notification);\n            await user.save();\n            break;\n        }\n      } catch (error) {\n        console.error(`${channel} notification error:`, error);\n      }\n    });\n\n    await Promise.allSettled(promises);\n    await notification.markAsSent();\n\n    return { success: true, notificationId: notification._id };\n  } catch (error) {\n    console.error('Notification error:', error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Failed to send notification',\n    };\n  }\n}\n\nfunction getEmailTemplate(type: string, title: string, message: string, data: Record<string, any>, locale: string = 'en') {\n  const isArabic = locale === 'ar';\n  const textAlign = isArabic ? 'right' : 'left';\n  const direction = isArabic ? 'rtl' : 'ltr';\n\n  const baseTemplate = `\n    <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; text-align: ${textAlign}; direction: ${direction};\">\n      <h2>${title}</h2>\n      <p>${message}</p>\n      <a href=\"${process.env.NEXT_PUBLIC_BASE_URL}/account/subscriptions\" style=\"display: inline-block; padding: 10px 20px; background-color: #007bff; color: white; text-decoration: none; border-radius: 5px;\">Manage Subscription</a>\n      <p>Best regards,<br/>${process.env.SITE_NAME}</p>\n    </div>\n  `;\n\n  switch (type) {\n    case 'cart_updated':\n      return `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; text-align: ${textAlign}; direction: ${direction};\">\n          <h2>${title}</h2>\n          <p>${message}</p>\n          <a href=\"${process.env.NEXT_PUBLIC_BASE_URL}/cart\" style=\"display: inline-block; padding: 10px 20px; background-color: #007bff; color: white; text-decoration: none; border-radius: 5px;\">View Cart</a>\n          <p>Best regards,<br/>${process.env.SITE_NAME}</p>\n        </div>\n      `;\n    case 'points_earned':\n      return `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; text-align: ${textAlign}; direction: ${direction};\">\n          <h2>${title}</h2>\n          <p>You have earned ${data.points || 0} points for: ${message}</p>\n          <a href=\"${process.env.NEXT_PUBLIC_BASE_URL}/account\" style=\"display: inline-block; padding: 10px 20px; background-color: #007bff; color: white; text-decoration: none; border-radius: 5px;\">View Points</a>\n          <p>Best regards,<br/>${process.env.SITE_NAME}</p>\n        </div>\n      `;\n    case 'points_redeemed':\n      return `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; text-align: ${textAlign}; direction: ${direction};\">\n          <h2>${title}</h2>\n          <p>You have redeemed ${data.points || 0} points for: ${message}</p>\n          <a href=\"${process.env.NEXT_PUBLIC_BASE_URL}/account\" style=\"display: inline-block; padding: 10px 20px; background-color: #007bff; color: white; text-decoration: none; border-radius: 5px;\">View Points</a>\n          <p>Best regards,<br/>${process.env.SITE_NAME}</p>\n        </div>\n      `;\n    case 'welcome':\n      return `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; text-align: ${textAlign}; direction: ${direction};\">\n          <h2>${title}</h2>\n          <p>${message}</p>\n          <a href=\"${process.env.NEXT_PUBLIC_BASE_URL}/seller/dashboard\" style=\"display: inline-block; padding: 10px 20px; background-color: #007bff; color: white; text-decoration: none; border-radius: 5px;\">Go to Dashboard</a>\n          <p>Best regards,<br/>${process.env.SITE_NAME}</p>\n        </div>\n      `;\n    case 'product_reviewed':\n      return `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; text-align: ${textAlign}; direction: ${direction};\">\n          <h2>${title}</h2>\n          <p>${message}</p>\n          <a href=\"${process.env.NEXT_PUBLIC_BASE_URL}/seller/dashboard/products\" style=\"display: inline-block; padding: 10px 20px; background-color: #007bff; color: white; text-decoration: none; border-radius: 5px;\">View Product</a>\n          <p>Best regards,<br/>${process.env.SITE_NAME}</p>\n        </div>\n      `;\n    default:\n      return baseTemplate;\n  }\n}\n\ninterface EmailOptions {\n  to: string;\n  subject: string;\n  html: string;\n  data?: Record<string, any>;\n}\n\nasync function sendEmail({ to, subject, html, data }: EmailOptions) {\n  try {\n    const response = await resend.emails.send({\n      from: `${process.env.SITE_NAME} <${process.env.SENDER_EMAIL}>`,\n      to,\n      subject,\n      html,\n      tags: [\n        { name: 'category', value: data?.type || 'general' },\n        { name: 'priority', value: data?.priority || 'normal' },\n      ],\n    });\n\n    if (response.error) {\n      throw new Error(response.error.message);\n    }\n\n    return response;\n  } catch (error) {\n    console.error('Resend email error:', error);\n    try {\n      await transporter.sendMail({\n        from: `\"${process.env.SITE_NAME}\" <${process.env.GMAIL_USER}>`,\n        to,\n        subject,\n        html,\n      });\n      return { id: 'nodemailer-fallback' };\n    } catch (nodemailerError) {\n      console.error('Nodemailer error:', nodemailerError);\n      throw new Error('Failed to send email');\n    }\n  }\n}\n\ninterface PushNotificationOptions {\n  token: string;\n  title: string;\n  body: string;\n  data?: Record<string, any>;\n}\n\nasync function sendPushNotification({ token, title, body, data }: PushNotificationOptions) {\n  if (!token) return;\n\n  try {\n    await admin.messaging().send({\n      token,\n      notification: {\n        title,\n        body,\n      },\n      data: Object.entries(data || {}).reduce(\n        (acc, [key, value]) => ({\n          ...acc,\n          [key]: String(value),\n        }),\n        {}\n      ),\n      android: {\n        priority: 'high',\n        notification: {\n          clickAction: 'FLUTTER_NOTIFICATION_CLICK',\n          sound: 'default',\n        },\n      },\n      apns: {\n        payload: {\n          aps: {\n            contentAvailable: true,\n            sound: 'default',\n            badge: 1,\n          },\n        },\n      },\n      webpush: {\n        headers: {\n          Urgency: 'high',\n        },\n        notification: {\n          icon: '/icons/icon-192x192.png',\n          badge: '/icons/icon-72x72.png',\n        },\n      },\n    });\n  } catch (error) {\n    console.error('Push notification error:', error);\n    throw new Error('Failed to send push notification');\n  }\n}\n\ninterface SMSOptions {\n  to: string;\n  message: string;\n}\n\nasync function sendSMS({ to, message }: SMSOptions) {\n  try {\n    // Placeholder for Twilio or email-to-SMS gateway\n    console.warn('SMS sending not implemented');\n    throw new Error('SMS not implemented');\n  } catch (error) {\n    console.error('SMS error:', error);\n    throw new Error('Failed to send SMS');\n  }\n}\n\nasync function getUserEmail(userId: string): Promise<string | null> {\n  const user = await User.findById(userId).select('email');\n  return user?.email || null;\n}\n\nasync function getUserPhone(userId: string): Promise<string | null> {\n  const user = await User.findById(userId).select('phone');\n  return user?.phone || null;\n}\n\nasync function getUserPushToken(userId: string): Promise<string | null> {\n  const user = await User.findById(userId).select('fcmToken');\n  return user?.fcmToken || null;\n}\n\nexport const NotificationUtils = {\n  markAsRead: async (notificationId: string) => {\n    await connectToDatabase();\n    const notification = await Notification.findById(notificationId);\n    if (notification) {\n      await notification.markAsRead();\n    }\n  },\n  getUnreadCount: async (userId: string) => {\n    await connectToDatabase();\n    return Notification.countDocuments({ userId, read: false });\n  },\n  getUserNotifications: async (userId: string, limit = 10, skip = 0) => {\n    await connectToDatabase();\n    return Notification.find({ userId })\n      .sort({ createdAt: -1 })\n      .skip(skip)\n      .limit(limit);\n  },\n  deleteNotification: async (notificationId: string) => {\n    await connectToDatabase();\n    await Notification.findByIdAndDelete(notificationId);\n  },\n  clearAllNotifications: async (userId: string) => {\n    await connectToDatabase();\n    await Notification.deleteMany({ userId });\n  },\n  markAllAsRead: async (userId: string) => {\n    await connectToDatabase();\n    await Notification.updateMany(\n      { userId, read: false },\n      {\n        $set: {\n          read: true,\n          readAt: new Date(),\n          status: 'read',\n        },\n      }\n    );\n  },\n};\n\n// Cart-related logic\nexport interface CartItem {\n  productId: string;\n  name: string;\n  quantity: number;\n  price: number;\n}\n\nexport async function addToCart(\n  userId: string,\n  product: IProduct,\n  quantity: number,\n  t: TFunction\n): Promise<{ success: boolean; message?: string; cartItem?: CartItem }> {\n  try {\n    await connectToDatabase();\n\n    // Validate product and stock\n    if (product.countInStock < quantity) {\n      return { success: false, message: t('insufficientStock') };\n    }\n\n    // Simulate adding to cart (assuming a Cart model exists)\n    const cartItem: CartItem = {\n      productId: product._id,\n      name: product.name,\n      quantity,\n      price: product.pricing.finalPrice,\n    };\n\n    // Send notification\n    await sendNotification({\n      userId,\n      type: 'cart_updated',\n      title: t('cartUpdatedTitle'),\n      message: t('cartUpdatedMessage', { productName: product.name }),\n      channels: ['in_app', 'email'],\n      data: { productId: product._id, quantity },\n    });\n\n    // Update product stock\n    await Product.findByIdAndUpdate(product._id, {\n      $inc: { countInStock: -quantity },\n    });\n\n    return { success: true, cartItem };\n  } catch (error) {\n    console.error('Add to cart error:', error);\n    return {\n      success: false,\n      message: error instanceof Error ? error.message : t('addToCartFailed'),\n    };\n  }\n}"],"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","ignoreList":[]}