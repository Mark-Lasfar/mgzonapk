a07edbe56b44b50c194bdbd6332410d8
"use strict";

/* istanbul ignore next */
function cov_1vo6mawnma() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/pod-design.model.ts";
  var hash = "6b91031614c9229f33507cdaa78c88f9435dd70e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/pod-design.model.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 18
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "4": {
        start: {
          line: 12,
          column: 25
        },
        end: {
          line: 55,
          column: 2
        }
      },
      "5": {
        start: {
          line: 56,
          column: 28
        },
        end: {
          line: 107,
          column: 2
        }
      },
      "6": {
        start: {
          line: 108,
          column: 24
        },
        end: {
          line: 273,
          column: 2
        }
      },
      "7": {
        start: {
          line: 143,
          column: 32
        },
        end: {
          line: 143,
          column: 56
        }
      },
      "8": {
        start: {
          line: 275,
          column: 0
        },
        end: {
          line: 279,
          column: 3
        }
      },
      "9": {
        start: {
          line: 280,
          column: 0
        },
        end: {
          line: 282,
          column: 3
        }
      },
      "10": {
        start: {
          line: 283,
          column: 0
        },
        end: {
          line: 285,
          column: 3
        }
      },
      "11": {
        start: {
          line: 286,
          column: 0
        },
        end: {
          line: 288,
          column: 3
        }
      },
      "12": {
        start: {
          line: 290,
          column: 0
        },
        end: {
          line: 295,
          column: 2
        }
      },
      "13": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "14": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 36
        }
      },
      "15": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 27
        }
      },
      "16": {
        start: {
          line: 297,
          column: 0
        },
        end: {
          line: 303,
          column: 2
        }
      },
      "17": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 302,
          column: 7
        }
      },
      "18": {
        start: {
          line: 304,
          column: 0
        },
        end: {
          line: 311,
          column: 2
        }
      },
      "19": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 310,
          column: 17
        }
      },
      "20": {
        start: {
          line: 313,
          column: 0
        },
        end: {
          line: 330,
          column: 3
        }
      },
      "21": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 328,
          column: 5
        }
      },
      "22": {
        start: {
          line: 316,
          column: 27
        },
        end: {
          line: 316,
          column: 94
        }
      },
      "23": {
        start: {
          line: 316,
          column: 64
        },
        end: {
          line: 316,
          column: 90
        }
      },
      "24": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "25": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 325,
          column: 14
        }
      },
      "26": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 40
        }
      },
      "27": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 329,
          column: 11
        }
      },
      "28": {
        start: {
          line: 331,
          column: 18
        },
        end: {
          line: 331,
          column: 98
        }
      },
      "29": {
        start: {
          line: 332,
          column: 17
        },
        end: {
          line: 332,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 143,
            column: 27
          },
          end: {
            line: 143,
            column: 28
          }
        },
        loc: {
          start: {
            line: 143,
            column: 32
          },
          end: {
            line: 143,
            column: 56
          }
        },
        line: 143
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 290,
            column: 41
          },
          end: {
            line: 290,
            column: 42
          }
        },
        loc: {
          start: {
            line: 290,
            column: 69
          },
          end: {
            line: 295,
            column: 1
          }
        },
        line: 290
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 297,
            column: 37
          },
          end: {
            line: 297,
            column: 38
          }
        },
        loc: {
          start: {
            line: 297,
            column: 52
          },
          end: {
            line: 303,
            column: 1
          }
        },
        line: 297
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 304,
            column: 38
          },
          end: {
            line: 304,
            column: 39
          }
        },
        loc: {
          start: {
            line: 304,
            column: 49
          },
          end: {
            line: 311,
            column: 1
          }
        },
        line: 304
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 313,
            column: 28
          },
          end: {
            line: 313,
            column: 29
          }
        },
        loc: {
          start: {
            line: 313,
            column: 43
          },
          end: {
            line: 330,
            column: 1
          }
        },
        line: 313
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 316,
            column: 48
          },
          end: {
            line: 316,
            column: 49
          }
        },
        loc: {
          start: {
            line: 316,
            column: 64
          },
          end: {
            line: 316,
            column: 90
          }
        },
        line: 316
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 290,
            column: 57
          },
          end: {
            line: 290,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 290,
            column: 66
          },
          end: {
            line: 290,
            column: 67
          }
        }],
        line: 290
      },
      "1": {
        loc: {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "2": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 291,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 291,
            column: 18
          }
        }, {
          start: {
            line: 291,
            column: 22
          },
          end: {
            line: 291,
            column: 41
          }
        }],
        line: 291
      },
      "3": {
        loc: {
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "4": {
        loc: {
          start: {
            line: 316,
            column: 71
          },
          end: {
            line: 316,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 316,
            column: 71
          },
          end: {
            line: 316,
            column: 84
          }
        }, {
          start: {
            line: 316,
            column: 88
          },
          end: {
            line: 316,
            column: 89
          }
        }],
        line: 316
      },
      "5": {
        loc: {
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "6": {
        loc: {
          start: {
            line: 331,
            column: 18
          },
          end: {
            line: 331,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 331,
            column: 18
          },
          end: {
            line: 331,
            column: 44
          }
        }, {
          start: {
            line: 331,
            column: 48
          },
          end: {
            line: 331,
            column: 98
          }
        }],
        line: 331
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/db/models/pod-design.model.ts"],
      sourcesContent: ["\nimport { Document, Model, model, models, Schema } from 'mongoose'\n\nexport type DesignFormat = 'svg' | 'png' | 'pdf' | 'ai' | 'psd'\nexport type DesignCategory = 'apparel' | 'accessories' | 'home-decor' | 'stationery' | 'other'\nexport type DesignSize = 'xs' | 's' | 'm' | 'l' | 'xl' | '2xl' | '3xl'\n\nexport interface IDesignFile {\n  preview: string\n  source: string\n  format: DesignFormat\n  size?: {\n    width: number\n    height: number\n    unit: 'px' | 'in' | 'cm'\n  }\n  metadata?: {\n    dpi?: number\n    colorSpace?: 'rgb' | 'cmyk'\n    layersCount?: number\n  }\n}\n\nexport interface IDesignProduct {\n  productId: Schema.Types.ObjectId\n  variant: string\n  price: number\n  isActive: boolean\n  sizes?: DesignSize[]\n  colors?: string[]\n  printAreas?: string[]\n  mockups?: string[]\n  minimumOrder?: number\n  shippingTime?: number\n}\n\nexport interface IPODDesign extends Document {\n  _id: string\n  sellerId: Schema.Types.ObjectId\n  name: string\n  description?: string\n  category: DesignCategory\n  images: string[]\n  files: IDesignFile[]\n  tags: string[]\n  isPublished: boolean\n  products: IDesignProduct[]\n  stats?: {\n    views: number\n    likes: number\n    shares: number\n    downloads: number\n    sales: number\n    revenue: number\n  }\n  settings?: {\n    visibility: 'public' | 'private' | 'unlisted'\n    allowDownload: boolean\n    license: 'standard' | 'extended' | 'exclusive'\n    customization: boolean\n  }\n  metadata?: {\n    originalFormat: DesignFormat\n    dimensions: {\n      width: number\n      height: number\n      unit: 'px' | 'in' | 'cm'\n    }\n    fileSize: number\n    colors: string[]\n    fonts: string[]\n  }\n  reviews?: Array<{\n    userId: Schema.Types.ObjectId\n    rating: number\n    comment: string\n    createdAt: Date\n  }>\n  createdAt: Date\n  updatedAt: Date\n}\n\nconst designFileSchema = new Schema<IDesignFile>({\n  preview: {\n    type: String,\n    required: true,\n  },\n  source: {\n    type: String,\n    required: true,\n  },\n  format: {\n    type: String,\n    enum: ['svg', 'png', 'pdf', 'ai', 'psd'],\n    required: true,\n  },\n  size: {\n    width: Number,\n    height: Number,\n    unit: {\n      type: String,\n      enum: ['px', 'in', 'cm'],\n    },\n  },\n  metadata: {\n    dpi: Number,\n    colorSpace: {\n      type: String,\n      enum: ['rgb', 'cmyk'],\n    },\n    layersCount: Number,\n  },\n})\n\nconst designProductSchema = new Schema<IDesignProduct>({\n  productId: {\n    type: Schema.Types.ObjectId,\n    ref: 'Product',\n    required: true,\n  },\n  variant: {\n    type: String,\n    required: true,\n  },\n  price: {\n    type: Number,\n    required: true,\n    min: 0,\n  },\n  isActive: {\n    type: Boolean,\n    default: true,\n  },\n  sizes: [{\n    type: String,\n    enum: ['xs', 's', 'm', 'l', 'xl', '2xl', '3xl'],\n  }],\n  colors: [String],\n  printAreas: [String],\n  mockups: [String],\n  minimumOrder: {\n    type: Number,\n    default: 1,\n    min: 1,\n  },\n  shippingTime: {\n    type: Number,\n    min: 0,\n  },\n})\n\nconst podDesignSchema = new Schema<IPODDesign>(\n  {\n    sellerId: {\n      type: Schema.Types.ObjectId,\n      ref: 'Seller',\n      required: true,\n      index: true,\n    },\n    name: {\n      type: String,\n      required: true,\n      trim: true,\n      minlength: 3,\n      maxlength: 100,\n    },\n    description: {\n      type: String,\n      trim: true,\n      maxlength: 2000,\n    },\n    category: {\n      type: String,\n      enum: ['apparel', 'accessories', 'home-decor', 'stationery', 'other'],\n      required: true,\n      index: true,\n    },\n    images: [{\n      type: String,\n      validate: {\n        validator: (v: string) => /^https?:\\/\\/.+/.test(v),\n        message: 'Invalid image URL',\n      },\n    }],\n    files: [designFileSchema],\n    tags: [{\n      type: String,\n      trim: true,\n      lowercase: true,\n    }],\n    isPublished: {\n      type: Boolean,\n      default: false,\n      index: true,\n    },\n    products: [designProductSchema],\n    stats: {\n      views: { type: Number, default: 0 },\n      likes: { type: Number, default: 0 },\n      shares: { type: Number, default: 0 },\n      downloads: { type: Number, default: 0 },\n      sales: { type: Number, default: 0 },\n      revenue: { type: Number, default: 0 },\n    },\n    settings: {\n      visibility: {\n        type: String,\n        enum: ['public', 'private', 'unlisted'],\n        default: 'public',\n      },\n      allowDownload: {\n        type: Boolean,\n        default: false,\n      },\n      license: {\n        type: String,\n        enum: ['standard', 'extended', 'exclusive'],\n        default: 'standard',\n      },\n      customization: {\n        type: Boolean,\n        default: true,\n      },\n    },\n    metadata: {\n      originalFormat: {\n        type: String,\n        enum: ['svg', 'png', 'pdf', 'ai', 'psd'],\n      },\n      dimensions: {\n        width: Number,\n        height: Number,\n        unit: {\n          type: String,\n          enum: ['px', 'in', 'cm'],\n        },\n      },\n      fileSize: Number,\n      colors: [String],\n      fonts: [String],\n    },\n    reviews: [{\n      userId: {\n        type: Schema.Types.ObjectId,\n        ref: 'User',\n        required: true,\n      },\n      rating: {\n        type: Number,\n        required: true,\n        min: 1,\n        max: 5,\n      },\n      comment: String,\n      createdAt: {\n        type: Date,\n        default: Date.now,\n      },\n    }],\n  },\n  {\n    timestamps: true,\n  }\n)\n\n// Indexes\npodDesignSchema.index({ name: 'text', description: 'text', tags: 'text' })\npodDesignSchema.index({ 'stats.views': -1 })\npodDesignSchema.index({ 'stats.sales': -1 })\npodDesignSchema.index({ createdAt: -1 })\n\n// Methods\npodDesignSchema.methods.incrementStats = function(field: keyof IPODDesign['stats'], amount = 1) {\n  if (this.stats && field in this.stats) {\n    this.stats[field] += amount\n    return this.save()\n  }\n}\n\n// Statics\npodDesignSchema.statics.findByTags = function(tags: string[]) {\n  return this.find({ tags: { $in: tags } })\n}\n\npodDesignSchema.statics.findPopular = function() {\n  return this.find({ isPublished: true })\n    .sort({ 'stats.views': -1, 'stats.sales': -1 })\n    .limit(10)\n}\n\n// Middleware\npodDesignSchema.pre('save', function(next) {\n  if (this.isModified('products')) {\n    // Update stats when products change\n    const totalSales = this.products.reduce((sum, product) => sum + (product.price || 0), 0)\n    if (!this.stats) {\n      this.stats = {\n        views: 0,\n        likes: 0,\n        shares: 0,\n        downloads: 0,\n        sales: 0,\n        revenue: 0\n      }\n    }\n    this.stats.revenue = totalSales\n  }\n  next()\n})\n\nconst PODDesign = (models.PODDesign as Model<IPODDesign>) || \n  model<IPODDesign>('PODDesign', podDesignSchema)\n\nexport default PODDesign"],
      names: ["designFileSchema", "Schema", "preview", "type", "String", "required", "source", "format", "enum", "size", "width", "Number", "height", "unit", "metadata", "dpi", "colorSpace", "layersCount", "designProductSchema", "productId", "Types", "ObjectId", "ref", "variant", "price", "min", "isActive", "Boolean", "default", "sizes", "colors", "printAreas", "mockups", "minimumOrder", "shippingTime", "podDesignSchema", "sellerId", "index", "name", "trim", "minlength", "maxlength", "description", "category", "images", "validate", "validator", "v", "test", "message", "files", "tags", "lowercase", "isPublished", "products", "stats", "views", "likes", "shares", "downloads", "sales", "revenue", "settings", "visibility", "allowDownload", "license", "customization", "originalFormat", "dimensions", "fileSize", "fonts", "reviews", "userId", "rating", "max", "comment", "createdAt", "Date", "now", "timestamps", "methods", "incrementStats", "field", "amount", "save", "statics", "findByTags", "find", "$in", "findPopular", "sort", "limit", "pre", "next", "isModified", "totalSales", "reduce", "sum", "product", "PODDesign", "models", "model"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6b91031614c9229f33507cdaa78c88f9435dd70e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1vo6mawnma = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1vo6mawnma();
cov_1vo6mawnma().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1vo6mawnma().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1vo6mawnma().f[0]++;
    cov_1vo6mawnma().s[2]++;
    return _default;
  }
});
const _mongoose =
/* istanbul ignore next */
(cov_1vo6mawnma().s[3]++, require("mongoose"));
const designFileSchema =
/* istanbul ignore next */
(cov_1vo6mawnma().s[4]++, new _mongoose.Schema({
  preview: {
    type: String,
    required: true
  },
  source: {
    type: String,
    required: true
  },
  format: {
    type: String,
    enum: ['svg', 'png', 'pdf', 'ai', 'psd'],
    required: true
  },
  size: {
    width: Number,
    height: Number,
    unit: {
      type: String,
      enum: ['px', 'in', 'cm']
    }
  },
  metadata: {
    dpi: Number,
    colorSpace: {
      type: String,
      enum: ['rgb', 'cmyk']
    },
    layersCount: Number
  }
}));
const designProductSchema =
/* istanbul ignore next */
(cov_1vo6mawnma().s[5]++, new _mongoose.Schema({
  productId: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'Product',
    required: true
  },
  variant: {
    type: String,
    required: true
  },
  price: {
    type: Number,
    required: true,
    min: 0
  },
  isActive: {
    type: Boolean,
    default: true
  },
  sizes: [{
    type: String,
    enum: ['xs', 's', 'm', 'l', 'xl', '2xl', '3xl']
  }],
  colors: [String],
  printAreas: [String],
  mockups: [String],
  minimumOrder: {
    type: Number,
    default: 1,
    min: 1
  },
  shippingTime: {
    type: Number,
    min: 0
  }
}));
const podDesignSchema =
/* istanbul ignore next */
(cov_1vo6mawnma().s[6]++, new _mongoose.Schema({
  sellerId: {
    type: _mongoose.Schema.Types.ObjectId,
    ref: 'Seller',
    required: true,
    index: true
  },
  name: {
    type: String,
    required: true,
    trim: true,
    minlength: 3,
    maxlength: 100
  },
  description: {
    type: String,
    trim: true,
    maxlength: 2000
  },
  category: {
    type: String,
    enum: ['apparel', 'accessories', 'home-decor', 'stationery', 'other'],
    required: true,
    index: true
  },
  images: [{
    type: String,
    validate: {
      validator: v => {
        /* istanbul ignore next */
        cov_1vo6mawnma().f[1]++;
        cov_1vo6mawnma().s[7]++;
        return /^https?:\/\/.+/.test(v);
      },
      message: 'Invalid image URL'
    }
  }],
  files: [designFileSchema],
  tags: [{
    type: String,
    trim: true,
    lowercase: true
  }],
  isPublished: {
    type: Boolean,
    default: false,
    index: true
  },
  products: [designProductSchema],
  stats: {
    views: {
      type: Number,
      default: 0
    },
    likes: {
      type: Number,
      default: 0
    },
    shares: {
      type: Number,
      default: 0
    },
    downloads: {
      type: Number,
      default: 0
    },
    sales: {
      type: Number,
      default: 0
    },
    revenue: {
      type: Number,
      default: 0
    }
  },
  settings: {
    visibility: {
      type: String,
      enum: ['public', 'private', 'unlisted'],
      default: 'public'
    },
    allowDownload: {
      type: Boolean,
      default: false
    },
    license: {
      type: String,
      enum: ['standard', 'extended', 'exclusive'],
      default: 'standard'
    },
    customization: {
      type: Boolean,
      default: true
    }
  },
  metadata: {
    originalFormat: {
      type: String,
      enum: ['svg', 'png', 'pdf', 'ai', 'psd']
    },
    dimensions: {
      width: Number,
      height: Number,
      unit: {
        type: String,
        enum: ['px', 'in', 'cm']
      }
    },
    fileSize: Number,
    colors: [String],
    fonts: [String]
  },
  reviews: [{
    userId: {
      type: _mongoose.Schema.Types.ObjectId,
      ref: 'User',
      required: true
    },
    rating: {
      type: Number,
      required: true,
      min: 1,
      max: 5
    },
    comment: String,
    createdAt: {
      type: Date,
      default: Date.now
    }
  }]
}, {
  timestamps: true
}));
// Indexes
/* istanbul ignore next */
cov_1vo6mawnma().s[8]++;
podDesignSchema.index({
  name: 'text',
  description: 'text',
  tags: 'text'
});
/* istanbul ignore next */
cov_1vo6mawnma().s[9]++;
podDesignSchema.index({
  'stats.views': -1
});
/* istanbul ignore next */
cov_1vo6mawnma().s[10]++;
podDesignSchema.index({
  'stats.sales': -1
});
/* istanbul ignore next */
cov_1vo6mawnma().s[11]++;
podDesignSchema.index({
  createdAt: -1
});
// Methods
/* istanbul ignore next */
cov_1vo6mawnma().s[12]++;
podDesignSchema.methods.incrementStats = function (field, amount =
/* istanbul ignore next */
(cov_1vo6mawnma().b[0][0]++, 1)) {
  /* istanbul ignore next */
  cov_1vo6mawnma().f[2]++;
  cov_1vo6mawnma().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_1vo6mawnma().b[2][0]++, this.stats) &&
  /* istanbul ignore next */
  (cov_1vo6mawnma().b[2][1]++, field in this.stats)) {
    /* istanbul ignore next */
    cov_1vo6mawnma().b[1][0]++;
    cov_1vo6mawnma().s[14]++;
    this.stats[field] += amount;
    /* istanbul ignore next */
    cov_1vo6mawnma().s[15]++;
    return this.save();
  } else
  /* istanbul ignore next */
  {
    cov_1vo6mawnma().b[1][1]++;
  }
};
// Statics
/* istanbul ignore next */
cov_1vo6mawnma().s[16]++;
podDesignSchema.statics.findByTags = function (tags) {
  /* istanbul ignore next */
  cov_1vo6mawnma().f[3]++;
  cov_1vo6mawnma().s[17]++;
  return this.find({
    tags: {
      $in: tags
    }
  });
};
/* istanbul ignore next */
cov_1vo6mawnma().s[18]++;
podDesignSchema.statics.findPopular = function () {
  /* istanbul ignore next */
  cov_1vo6mawnma().f[4]++;
  cov_1vo6mawnma().s[19]++;
  return this.find({
    isPublished: true
  }).sort({
    'stats.views': -1,
    'stats.sales': -1
  }).limit(10);
};
// Middleware
/* istanbul ignore next */
cov_1vo6mawnma().s[20]++;
podDesignSchema.pre('save', function (next) {
  /* istanbul ignore next */
  cov_1vo6mawnma().f[5]++;
  cov_1vo6mawnma().s[21]++;
  if (this.isModified('products')) {
    /* istanbul ignore next */
    cov_1vo6mawnma().b[3][0]++;
    // Update stats when products change
    const totalSales =
    /* istanbul ignore next */
    (cov_1vo6mawnma().s[22]++, this.products.reduce((sum, product) => {
      /* istanbul ignore next */
      cov_1vo6mawnma().f[6]++;
      cov_1vo6mawnma().s[23]++;
      return sum + (
      /* istanbul ignore next */
      (cov_1vo6mawnma().b[4][0]++, product.price) ||
      /* istanbul ignore next */
      (cov_1vo6mawnma().b[4][1]++, 0));
    }, 0));
    /* istanbul ignore next */
    cov_1vo6mawnma().s[24]++;
    if (!this.stats) {
      /* istanbul ignore next */
      cov_1vo6mawnma().b[5][0]++;
      cov_1vo6mawnma().s[25]++;
      this.stats = {
        views: 0,
        likes: 0,
        shares: 0,
        downloads: 0,
        sales: 0,
        revenue: 0
      };
    } else
    /* istanbul ignore next */
    {
      cov_1vo6mawnma().b[5][1]++;
    }
    cov_1vo6mawnma().s[26]++;
    this.stats.revenue = totalSales;
  } else
  /* istanbul ignore next */
  {
    cov_1vo6mawnma().b[3][1]++;
  }
  cov_1vo6mawnma().s[27]++;
  next();
});
const PODDesign =
/* istanbul ignore next */
(cov_1vo6mawnma().s[28]++,
/* istanbul ignore next */
(cov_1vo6mawnma().b[6][0]++, _mongoose.models.PODDesign) ||
/* istanbul ignore next */
(cov_1vo6mawnma().b[6][1]++, (0, _mongoose.model)('PODDesign', podDesignSchema)));
const _default =
/* istanbul ignore next */
(cov_1vo6mawnma().s[29]++, PODDesign);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,