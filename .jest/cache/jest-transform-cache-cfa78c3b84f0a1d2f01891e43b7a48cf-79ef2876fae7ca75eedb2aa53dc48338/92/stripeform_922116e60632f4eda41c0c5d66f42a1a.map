{"version":3,"names":["StripeForm","priceInCents","orderId","cov_13assh0427","f","setting","site","s","_usesettingstore","default","stripe","_reactstripejs","useStripe","elements","useElements","isLoading","setIsLoading","_react","useState","errorMessage","setErrorMessage","email","setEmail","handleSubmit","e","preventDefault","b","error","confirmPayment","confirmParams","return_url","url","receipt_email","type","message","err","_jsxruntime","jsxs","onSubmit","className","jsx","PaymentElement","LinkAuthenticationElement","onChange","value","_button","Button","size","disabled","_productprice","price","plain"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/checkout/[id]/stripe-form.tsx"],"sourcesContent":["import {\n  LinkAuthenticationElement,\n  PaymentElement,\n  useElements,\n  useStripe,\n} from '@stripe/react-stripe-js'\nimport { FormEvent, useState } from 'react'\n\nimport { Button } from '@/components/ui/button'\nimport ProductPrice from '@/components/shared/product/product-price'\nimport useSettingStore from '@/hooks/use-setting-store'\n\nexport default function StripeForm({\n  priceInCents,\n  orderId,\n}: {\n  priceInCents: number\n  orderId: string\n}) {\n  const {\n    setting: { site },\n  } = useSettingStore()\n\n  const stripe = useStripe()\n  const elements = useElements()\n  const [isLoading, setIsLoading] = useState(false)\n  const [errorMessage, setErrorMessage] = useState<string | null>(null)\n  const [email, setEmail] = useState<string | null>(null)\n\n  async function handleSubmit(e: FormEvent) {\n    e.preventDefault()\n\n    if (!stripe || !elements) {\n      setErrorMessage('Stripe is not loaded. Please try again later.')\n      return\n    }\n\n    if (!email) {\n      setErrorMessage('Please provide a valid email address.')\n      return\n    }\n\n    setIsLoading(true)\n    try {\n      const { error } = await stripe.confirmPayment({\n        elements,\n        confirmParams: {\n          return_url: `${site.url}/checkout/${orderId}/stripe-payment-success`,\n          receipt_email: email, // Pass the email to Stripe\n        },\n      })\n\n      if (error) {\n        if (error.type === 'card_error' || error.type === 'validation_error') {\n          setErrorMessage(error.message || 'Payment failed.')\n        } else {\n          setErrorMessage('An unknown error occurred.')\n        }\n      }\n    } catch (err) {\n      setErrorMessage('An error occurred. Please try again.')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div className=\"text-xl\">Stripe Checkout</div>\n      {errorMessage && <div className=\"text-destructive\">{errorMessage}</div>}\n      <PaymentElement />\n      <div>\n        <LinkAuthenticationElement\n          onChange={(e) => setEmail(e.value.email)}\n          className=\"mt-4\"\n        />\n      </div>\n      <Button\n        className=\"w-full\"\n        size=\"lg\"\n        disabled={!stripe || !elements || isLoading}\n      >\n        {isLoading ? (\n          'Purchasing...'\n        ) : (\n          <div>\n            Purchase - <ProductPrice price={priceInCents / 100} plain />\n          </div>\n        )}\n      </Button>\n    </form>\n  )\n}"],"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","ignoreList":[]}