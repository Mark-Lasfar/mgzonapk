{"version":3,"names":["SubscriptionsPage","params","cov_2bhoh9vgav","f","locale","s","t","_server","getTranslations","namespace","session","_auth","auth","user","id","b","console","log","_navigation","redirect","_db","connectToDatabase","_usermodel","default","findById","_jsxruntime","jsx","className","defaultMessage","role","jsxs","href","sellerResult","_sellermodel","findOne","userId","bankInfo","verified","handlePayment","formData","planId","get","method","plan","_constants","subscriptionPlans","find","p","Error","paymentUrl","_payments","createPaymentSession","amount","price","currency","error","subscription","action","htmlFor","name","required","map","value","type"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/account/subscriptions/page.tsx"],"sourcesContent":["'use server';\n\nimport { getTranslations } from 'next-intl/server';\nimport { auth } from '@/auth';\nimport { redirect } from 'next/navigation';\nimport Seller from '@/lib/db/models/seller.model';\nimport User from '@/lib/db/models/user.model';\nimport { createPaymentSession } from '@/lib/utils/payments';\nimport { subscriptionPlans } from '@/lib/constants';\nimport { connectToDatabase } from '@/lib/db';\n\ninterface SubscriptionsPageProps {\n  params: Promise<{ locale: string }>;\n}\n\nexport default async function SubscriptionsPage({ params }: SubscriptionsPageProps) {\n  const { locale } = await params;\n\n  const t = await getTranslations({ locale, namespace: 'subscriptions' });\n  const session = await auth();\n\n  if (!session?.user?.id) {\n    console.log('لا يوجد جلسة مستخدم، يتم إعادة التوجيه إلى تسجيل الدخول');\n    redirect(`/${locale}/sign-in`);\n  }\n\n  console.log('معرف جلسة المستخدم:', session.user.id);\n\n  try {\n    // التأكد من الاتصال بقاعدة البيانات\n    await connectToDatabase();\n    console.log('تم الاتصال بقاعدة البيانات لصفحة الاشتراكات');\n\n    const user = await User.findById(session.user.id);\n    if (!user) {\n      console.log('لم يتم العثور على المستخدم:', session.user.id);\n      return (\n        <div className=\"text-red-500 text-center p-4\">\n          {t('errors.userNotFound', {\n            defaultMessage: 'لم يتم العثور على المستخدم.',\n          })}\n        </div>\n      );\n    }\n\n    if (user.role === 'Admin') {\n      return (\n        <div className=\"text-blue-500 text-center p-4\">\n          {t('errors.adminAccess', {\n            defaultMessage: 'حسابات الإدارة لا تحتاج إلى اشتراكات بائع.',\n          })}\n          <br />\n          <a href={`/${locale}/admin/dashboard`} className=\"text-blue-500 underline\">\n            {t('account.adminDashboard', { defaultMessage: 'الذهاب إلى لوحة التحكم' })}\n          </a>\n        </div>\n      );\n    }\n\n    const sellerResult = await Seller.findOne({ userId: session.user.id });\n    console.log('نتيجة استعلام البائع:', sellerResult);\n\n    if (!sellerResult) {\n      console.log('لم يتم العثور على بائع لمعرف المستخدم:', session.user.id);\n      return (\n        <div className=\"text-red-500 text-center p-4\">\n          {t('errors.sellerNotFound', {\n            defaultMessage: 'لم يتم العثور على ملف بائع. يرجى التسجيل كبائع.',\n          })}\n          <br />\n          <a href={`/${locale}/seller-registration`} className=\"text-blue-500 underline\">\n            {t('account.startSelling', { defaultMessage: 'ابدأ البيع' })}\n          </a>\n        </div>\n      );\n    }\n\n    if (!sellerResult.bankInfo.verified) {\n      return (\n        <div className=\"text-red-500 text-center p-4\">\n          {t('errors.bankInfoNotVerified', {\n            defaultMessage: 'يرجى التحقق من معلومات البنك الخاص بك قبل المتابعة.',\n          })}\n          <br />\n          <a href={`/${locale}/account/bank-verification`} className=\"text-blue-500 underline\">\n            {t('account.verifyBank', { defaultMessage: 'التحقق من معلومات البنك' })}\n          </a>\n        </div>\n      );\n    }\n\n    async function handlePayment(formData: FormData) {\n      'use server';\n      try {\n        const planId = formData.get('planId') as string;\n        const method = formData.get('method') as 'stripe' | 'paypal';\n        const plan = subscriptionPlans.find((p) => p.id === planId);\n        if (!plan) {\n          throw new Error('خطة غير صالحة');\n        }\n        const paymentUrl = await createPaymentSession({\n          userId: session.user.id,\n          planId,\n          amount: plan.price,\n          currency: 'usd',\n          method,\n        });\n        redirect(paymentUrl);\n      } catch (error) {\n        console.error('خطأ في الدفع:', error);\n        throw error;\n      }\n    }\n\n    return (\n      <div className=\"container mx-auto p-4\">\n        <h1 className=\"text-2xl font-bold mb-4\">{t('title')}</h1>\n        <div>\n          <p className=\"mb-4\">\n            {t('currentPlan', { plan: sellerResult.subscription.plan || 'لا يوجد' })}\n          </p>\n          <form action={handlePayment} className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"planId\" className=\"block text-sm font-medium\">\n                {t('selectPlan')}\n              </label>\n              <select\n                id=\"planId\"\n                name=\"planId\"\n                className=\"mt-1 block w-full border rounded-md p-2\"\n                required\n              >\n                {subscriptionPlans.map((plan) => (\n                  <option key={plan.id} value={plan.id}>\n                    {plan.name} - ${plan.price}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"method\" className=\"block text-sm font-medium\">\n                {t('selectMethod')}\n              </label>\n              <select\n                id=\"method\"\n                name=\"method\"\n                className=\"mt-1 block w-full border rounded-md p-2\"\n                required\n              >\n                <option value=\"stripe\">{t('stripe')}</option>\n                <option value=\"paypal\">{t('paypal')}</option>\n              </select>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n            >\n              {t('subscribe')}\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  } catch (error) {\n    console.error('خطأ في صفحة الاشتراكات:', error);\n    return (\n      <div className=\"text-red-500 text-center p-4\">\n        {t('errors.serverError', { defaultMessage: 'حدث خطأ. يرجى المحاولة لاحقًا.' })}\n      </div>\n    );\n  }\n}"],"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","ignoreList":[]}