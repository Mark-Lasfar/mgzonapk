e71d3bfdd479c6f06b858bb29b6f8ceb
"use strict";

/* istanbul ignore next */
function cov_q1jj0u6gc() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/seller/registration/route.ts";
  var hash = "6c0adef80bdfe71e0d1bd34cbf354438a024c1cf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/seller/registration/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 11,
          column: 41
        }
      },
      "4": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "6": {
        start: {
          line: 14,
          column: 35
        },
        end: {
          line: 14,
          column: 110
        }
      },
      "7": {
        start: {
          line: 15,
          column: 33
        },
        end: {
          line: 15,
          column: 106
        }
      },
      "8": {
        start: {
          line: 16,
          column: 32
        },
        end: {
          line: 16,
          column: 77
        }
      },
      "9": {
        start: {
          line: 17,
          column: 13
        },
        end: {
          line: 17,
          column: 27
        }
      },
      "10": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 47
        }
      },
      "11": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "12": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 6
        }
      },
      "13": {
        start: {
          line: 26,
          column: 33
        },
        end: {
          line: 52,
          column: 2
        }
      },
      "14": {
        start: {
          line: 51,
          column: 50
        },
        end: {
          line: 51,
          column: 62
        }
      },
      "15": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 320,
          column: 5
        }
      },
      "16": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 54
        }
      },
      "17": {
        start: {
          line: 57,
          column: 19
        },
        end: {
          line: 60,
          column: 10
        }
      },
      "18": {
        start: {
          line: 62,
          column: 28
        },
        end: {
          line: 62,
          column: 51
        }
      },
      "19": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "20": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 69,
          column: 15
        }
      },
      "21": {
        start: {
          line: 72,
          column: 25
        },
        end: {
          line: 72,
          column: 49
        }
      },
      "22": {
        start: {
          line: 74,
          column: 22
        },
        end: {
          line: 74,
          column: 24
        }
      },
      "23": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "24": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 76,
          column: 49
        }
      },
      "25": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "26": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 62
        }
      },
      "27": {
        start: {
          line: 80,
          column: 31
        },
        end: {
          line: 80,
          column: 51
        }
      },
      "28": {
        start: {
          line: 82,
          column: 29
        },
        end: {
          line: 82,
          column: 49
        }
      },
      "29": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 121,
          column: 13
        }
      },
      "30": {
        start: {
          line: 84,
          column: 32
        },
        end: {
          line: 84,
          column: 47
        }
      },
      "31": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 92,
          column: 17
        }
      },
      "32": {
        start: {
          line: 86,
          column: 20
        },
        end: {
          line: 91,
          column: 23
        }
      },
      "33": {
        start: {
          line: 93,
          column: 37
        },
        end: {
          line: 97,
          column: 17
        }
      },
      "34": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 105,
          column: 17
        }
      },
      "35": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 104,
          column: 23
        }
      },
      "36": {
        start: {
          line: 106,
          column: 36
        },
        end: {
          line: 106,
          column: 64
        }
      },
      "37": {
        start: {
          line: 107,
          column: 31
        },
        end: {
          line: 107,
          column: 55
        }
      },
      "38": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 119,
          column: 19
        }
      },
      "39": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 42
        }
      },
      "40": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 62
        }
      },
      "41": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "42": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 134,
          column: 19
        }
      },
      "43": {
        start: {
          line: 128,
          column: 53
        },
        end: {
          line: 131,
          column: 25
        }
      },
      "44": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 49
        }
      },
      "45": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 142,
          column: 15
        }
      },
      "46": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 43
        }
      },
      "47": {
        start: {
          line: 147,
          column: 26
        },
        end: {
          line: 147,
          column: 64
        }
      },
      "48": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 37
        }
      },
      "49": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "50": {
        start: {
          line: 151,
          column: 35
        },
        end: {
          line: 160,
          column: 33
        }
      },
      "51": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 176,
          column: 13
        }
      },
      "52": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 175,
          column: 19
        }
      },
      "53": {
        start: {
          line: 178,
          column: 33
        },
        end: {
          line: 178,
          column: 79
        }
      },
      "54": {
        start: {
          line: 179,
          column: 27
        },
        end: {
          line: 269,
          column: 14
        }
      },
      "55": {
        start: {
          line: 271,
          column: 32
        },
        end: {
          line: 277,
          column: 14
        }
      },
      "56": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 280,
          column: 13
        }
      },
      "57": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 67
        }
      },
      "58": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 48
        }
      },
      "59": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 294,
          column: 15
        }
      },
      "60": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "61": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 51
        }
      },
      "62": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 55
        }
      },
      "63": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 300,
          column: 24
        }
      },
      "64": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 41
        }
      },
      "65": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 59
        }
      },
      "66": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "67": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 312,
          column: 15
        }
      },
      "68": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 319,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 33
          }
        },
        loc: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 51,
            column: 43
          },
          end: {
            line: 51,
            column: 44
          }
        },
        loc: {
          start: {
            line: 51,
            column: 50
          },
          end: {
            line: 51,
            column: 62
          }
        },
        line: 51
      },
      "3": {
        name: "POST",
        decl: {
          start: {
            line: 53,
            column: 15
          },
          end: {
            line: 53,
            column: 19
          }
        },
        loc: {
          start: {
            line: 53,
            column: 29
          },
          end: {
            line: 321,
            column: 1
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 128,
            column: 45
          },
          end: {
            line: 128,
            column: 46
          }
        },
        loc: {
          start: {
            line: 128,
            column: 53
          },
          end: {
            line: 131,
            column: 25
          }
        },
        line: 128
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 35
          },
          end: {
            line: 21,
            column: 38
          }
        }, {
          start: {
            line: 21,
            column: 41
          },
          end: {
            line: 23,
            column: 5
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 14
          }
        }, {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 32
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "3": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "4": {
        loc: {
          start: {
            line: 77,
            column: 16
          },
          end: {
            line: 77,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 16
          },
          end: {
            line: 77,
            column: 25
          }
        }, {
          start: {
            line: 77,
            column: 29
          },
          end: {
            line: 77,
            column: 57
          }
        }],
        line: 77
      },
      "5": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "6": {
        loc: {
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 92,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 92,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "7": {
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 105,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 105,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "8": {
        loc: {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 135,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "9": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 176,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 176,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "10": {
        loc: {
          start: {
            line: 188,
            column: 26
          },
          end: {
            line: 188,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 26
          },
          end: {
            line: 188,
            column: 33
          }
        }, {
          start: {
            line: 188,
            column: 37
          },
          end: {
            line: 188,
            column: 46
          }
        }],
        line: 188
      },
      "11": {
        loc: {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 280,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 280,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "12": {
        loc: {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "13": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/seller/registration/route.ts"],
      sourcesContent: ["import { connectToDatabase } from '@/lib/db';\nimport { NextRequest, NextResponse } from 'next/server';\nimport { auth } from '@/auth';\nimport Seller from '@/lib/db/models/seller.model';\nimport User from '@/lib/db/models/user.model';\nimport mongoose from 'mongoose';\nimport { z } from 'zod';\nimport { uploadToStorage } from '@/lib/utils/s3';\nimport { getTranslations, getLocale } from 'next-intl/server';\n\n// Validation schema\nconst sellerRegistrationSchema = z.object({\n  businessName: z.string().min(2, 'Business name must be at least 2 characters').max(100),\n  email: z.string().email('Invalid email address'),\n  phone: z.string().min(10).max(20).regex(/^[+]?[(]?[0-9]{1,4}[)]?[-\\s./0-9]*$/),\n  description: z.string().min(50).max(500).optional(),\n  businessType: z.enum(['individual', 'company']),\n  vatRegistered: z.boolean().default(false),\n  logo: z.string().optional(),\n  address: z.object({\n    street: z.string().min(1),\n    city: z.string().min(1),\n    state: z.string().min(1),\n    country: z.string().min(1),\n    postalCode: z.string().min(1),\n  }),\n  taxId: z.string().min(1),\n  bankInfo: z.object({\n    accountName: z.string().min(2),\n    accountNumber: z.string().min(8),\n    bankName: z.string().min(2),\n    swiftCode: z.string().regex(/^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$/),\n  }),\n  termsAccepted: z.boolean().refine((val) => val === true, 'Terms must be accepted'),\n});\n\ntype SellerRegistrationData = z.infer<typeof sellerRegistrationSchema>;\n\nexport async function POST(request: NextRequest) {\n  try {\n    // Get locale and translations\n    const locale = await getLocale();\n    const t = await getTranslations({ locale, namespace: 'api' });\n\n    // Check authentication\n    const userSession = await auth();\n    if (!userSession?.user?.id) {\n      return NextResponse.json(\n        { success: false, message: t('errors.unauthorized') },\n        { status: 401 }\n      );\n    }\n\n    // Parse form data\n    const formData = await request.formData();\n    let data: SellerRegistrationData;\n    let logoUrl = '';\n\n    try {\n      const jsonData = formData.get('data');\n      if (!jsonData || typeof jsonData !== 'string') {\n        throw new Error(t('errors.invalidFormData'));\n      }\n\n      const parsedData = JSON.parse(jsonData);\n\n      // Handle logo upload\n      const logoFile = formData.get('logo') as File | null;\n      if (logoFile) {\n        const maxSize = 5 * 1024 * 1024; // 5MB\n        if (logoFile.size > maxSize) {\n          return NextResponse.json(\n            { success: false, message: t('errors.logoSizeExceed') },\n            { status: 400 }\n          );\n        }\n\n        const allowedTypes = ['image/jpeg', 'image/png', 'image/webp'];\n        if (!allowedTypes.includes(logoFile.type)) {\n          return NextResponse.json(\n            { success: false, message: t('errors.invalidLogoType') },\n            { status: 400 }\n          );\n        }\n\n        const arrayBuffer = await logoFile.arrayBuffer();\n        const buffer = Buffer.from(arrayBuffer);\n\n        logoUrl = await uploadToStorage(buffer, `sellers/${userSession.user.id}/logo`, {\n          folder: 'sellers',\n          resource_type: 'image',\n          allowedFormats: ['jpg', 'jpeg', 'png', 'webp'],\n          public_id: `${userSession.user.id}-${Date.now()}`,\n          overwrite: true,\n        });\n\n        parsedData.logo = logoUrl;\n      }\n\n      data = sellerRegistrationSchema.parse(parsedData);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return NextResponse.json(\n          {\n            success: false,\n            message: t('errors.invalidData'),\n            errors: error.errors.map((err) => ({\n              path: err.path.join('.'),\n              message: err.message,\n            })),\n          },\n          { status: 400 }\n        );\n      }\n      console.error('Parse error:', error);\n      return NextResponse.json(\n        { success: false, message: t('errors.parseFailed') },\n        { status: 400 }\n      );\n    }\n\n    // Connect to database\n    await connectToDatabase();\n\n    // Start transaction\n    const dbSession = await mongoose.startSession();\n    dbSession.startTransaction();\n\n    try {\n      // Check for existing seller\n      const existingSeller = await Seller.findOne({\n        $or: [{ email: data.email }, { userId: userSession.user.id }],\n      }).session(dbSession);\n\n      if (existingSeller) {\n        return NextResponse.json(\n          {\n            success: true,\n            message: t('messages.sellerExists'),\n            data: {\n              id: existingSeller._id,\n              businessName: existingSeller.businessName,\n              email: existingSeller.email,\n              subscription: existingSeller.subscription,\n              customSiteUrl: existingSeller.customSiteUrl,\n              redirect: '/seller/dashboard',\n            },\n          },\n          { status: 200 }\n        );\n      }\n\n      // Create seller profile with 5-day free trial\n      const trialEndDate = new Date(Date.now() + 5 * 24 * 60 * 60 * 1000); // 5 days\n      const seller = await Seller.create(\n        [\n          {\n            userId: userSession.user.id,\n            businessName: data.businessName,\n            email: data.email,\n            phone: data.phone,\n            description: data.description,\n            businessType: data.businessType,\n            vatRegistered: data.vatRegistered,\n            logo: logoUrl || undefined,\n            address: data.address,\n            taxId: data.taxId,\n            bankInfo: {\n              accountName: data.bankInfo.accountName,\n              accountNumber: data.bankInfo.accountNumber,\n              bankName: data.bankInfo.bankName,\n              swiftCode: data.bankInfo.swiftCode,\n              verified: false,\n            },\n            subscription: {\n              plan: 'Trial',\n              startDate: new Date(),\n              endDate: trialEndDate,\n              status: 'active',\n              features: {\n                productsLimit: 50,\n                commission: 7,\n                prioritySupport: false,\n                instantPayouts: false,\n              },\n            },\n            verification: {\n              status: 'pending',\n              documents: {},\n              submittedAt: new Date(),\n            },\n            metrics: {\n              rating: 0,\n              totalSales: 0,\n              totalRevenue: 0,\n              productsCount: 0,\n              ordersCount: 0,\n              customersCount: 0,\n              views: 0,\n              followers: 0,\n              products: {\n                total: 0,\n                active: 0,\n                outOfStock: 0,\n              },\n            },\n            settings: {\n              notifications: {\n                email: true,\n                sms: false,\n                orderUpdates: true,\n                marketingEmails: false,\n                pointsNotifications: true,\n              },\n              display: {\n                showRating: true,\n                showContactInfo: true,\n                showMetrics: true,\n                showPointsBalance: true,\n              },\n              security: {\n                twoFactorAuth: false,\n                loginNotifications: true,\n              },\n              customSite: {\n                theme: 'default',\n                primaryColor: '#000000',\n              },\n            },\n            pointsBalance: 50,\n            pointsTransactions: [\n              {\n                amount: 50,\n                type: 'earn',\n                description: 'Welcome bonus for new seller registration',\n                createdAt: new Date(),\n              },\n            ],\n            freeTrialActive: true,\n            freeTrialEndDate: trialEndDate,\n            trialMonthsUsed: 0,\n            customSiteUrl: `/seller/${userSession.user.id}`,\n          },\n        ],\n        { session: dbSession }\n      );\n\n      // Update user role\n      const updatedUser = await User.findByIdAndUpdate(\n        userSession.user.id,\n        {\n          role: 'SELLER',\n          businessProfile: seller[0]._id,\n        },\n        { new: true, session: dbSession }\n      );\n\n      if (!updatedUser) {\n        throw new Error(t('errors.updateUserRoleFailed'));\n      }\n\n      // Commit transaction\n      await dbSession.commitTransaction();\n\n      return NextResponse.json({\n        success: true,\n        message: t('messages.success'),\n        data: {\n          id: seller[0]._id,\n          businessName: seller[0].businessName,\n          email: seller[0].email,\n          role: updatedUser.role,\n          subscription: seller[0].subscription,\n          customSiteUrl: seller[0].customSiteUrl,\n        },\n      });\n    } catch (error) {\n      if (dbSession.inTransaction()) {\n        await dbSession.abortTransaction();\n      }\n      console.error('Transaction error:', error);\n      throw error;\n    } finally {\n      await dbSession.endSession();\n    }\n  } catch (error) {\n    console.error('Seller registration error:', error);\n    if (error instanceof mongoose.Error.ValidationError) {\n      return NextResponse.json(\n        {\n          success: false,\n          message: t('errors.invalidData'),\n        },\n        { status: 400 }\n      );\n    }\n    return NextResponse.json(\n      {\n        success: false,\n        message: t('errors.serverError'),\n      },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["POST", "sellerRegistrationSchema", "z", "object", "businessName", "string", "min", "max", "email", "phone", "regex", "description", "optional", "businessType", "enum", "vatRegistered", "boolean", "default", "logo", "address", "street", "city", "state", "country", "postalCode", "taxId", "bankInfo", "accountName", "accountNumber", "bankName", "swiftCode", "termsAccepted", "refine", "val", "request", "locale", "getLocale", "t", "getTranslations", "namespace", "userSession", "auth", "user", "id", "NextResponse", "json", "success", "message", "status", "formData", "data", "logoUrl", "jsonData", "get", "Error", "parsedData", "JSON", "parse", "logoFile", "maxSize", "size", "allowedTypes", "includes", "type", "arrayBuffer", "buffer", "Buffer", "from", "uploadToStorage", "folder", "resource_type", "allowedFormats", "public_id", "Date", "now", "overwrite", "error", "ZodError", "errors", "map", "err", "path", "join", "console", "connectToDatabase", "dbSession", "mongoose", "startSession", "startTransaction", "existingSeller", "Seller", "findOne", "$or", "userId", "session", "_id", "subscription", "customSiteUrl", "redirect", "trialEndDate", "seller", "create", "undefined", "verified", "plan", "startDate", "endDate", "features", "productsLimit", "commission", "prioritySupport", "instantPayouts", "verification", "documents", "submittedAt", "metrics", "rating", "totalSales", "totalRevenue", "productsCount", "ordersCount", "customersCount", "views", "followers", "products", "total", "active", "outOfStock", "settings", "notifications", "sms", "orderUpdates", "marketingEmails", "pointsNotifications", "display", "showRating", "showContactInfo", "showMetrics", "showPointsBalance", "security", "twoFactorAuth", "loginNotifications", "customSite", "theme", "primaryColor", "pointsBalance", "pointsTransactions", "amount", "createdAt", "freeTrialActive", "freeTrialEndDate", "trialMonthsUsed", "updatedUser", "User", "findByIdAndUpdate", "role", "businessProfile", "new", "commitTransaction", "inTransaction", "abortTransaction", "endSession", "ValidationError"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6c0adef80bdfe71e0d1bd34cbf354438a024c1cf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_q1jj0u6gc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_q1jj0u6gc();
cov_q1jj0u6gc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_q1jj0u6gc().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_q1jj0u6gc().f[0]++;
    cov_q1jj0u6gc().s[2]++;
    return POST;
  }
});
const _db =
/* istanbul ignore next */
(cov_q1jj0u6gc().s[3]++, require("../../../../lib/db"));
const _server =
/* istanbul ignore next */
(cov_q1jj0u6gc().s[4]++, require("next/server"));
const _auth =
/* istanbul ignore next */
(cov_q1jj0u6gc().s[5]++, require("../../../../auth"));
const _sellermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_q1jj0u6gc().s[6]++, _interop_require_default(require("../../../../lib/db/models/seller.model")));
const _usermodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_q1jj0u6gc().s[7]++, _interop_require_default(require("../../../../lib/db/models/user.model")));
const _mongoose =
/* istanbul ignore next */
(/*#__PURE__*/cov_q1jj0u6gc().s[8]++, _interop_require_default(require("mongoose")));
const _zod =
/* istanbul ignore next */
(cov_q1jj0u6gc().s[9]++, require("zod"));
const _s3 =
/* istanbul ignore next */
(cov_q1jj0u6gc().s[10]++, require("../../../../lib/utils/s3"));
const _server1 =
/* istanbul ignore next */
(cov_q1jj0u6gc().s[11]++, require("next-intl/server"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_q1jj0u6gc().f[1]++;
  cov_q1jj0u6gc().s[12]++;
  return /* istanbul ignore next */(cov_q1jj0u6gc().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_q1jj0u6gc().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_q1jj0u6gc().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_q1jj0u6gc().b[0][1]++, {
    default: obj
  });
}
// Validation schema
const sellerRegistrationSchema =
/* istanbul ignore next */
(cov_q1jj0u6gc().s[13]++, _zod.z.object({
  businessName: _zod.z.string().min(2, 'Business name must be at least 2 characters').max(100),
  email: _zod.z.string().email('Invalid email address'),
  phone: _zod.z.string().min(10).max(20).regex(/^[+]?[(]?[0-9]{1,4}[)]?[-\s./0-9]*$/),
  description: _zod.z.string().min(50).max(500).optional(),
  businessType: _zod.z.enum(['individual', 'company']),
  vatRegistered: _zod.z.boolean().default(false),
  logo: _zod.z.string().optional(),
  address: _zod.z.object({
    street: _zod.z.string().min(1),
    city: _zod.z.string().min(1),
    state: _zod.z.string().min(1),
    country: _zod.z.string().min(1),
    postalCode: _zod.z.string().min(1)
  }),
  taxId: _zod.z.string().min(1),
  bankInfo: _zod.z.object({
    accountName: _zod.z.string().min(2),
    accountNumber: _zod.z.string().min(8),
    bankName: _zod.z.string().min(2),
    swiftCode: _zod.z.string().regex(/^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$/)
  }),
  termsAccepted: _zod.z.boolean().refine(val => {
    /* istanbul ignore next */
    cov_q1jj0u6gc().f[2]++;
    cov_q1jj0u6gc().s[14]++;
    return val === true;
  }, 'Terms must be accepted')
}));
async function POST(request) {
  /* istanbul ignore next */
  cov_q1jj0u6gc().f[3]++;
  cov_q1jj0u6gc().s[15]++;
  try {
    // Get locale and translations
    const locale =
    /* istanbul ignore next */
    (cov_q1jj0u6gc().s[16]++, await (0, _server1.getLocale)());
    const t1 =
    /* istanbul ignore next */
    (cov_q1jj0u6gc().s[17]++, await (0, _server1.getTranslations)({
      locale,
      namespace: 'api'
    }));
    // Check authentication
    const userSession =
    /* istanbul ignore next */
    (cov_q1jj0u6gc().s[18]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_q1jj0u6gc().s[19]++;
    if (!userSession?.user?.id) {
      /* istanbul ignore next */
      cov_q1jj0u6gc().b[2][0]++;
      cov_q1jj0u6gc().s[20]++;
      return _server.NextResponse.json({
        success: false,
        message: t1('errors.unauthorized')
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_q1jj0u6gc().b[2][1]++;
    }
    // Parse form data
    const formData =
    /* istanbul ignore next */
    (cov_q1jj0u6gc().s[21]++, await request.formData());
    let data;
    let logoUrl =
    /* istanbul ignore next */
    (cov_q1jj0u6gc().s[22]++, '');
    /* istanbul ignore next */
    cov_q1jj0u6gc().s[23]++;
    try {
      const jsonData =
      /* istanbul ignore next */
      (cov_q1jj0u6gc().s[24]++, formData.get('data'));
      /* istanbul ignore next */
      cov_q1jj0u6gc().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_q1jj0u6gc().b[4][0]++, !jsonData) ||
      /* istanbul ignore next */
      (cov_q1jj0u6gc().b[4][1]++, typeof jsonData !== 'string')) {
        /* istanbul ignore next */
        cov_q1jj0u6gc().b[3][0]++;
        cov_q1jj0u6gc().s[26]++;
        throw new Error(t1('errors.invalidFormData'));
      } else
      /* istanbul ignore next */
      {
        cov_q1jj0u6gc().b[3][1]++;
      }
      const parsedData =
      /* istanbul ignore next */
      (cov_q1jj0u6gc().s[27]++, JSON.parse(jsonData));
      // Handle logo upload
      const logoFile =
      /* istanbul ignore next */
      (cov_q1jj0u6gc().s[28]++, formData.get('logo'));
      /* istanbul ignore next */
      cov_q1jj0u6gc().s[29]++;
      if (logoFile) {
        /* istanbul ignore next */
        cov_q1jj0u6gc().b[5][0]++;
        const maxSize =
        /* istanbul ignore next */
        (cov_q1jj0u6gc().s[30]++, 5 * 1024 * 1024); // 5MB
        /* istanbul ignore next */
        cov_q1jj0u6gc().s[31]++;
        if (logoFile.size > maxSize) {
          /* istanbul ignore next */
          cov_q1jj0u6gc().b[6][0]++;
          cov_q1jj0u6gc().s[32]++;
          return _server.NextResponse.json({
            success: false,
            message: t1('errors.logoSizeExceed')
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_q1jj0u6gc().b[6][1]++;
        }
        const allowedTypes =
        /* istanbul ignore next */
        (cov_q1jj0u6gc().s[33]++, ['image/jpeg', 'image/png', 'image/webp']);
        /* istanbul ignore next */
        cov_q1jj0u6gc().s[34]++;
        if (!allowedTypes.includes(logoFile.type)) {
          /* istanbul ignore next */
          cov_q1jj0u6gc().b[7][0]++;
          cov_q1jj0u6gc().s[35]++;
          return _server.NextResponse.json({
            success: false,
            message: t1('errors.invalidLogoType')
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_q1jj0u6gc().b[7][1]++;
        }
        const arrayBuffer =
        /* istanbul ignore next */
        (cov_q1jj0u6gc().s[36]++, await logoFile.arrayBuffer());
        const buffer =
        /* istanbul ignore next */
        (cov_q1jj0u6gc().s[37]++, Buffer.from(arrayBuffer));
        /* istanbul ignore next */
        cov_q1jj0u6gc().s[38]++;
        logoUrl = await (0, _s3.uploadToStorage)(buffer, `sellers/${userSession.user.id}/logo`, {
          folder: 'sellers',
          resource_type: 'image',
          allowedFormats: ['jpg', 'jpeg', 'png', 'webp'],
          public_id: `${userSession.user.id}-${Date.now()}`,
          overwrite: true
        });
        /* istanbul ignore next */
        cov_q1jj0u6gc().s[39]++;
        parsedData.logo = logoUrl;
      } else
      /* istanbul ignore next */
      {
        cov_q1jj0u6gc().b[5][1]++;
      }
      cov_q1jj0u6gc().s[40]++;
      data = sellerRegistrationSchema.parse(parsedData);
    } catch (error) {
      /* istanbul ignore next */
      cov_q1jj0u6gc().s[41]++;
      if (error instanceof _zod.z.ZodError) {
        /* istanbul ignore next */
        cov_q1jj0u6gc().b[8][0]++;
        cov_q1jj0u6gc().s[42]++;
        return _server.NextResponse.json({
          success: false,
          message: t1('errors.invalidData'),
          errors: error.errors.map(err => {
            /* istanbul ignore next */
            cov_q1jj0u6gc().f[4]++;
            cov_q1jj0u6gc().s[43]++;
            return {
              path: err.path.join('.'),
              message: err.message
            };
          })
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_q1jj0u6gc().b[8][1]++;
      }
      cov_q1jj0u6gc().s[44]++;
      console.error('Parse error:', error);
      /* istanbul ignore next */
      cov_q1jj0u6gc().s[45]++;
      return _server.NextResponse.json({
        success: false,
        message: t1('errors.parseFailed')
      }, {
        status: 400
      });
    }
    // Connect to database
    /* istanbul ignore next */
    cov_q1jj0u6gc().s[46]++;
    await (0, _db.connectToDatabase)();
    // Start transaction
    const dbSession =
    /* istanbul ignore next */
    (cov_q1jj0u6gc().s[47]++, await _mongoose.default.startSession());
    /* istanbul ignore next */
    cov_q1jj0u6gc().s[48]++;
    dbSession.startTransaction();
    /* istanbul ignore next */
    cov_q1jj0u6gc().s[49]++;
    try {
      // Check for existing seller
      const existingSeller =
      /* istanbul ignore next */
      (cov_q1jj0u6gc().s[50]++, await _sellermodel.default.findOne({
        $or: [{
          email: data.email
        }, {
          userId: userSession.user.id
        }]
      }).session(dbSession));
      /* istanbul ignore next */
      cov_q1jj0u6gc().s[51]++;
      if (existingSeller) {
        /* istanbul ignore next */
        cov_q1jj0u6gc().b[9][0]++;
        cov_q1jj0u6gc().s[52]++;
        return _server.NextResponse.json({
          success: true,
          message: t1('messages.sellerExists'),
          data: {
            id: existingSeller._id,
            businessName: existingSeller.businessName,
            email: existingSeller.email,
            subscription: existingSeller.subscription,
            customSiteUrl: existingSeller.customSiteUrl,
            redirect: '/seller/dashboard'
          }
        }, {
          status: 200
        });
      } else
      /* istanbul ignore next */
      {
        cov_q1jj0u6gc().b[9][1]++;
      }
      // Create seller profile with 5-day free trial
      const trialEndDate =
      /* istanbul ignore next */
      (cov_q1jj0u6gc().s[53]++, new Date(Date.now() + 5 * 24 * 60 * 60 * 1000)); // 5 days
      const seller =
      /* istanbul ignore next */
      (cov_q1jj0u6gc().s[54]++, await _sellermodel.default.create([{
        userId: userSession.user.id,
        businessName: data.businessName,
        email: data.email,
        phone: data.phone,
        description: data.description,
        businessType: data.businessType,
        vatRegistered: data.vatRegistered,
        logo:
        /* istanbul ignore next */
        (cov_q1jj0u6gc().b[10][0]++, logoUrl) ||
        /* istanbul ignore next */
        (cov_q1jj0u6gc().b[10][1]++, undefined),
        address: data.address,
        taxId: data.taxId,
        bankInfo: {
          accountName: data.bankInfo.accountName,
          accountNumber: data.bankInfo.accountNumber,
          bankName: data.bankInfo.bankName,
          swiftCode: data.bankInfo.swiftCode,
          verified: false
        },
        subscription: {
          plan: 'Trial',
          startDate: new Date(),
          endDate: trialEndDate,
          status: 'active',
          features: {
            productsLimit: 50,
            commission: 7,
            prioritySupport: false,
            instantPayouts: false
          }
        },
        verification: {
          status: 'pending',
          documents: {},
          submittedAt: new Date()
        },
        metrics: {
          rating: 0,
          totalSales: 0,
          totalRevenue: 0,
          productsCount: 0,
          ordersCount: 0,
          customersCount: 0,
          views: 0,
          followers: 0,
          products: {
            total: 0,
            active: 0,
            outOfStock: 0
          }
        },
        settings: {
          notifications: {
            email: true,
            sms: false,
            orderUpdates: true,
            marketingEmails: false,
            pointsNotifications: true
          },
          display: {
            showRating: true,
            showContactInfo: true,
            showMetrics: true,
            showPointsBalance: true
          },
          security: {
            twoFactorAuth: false,
            loginNotifications: true
          },
          customSite: {
            theme: 'default',
            primaryColor: '#000000'
          }
        },
        pointsBalance: 50,
        pointsTransactions: [{
          amount: 50,
          type: 'earn',
          description: 'Welcome bonus for new seller registration',
          createdAt: new Date()
        }],
        freeTrialActive: true,
        freeTrialEndDate: trialEndDate,
        trialMonthsUsed: 0,
        customSiteUrl: `/seller/${userSession.user.id}`
      }], {
        session: dbSession
      }));
      // Update user role
      const updatedUser =
      /* istanbul ignore next */
      (cov_q1jj0u6gc().s[55]++, await _usermodel.default.findByIdAndUpdate(userSession.user.id, {
        role: 'SELLER',
        businessProfile: seller[0]._id
      }, {
        new: true,
        session: dbSession
      }));
      /* istanbul ignore next */
      cov_q1jj0u6gc().s[56]++;
      if (!updatedUser) {
        /* istanbul ignore next */
        cov_q1jj0u6gc().b[11][0]++;
        cov_q1jj0u6gc().s[57]++;
        throw new Error(t1('errors.updateUserRoleFailed'));
      } else
      /* istanbul ignore next */
      {
        cov_q1jj0u6gc().b[11][1]++;
      }
      // Commit transaction
      cov_q1jj0u6gc().s[58]++;
      await dbSession.commitTransaction();
      /* istanbul ignore next */
      cov_q1jj0u6gc().s[59]++;
      return _server.NextResponse.json({
        success: true,
        message: t1('messages.success'),
        data: {
          id: seller[0]._id,
          businessName: seller[0].businessName,
          email: seller[0].email,
          role: updatedUser.role,
          subscription: seller[0].subscription,
          customSiteUrl: seller[0].customSiteUrl
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_q1jj0u6gc().s[60]++;
      if (dbSession.inTransaction()) {
        /* istanbul ignore next */
        cov_q1jj0u6gc().b[12][0]++;
        cov_q1jj0u6gc().s[61]++;
        await dbSession.abortTransaction();
      } else
      /* istanbul ignore next */
      {
        cov_q1jj0u6gc().b[12][1]++;
      }
      cov_q1jj0u6gc().s[62]++;
      console.error('Transaction error:', error);
      /* istanbul ignore next */
      cov_q1jj0u6gc().s[63]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_q1jj0u6gc().s[64]++;
      await dbSession.endSession();
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_q1jj0u6gc().s[65]++;
    console.error('Seller registration error:', error);
    /* istanbul ignore next */
    cov_q1jj0u6gc().s[66]++;
    if (error instanceof _mongoose.default.Error.ValidationError) {
      /* istanbul ignore next */
      cov_q1jj0u6gc().b[13][0]++;
      cov_q1jj0u6gc().s[67]++;
      return _server.NextResponse.json({
        success: false,
        message: t('errors.invalidData')
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_q1jj0u6gc().b[13][1]++;
    }
    cov_q1jj0u6gc().s[68]++;
    return _server.NextResponse.json({
      success: false,
      message: t('errors.serverError')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,