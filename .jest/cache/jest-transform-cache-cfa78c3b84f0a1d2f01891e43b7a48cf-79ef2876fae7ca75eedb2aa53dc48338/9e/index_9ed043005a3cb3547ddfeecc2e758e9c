9ec929f47a00cd9fdd395030629f04ad
"use strict";

/* istanbul ignore next */
function cov_2hk9tnta61() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/analytics/index.ts";
  var hash = "8ac832ca7933eece6a557e0c44cc5531c93ec349";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/analytics/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 26
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "6": {
        start: {
          line: 19,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "7": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "8": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 29,
          column: 10
        }
      },
      "9": {
        start: {
          line: 30,
          column: 21
        },
        end: {
          line: 30,
          column: 42
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "11": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 70
        }
      },
      "12": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 58
        }
      },
      "13": {
        start: {
          line: 38,
          column: 19
        },
        end: {
          line: 54,
          column: 1
        }
      },
      "14": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "15": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "16": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 47,
          column: 42
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "18": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 70
        }
      },
      "19": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 55
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 17
          }
        },
        loc: {
          start: {
            line: 12,
            column: 27
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 15,
            column: 20
          }
        },
        loc: {
          start: {
            line: 15,
            column: 30
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 23
          }
        },
        loc: {
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 19
          },
          end: {
            line: 38,
            column: 20
          }
        },
        loc: {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 38
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 32,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 32,
            column: 38
          }
        }, {
          start: {
            line: 32,
            column: 42
          },
          end: {
            line: 32,
            column: 68
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 28
          },
          end: {
            line: 49,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 28
          },
          end: {
            line: 49,
            column: 38
          }
        }, {
          start: {
            line: 49,
            column: 42
          },
          end: {
            line: 49,
            column: 68
          }
        }],
        line: 49
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/analytics/index.ts"],
      sourcesContent: ["interface AnalyticsEvent {\n  name: string\n  properties?: Record<string, unknown>\n}\n\ninterface AnalyticsResponse {\n  success?: boolean\n  error?: string\n}\n\nexport const trackPageView = async (url: string): Promise<void> => {\n  try {\n    const response = await fetch('/api/analytics/pageview', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ url }),\n    })\n\n    const data: AnalyticsResponse = await response.json()\n\n    if (!data.success) {\n      throw new Error(data.error || 'Analytics request failed')\n    }\n  } catch (error) {\n    console.error('Failed to track pageview:', error)\n  }\n}\n\nexport const trackEvent = async (event: AnalyticsEvent): Promise<void> => {\n  try {\n    const response = await fetch('/api/analytics/event', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(event),\n    })\n\n    const data: AnalyticsResponse = await response.json()\n\n    if (!data.success) {\n      throw new Error(data.error || 'Analytics request failed')\n    }\n  } catch (error) {\n    console.error('Failed to track event:', error)\n  }\n}\n"],
      names: ["trackEvent", "trackPageView", "url", "response", "fetch", "method", "headers", "body", "JSON", "stringify", "data", "json", "success", "Error", "error", "console", "event"],
      mappings: ";;;;;;;;;;;IA8BaA,UAAU;eAAVA;;IApBAC,aAAa;eAAbA;;;AAAN,MAAMA,gBAAgB,OAAOC;IAClC,IAAI;QACF,MAAMC,WAAW,MAAMC,MAAM,2BAA2B;YACtDC,QAAQ;YACRC,SAAS;gBACP,gBAAgB;YAClB;YACAC,MAAMC,KAAKC,SAAS,CAAC;gBAAEP;YAAI;QAC7B;QAEA,MAAMQ,OAA0B,MAAMP,SAASQ,IAAI;QAEnD,IAAI,CAACD,KAAKE,OAAO,EAAE;YACjB,MAAM,IAAIC,MAAMH,KAAKI,KAAK,IAAI;QAChC;IACF,EAAE,OAAOA,OAAO;QACdC,QAAQD,KAAK,CAAC,6BAA6BA;IAC7C;AACF;AAEO,MAAMd,aAAa,OAAOgB;IAC/B,IAAI;QACF,MAAMb,WAAW,MAAMC,MAAM,wBAAwB;YACnDC,QAAQ;YACRC,SAAS;gBACP,gBAAgB;YAClB;YACAC,MAAMC,KAAKC,SAAS,CAACO;QACvB;QAEA,MAAMN,OAA0B,MAAMP,SAASQ,IAAI;QAEnD,IAAI,CAACD,KAAKE,OAAO,EAAE;YACjB,MAAM,IAAIC,MAAMH,KAAKI,KAAK,IAAI;QAChC;IACF,EAAE,OAAOA,OAAO;QACdC,QAAQD,KAAK,CAAC,0BAA0BA;IAC1C;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8ac832ca7933eece6a557e0c44cc5531c93ec349"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2hk9tnta61 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hk9tnta61();
cov_2hk9tnta61().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2hk9tnta61().f[0]++;
  cov_2hk9tnta61().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2hk9tnta61().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: all[name]
    });
  }
}
/* istanbul ignore next */
cov_2hk9tnta61().s[3]++;
_export(exports, {
  trackEvent: function () {
    /* istanbul ignore next */
    cov_2hk9tnta61().f[1]++;
    cov_2hk9tnta61().s[4]++;
    return trackEvent;
  },
  trackPageView: function () {
    /* istanbul ignore next */
    cov_2hk9tnta61().f[2]++;
    cov_2hk9tnta61().s[5]++;
    return trackPageView;
  }
});
/* istanbul ignore next */
cov_2hk9tnta61().s[6]++;
const trackPageView = async url => {
  /* istanbul ignore next */
  cov_2hk9tnta61().f[3]++;
  cov_2hk9tnta61().s[7]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_2hk9tnta61().s[8]++, await fetch('/api/analytics/pageview', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        url
      })
    }));
    const data =
    /* istanbul ignore next */
    (cov_2hk9tnta61().s[9]++, await response.json());
    /* istanbul ignore next */
    cov_2hk9tnta61().s[10]++;
    if (!data.success) {
      /* istanbul ignore next */
      cov_2hk9tnta61().b[0][0]++;
      cov_2hk9tnta61().s[11]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_2hk9tnta61().b[1][0]++, data.error) ||
      /* istanbul ignore next */
      (cov_2hk9tnta61().b[1][1]++, 'Analytics request failed'));
    } else
    /* istanbul ignore next */
    {
      cov_2hk9tnta61().b[0][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2hk9tnta61().s[12]++;
    console.error('Failed to track pageview:', error);
  }
};
/* istanbul ignore next */
cov_2hk9tnta61().s[13]++;
const trackEvent = async event => {
  /* istanbul ignore next */
  cov_2hk9tnta61().f[4]++;
  cov_2hk9tnta61().s[14]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_2hk9tnta61().s[15]++, await fetch('/api/analytics/event', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(event)
    }));
    const data =
    /* istanbul ignore next */
    (cov_2hk9tnta61().s[16]++, await response.json());
    /* istanbul ignore next */
    cov_2hk9tnta61().s[17]++;
    if (!data.success) {
      /* istanbul ignore next */
      cov_2hk9tnta61().b[2][0]++;
      cov_2hk9tnta61().s[18]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_2hk9tnta61().b[3][0]++, data.error) ||
      /* istanbul ignore next */
      (cov_2hk9tnta61().b[3][1]++, 'Analytics request failed'));
    } else
    /* istanbul ignore next */
    {
      cov_2hk9tnta61().b[2][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_2hk9tnta61().s[19]++;
    console.error('Failed to track event:', error);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ0cmFja0V2ZW50IiwiY292XzJoazl0bnRhNjEiLCJmIiwicyIsInRyYWNrUGFnZVZpZXciLCJ1cmwiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsImpzb24iLCJzdWNjZXNzIiwiYiIsIkVycm9yIiwiZXJyb3IiLCJjb25zb2xlIiwiZXZlbnQiXSwic291cmNlcyI6WyIvaG9tZS9oYWdlci9uZXcvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyICgzKS9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIvbGliL2FuYWx5dGljcy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgQW5hbHl0aWNzRXZlbnQge1xuICBuYW1lOiBzdHJpbmdcbiAgcHJvcGVydGllcz86IFJlY29yZDxzdHJpbmcsIHVua25vd24+XG59XG5cbmludGVyZmFjZSBBbmFseXRpY3NSZXNwb25zZSB7XG4gIHN1Y2Nlc3M/OiBib29sZWFuXG4gIGVycm9yPzogc3RyaW5nXG59XG5cbmV4cG9ydCBjb25zdCB0cmFja1BhZ2VWaWV3ID0gYXN5bmMgKHVybDogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9hbmFseXRpY3MvcGFnZXZpZXcnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IHVybCB9KSxcbiAgICB9KVxuXG4gICAgY29uc3QgZGF0YTogQW5hbHl0aWNzUmVzcG9uc2UgPSBhd2FpdCByZXNwb25zZS5qc29uKClcblxuICAgIGlmICghZGF0YS5zdWNjZXNzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZGF0YS5lcnJvciB8fCAnQW5hbHl0aWNzIHJlcXVlc3QgZmFpbGVkJylcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHRyYWNrIHBhZ2V2aWV3OicsIGVycm9yKVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCB0cmFja0V2ZW50ID0gYXN5bmMgKGV2ZW50OiBBbmFseXRpY3NFdmVudCk6IFByb21pc2U8dm9pZD4gPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvYW5hbHl0aWNzL2V2ZW50Jywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZXZlbnQpLFxuICAgIH0pXG5cbiAgICBjb25zdCBkYXRhOiBBbmFseXRpY3NSZXNwb25zZSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuXG4gICAgaWYgKCFkYXRhLnN1Y2Nlc3MpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihkYXRhLmVycm9yIHx8ICdBbmFseXRpY3MgcmVxdWVzdCBmYWlsZWQnKVxuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gdHJhY2sgZXZlbnQ6JywgZXJyb3IpXG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQThCYUEsVUFBVSxXQUFBQSxDQUFBO0lBQUE7SUFBQUMsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtXQUFWSCxVQUFBOztFQXBCQUksYUFBYSxXQUFBQSxDQUFBO0lBQUE7SUFBQUgsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtXQUFiQyxhQUFBOzs7OztBQUFOLE1BQU1BLGFBQUEsR0FBZ0IsTUFBT0MsR0FBQTtFQUFBO0VBQUFKLGNBQUEsR0FBQUMsQ0FBQTtFQUFBRCxjQUFBLEdBQUFFLENBQUE7RUFDbEMsSUFBSTtJQUNGLE1BQU1HLFFBQUE7SUFBQTtJQUFBLENBQUFMLGNBQUEsR0FBQUUsQ0FBQSxPQUFXLE1BQU1JLEtBQUEsQ0FBTSwyQkFBMkI7TUFDdERDLE1BQUEsRUFBUTtNQUNSQyxPQUFBLEVBQVM7UUFDUCxnQkFBZ0I7TUFDbEI7TUFDQUMsSUFBQSxFQUFNQyxJQUFBLENBQUtDLFNBQVMsQ0FBQztRQUFFUDtNQUFJO0lBQzdCO0lBRUEsTUFBTVEsSUFBQTtJQUFBO0lBQUEsQ0FBQVosY0FBQSxHQUFBRSxDQUFBLE9BQTBCLE1BQU1HLFFBQUEsQ0FBU1EsSUFBSTtJQUFBO0lBQUFiLGNBQUEsR0FBQUUsQ0FBQTtJQUVuRCxJQUFJLENBQUNVLElBQUEsQ0FBS0UsT0FBTyxFQUFFO01BQUE7TUFBQWQsY0FBQSxHQUFBZSxDQUFBO01BQUFmLGNBQUEsR0FBQUUsQ0FBQTtNQUNqQixNQUFNLElBQUljLEtBQUE7TUFBTTtNQUFBLENBQUFoQixjQUFBLEdBQUFlLENBQUEsVUFBQUgsSUFBQSxDQUFLSyxLQUFLO01BQUE7TUFBQSxDQUFBakIsY0FBQSxHQUFBZSxDQUFBLFVBQUk7SUFDaEM7SUFBQTtJQUFBO01BQUFmLGNBQUEsR0FBQWUsQ0FBQTtJQUFBO0VBQ0YsRUFBRSxPQUFPRSxLQUFBLEVBQU87SUFBQTtJQUFBakIsY0FBQSxHQUFBRSxDQUFBO0lBQ2RnQixPQUFBLENBQVFELEtBQUssQ0FBQyw2QkFBNkJBLEtBQUE7RUFDN0M7QUFDRjtBQUFBO0FBQUFqQixjQUFBLEdBQUFFLENBQUE7QUFFTyxNQUFNSCxVQUFBLEdBQWEsTUFBT29CLEtBQUE7RUFBQTtFQUFBbkIsY0FBQSxHQUFBQyxDQUFBO0VBQUFELGNBQUEsR0FBQUUsQ0FBQTtFQUMvQixJQUFJO0lBQ0YsTUFBTUcsUUFBQTtJQUFBO0lBQUEsQ0FBQUwsY0FBQSxHQUFBRSxDQUFBLFFBQVcsTUFBTUksS0FBQSxDQUFNLHdCQUF3QjtNQUNuREMsTUFBQSxFQUFRO01BQ1JDLE9BQUEsRUFBUztRQUNQLGdCQUFnQjtNQUNsQjtNQUNBQyxJQUFBLEVBQU1DLElBQUEsQ0FBS0MsU0FBUyxDQUFDUSxLQUFBO0lBQ3ZCO0lBRUEsTUFBTVAsSUFBQTtJQUFBO0lBQUEsQ0FBQVosY0FBQSxHQUFBRSxDQUFBLFFBQTBCLE1BQU1HLFFBQUEsQ0FBU1EsSUFBSTtJQUFBO0lBQUFiLGNBQUEsR0FBQUUsQ0FBQTtJQUVuRCxJQUFJLENBQUNVLElBQUEsQ0FBS0UsT0FBTyxFQUFFO01BQUE7TUFBQWQsY0FBQSxHQUFBZSxDQUFBO01BQUFmLGNBQUEsR0FBQUUsQ0FBQTtNQUNqQixNQUFNLElBQUljLEtBQUE7TUFBTTtNQUFBLENBQUFoQixjQUFBLEdBQUFlLENBQUEsVUFBQUgsSUFBQSxDQUFLSyxLQUFLO01BQUE7TUFBQSxDQUFBakIsY0FBQSxHQUFBZSxDQUFBLFVBQUk7SUFDaEM7SUFBQTtJQUFBO01BQUFmLGNBQUEsR0FBQWUsQ0FBQTtJQUFBO0VBQ0YsRUFBRSxPQUFPRSxLQUFBLEVBQU87SUFBQTtJQUFBakIsY0FBQSxHQUFBRSxDQUFBO0lBQ2RnQixPQUFBLENBQVFELEtBQUssQ0FBQywwQkFBMEJBLEtBQUE7RUFDMUM7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==