{"version":3,"names":["PointsForm","pointsFormSchema","cov_qgjfax08r","s","_zod1","z","object","points","earnRate","number","min","redeemValue","registrationBonus","buyer","seller","sellerPointsPerSale","setting","f","toast","_usetoast","useToast","form","_reacthookform","useForm","resolver","_zod","zodResolver","defaultValues","b","onSubmit","data","response","_settingactions","updateSetting","success","title","description","error","variant","_jsxruntime","jsxs","_card","Card","className","jsx","CardHeader","CardTitle","CardContent","_form","Form","id","handleSubmit","FormField","control","name","render","field","FormItem","FormLabel","FormControl","_input","Input","type","step","onChange","e","Number","target","value","FormMessage","_button","Button"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/admin/settings/points-form.tsx"],"sourcesContent":["'use client'\n\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { useForm } from 'react-hook-form'\nimport { z } from 'zod'\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport { Input } from '@/components/ui/input'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { useToast } from '@/hooks/use-toast'\nimport { updateSetting } from '@/lib/actions/setting.actions'\n\nconst pointsFormSchema = z.object({\n  points: z.object({\n    earnRate: z.number().min(0, 'Earn rate must be non-negative'),\n    redeemValue: z.number().min(0, 'Redeem value must be non-negative'),\n    registrationBonus: z.object({\n      buyer: z.number().min(0, 'Buyer bonus must be non-negative'),\n      seller: z.number().min(0, 'Seller bonus must be non-negative'),\n    }),\n    sellerPointsPerSale: z.number().min(0, 'Seller points per sale must be non-negative'),\n  }),\n})\n\ntype PointsFormValues = z.infer<typeof pointsFormSchema>\n\nexport default function PointsForm({ setting }: { setting: any }) {\n  const { toast } = useToast()\n\n  const form = useForm<PointsFormValues>({\n    resolver: zodResolver(pointsFormSchema),\n    defaultValues: {\n      points: {\n        earnRate: setting.points?.earnRate || 1, // 1 point per $1\n        redeemValue: setting.points?.redeemValue || 0.05, // 1 point = $0.05\n        registrationBonus: {\n          buyer: setting.points?.registrationBonus?.buyer || 50,\n          seller: setting.points?.registrationBonus?.seller || 100,\n        },\n        sellerPointsPerSale: setting.points?.sellerPointsPerSale || 10,\n      },\n    },\n  })\n\n  const onSubmit = async (data: PointsFormValues) => {\n    try {\n      const response = await updateSetting({ points: data.points })\n      if (response.success) {\n        toast({\n          title: 'Success',\n          description: 'Points settings updated successfully',\n        })\n      } else {\n        toast({\n          title: 'Error',\n          description: response.error,\n          variant: 'destructive',\n        })\n      }\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to update points settings',\n        variant: 'destructive',\n      })\n    }\n  }\n\n  return (\n    <Card className=\"mt-8\">\n      <CardHeader>\n        <CardTitle>Points Settings</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form\n            id=\"points-settings\"\n            onSubmit={form.handleSubmit(onSubmit)}\n            className=\"space-y-6\"\n          >\n            <FormField\n              control={form.control}\n              name=\"points.earnRate\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Earn Rate (Points per $1)</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"number\"\n                      step=\"0.01\"\n                      {...field}\n                      onChange={(e) => field.onChange(Number(e.target.value))}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"points.redeemValue\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Redeem Value ($ per Point)</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"number\"\n                      step=\"0.01\"\n                      {...field}\n                      onChange={(e) => field.onChange(Number(e.target.value))}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"points.registrationBonus.buyer\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Buyer Registration Bonus (Points)</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"number\"\n                      {...field}\n                      onChange={(e) => field.onChange(Number(e.target.value))}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"points.registrationBonus.seller\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Seller Registration Bonus (Points)</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"number\"\n                      {...field}\n                      onChange={(e) => field.onChange(Number(e.target.value))}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"points.sellerPointsPerSale\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Seller Points per Sale</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"number\"\n                      {...field}\n                      onChange={(e) => field.onChange(Number(e.target.value))}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <Button type=\"submit\">Save Points Settings</Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  )\n}"],"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","ignoreList":[]}