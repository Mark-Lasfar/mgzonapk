0a1b9b9939e7600602af6eedbe636171
'use client';
"use strict";

/* istanbul ignore next */
function cov_8gzthlaxx() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/withdrawals/page.tsx";
  var hash = "b3f21f4edc8b6015b1778507ac59957870a65e7a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/withdrawals/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 27
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 65
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 63
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 39
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "9": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "10": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "11": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 20
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "15": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "17": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "18": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "19": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "20": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "21": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 88
        }
      },
      "22": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "24": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 95
        }
      },
      "25": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "26": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 57
        }
      },
      "27": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 39
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "30": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "31": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 18
        }
      },
      "32": {
        start: {
          line: 58,
          column: 34
        },
        end: {
          line: 58,
          column: 57
        }
      },
      "33": {
        start: {
          line: 59,
          column: 32
        },
        end: {
          line: 59,
          column: 56
        }
      },
      "34": {
        start: {
          line: 60,
          column: 44
        },
        end: {
          line: 60,
          column: 68
        }
      },
      "35": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 70,
          column: 11
        }
      },
      "36": {
        start: {
          line: 63,
          column: 26
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "37": {
        start: {
          line: 64,
          column: 29
        },
        end: {
          line: 64,
          column: 63
        }
      },
      "38": {
        start: {
          line: 65,
          column: 25
        },
        end: {
          line: 65,
          column: 46
        }
      },
      "39": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 37
        }
      },
      "40": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 47
        }
      },
      "41": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 20
        }
      },
      "42": {
        start: {
          line: 71,
          column: 27
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "43": {
        start: {
          line: 72,
          column: 25
        },
        end: {
          line: 77,
          column: 10
        }
      },
      "44": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 78,
          column: 44
        }
      },
      "45": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "46": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 64
        }
      },
      "47": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 26
        }
      },
      "48": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 46
        }
      },
      "49": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 124,
          column: 7
        }
      },
      "50": {
        start: {
          line: 103,
          column: 39
        },
        end: {
          line: 103,
          column: 64
        }
      },
      "51": {
        start: {
          line: 115,
          column: 71
        },
        end: {
          line: 121,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 47
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 20,
            column: 40
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 34
          }
        },
        loc: {
          start: {
            line: 24,
            column: 53
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "Withdrawals",
        decl: {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 57,
            column: 20
          }
        },
        loc: {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 61,
            column: 26
          },
          end: {
            line: 61,
            column: 27
          }
        },
        loc: {
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 61
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 26
          },
          end: {
            line: 63,
            column: 27
          }
        },
        loc: {
          start: {
            line: 63,
            column: 36
          },
          end: {
            line: 68,
            column: 9
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 27
          },
          end: {
            line: 71,
            column: 28
          }
        },
        loc: {
          start: {
            line: 71,
            column: 37
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 103,
            column: 34
          },
          end: {
            line: 103,
            column: 35
          }
        },
        loc: {
          start: {
            line: 103,
            column: 39
          },
          end: {
            line: 103,
            column: 64
          }
        },
        line: 103
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 115,
            column: 43
          },
          end: {
            line: 115,
            column: 44
          }
        },
        loc: {
          start: {
            line: 115,
            column: 71
          },
          end: {
            line: 121,
            column: 29
          }
        },
        line: 115
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 21,
            column: 45
          }
        }, {
          start: {
            line: 21,
            column: 48
          },
          end: {
            line: 21,
            column: 65
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 27
          }
        }, {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 45
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 20
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 47
          }
        }, {
          start: {
            line: 28,
            column: 51
          },
          end: {
            line: 28,
            column: 76
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "7": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 31
          }
        }],
        line: 34
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 53
          }
        }, {
          start: {
            line: 40,
            column: 57
          },
          end: {
            line: 40,
            column: 88
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 29
          }
        }, {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 79
          }
        }],
        line: 42
      },
      "11": {
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 43,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 47
          },
          end: {
            line: 43,
            column: 88
          }
        }, {
          start: {
            line: 43,
            column: 91
          },
          end: {
            line: 43,
            column: 95
          }
        }],
        line: 43
      },
      "12": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 48,
            column: 13
          }
        }],
        line: 44
      },
      "13": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 33
          }
        }, {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 45
          }
        }],
        line: 44
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "15": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: 82,
            column: 15
          },
          end: {
            line: 84,
            column: 9
          }
        }],
        line: 79
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/(root)/seller/dashboard/withdrawals/page.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\n\nexport default function Withdrawals() {\n  const [balance, setBalance] = useState(0);\n  const [amount, setAmount] = useState('');\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    // Fetch balance and transaction history\n    const fetchData = async () => {\n      const response = await fetch('/api/seller/balance');\n      const data = await response.json();\n      setBalance(data.balance);\n      setTransactions(data.transactions);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleWithdraw = async () => {\n    const response = await fetch('/api/withdrawals/request', {\n      method: 'POST',\n      body: JSON.stringify({ amount }),\n    });\n\n    const result = await response.json();\n    if (result.success) {\n      alert('Withdrawal request submitted successfully!');\n      setAmount('');\n    } else {\n      alert('Error: ' + result.message);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Withdrawals</h1>\n      <p>Balance: ${balance}</p>\n\n      <div>\n        <Input\n          type=\"number\"\n          placeholder=\"Enter withdrawal amount\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n        />\n        <Button onClick={handleWithdraw}>Request Withdrawal</Button>\n      </div>\n\n      <h2>Transaction History</h2>\n      <ul>\n        {transactions.map((txn, index) => (\n          <li key={index}>{txn.description}: ${txn.amount}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}"],
      names: ["Withdrawals", "balance", "setBalance", "useState", "amount", "setAmount", "transactions", "setTransactions", "useEffect", "fetchData", "response", "fetch", "data", "json", "handleWithdraw", "method", "body", "JSON", "stringify", "result", "success", "alert", "message", "div", "h1", "p", "Input", "type", "placeholder", "value", "onChange", "e", "target", "Button", "onClick", "h2", "ul", "map", "txn", "index", "li", "description"],
      mappings: "AAAA;;;;;+BAMA;;;eAAwBA;;;;+DAJmB;wBACpB;uBACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEP,SAASA;IACtB,MAAM,CAACC,SAASC,WAAW,GAAGC,IAAAA,eAAQ,EAAC;IACvC,MAAM,CAACC,QAAQC,UAAU,GAAGF,IAAAA,eAAQ,EAAC;IACrC,MAAM,CAACG,cAAcC,gBAAgB,GAAGJ,IAAAA,eAAQ,EAAC,EAAE;IAEnDK,IAAAA,gBAAS,EAAC;QACR,wCAAwC;QACxC,MAAMC,YAAY;YAChB,MAAMC,WAAW,MAAMC,MAAM;YAC7B,MAAMC,OAAO,MAAMF,SAASG,IAAI;YAChCX,WAAWU,KAAKX,OAAO;YACvBM,gBAAgBK,KAAKN,YAAY;QACnC;QAEAG;IACF,GAAG,EAAE;IAEL,MAAMK,iBAAiB;QACrB,MAAMJ,WAAW,MAAMC,MAAM,4BAA4B;YACvDI,QAAQ;YACRC,MAAMC,KAAKC,SAAS,CAAC;gBAAEd;YAAO;QAChC;QAEA,MAAMe,SAAS,MAAMT,SAASG,IAAI;QAClC,IAAIM,OAAOC,OAAO,EAAE;YAClBC,MAAM;YACNhB,UAAU;QACZ,OAAO;YACLgB,MAAM,YAAYF,OAAOG,OAAO;QAClC;IACF;IAEA,qBACE,sBAACC;;0BACC,qBAACC;0BAAG;;0BACJ,sBAACC;;oBAAE;oBAAWxB;;;0BAEd,sBAACsB;;kCACC,qBAACG,YAAK;wBACJC,MAAK;wBACLC,aAAY;wBACZC,OAAOzB;wBACP0B,UAAU,CAACC,IAAM1B,UAAU0B,EAAEC,MAAM,CAACH,KAAK;;kCAE3C,qBAACI,cAAM;wBAACC,SAASpB;kCAAgB;;;;0BAGnC,qBAACqB;0BAAG;;0BACJ,qBAACC;0BACE9B,aAAa+B,GAAG,CAAC,CAACC,KAAKC,sBACtB,sBAACC;;4BAAgBF,IAAIG,WAAW;4BAAC;4BAAIH,IAAIlC,MAAM;;uBAAtCmC;;;;AAKnB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b3f21f4edc8b6015b1778507ac59957870a65e7a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8gzthlaxx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8gzthlaxx();
cov_8gzthlaxx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_8gzthlaxx().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_8gzthlaxx().f[0]++;
    cov_8gzthlaxx().s[2]++;
    return Withdrawals;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_8gzthlaxx().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_8gzthlaxx().s[4]++, _interop_require_wildcard(require("react")));
const _button =
/* istanbul ignore next */
(cov_8gzthlaxx().s[5]++, require("../../../../../../components/ui/button"));
const _input =
/* istanbul ignore next */
(cov_8gzthlaxx().s[6]++, require("../../../../../../components/ui/input"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_8gzthlaxx().f[1]++;
  cov_8gzthlaxx().s[7]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_8gzthlaxx().b[0][0]++;
    cov_8gzthlaxx().s[8]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_8gzthlaxx().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_8gzthlaxx().s[9]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_8gzthlaxx().s[10]++, new WeakMap());
  /* istanbul ignore next */
  cov_8gzthlaxx().s[11]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_8gzthlaxx().f[2]++;
    cov_8gzthlaxx().s[12]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_8gzthlaxx().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_8gzthlaxx().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_8gzthlaxx().f[3]++;
  cov_8gzthlaxx().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_8gzthlaxx().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_8gzthlaxx().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_8gzthlaxx().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_8gzthlaxx().b[2][0]++;
    cov_8gzthlaxx().s[14]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_8gzthlaxx().b[2][1]++;
  }
  cov_8gzthlaxx().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_8gzthlaxx().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_8gzthlaxx().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_8gzthlaxx().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_8gzthlaxx().b[4][0]++;
    cov_8gzthlaxx().s[16]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_8gzthlaxx().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_8gzthlaxx().s[17]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_8gzthlaxx().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_8gzthlaxx().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_8gzthlaxx().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_8gzthlaxx().b[6][0]++;
    cov_8gzthlaxx().s[19]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_8gzthlaxx().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_8gzthlaxx().s[20]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_8gzthlaxx().s[21]++,
  /* istanbul ignore next */
  (cov_8gzthlaxx().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_8gzthlaxx().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_8gzthlaxx().s[22]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_8gzthlaxx().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_8gzthlaxx().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_8gzthlaxx().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_8gzthlaxx().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_8gzthlaxx().s[24]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_8gzthlaxx().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_8gzthlaxx().b[11][1]++, null));
      /* istanbul ignore next */
      cov_8gzthlaxx().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_8gzthlaxx().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_8gzthlaxx().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_8gzthlaxx().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_8gzthlaxx().b[12][0]++;
        cov_8gzthlaxx().s[26]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_8gzthlaxx().b[12][1]++;
        cov_8gzthlaxx().s[27]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_8gzthlaxx().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_8gzthlaxx().s[28]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_8gzthlaxx().s[29]++;
  if (cache) {
    /* istanbul ignore next */
    cov_8gzthlaxx().b[14][0]++;
    cov_8gzthlaxx().s[30]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_8gzthlaxx().b[14][1]++;
  }
  cov_8gzthlaxx().s[31]++;
  return newObj;
}
function Withdrawals() {
  /* istanbul ignore next */
  cov_8gzthlaxx().f[4]++;
  const [balance, setBalance] =
  /* istanbul ignore next */
  (cov_8gzthlaxx().s[32]++, (0, _react.useState)(0));
  const [amount, setAmount] =
  /* istanbul ignore next */
  (cov_8gzthlaxx().s[33]++, (0, _react.useState)(''));
  const [transactions, setTransactions] =
  /* istanbul ignore next */
  (cov_8gzthlaxx().s[34]++, (0, _react.useState)([]));
  /* istanbul ignore next */
  cov_8gzthlaxx().s[35]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_8gzthlaxx().f[5]++;
    cov_8gzthlaxx().s[36]++;
    // Fetch balance and transaction history
    const fetchData = async () => {
      /* istanbul ignore next */
      cov_8gzthlaxx().f[6]++;
      const response =
      /* istanbul ignore next */
      (cov_8gzthlaxx().s[37]++, await fetch('/api/seller/balance'));
      const data =
      /* istanbul ignore next */
      (cov_8gzthlaxx().s[38]++, await response.json());
      /* istanbul ignore next */
      cov_8gzthlaxx().s[39]++;
      setBalance(data.balance);
      /* istanbul ignore next */
      cov_8gzthlaxx().s[40]++;
      setTransactions(data.transactions);
    };
    /* istanbul ignore next */
    cov_8gzthlaxx().s[41]++;
    fetchData();
  }, []);
  /* istanbul ignore next */
  cov_8gzthlaxx().s[42]++;
  const handleWithdraw = async () => {
    /* istanbul ignore next */
    cov_8gzthlaxx().f[7]++;
    const response =
    /* istanbul ignore next */
    (cov_8gzthlaxx().s[43]++, await fetch('/api/withdrawals/request', {
      method: 'POST',
      body: JSON.stringify({
        amount
      })
    }));
    const result =
    /* istanbul ignore next */
    (cov_8gzthlaxx().s[44]++, await response.json());
    /* istanbul ignore next */
    cov_8gzthlaxx().s[45]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_8gzthlaxx().b[15][0]++;
      cov_8gzthlaxx().s[46]++;
      alert('Withdrawal request submitted successfully!');
      /* istanbul ignore next */
      cov_8gzthlaxx().s[47]++;
      setAmount('');
    } else {
      /* istanbul ignore next */
      cov_8gzthlaxx().b[15][1]++;
      cov_8gzthlaxx().s[48]++;
      alert('Error: ' + result.message);
    }
  };
  /* istanbul ignore next */
  cov_8gzthlaxx().s[49]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
      children: "Withdrawals"
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
      children: ["Balance: $", balance]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
        type: "number",
        placeholder: "Enter withdrawal amount",
        value: amount,
        onChange: e => {
          /* istanbul ignore next */
          cov_8gzthlaxx().f[8]++;
          cov_8gzthlaxx().s[50]++;
          return setAmount(e.target.value);
        }
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
        onClick: handleWithdraw,
        children: "Request Withdrawal"
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
      children: "Transaction History"
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("ul", {
      children: transactions.map((txn, index) => {
        /* istanbul ignore next */
        cov_8gzthlaxx().f[9]++;
        cov_8gzthlaxx().s[51]++;
        return /*#__PURE__*/(0, _jsxruntime.jsxs)("li", {
          children: [txn.description, ": $", txn.amount]
        }, index);
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJXaXRoZHJhd2FscyIsImNvdl84Z3p0aGxheHgiLCJmIiwiYmFsYW5jZSIsInNldEJhbGFuY2UiLCJzIiwiX3JlYWN0IiwidXNlU3RhdGUiLCJhbW91bnQiLCJzZXRBbW91bnQiLCJ0cmFuc2FjdGlvbnMiLCJzZXRUcmFuc2FjdGlvbnMiLCJ1c2VFZmZlY3QiLCJmZXRjaERhdGEiLCJyZXNwb25zZSIsImZldGNoIiwiZGF0YSIsImpzb24iLCJoYW5kbGVXaXRoZHJhdyIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicmVzdWx0Iiwic3VjY2VzcyIsImIiLCJhbGVydCIsIm1lc3NhZ2UiLCJfanN4cnVudGltZSIsImpzeHMiLCJqc3giLCJfaW5wdXQiLCJJbnB1dCIsInR5cGUiLCJwbGFjZWhvbGRlciIsInZhbHVlIiwib25DaGFuZ2UiLCJlIiwidGFyZ2V0IiwiX2J1dHRvbiIsIkJ1dHRvbiIsIm9uQ2xpY2siLCJtYXAiLCJ0eG4iLCJpbmRleCIsImRlc2NyaXB0aW9uIl0sInNvdXJjZXMiOlsiL2hvbWUvaGFnZXIvbmV3L215LW5leHRqcy1wcm9qZWN0LW1hc3RlciAoMykvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyL2FwcC9bbG9jYWxlXS8ocm9vdCkvc2VsbGVyL2Rhc2hib2FyZC93aXRoZHJhd2Fscy9wYWdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2J1dHRvbic7XG5pbXBvcnQgeyBJbnB1dCB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9pbnB1dCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFdpdGhkcmF3YWxzKCkge1xuICBjb25zdCBbYmFsYW5jZSwgc2V0QmFsYW5jZV0gPSB1c2VTdGF0ZSgwKTtcbiAgY29uc3QgW2Ftb3VudCwgc2V0QW1vdW50XSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3QgW3RyYW5zYWN0aW9ucywgc2V0VHJhbnNhY3Rpb25zXSA9IHVzZVN0YXRlKFtdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIEZldGNoIGJhbGFuY2UgYW5kIHRyYW5zYWN0aW9uIGhpc3RvcnlcbiAgICBjb25zdCBmZXRjaERhdGEgPSBhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3NlbGxlci9iYWxhbmNlJyk7XG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgc2V0QmFsYW5jZShkYXRhLmJhbGFuY2UpO1xuICAgICAgc2V0VHJhbnNhY3Rpb25zKGRhdGEudHJhbnNhY3Rpb25zKTtcbiAgICB9O1xuXG4gICAgZmV0Y2hEYXRhKCk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBoYW5kbGVXaXRoZHJhdyA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3dpdGhkcmF3YWxzL3JlcXVlc3QnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgYW1vdW50IH0pLFxuICAgIH0pO1xuXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIGlmIChyZXN1bHQuc3VjY2Vzcykge1xuICAgICAgYWxlcnQoJ1dpdGhkcmF3YWwgcmVxdWVzdCBzdWJtaXR0ZWQgc3VjY2Vzc2Z1bGx5IScpO1xuICAgICAgc2V0QW1vdW50KCcnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYWxlcnQoJ0Vycm9yOiAnICsgcmVzdWx0Lm1lc3NhZ2UpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8aDE+V2l0aGRyYXdhbHM8L2gxPlxuICAgICAgPHA+QmFsYW5jZTogJHtiYWxhbmNlfTwvcD5cblxuICAgICAgPGRpdj5cbiAgICAgICAgPElucHV0XG4gICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciB3aXRoZHJhd2FsIGFtb3VudFwiXG4gICAgICAgICAgdmFsdWU9e2Ftb3VudH1cbiAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldEFtb3VudChlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgIC8+XG4gICAgICAgIDxCdXR0b24gb25DbGljaz17aGFuZGxlV2l0aGRyYXd9PlJlcXVlc3QgV2l0aGRyYXdhbDwvQnV0dG9uPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxoMj5UcmFuc2FjdGlvbiBIaXN0b3J5PC9oMj5cbiAgICAgIDx1bD5cbiAgICAgICAge3RyYW5zYWN0aW9ucy5tYXAoKHR4biwgaW5kZXgpID0+IChcbiAgICAgICAgICA8bGkga2V5PXtpbmRleH0+e3R4bi5kZXNjcmlwdGlvbn06ICR7dHhuLmFtb3VudH08L2xpPlxuICAgICAgICApKX1cbiAgICAgIDwvdWw+XG4gICAgPC9kaXY+XG4gICk7XG59Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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