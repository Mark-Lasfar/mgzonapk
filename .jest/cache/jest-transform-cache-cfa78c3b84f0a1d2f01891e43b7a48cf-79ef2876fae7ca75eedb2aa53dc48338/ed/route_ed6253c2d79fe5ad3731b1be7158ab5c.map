{"version":3,"names":["cov_2nvsi657j6","actualCoverage","s","POST","req","f","body","json","userId","type","title","message","data","channels","result","_notification","sendNotification","success","b","console","error","_server","NextResponse","status","notificationId"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/notify/route.ts"],"sourcesContent":["'use server';\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { sendNotification } from '@/lib/utils/notification';\nimport { logger } from '@/lib/api/services/logging'; // Adjust path if logger is elsewhere\n\nexport async function POST(req: NextRequest) {\n  try {\n    const body = await req.json();\n    const { userId, type, title, message, data, channels } = body;\n\n    const result = await sendNotification({\n      userId,\n      type,\n      title,\n      message,\n      data,\n      channels,\n    });\n\n    if (!result.success) {\n      console.error('Notification failed', { error: result.error });\n      return NextResponse.json({ success: false, error: result.error }, { status: 500 });\n    }\n\n    return NextResponse.json({ success: true, notificationId: result.notificationId });\n  } catch (error) {\n    console.error('Notify API error:', error);\n    return NextResponse.json({ success: false, error: 'Failed to send notification' }, { status: 500 });\n  }\n}"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQI;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;+BAFkB;;;;;;WAAAC,IAAA;;;;;kCAJoB;;;kCACT;AAG1B,eAAeA,KAAKC,GAAgB;EAAA;EAAAJ,cAAA,GAAAK,CAAA;EAAAL,cAAA,GAAAE,CAAA;EACzC,IAAI;IACF,MAAMI,IAAA;IAAA;IAAA,CAAAN,cAAA,GAAAE,CAAA,OAAO,MAAME,GAAA,CAAIG,IAAI;IAC3B,MAAM;MAAEC,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEC,OAAO;MAAEC,IAAI;MAAEC;IAAQ,CAAE;IAAA;IAAA,CAAAb,cAAA,GAAAE,CAAA,OAAGI,IAAA;IAEzD,MAAMQ,MAAA;IAAA;IAAA,CAAAd,cAAA,GAAAE,CAAA,OAAS,MAAM,IAAAa,aAAA,CAAAC,gBAAgB,EAAC;MACpCR,MAAA;MACAC,IAAA;MACAC,KAAA;MACAC,OAAA;MACAC,IAAA;MACAC;IACF;IAAA;IAAAb,cAAA,GAAAE,CAAA;IAEA,IAAI,CAACY,MAAA,CAAOG,OAAO,EAAE;MAAA;MAAAjB,cAAA,GAAAkB,CAAA;MAAAlB,cAAA,GAAAE,CAAA;MACnBiB,OAAA,CAAQC,KAAK,CAAC,uBAAuB;QAAEA,KAAA,EAAON,MAAA,CAAOM;MAAM;MAAA;MAAApB,cAAA,GAAAE,CAAA;MAC3D,OAAOmB,OAAA,CAAAC,YAAY,CAACf,IAAI,CAAC;QAAEU,OAAA,EAAS;QAAOG,KAAA,EAAON,MAAA,CAAOM;MAAM,GAAG;QAAEG,MAAA,EAAQ;MAAI;IAClF;IAAA;IAAA;MAAAvB,cAAA,GAAAkB,CAAA;IAAA;IAAAlB,cAAA,GAAAE,CAAA;IAEA,OAAOmB,OAAA,CAAAC,YAAY,CAACf,IAAI,CAAC;MAAEU,OAAA,EAAS;MAAMO,cAAA,EAAgBV,MAAA,CAAOU;IAAe;EAClF,EAAE,OAAOJ,KAAA,EAAO;IAAA;IAAApB,cAAA,GAAAE,CAAA;IACdiB,OAAA,CAAQC,KAAK,CAAC,qBAAqBA,KAAA;IAAA;IAAApB,cAAA,GAAAE,CAAA;IACnC,OAAOmB,OAAA,CAAAC,YAAY,CAACf,IAAI,CAAC;MAAEU,OAAA,EAAS;MAAOG,KAAA,EAAO;IAA8B,GAAG;MAAEG,MAAA,EAAQ;IAAI;EACnG;AACF","ignoreList":[]}