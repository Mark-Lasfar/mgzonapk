ea8c4b7420c150c3eb70f7d128dab9ca
'use server';
"use strict";

/* istanbul ignore next */
function cov_2nvsi657j6() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/notify/route.ts";
  var hash = "9b45e66e07b5452e5b8023a1175f6eeb78dad864";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/notify/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 20
        }
      },
      "3": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "4": {
        start: {
          line: 13,
          column: 22
        },
        end: {
          line: 13,
          column: 64
        }
      },
      "5": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "6": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "7": {
        start: {
          line: 17,
          column: 65
        },
        end: {
          line: 17,
          column: 69
        }
      },
      "8": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 25,
          column: 10
        }
      },
      "9": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "10": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 29,
          column: 15
        }
      },
      "11": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 35,
          column: 15
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 40,
          column: 11
        }
      },
      "13": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 50
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 48,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 19
          }
        },
        loc: {
          start: {
            line: 14,
            column: 25
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/notify/route.ts"],
      sourcesContent: ["'use server';\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { sendNotification } from '@/lib/utils/notification';\nimport { logger } from '@/lib/api/services/logging'; // Adjust path if logger is elsewhere\n\nexport async function POST(req: NextRequest) {\n  try {\n    const body = await req.json();\n    const { userId, type, title, message, data, channels } = body;\n\n    const result = await sendNotification({\n      userId,\n      type,\n      title,\n      message,\n      data,\n      channels,\n    });\n\n    if (!result.success) {\n      console.error('Notification failed', { error: result.error });\n      return NextResponse.json({ success: false, error: result.error }, { status: 500 });\n    }\n\n    return NextResponse.json({ success: true, notificationId: result.notificationId });\n  } catch (error) {\n    console.error('Notify API error:', error);\n    return NextResponse.json({ success: false, error: 'Failed to send notification' }, { status: 500 });\n  }\n}"],
      names: ["POST", "req", "body", "json", "userId", "type", "title", "message", "data", "channels", "result", "sendNotification", "success", "console", "error", "NextResponse", "status", "notificationId"],
      mappings: "AAAA;;;;;+BAMsBA;;;eAAAA;;;wBAJoB;8BACT;AAG1B,eAAeA,KAAKC,GAAgB;IACzC,IAAI;QACF,MAAMC,OAAO,MAAMD,IAAIE,IAAI;QAC3B,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAEC,IAAI,EAAEC,QAAQ,EAAE,GAAGP;QAEzD,MAAMQ,SAAS,MAAMC,IAAAA,8BAAgB,EAAC;YACpCP;YACAC;YACAC;YACAC;YACAC;YACAC;QACF;QAEA,IAAI,CAACC,OAAOE,OAAO,EAAE;YACnBC,QAAQC,KAAK,CAAC,uBAAuB;gBAAEA,OAAOJ,OAAOI,KAAK;YAAC;YAC3D,OAAOC,oBAAY,CAACZ,IAAI,CAAC;gBAAES,SAAS;gBAAOE,OAAOJ,OAAOI,KAAK;YAAC,GAAG;gBAAEE,QAAQ;YAAI;QAClF;QAEA,OAAOD,oBAAY,CAACZ,IAAI,CAAC;YAAES,SAAS;YAAMK,gBAAgBP,OAAOO,cAAc;QAAC;IAClF,EAAE,OAAOH,OAAO;QACdD,QAAQC,KAAK,CAAC,qBAAqBA;QACnC,OAAOC,oBAAY,CAACZ,IAAI,CAAC;YAAES,SAAS;YAAOE,OAAO;QAA8B,GAAG;YAAEE,QAAQ;QAAI;IACnG;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9b45e66e07b5452e5b8023a1175f6eeb78dad864"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2nvsi657j6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2nvsi657j6();
cov_2nvsi657j6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2nvsi657j6().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2nvsi657j6().f[0]++;
    cov_2nvsi657j6().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_2nvsi657j6().s[3]++, require("next/server"));
const _notification =
/* istanbul ignore next */
(cov_2nvsi657j6().s[4]++, require("../../../lib/utils/notification"));
async function POST(req) {
  /* istanbul ignore next */
  cov_2nvsi657j6().f[1]++;
  cov_2nvsi657j6().s[5]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_2nvsi657j6().s[6]++, await req.json());
    const {
      userId,
      type,
      title,
      message,
      data,
      channels
    } =
    /* istanbul ignore next */
    (cov_2nvsi657j6().s[7]++, body);
    const result =
    /* istanbul ignore next */
    (cov_2nvsi657j6().s[8]++, await (0, _notification.sendNotification)({
      userId,
      type,
      title,
      message,
      data,
      channels
    }));
    /* istanbul ignore next */
    cov_2nvsi657j6().s[9]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_2nvsi657j6().b[0][0]++;
      cov_2nvsi657j6().s[10]++;
      console.error('Notification failed', {
        error: result.error
      });
      /* istanbul ignore next */
      cov_2nvsi657j6().s[11]++;
      return _server.NextResponse.json({
        success: false,
        error: result.error
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2nvsi657j6().b[0][1]++;
    }
    cov_2nvsi657j6().s[12]++;
    return _server.NextResponse.json({
      success: true,
      notificationId: result.notificationId
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2nvsi657j6().s[13]++;
    console.error('Notify API error:', error);
    /* istanbul ignore next */
    cov_2nvsi657j6().s[14]++;
    return _server.NextResponse.json({
      success: false,
      error: 'Failed to send notification'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMm52c2k2NTdqNiIsImFjdHVhbENvdmVyYWdlIiwicyIsIlBPU1QiLCJyZXEiLCJmIiwiYm9keSIsImpzb24iLCJ1c2VySWQiLCJ0eXBlIiwidGl0bGUiLCJtZXNzYWdlIiwiZGF0YSIsImNoYW5uZWxzIiwicmVzdWx0IiwiX25vdGlmaWNhdGlvbiIsInNlbmROb3RpZmljYXRpb24iLCJzdWNjZXNzIiwiYiIsImNvbnNvbGUiLCJlcnJvciIsIl9zZXJ2ZXIiLCJOZXh0UmVzcG9uc2UiLCJzdGF0dXMiLCJub3RpZmljYXRpb25JZCJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9hcHAvYXBpL25vdGlmeS9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHNlcnZlcic7XG5cbmltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBzZW5kTm90aWZpY2F0aW9uIH0gZnJvbSAnQC9saWIvdXRpbHMvbm90aWZpY2F0aW9uJztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ0AvbGliL2FwaS9zZXJ2aWNlcy9sb2dnaW5nJzsgLy8gQWRqdXN0IHBhdGggaWYgbG9nZ2VyIGlzIGVsc2V3aGVyZVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXE6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgY29uc3QgYm9keSA9IGF3YWl0IHJlcS5qc29uKCk7XG4gICAgY29uc3QgeyB1c2VySWQsIHR5cGUsIHRpdGxlLCBtZXNzYWdlLCBkYXRhLCBjaGFubmVscyB9ID0gYm9keTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHNlbmROb3RpZmljYXRpb24oe1xuICAgICAgdXNlcklkLFxuICAgICAgdHlwZSxcbiAgICAgIHRpdGxlLFxuICAgICAgbWVzc2FnZSxcbiAgICAgIGRhdGEsXG4gICAgICBjaGFubmVscyxcbiAgICB9KTtcblxuICAgIGlmICghcmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ05vdGlmaWNhdGlvbiBmYWlsZWQnLCB7IGVycm9yOiByZXN1bHQuZXJyb3IgfSk7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBzdWNjZXNzOiBmYWxzZSwgZXJyb3I6IHJlc3VsdC5lcnJvciB9LCB7IHN0YXR1czogNTAwIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IHRydWUsIG5vdGlmaWNhdGlvbklkOiByZXN1bHQubm90aWZpY2F0aW9uSWQgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignTm90aWZ5IEFQSSBlcnJvcjonLCBlcnJvcik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgc3VjY2VzczogZmFsc2UsIGVycm9yOiAnRmFpbGVkIHRvIHNlbmQgbm90aWZpY2F0aW9uJyB9LCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBUUk7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7Ozs7OzsrQkFGa0I7Ozs7OztXQUFBQyxJQUFBOzs7OztrQ0FKb0I7OztrQ0FDVDtBQUcxQixlQUFlQSxLQUFLQyxHQUFnQjtFQUFBO0VBQUFKLGNBQUEsR0FBQUssQ0FBQTtFQUFBTCxjQUFBLEdBQUFFLENBQUE7RUFDekMsSUFBSTtJQUNGLE1BQU1JLElBQUE7SUFBQTtJQUFBLENBQUFOLGNBQUEsR0FBQUUsQ0FBQSxPQUFPLE1BQU1FLEdBQUEsQ0FBSUcsSUFBSTtJQUMzQixNQUFNO01BQUVDLE1BQU07TUFBRUMsSUFBSTtNQUFFQyxLQUFLO01BQUVDLE9BQU87TUFBRUMsSUFBSTtNQUFFQztJQUFRLENBQUU7SUFBQTtJQUFBLENBQUFiLGNBQUEsR0FBQUUsQ0FBQSxPQUFHSSxJQUFBO0lBRXpELE1BQU1RLE1BQUE7SUFBQTtJQUFBLENBQUFkLGNBQUEsR0FBQUUsQ0FBQSxPQUFTLE1BQU0sSUFBQWEsYUFBQSxDQUFBQyxnQkFBZ0IsRUFBQztNQUNwQ1IsTUFBQTtNQUNBQyxJQUFBO01BQ0FDLEtBQUE7TUFDQUMsT0FBQTtNQUNBQyxJQUFBO01BQ0FDO0lBQ0Y7SUFBQTtJQUFBYixjQUFBLEdBQUFFLENBQUE7SUFFQSxJQUFJLENBQUNZLE1BQUEsQ0FBT0csT0FBTyxFQUFFO01BQUE7TUFBQWpCLGNBQUEsR0FBQWtCLENBQUE7TUFBQWxCLGNBQUEsR0FBQUUsQ0FBQTtNQUNuQmlCLE9BQUEsQ0FBUUMsS0FBSyxDQUFDLHVCQUF1QjtRQUFFQSxLQUFBLEVBQU9OLE1BQUEsQ0FBT007TUFBTTtNQUFBO01BQUFwQixjQUFBLEdBQUFFLENBQUE7TUFDM0QsT0FBT21CLE9BQUEsQ0FBQUMsWUFBWSxDQUFDZixJQUFJLENBQUM7UUFBRVUsT0FBQSxFQUFTO1FBQU9HLEtBQUEsRUFBT04sTUFBQSxDQUFPTTtNQUFNLEdBQUc7UUFBRUcsTUFBQSxFQUFRO01BQUk7SUFDbEY7SUFBQTtJQUFBO01BQUF2QixjQUFBLEdBQUFrQixDQUFBO0lBQUE7SUFBQWxCLGNBQUEsR0FBQUUsQ0FBQTtJQUVBLE9BQU9tQixPQUFBLENBQUFDLFlBQVksQ0FBQ2YsSUFBSSxDQUFDO01BQUVVLE9BQUEsRUFBUztNQUFNTyxjQUFBLEVBQWdCVixNQUFBLENBQU9VO0lBQWU7RUFDbEYsRUFBRSxPQUFPSixLQUFBLEVBQU87SUFBQTtJQUFBcEIsY0FBQSxHQUFBRSxDQUFBO0lBQ2RpQixPQUFBLENBQVFDLEtBQUssQ0FBQyxxQkFBcUJBLEtBQUE7SUFBQTtJQUFBcEIsY0FBQSxHQUFBRSxDQUFBO0lBQ25DLE9BQU9tQixPQUFBLENBQUFDLFlBQVksQ0FBQ2YsSUFBSSxDQUFDO01BQUVVLE9BQUEsRUFBUztNQUFPRyxLQUFBLEVBQU87SUFBOEIsR0FBRztNQUFFRyxNQUFBLEVBQVE7SUFBSTtFQUNuRztBQUNGIiwiaWdub3JlTGlzdCI6W119