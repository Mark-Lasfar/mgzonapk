{"version":3,"names":["CreateTicket","ticketSchema","cov_6xe3xlgtq","s","_zod1","z","object","subject","string","min","description","category","orderId","optional","categories","f","toast","_usetoast","useToast","router","_navigation","useRouter","form","_reacthookform","useForm","resolver","_zod","zodResolver","defaultValues","onSubmit","data","response","_supportactions","createTicket","success","b","title","push","error","variant","_jsxruntime","jsx","className","jsxs","_card","Card","CardHeader","CardTitle","CardContent","_form","Form","handleSubmit","FormField","control","name","render","field","FormItem","FormLabel","FormControl","_input","Input","placeholder","FormMessage","_select","Select","onValueChange","onChange","defaultValue","value","SelectTrigger","SelectValue","SelectContent","map","SelectItem","_textarea","Textarea","_button","Button","type"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/[locale]/support/tickets/create/page.tsx"],"sourcesContent":["// /app/[locale]/support/tickets/create/page.tsx\n\n'use client'\n\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { useForm } from 'react-hook-form'\nimport { z } from 'zod'\nimport { Button } from '@/components/ui/button'\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form'\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { Input } from '@/components/ui/input'\nimport { Textarea } from '@/components/ui/textarea'\nimport { createTicket } from '@/lib/actions/support.actions'\nimport { useToast } from '@/hooks/use-toast'\nimport { useRouter } from 'next/navigation'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\n\nconst ticketSchema = z.object({\n  subject: z.string().min(5, 'Subject must be at least 5 characters'),\n  description: z.string().min(20, 'Description must be at least 20 characters'),\n  category: z.string(),\n  orderId: z.string().optional(),\n})\n\nconst categories = [\n  'Order Issue',\n  'Product Question',\n  'Shipping',\n  'Returns',\n  'Technical Support',\n  'Account',\n  'Other',\n]\n\nexport default function CreateTicket() {\n  const { toast } = useToast()\n  const router = useRouter()\n  const form = useForm<z.infer<typeof ticketSchema>>({\n    resolver: zodResolver(ticketSchema),\n    defaultValues: {\n      subject: '',\n      description: '',\n      category: '',\n    },\n  })\n\n  const onSubmit = async (data: z.infer<typeof ticketSchema>) => {\n    const response = await createTicket(data)\n    if (response.success) {\n      toast({\n        title: 'Success',\n        description: 'Support ticket created successfully',\n      })\n      router.push('/support/tickets')\n    } else {\n      toast({\n        title: 'Error',\n        description: response.error,\n        variant: 'destructive',\n      })\n    }\n  }\n\n  return (\n    <div className=\"container mx-auto py-8\">\n      <Card>\n        <CardHeader>\n          <CardTitle>Create Support Ticket</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <FormField\n                control={form.control}\n                name=\"subject\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Subject</FormLabel>\n                    <FormControl>\n                      <Input {...field} placeholder=\"Enter ticket subject\" />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"category\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Category</FormLabel>\n                    <Select\n                      onValueChange={field.onChange}\n                      defaultValue={field.value}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select category\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        {categories.map((category) => (\n                          <SelectItem key={category} value={category}>\n                            {category}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"description\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Description</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        {...field}\n                        placeholder=\"Describe your issue in detail\"\n                        className=\"h-32\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"orderId\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Order ID (Optional)</FormLabel>\n                    <FormControl>\n                      <Input {...field} placeholder=\"Enter order ID if applicable\" />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <Button type=\"submit\">Create Ticket</Button>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"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","ignoreList":[]}