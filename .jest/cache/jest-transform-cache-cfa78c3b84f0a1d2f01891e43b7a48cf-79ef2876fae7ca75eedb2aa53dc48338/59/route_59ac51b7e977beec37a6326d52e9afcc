b6391fc56680ad0aa6ace99d4f9c58d0
"use strict";

/* istanbul ignore next */
function cov_2akfl6nnv() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/sitemap-blog.xml/route.ts";
  var hash = "1eb855a6b63ac8307b05f9e85b0184dda88cfd1b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/sitemap-blog.xml/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 68
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "6": {
        start: {
          line: 15,
          column: 34
        },
        end: {
          line: 15,
          column: 73
        }
      },
      "7": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 136
        }
      },
      "8": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 47
        }
      },
      "9": {
        start: {
          line: 20,
          column: 22
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "10": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "11": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "12": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "13": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 63
        }
      },
      "14": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 18
          }
        },
        loc: {
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 14
          },
          end: {
            line: 32,
            column: 15
          }
        },
        loc: {
          start: {
            line: 32,
            column: 22
          },
          end: {
            line: 38,
            column: 11
          }
        },
        line: 32
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 80
          },
          end: {
            line: 17,
            column: 103
          }
        }, {
          start: {
            line: 17,
            column: 106
          },
          end: {
            line: 17,
            column: 136
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 27
          }
        }, {
          start: {
            line: 17,
            column: 31
          },
          end: {
            line: 17,
            column: 77
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/sitemap-blog.xml/route.ts"],
      sourcesContent: ["import { NextResponse } from 'next/server'\nimport { getSetting } from '@/lib/actions/setting.actions'\n\nexport async function GET() {\n  try {\n    const { site: { url } } = await getSetting()\n    // \u0627\u0633\u062A\u062E\u062F\u0645 \u0627\u0644\u062F\u0648\u0645\u064A\u0646 \u0627\u0644\u0631\u0633\u0645\u064A \u0641\u0642\u0637\n    const baseUrl = (url && url.startsWith('https://hager-zon.vercel.app'))\n      ? url.replace(/\\/+$/, '')\n      : 'https://hager-zon.vercel.app'\n    const nowIso = new Date().toISOString()\n\n    // Example blog entries.\n    const blogs = [\n      {\n        slug: 'first-blog-post',\n        updatedAt: nowIso,\n      },\n      {\n        slug: 'another-blog-post',\n        updatedAt: nowIso,\n      }\n    ]\n\n    const xml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n  ${blogs\n    .map(\n      (blog) => `\n    <url>\n      <loc>${baseUrl}/blog/${blog.slug}</loc>\n      <lastmod>${new Date(blog.updatedAt).toISOString()}</lastmod>\n      <changefreq>weekly</changefreq>\n      <priority>0.7</priority>\n    </url>`\n    )\n    .join('\\n')}\n</urlset>`\n\n    return new NextResponse(xml, {\n      headers: {\n        'Content-Type': 'application/xml'\n      }\n    })\n  } catch (error) {\n    console.error('Error generating blog sitemap:', error)\n    return new NextResponse('Error generating sitemap', { status: 500 })\n  }\n}"],
      names: ["GET", "site", "url", "getSetting", "baseUrl", "startsWith", "replace", "nowIso", "Date", "toISOString", "blogs", "slug", "updatedAt", "xml", "map", "blog", "join", "NextResponse", "headers", "error", "console", "status"],
      mappings: ";;;;+BAGsBA;;;eAAAA;;;wBAHO;gCACF;AAEpB,eAAeA;IACpB,IAAI;QACF,MAAM,EAAEC,MAAM,EAAEC,GAAG,EAAE,EAAE,GAAG,MAAMC,IAAAA,0BAAU;QAC1C,4BAA4B;QAC5B,MAAMC,UAAU,AAACF,OAAOA,IAAIG,UAAU,CAAC,kCACnCH,IAAII,OAAO,CAAC,QAAQ,MACpB;QACJ,MAAMC,SAAS,IAAIC,OAAOC,WAAW;QAErC,wBAAwB;QACxB,MAAMC,QAAQ;YACZ;gBACEC,MAAM;gBACNC,WAAWL;YACb;YACA;gBACEI,MAAM;gBACNC,WAAWL;YACb;SACD;QAED,MAAMM,MAAM,CAAC;;EAEf,EAAEH,MACCI,GAAG,CACF,CAACC,OAAS,CAAC;;WAEN,EAAEX,QAAQ,MAAM,EAAEW,KAAKJ,IAAI,CAAC;eACxB,EAAE,IAAIH,KAAKO,KAAKH,SAAS,EAAEH,WAAW,GAAG;;;UAG9C,CAAC,EAENO,IAAI,CAAC,MAAM;SACP,CAAC;QAEN,OAAO,IAAIC,oBAAY,CAACJ,KAAK;YAC3BK,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF,EAAE,OAAOC,OAAO;QACdC,QAAQD,KAAK,CAAC,kCAAkCA;QAChD,OAAO,IAAIF,oBAAY,CAAC,4BAA4B;YAAEI,QAAQ;QAAI;IACpE;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1eb855a6b63ac8307b05f9e85b0184dda88cfd1b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2akfl6nnv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2akfl6nnv();
cov_2akfl6nnv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2akfl6nnv().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2akfl6nnv().f[0]++;
    cov_2akfl6nnv().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_2akfl6nnv().s[3]++, require("next/server"));
const _settingactions =
/* istanbul ignore next */
(cov_2akfl6nnv().s[4]++, require("../../lib/actions/setting.actions"));
async function GET() {
  /* istanbul ignore next */
  cov_2akfl6nnv().f[1]++;
  cov_2akfl6nnv().s[5]++;
  try {
    const {
      site: {
        url
      }
    } =
    /* istanbul ignore next */
    (cov_2akfl6nnv().s[6]++, await (0, _settingactions.getSetting)());
    // استخدم الدومين الرسمي فقط
    const baseUrl =
    /* istanbul ignore next */
    (cov_2akfl6nnv().s[7]++,
    /* istanbul ignore next */
    (cov_2akfl6nnv().b[1][0]++, url) &&
    /* istanbul ignore next */
    (cov_2akfl6nnv().b[1][1]++, url.startsWith('https://hager-zon.vercel.app')) ?
    /* istanbul ignore next */
    (cov_2akfl6nnv().b[0][0]++, url.replace(/\/+$/, '')) :
    /* istanbul ignore next */
    (cov_2akfl6nnv().b[0][1]++, 'https://hager-zon.vercel.app'));
    const nowIso =
    /* istanbul ignore next */
    (cov_2akfl6nnv().s[8]++, new Date().toISOString());
    // Example blog entries.
    const blogs =
    /* istanbul ignore next */
    (cov_2akfl6nnv().s[9]++, [{
      slug: 'first-blog-post',
      updatedAt: nowIso
    }, {
      slug: 'another-blog-post',
      updatedAt: nowIso
    }]);
    const xml =
    /* istanbul ignore next */
    (cov_2akfl6nnv().s[10]++, `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  ${blogs.map(blog => {
      /* istanbul ignore next */
      cov_2akfl6nnv().f[2]++;
      cov_2akfl6nnv().s[11]++;
      return `
    <url>
      <loc>${baseUrl}/blog/${blog.slug}</loc>
      <lastmod>${new Date(blog.updatedAt).toISOString()}</lastmod>
      <changefreq>weekly</changefreq>
      <priority>0.7</priority>
    </url>`;
    }).join('\n')}
</urlset>`);
    /* istanbul ignore next */
    cov_2akfl6nnv().s[12]++;
    return new _server.NextResponse(xml, {
      headers: {
        'Content-Type': 'application/xml'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2akfl6nnv().s[13]++;
    console.error('Error generating blog sitemap:', error);
    /* istanbul ignore next */
    cov_2akfl6nnv().s[14]++;
    return new _server.NextResponse('Error generating sitemap', {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmFrZmw2bm52IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiR0VUIiwiZiIsInNpdGUiLCJ1cmwiLCJfc2V0dGluZ2FjdGlvbnMiLCJnZXRTZXR0aW5nIiwiYmFzZVVybCIsImIiLCJzdGFydHNXaXRoIiwicmVwbGFjZSIsIm5vd0lzbyIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImJsb2dzIiwic2x1ZyIsInVwZGF0ZWRBdCIsInhtbCIsIm1hcCIsImJsb2ciLCJqb2luIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsImhlYWRlcnMiLCJlcnJvciIsImNvbnNvbGUiLCJzdGF0dXMiXSwic291cmNlcyI6WyIvaG9tZS9oYWdlci9uZXcvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyICgzKS9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIvYXBwL3NpdGVtYXAtYmxvZy54bWwvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5pbXBvcnQgeyBnZXRTZXR0aW5nIH0gZnJvbSAnQC9saWIvYWN0aW9ucy9zZXR0aW5nLmFjdGlvbnMnXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQoKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBzaXRlOiB7IHVybCB9IH0gPSBhd2FpdCBnZXRTZXR0aW5nKClcbiAgICAvLyDYp9iz2KrYrtiv2YUg2KfZhNiv2YjZhdmK2YYg2KfZhNix2LPZhdmKINmB2YLYt1xuICAgIGNvbnN0IGJhc2VVcmwgPSAodXJsICYmIHVybC5zdGFydHNXaXRoKCdodHRwczovL2hhZ2VyLXpvbi52ZXJjZWwuYXBwJykpXG4gICAgICA/IHVybC5yZXBsYWNlKC9cXC8rJC8sICcnKVxuICAgICAgOiAnaHR0cHM6Ly9oYWdlci16b24udmVyY2VsLmFwcCdcbiAgICBjb25zdCBub3dJc28gPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcblxuICAgIC8vIEV4YW1wbGUgYmxvZyBlbnRyaWVzLlxuICAgIGNvbnN0IGJsb2dzID0gW1xuICAgICAge1xuICAgICAgICBzbHVnOiAnZmlyc3QtYmxvZy1wb3N0JyxcbiAgICAgICAgdXBkYXRlZEF0OiBub3dJc28sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBzbHVnOiAnYW5vdGhlci1ibG9nLXBvc3QnLFxuICAgICAgICB1cGRhdGVkQXQ6IG5vd0lzbyxcbiAgICAgIH1cbiAgICBdXG5cbiAgICBjb25zdCB4bWwgPSBgPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+XG48dXJsc2V0IHhtbG5zPVwiaHR0cDovL3d3dy5zaXRlbWFwcy5vcmcvc2NoZW1hcy9zaXRlbWFwLzAuOVwiPlxuICAke2Jsb2dzXG4gICAgLm1hcChcbiAgICAgIChibG9nKSA9PiBgXG4gICAgPHVybD5cbiAgICAgIDxsb2M+JHtiYXNlVXJsfS9ibG9nLyR7YmxvZy5zbHVnfTwvbG9jPlxuICAgICAgPGxhc3Rtb2Q+JHtuZXcgRGF0ZShibG9nLnVwZGF0ZWRBdCkudG9JU09TdHJpbmcoKX08L2xhc3Rtb2Q+XG4gICAgICA8Y2hhbmdlZnJlcT53ZWVrbHk8L2NoYW5nZWZyZXE+XG4gICAgICA8cHJpb3JpdHk+MC43PC9wcmlvcml0eT5cbiAgICA8L3VybD5gXG4gICAgKVxuICAgIC5qb2luKCdcXG4nKX1cbjwvdXJsc2V0PmBcblxuICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKHhtbCwge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3htbCdcbiAgICAgIH1cbiAgICB9KVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGdlbmVyYXRpbmcgYmxvZyBzaXRlbWFwOicsIGVycm9yKVxuICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKCdFcnJvciBnZW5lcmF0aW5nIHNpdGVtYXAnLCB7IHN0YXR1czogNTAwIH0pXG4gIH1cbn0iXSwibWFw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