{"version":3,"names":["ApiKeyService","CACHE_PREFIX","CACHE_TTL","getRedisClient","cov_vcifmrw87","f","s","redis","b","_redis","Redis","url","process","env","UPSTASH_REDIS_URL","token","UPSTASH_REDIS_REST_TOKEN","createApiKey","params","options","session","_mongoose","default","startSession","startTransaction","apiKey","_apikeymodel","create","createdBy","updatedBy","set","key","JSON","stringify","ex","_logging","logger","info","keyId","_id","name","timestamp","Date","user","commitTransaction","error","abortTransaction","Error","message","String","endSession","validateApiKey","cacheKey","cached","get","parse","findOne","isActive","$or","expiresAt","$exists","$gt","findByIdAndUpdate","lastUsed","rotateApiKey","id","findById","crypto","randomBytes","toString","secret","save","del","deactivateApiKey"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/services/api-key.service.ts"],"sourcesContent":["import { Redis } from '@upstash/redis';\nimport mongoose from 'mongoose';\nimport ApiKey, { IApiKey } from '@/lib/db/models/api-key.model';\nimport { logger } from './logging';\n\nexport class ApiKeyService {\n  private static redis: Redis;\n  private static readonly CACHE_PREFIX = 'api-key:';\n  private static readonly CACHE_TTL = 3600; // 1 hour\n\n  private static async getRedisClient() {\n    if (!this.redis) {\n      this.redis = new Redis({\n        url: process.env.UPSTASH_REDIS_URL!,\n        token: process.env.UPSTASH_REDIS_REST_TOKEN!,\n      });\n    }\n    return this.redis;\n  }\n\n  static async createApiKey(\n    params: {\n      name: string;\n      permissions: string[];\n      expiresAt?: Date;\n      sellerId: mongoose.Types.ObjectId;\n    },\n    options: { createdBy: string; updatedBy: string }\n  ): Promise<IApiKey> {\n    const session = await mongoose.startSession();\n    try {\n      session.startTransaction();\n      const apiKey = await ApiKey.create(\n        [\n          {\n            ...params,\n            createdBy: options.createdBy,\n            updatedBy: options.updatedBy,\n          },\n        ],\n        { session }\n      );\n\n      const redis = await this.getRedisClient();\n      await redis.set(\n        `${this.CACHE_PREFIX}${apiKey[0].key}`,\n        JSON.stringify(apiKey[0]),\n        { ex: this.CACHE_TTL }\n      );\n\n      logger.info('API key created', {\n        keyId: apiKey[0]._id,\n        name: apiKey[0].name,\n        timestamp: new Date(),\n        user: options.createdBy,\n      });\n\n      await session.commitTransaction();\n      return apiKey[0];\n    } catch (error) {\n      await session.abortTransaction();\n      logger.error('Failed to create API key', {\n        error: error instanceof Error ? error.message : String(error),\n        timestamp: new Date(),\n        user: options.createdBy,\n      });\n      throw error;\n    } finally {\n      session.endSession();\n    }\n  }\n\n  static async validateApiKey(key: string): Promise<IApiKey | null> {\n    try {\n      const redis = await this.getRedisClient();\n      const cacheKey = `${this.CACHE_PREFIX}${key}`;\n\n      const cached = await redis.get(cacheKey);\n      if (cached) {\n        return JSON.parse(cached as string);\n      }\n\n      const apiKey = await ApiKey.findOne({\n        key,\n        isActive: true,\n        $or: [{ expiresAt: { $exists: false } }, { expiresAt: { $gt: new Date() } }],\n      });\n\n      if (!apiKey) {\n        return null;\n      }\n\n      await ApiKey.findByIdAndUpdate(apiKey._id, {\n        lastUsed: new Date(),\n        updatedBy: 'system', // Replace with actual user if available\n      });\n\n      await redis.set(cacheKey, JSON.stringify(apiKey), { ex: this.CACHE_TTL });\n\n      return apiKey;\n    } catch (error) {\n      logger.error('API key validation failed', {\n        error: error instanceof Error ? error.message : String(error),\n        timestamp: new Date(),\n        user: 'system',\n      });\n      throw error;\n    }\n  }\n\n  static async rotateApiKey(\n    id: string,\n    options: { updatedBy: string }\n  ): Promise<IApiKey> {\n    const session = await mongoose.startSession();\n    try {\n      session.startTransaction();\n      const apiKey = await ApiKey.findById(id).session(session);\n      if (!apiKey) {\n        throw new Error('API key not found');\n      }\n\n      apiKey.key = crypto.randomBytes(32).toString('hex');\n      apiKey.secret = crypto.randomBytes(64).toString('hex');\n      apiKey.updatedBy = options.updatedBy;\n      await apiKey.save({ session });\n\n      const redis = await this.getRedisClient();\n      await redis.del(`${this.CACHE_PREFIX}${apiKey.key}`);\n\n      logger.info('API key rotated', {\n        keyId: apiKey._id,\n        timestamp: new Date(),\n        user: options.updatedBy,\n      });\n\n      await session.commitTransaction();\n      return apiKey;\n    } catch (error) {\n      await session.abortTransaction();\n      logger.error('Failed to rotate API key', {\n        error: error instanceof Error ? error.message : String(error),\n        timestamp: new Date(),\n        user: options.updatedBy,\n      });\n      throw error;\n    } finally {\n      session.endSession();\n    }\n  }\n\n  static async deactivateApiKey(\n    id: string,\n    options: { updatedBy: string }\n  ): Promise<void> {\n    const session = await mongoose.startSession();\n    try {\n      session.startTransaction();\n      const apiKey = await ApiKey.findById(id).session(session);\n      if (!apiKey) {\n        throw new Error('API key not found');\n      }\n\n      apiKey.isActive = false;\n      apiKey.updatedBy = options.updatedBy;\n      await apiKey.save({ session });\n\n      const redis = await this.getRedisClient();\n      await redis.del(`${this.CACHE_PREFIX}${apiKey.key}`);\n\n      logger.info('API key deactivated', {\n        keyId: apiKey._id,\n        timestamp: new Date(),\n        user: options.updatedBy,\n      });\n\n      await session.commitTransaction();\n    } catch (error) {\n      await session.abortTransaction();\n      logger.error('Failed to deactivate API key', {\n        error: error instanceof Error ? error.message : String(error),\n        timestamp: new Date(),\n        user: options.updatedBy,\n      });\n      throw error;\n    } finally {\n      session.endSession();\n    }\n  }\n}"],"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","ignoreList":[]}