{"version":3,"names":["cov_mvba4o0of","actualCoverage","s","POST","importService","_productimport","ProductImportService","shopify","apiKey","process","env","SHOPIFY_API_KEY","apiSecret","SHOPIFY_API_SECRET","domain","SHOPIFY_DOMAIN","amazon","accessKeyId","AWS_ACCESS_KEY_ID","secretAccessKey","AWS_SECRET_ACCESS_KEY","region","AWS_REGION","req","f","session","_auth","auth","user","id","b","_server","NextResponse","json","success","error","status","source","productIds","products","importFromShopify","importFromAmazon","data","Error","message"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/seller/import-products/route.ts"],"sourcesContent":["// app/api/seller/import-products/route.ts\nimport { NextRequest, NextResponse } from 'next/server';\nimport { auth } from '@/auth';\nimport { ProductImportService } from '@/lib/api/services/product-import';\n\nconst importService = new ProductImportService({\n  shopify: {\n    apiKey: process.env.SHOPIFY_API_KEY!,\n    apiSecret: process.env.SHOPIFY_API_SECRET!,\n    domain: process.env.SHOPIFY_DOMAIN!,\n  },\n  amazon: {\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID!,\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY!,\n    region: process.env.AWS_REGION!,\n  },\n});\n\nexport async function POST(req: NextRequest) {\n  try {\n    const session = await auth();\n    if (!session?.user?.id) {\n      return NextResponse.json({ success: false, error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { source, productIds } = await req.json();\n    let products;\n    if (source === 'shopify') {\n      products = await importService.importFromShopify(session.user.id, productIds);\n    } else if (source === 'amazon') {\n      products = await importService.importFromAmazon(session.user.id, productIds);\n    } else {\n      return NextResponse.json({ success: false, error: 'Invalid source' }, { status: 400 });\n    }\n\n    return NextResponse.json({ success: true, data: products });\n  } catch (error) {\n    return NextResponse.json({ success: false, error: error instanceof Error ? error.message : 'Import failed' }, { status: 500 });\n  }\n}"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAME;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;+BAYoB;;;;;;WAAAC,IAAA;;;;;iCAjBoB;;;iCACrB;;;iCACgB;AAErC,MAAMC,aAAA;AAAA;AAAA,CAAAJ,aAAA,GAAAE,CAAA,OAAgB,IAAIG,cAAA,CAAAC,oBAAoB,CAAC;EAC7CC,OAAA,EAAS;IACPC,MAAA,EAAQC,OAAA,CAAQC,GAAG,CAACC,eAAe;IACnCC,SAAA,EAAWH,OAAA,CAAQC,GAAG,CAACG,kBAAkB;IACzCC,MAAA,EAAQL,OAAA,CAAQC,GAAG,CAACK;EACtB;EACAC,MAAA,EAAQ;IACNC,WAAA,EAAaR,OAAA,CAAQC,GAAG,CAACQ,iBAAiB;IAC1CC,eAAA,EAAiBV,OAAA,CAAQC,GAAG,CAACU,qBAAqB;IAClDC,MAAA,EAAQZ,OAAA,CAAQC,GAAG,CAACY;EACtB;AACF;AAEO,eAAenB,KAAKoB,GAAgB;EAAA;EAAAvB,aAAA,GAAAwB,CAAA;EAAAxB,aAAA,GAAAE,CAAA;EACzC,IAAI;IACF,MAAMuB,OAAA;IAAA;IAAA,CAAAzB,aAAA,GAAAE,CAAA,OAAU,MAAM,IAAAwB,KAAA,CAAAC,IAAI;IAAA;IAAA3B,aAAA,GAAAE,CAAA;IAC1B,IAAI,CAACuB,OAAA,EAASG,IAAA,EAAMC,EAAA,EAAI;MAAA;MAAA7B,aAAA,GAAA8B,CAAA;MAAA9B,aAAA,GAAAE,CAAA;MACtB,OAAO6B,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;QAAEC,OAAA,EAAS;QAAOC,KAAA,EAAO;MAAe,GAAG;QAAEC,MAAA,EAAQ;MAAI;IACpF;IAAA;IAAA;MAAApC,aAAA,GAAA8B,CAAA;IAAA;IAEA,MAAM;MAAEO,MAAM;MAAEC;IAAU,CAAE;IAAA;IAAA,CAAAtC,aAAA,GAAAE,CAAA,QAAG,MAAMqB,GAAA,CAAIU,IAAI;IAC7C,IAAIM,QAAA;IAAA;IAAAvC,aAAA,GAAAE,CAAA;IACJ,IAAImC,MAAA,KAAW,WAAW;MAAA;MAAArC,aAAA,GAAA8B,CAAA;MAAA9B,aAAA,GAAAE,CAAA;MACxBqC,QAAA,GAAW,MAAMnC,aAAA,CAAcoC,iBAAiB,CAACf,OAAA,CAAQG,IAAI,CAACC,EAAE,EAAES,UAAA;IACpE,OAAO;MAAA;MAAAtC,aAAA,GAAA8B,CAAA;MAAA9B,aAAA,GAAAE,CAAA;MAAA,IAAImC,MAAA,KAAW,UAAU;QAAA;QAAArC,aAAA,GAAA8B,CAAA;QAAA9B,aAAA,GAAAE,CAAA;QAC9BqC,QAAA,GAAW,MAAMnC,aAAA,CAAcqC,gBAAgB,CAAChB,OAAA,CAAQG,IAAI,CAACC,EAAE,EAAES,UAAA;MACnE,OAAO;QAAA;QAAAtC,aAAA,GAAA8B,CAAA;QAAA9B,aAAA,GAAAE,CAAA;QACL,OAAO6B,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;UAAEC,OAAA,EAAS;UAAOC,KAAA,EAAO;QAAiB,GAAG;UAAEC,MAAA,EAAQ;QAAI;MACtF;IAAA;IAAA;IAAApC,aAAA,GAAAE,CAAA;IAEA,OAAO6B,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MAAEC,OAAA,EAAS;MAAMQ,IAAA,EAAMH;IAAS;EAC3D,EAAE,OAAOJ,KAAA,EAAO;IAAA;IAAAnC,aAAA,GAAAE,CAAA;IACd,OAAO6B,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MAAEC,OAAA,EAAS;MAAOC,KAAA,EAAOA,KAAA,YAAiBQ,KAAA;MAAA;MAAA,CAAA3C,aAAA,GAAA8B,CAAA,UAAQK,KAAA,CAAMS,OAAO;MAAA;MAAA,CAAA5C,aAAA,GAAA8B,CAAA,UAAG;IAAgB,GAAG;MAAEM,MAAA,EAAQ;IAAI;EAC9H;AACF","ignoreList":[]}