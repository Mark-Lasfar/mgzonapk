63e97f1b3b56b919d0ccc78d81a508ae
'use client';
"use strict";

/* istanbul ignore next */
function cov_1xeuekzt6y() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/verify-code/page.tsx";
  var hash = "994929e947d19e63c30c6e0357278273b154facf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/verify-code/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "5": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "6": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 49
        }
      },
      "7": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "9": {
        start: {
          line: 18,
          column: 15
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "10": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 50
        }
      },
      "11": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "12": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 52
        }
      },
      "13": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 23,
          column: 54
        }
      },
      "14": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 54
        }
      },
      "15": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 47
        }
      },
      "16": {
        start: {
          line: 26,
          column: 22
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "17": {
        start: {
          line: 27,
          column: 14
        },
        end: {
          line: 27,
          column: 52
        }
      },
      "18": {
        start: {
          line: 28,
          column: 19
        },
        end: {
          line: 28,
          column: 45
        }
      },
      "19": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "20": {
        start: {
          line: 30,
          column: 22
        },
        end: {
          line: 30,
          column: 46
        }
      },
      "21": {
        start: {
          line: 31,
          column: 25
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "22": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 27
        }
      },
      "23": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 21
        }
      },
      "24": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "25": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 44,
          column: 14
        }
      },
      "26": {
        start: {
          line: 45,
          column: 25
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "27": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "28": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 61
        }
      },
      "29": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 50,
          column: 19
        }
      },
      "30": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 59
        }
      },
      "31": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "32": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 57,
          column: 19
        }
      },
      "33": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 33
        }
      },
      "34": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "35": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 130,
          column: 7
        }
      },
      "36": {
        start: {
          line: 95,
          column: 55
        },
        end: {
          line: 95,
          column: 79
        }
      },
      "37": {
        start: {
          line: 111,
          column: 55
        },
        end: {
          line: 111,
          column: 78
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "VerifyCodePage",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 23
          }
        },
        loc: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 31,
            column: 26
          }
        },
        loc: {
          start: {
            line: 31,
            column: 36
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 95,
            column: 50
          },
          end: {
            line: 95,
            column: 51
          }
        },
        loc: {
          start: {
            line: 95,
            column: 55
          },
          end: {
            line: 95,
            column: 79
          }
        },
        line: 95
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 111,
            column: 50
          },
          end: {
            line: 111,
            column: 51
          }
        },
        loc: {
          start: {
            line: 111,
            column: 55
          },
          end: {
            line: 111,
            column: 78
          }
        },
        line: 111
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 30,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 30,
            column: 38
          }
        }, {
          start: {
            line: 30,
            column: 41
          },
          end: {
            line: 30,
            column: 46
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 58,
            column: 13
          }
        }],
        line: 46
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 22
          }
        }, {
          start: {
            line: 46,
            column: 26
          },
          end: {
            line: 46,
            column: 38
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 53,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 53,
            column: 35
          }
        }, {
          start: {
            line: 53,
            column: 39
          },
          end: {
            line: 53,
            column: 55
          }
        }],
        line: 53
      },
      "4": {
        loc: {
          start: {
            line: 55,
            column: 33
          },
          end: {
            line: 55,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 33
          },
          end: {
            line: 55,
            column: 43
          }
        }, {
          start: {
            line: 55,
            column: 47
          },
          end: {
            line: 55,
            column: 63
          }
        }],
        line: 55
      },
      "5": {
        loc: {
          start: {
            line: 116,
            column: 28
          },
          end: {
            line: 119,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 28
          },
          end: {
            line: 116,
            column: 33
          }
        }, {
          start: {
            line: 116,
            column: 51
          },
          end: {
            line: 119,
            column: 30
          }
        }],
        line: 116
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/verify-code/page.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';\nimport { useTranslations, useLocale } from 'next-intl';\n\nexport default function VerifyCodePage() {\n  const [code, setCode] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const router = useRouter();\n  const { toast } = useToast();\n  const t = useTranslations('Auth');\n  const locale = useLocale();\n  const isArabic = locale === 'ar';\n  const direction = isArabic ? 'rtl' : 'ltr';\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      const res = await fetch('/api/auth/verify-email', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ code, email }),\n      });\n\n      const data = await res.json();\n      if (res.ok && data.success) {\n        localStorage.setItem('verifiedEmail', email);\n        toast({ description: t('VerificationSuccess') });\n        router.push('/auth/complete-registration');\n      } else {\n        setError(data.error || t('InvalidCode'));\n        toast({ description: data.error || t('InvalidCode'), variant: 'destructive' });\n      }\n    } catch (err) {\n      setError(t('Error'));\n      toast({ description: t('Error'), variant: 'destructive' });\n    }\n  };\n\n  return (\n    <main className=\"max-w-md mx-auto py-8\" style={{ direction }}>\n      <Card>\n        <CardHeader>\n          <CardTitle>{t('VerifyEmail')}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"email\">{t('Email')}</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder={t('EmailPlaceholder')}\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"code\">{t('VerificationCode')}</Label>\n              <Input\n                id=\"code\"\n                type=\"text\"\n                placeholder={t('CodePlaceholder')}\n                value={code}\n                onChange={(e) => setCode(e.target.value)}\n                required\n              />\n            </div>\n            {error && <p className=\"text-red-500\">{error}</p>}\n            <Button type=\"submit\" className=\"w-full\">\n              {t('Verify')}\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </main>\n  );\n}"],
      names: ["VerifyCodePage", "code", "setCode", "useState", "email", "setEmail", "error", "setError", "router", "useRouter", "toast", "useToast", "t", "useTranslations", "locale", "useLocale", "isArabic", "direction", "handleSubmit", "e", "preventDefault", "res", "fetch", "method", "headers", "body", "JSON", "stringify", "data", "json", "ok", "success", "localStorage", "setItem", "description", "push", "variant", "err", "main", "className", "style", "Card", "CardHeader", "CardTitle", "CardContent", "form", "onSubmit", "div", "Label", "htmlFor", "Input", "id", "type", "placeholder", "value", "onChange", "target", "required", "p", "Button"],
      mappings: "AAAA;;;;;+BAWA;;;eAAwBA;;;;uBATC;4BACC;sBAC+B;uBACnC;wBACC;uBACD;0BACG;0BACkB;AAE5B,SAASA;IACtB,MAAM,CAACC,MAAMC,QAAQ,GAAGC,IAAAA,eAAQ,EAAC;IACjC,MAAM,CAACC,OAAOC,SAAS,GAAGF,IAAAA,eAAQ,EAAC;IACnC,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAC;IACnC,MAAMK,SAASC,IAAAA,qBAAS;IACxB,MAAM,EAAEC,KAAK,EAAE,GAAGC,IAAAA,kBAAQ;IAC1B,MAAMC,IAAIC,IAAAA,yBAAe,EAAC;IAC1B,MAAMC,SAASC,IAAAA,mBAAS;IACxB,MAAMC,WAAWF,WAAW;IAC5B,MAAMG,YAAYD,WAAW,QAAQ;IAErC,MAAME,eAAe,OAAOC;QAC1BA,EAAEC,cAAc;QAChBb,SAAS;QAET,IAAI;YACF,MAAMc,MAAM,MAAMC,MAAM,0BAA0B;gBAChDC,QAAQ;gBACRC,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9CC,MAAMC,KAAKC,SAAS,CAAC;oBAAE1B;oBAAMG;gBAAM;YACrC;YAEA,MAAMwB,OAAO,MAAMP,IAAIQ,IAAI;YAC3B,IAAIR,IAAIS,EAAE,IAAIF,KAAKG,OAAO,EAAE;gBAC1BC,aAAaC,OAAO,CAAC,iBAAiB7B;gBACtCM,MAAM;oBAAEwB,aAAatB,EAAE;gBAAuB;gBAC9CJ,OAAO2B,IAAI,CAAC;YACd,OAAO;gBACL5B,SAASqB,KAAKtB,KAAK,IAAIM,EAAE;gBACzBF,MAAM;oBAAEwB,aAAaN,KAAKtB,KAAK,IAAIM,EAAE;oBAAgBwB,SAAS;gBAAc;YAC9E;QACF,EAAE,OAAOC,KAAK;YACZ9B,SAASK,EAAE;YACXF,MAAM;gBAAEwB,aAAatB,EAAE;gBAAUwB,SAAS;YAAc;QAC1D;IACF;IAEA,qBACE,qBAACE;QAAKC,WAAU;QAAwBC,OAAO;YAAEvB;QAAU;kBACzD,cAAA,sBAACwB,UAAI;;8BACH,qBAACC,gBAAU;8BACT,cAAA,qBAACC,eAAS;kCAAE/B,EAAE;;;8BAEhB,qBAACgC,iBAAW;8BACV,cAAA,sBAACC;wBAAKC,UAAU5B;wBAAcqB,WAAU;;0CACtC,sBAACQ;;kDACC,qBAACC,YAAK;wCAACC,SAAQ;kDAASrC,EAAE;;kDAC1B,qBAACsC,YAAK;wCACJC,IAAG;wCACHC,MAAK;wCACLC,aAAazC,EAAE;wCACf0C,OAAOlD;wCACPmD,UAAU,CAACpC,IAAMd,SAASc,EAAEqC,MAAM,CAACF,KAAK;wCACxCG,QAAQ;;;;0CAGZ,sBAACV;;kDACC,qBAACC,YAAK;wCAACC,SAAQ;kDAAQrC,EAAE;;kDACzB,qBAACsC,YAAK;wCACJC,IAAG;wCACHC,MAAK;wCACLC,aAAazC,EAAE;wCACf0C,OAAOrD;wCACPsD,UAAU,CAACpC,IAAMjB,QAAQiB,EAAEqC,MAAM,CAACF,KAAK;wCACvCG,QAAQ;;;;4BAGXnD,uBAAS,qBAACoD;gCAAEnB,WAAU;0CAAgBjC;;0CACvC,qBAACqD,cAAM;gCAACP,MAAK;gCAASb,WAAU;0CAC7B3B,EAAE;;;;;;;;AAOjB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "994929e947d19e63c30c6e0357278273b154facf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xeuekzt6y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xeuekzt6y();
cov_1xeuekzt6y().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1xeuekzt6y().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1xeuekzt6y().f[0]++;
    cov_1xeuekzt6y().s[2]++;
    return VerifyCodePage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1xeuekzt6y().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_1xeuekzt6y().s[4]++, require("react"));
const _navigation =
/* istanbul ignore next */
(cov_1xeuekzt6y().s[5]++, require("next/navigation"));
const _card =
/* istanbul ignore next */
(cov_1xeuekzt6y().s[6]++, require("../../components/ui/card"));
const _input =
/* istanbul ignore next */
(cov_1xeuekzt6y().s[7]++, require("../../components/ui/input"));
const _button =
/* istanbul ignore next */
(cov_1xeuekzt6y().s[8]++, require("../../components/ui/button"));
const _label =
/* istanbul ignore next */
(cov_1xeuekzt6y().s[9]++, require("../../components/ui/label"));
const _usetoast =
/* istanbul ignore next */
(cov_1xeuekzt6y().s[10]++, require("../../hooks/use-toast"));
const _nextintl =
/* istanbul ignore next */
(cov_1xeuekzt6y().s[11]++, require("next-intl"));
function VerifyCodePage() {
  /* istanbul ignore next */
  cov_1xeuekzt6y().f[1]++;
  const [code, setCode] =
  /* istanbul ignore next */
  (cov_1xeuekzt6y().s[12]++, (0, _react.useState)(''));
  const [email, setEmail] =
  /* istanbul ignore next */
  (cov_1xeuekzt6y().s[13]++, (0, _react.useState)(''));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1xeuekzt6y().s[14]++, (0, _react.useState)(''));
  const router =
  /* istanbul ignore next */
  (cov_1xeuekzt6y().s[15]++, (0, _navigation.useRouter)());
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_1xeuekzt6y().s[16]++, (0, _usetoast.useToast)());
  const t =
  /* istanbul ignore next */
  (cov_1xeuekzt6y().s[17]++, (0, _nextintl.useTranslations)('Auth'));
  const locale =
  /* istanbul ignore next */
  (cov_1xeuekzt6y().s[18]++, (0, _nextintl.useLocale)());
  const isArabic =
  /* istanbul ignore next */
  (cov_1xeuekzt6y().s[19]++, locale === 'ar');
  const direction =
  /* istanbul ignore next */
  (cov_1xeuekzt6y().s[20]++, isArabic ?
  /* istanbul ignore next */
  (cov_1xeuekzt6y().b[0][0]++, 'rtl') :
  /* istanbul ignore next */
  (cov_1xeuekzt6y().b[0][1]++, 'ltr'));
  /* istanbul ignore next */
  cov_1xeuekzt6y().s[21]++;
  const handleSubmit = async e => {
    /* istanbul ignore next */
    cov_1xeuekzt6y().f[2]++;
    cov_1xeuekzt6y().s[22]++;
    e.preventDefault();
    /* istanbul ignore next */
    cov_1xeuekzt6y().s[23]++;
    setError('');
    /* istanbul ignore next */
    cov_1xeuekzt6y().s[24]++;
    try {
      const res =
      /* istanbul ignore next */
      (cov_1xeuekzt6y().s[25]++, await fetch('/api/auth/verify-email', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          code,
          email
        })
      }));
      const data =
      /* istanbul ignore next */
      (cov_1xeuekzt6y().s[26]++, await res.json());
      /* istanbul ignore next */
      cov_1xeuekzt6y().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_1xeuekzt6y().b[2][0]++, res.ok) &&
      /* istanbul ignore next */
      (cov_1xeuekzt6y().b[2][1]++, data.success)) {
        /* istanbul ignore next */
        cov_1xeuekzt6y().b[1][0]++;
        cov_1xeuekzt6y().s[28]++;
        localStorage.setItem('verifiedEmail', email);
        /* istanbul ignore next */
        cov_1xeuekzt6y().s[29]++;
        toast({
          description: t('VerificationSuccess')
        });
        /* istanbul ignore next */
        cov_1xeuekzt6y().s[30]++;
        router.push('/auth/complete-registration');
      } else {
        /* istanbul ignore next */
        cov_1xeuekzt6y().b[1][1]++;
        cov_1xeuekzt6y().s[31]++;
        setError(
        /* istanbul ignore next */
        (cov_1xeuekzt6y().b[3][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_1xeuekzt6y().b[3][1]++, t('InvalidCode')));
        /* istanbul ignore next */
        cov_1xeuekzt6y().s[32]++;
        toast({
          description:
          /* istanbul ignore next */
          (cov_1xeuekzt6y().b[4][0]++, data.error) ||
          /* istanbul ignore next */
          (cov_1xeuekzt6y().b[4][1]++, t('InvalidCode')),
          variant: 'destructive'
        });
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_1xeuekzt6y().s[33]++;
      setError(t('Error'));
      /* istanbul ignore next */
      cov_1xeuekzt6y().s[34]++;
      toast({
        description: t('Error'),
        variant: 'destructive'
      });
    }
  };
  /* istanbul ignore next */
  cov_1xeuekzt6y().s[35]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("main", {
    className: "max-w-md mx-auto py-8",
    style: {
      direction
    },
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
          children: t('VerifyEmail')
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("form", {
          onSubmit: handleSubmit,
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
              htmlFor: "email",
              children: t('Email')
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
              id: "email",
              type: "email",
              placeholder: t('EmailPlaceholder'),
              value: email,
              onChange: e => {
                /* istanbul ignore next */
                cov_1xeuekzt6y().f[3]++;
                cov_1xeuekzt6y().s[36]++;
                return setEmail(e.target.value);
              },
              required: true
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_label.Label, {
              htmlFor: "code",
              children: t('VerificationCode')
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_input.Input, {
              id: "code",
              type: "text",
              placeholder: t('CodePlaceholder'),
              value: code,
              onChange: e => {
                /* istanbul ignore next */
                cov_1xeuekzt6y().f[4]++;
                cov_1xeuekzt6y().s[37]++;
                return setCode(e.target.value);
              },
              required: true
            })]
          }),
          /* istanbul ignore next */
          (cov_1xeuekzt6y().b[5][0]++, error) &&
          /* istanbul ignore next */
          (cov_1xeuekzt6y().b[5][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-red-500",
            children: error
          })), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            type: "submit",
            className: "w-full",
            children: t('Verify')
          })]
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,