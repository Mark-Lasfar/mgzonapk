2c326cf9cd2edbb9ea5ce59236fd087e
"use strict";

/* istanbul ignore next */
function cov_am1f0c289() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/withdrawals/request/route.ts";
  var hash = "bbd0991ad5cc67e6c5e9a64407d9e88505d70c58";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/withdrawals/request/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 46
        },
        end: {
          line: 12,
          column: 133
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "7": {
        start: {
          line: 20,
          column: 38
        },
        end: {
          line: 20,
          column: 54
        }
      },
      "8": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "9": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 28,
          column: 11
        }
      },
      "10": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 35,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "POST",
        decl: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 19
          }
        },
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/api/withdrawals/request/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport WithdrawalRequest from '@/lib/db/models/withdrawal-request.model';\n\nexport async function POST(req: NextRequest) {\n  try {\n    const { partnerId, amount } = await req.json();\n\n    const withdrawal = await WithdrawalRequest.create({ partnerId, amount });\n    return NextResponse.json({ success: true, data: withdrawal });\n  } catch (error) {\n    return NextResponse.json({ success: false, message: error.message }, { status: 400 });\n  }\n}"],
      names: ["POST", "req", "partnerId", "amount", "json", "withdrawal", "WithdrawalRequest", "create", "NextResponse", "success", "data", "error", "message", "status"],
      mappings: ";;;;+BAGsBA;;;eAAAA;;;wBAHoB;+EACZ;;;;;;AAEvB,eAAeA,KAAKC,GAAgB;IACzC,IAAI;QACF,MAAM,EAAEC,SAAS,EAAEC,MAAM,EAAE,GAAG,MAAMF,IAAIG,IAAI;QAE5C,MAAMC,aAAa,MAAMC,+BAAiB,CAACC,MAAM,CAAC;YAAEL;YAAWC;QAAO;QACtE,OAAOK,oBAAY,CAACJ,IAAI,CAAC;YAAEK,SAAS;YAAMC,MAAML;QAAW;IAC7D,EAAE,OAAOM,OAAO;QACd,OAAOH,oBAAY,CAACJ,IAAI,CAAC;YAAEK,SAAS;YAAOG,SAASD,MAAMC,OAAO;QAAC,GAAG;YAAEC,QAAQ;QAAI;IACrF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bbd0991ad5cc67e6c5e9a64407d9e88505d70c58"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_am1f0c289 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_am1f0c289();
cov_am1f0c289().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_am1f0c289().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_am1f0c289().f[0]++;
    cov_am1f0c289().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_am1f0c289().s[3]++, require("next/server"));
const _withdrawalrequestmodel =
/* istanbul ignore next */
(/*#__PURE__*/cov_am1f0c289().s[4]++, _interop_require_default(require("../../../../lib/db/models/withdrawal-request.model")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_am1f0c289().f[1]++;
  cov_am1f0c289().s[5]++;
  return /* istanbul ignore next */(cov_am1f0c289().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_am1f0c289().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_am1f0c289().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_am1f0c289().b[0][1]++, {
    default: obj
  });
}
async function POST(req) {
  /* istanbul ignore next */
  cov_am1f0c289().f[2]++;
  cov_am1f0c289().s[6]++;
  try {
    const {
      partnerId,
      amount
    } =
    /* istanbul ignore next */
    (cov_am1f0c289().s[7]++, await req.json());
    const withdrawal =
    /* istanbul ignore next */
    (cov_am1f0c289().s[8]++, await _withdrawalrequestmodel.default.create({
      partnerId,
      amount
    }));
    /* istanbul ignore next */
    cov_am1f0c289().s[9]++;
    return _server.NextResponse.json({
      success: true,
      data: withdrawal
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_am1f0c289().s[10]++;
    return _server.NextResponse.json({
      success: false,
      message: error.message
    }, {
      status: 400
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQT1NUIiwicmVxIiwiY292X2FtMWYwYzI4OSIsImYiLCJzIiwicGFydG5lcklkIiwiYW1vdW50IiwianNvbiIsIndpdGhkcmF3YWwiLCJfd2l0aGRyYXdhbHJlcXVlc3Rtb2RlbCIsImRlZmF1bHQiLCJjcmVhdGUiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwic3VjY2VzcyIsImRhdGEiLCJlcnJvciIsIm1lc3NhZ2UiLCJzdGF0dXMiXSwic291cmNlcyI6WyIvaG9tZS9oYWdlci9uZXcvbXktbmV4dGpzLXByb2plY3QtbWFzdGVyICgzKS9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIvYXBwL2FwaS93aXRoZHJhd2Fscy9yZXF1ZXN0L3JvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgV2l0aGRyYXdhbFJlcXVlc3QgZnJvbSAnQC9saWIvZGIvbW9kZWxzL3dpdGhkcmF3YWwtcmVxdWVzdC5tb2RlbCc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcTogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7IHBhcnRuZXJJZCwgYW1vdW50IH0gPSBhd2FpdCByZXEuanNvbigpO1xuXG4gICAgY29uc3Qgd2l0aGRyYXdhbCA9IGF3YWl0IFdpdGhkcmF3YWxSZXF1ZXN0LmNyZWF0ZSh7IHBhcnRuZXJJZCwgYW1vdW50IH0pO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IHN1Y2Nlc3M6IHRydWUsIGRhdGE6IHdpdGhkcmF3YWwgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UgfSwgeyBzdGF0dXM6IDQwMCB9KTtcbiAgfVxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkFHc0I7Ozs7OztXQUFBQSxJQUFBOzs7OztpQ0FIb0I7Ozt1RUFDWjs7Ozs7Ozs7Ozs7Ozs7O0FBRXZCLGVBQWVBLEtBQUtDLEdBQWdCO0VBQUE7RUFBQUMsYUFBQSxHQUFBQyxDQUFBO0VBQUFELGFBQUEsR0FBQUUsQ0FBQTtFQUN6QyxJQUFJO0lBQ0YsTUFBTTtNQUFFQyxTQUFTO01BQUVDO0lBQU0sQ0FBRTtJQUFBO0lBQUEsQ0FBQUosYUFBQSxHQUFBRSxDQUFBLE9BQUcsTUFBTUgsR0FBQSxDQUFJTSxJQUFJO0lBRTVDLE1BQU1DLFVBQUE7SUFBQTtJQUFBLENBQUFOLGFBQUEsR0FBQUUsQ0FBQSxPQUFhLE1BQU1LLHVCQUFBLENBQUFDLE9BQWlCLENBQUNDLE1BQU0sQ0FBQztNQUFFTixTQUFBO01BQVdDO0lBQU87SUFBQTtJQUFBSixhQUFBLEdBQUFFLENBQUE7SUFDdEUsT0FBT1EsT0FBQSxDQUFBQyxZQUFZLENBQUNOLElBQUksQ0FBQztNQUFFTyxPQUFBLEVBQVM7TUFBTUMsSUFBQSxFQUFNUDtJQUFXO0VBQzdELEVBQUUsT0FBT1EsS0FBQSxFQUFPO0lBQUE7SUFBQWQsYUFBQSxHQUFBRSxDQUFBO0lBQ2QsT0FBT1EsT0FBQSxDQUFBQyxZQUFZLENBQUNOLElBQUksQ0FBQztNQUFFTyxPQUFBLEVBQVM7TUFBT0csT0FBQSxFQUFTRCxLQUFBLENBQU1DO0lBQVEsR0FBRztNQUFFQyxNQUFBLEVBQVE7SUFBSTtFQUNyRjtBQUNGIiwiaWdub3JlTGlzdCI6W119