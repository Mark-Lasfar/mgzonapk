b3fce69011745e57453ab8f04f222394
"use strict";

/* istanbul ignore next */
function cov_18fc9sm9a4() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/sitemap-news.xml/route.ts";
  var hash = "6ce6f3f2501830f11ae6097c490a95679ea0b66a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/sitemap-news.xml/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 68
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "6": {
        start: {
          line: 15,
          column: 34
        },
        end: {
          line: 15,
          column: 73
        }
      },
      "7": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 61
        }
      },
      "8": {
        start: {
          line: 17,
          column: 28
        },
        end: {
          line: 17,
          column: 52
        }
      },
      "9": {
        start: {
          line: 18,
          column: 20
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "10": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "11": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 63
        }
      },
      "12": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 43,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 18
          }
        },
        loc: {
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 16,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 16,
            column: 27
          }
        }, {
          start: {
            line: 16,
            column: 31
          },
          end: {
            line: 16,
            column: 61
          }
        }],
        line: 16
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/app/sitemap-news.xml/route.ts"],
      sourcesContent: ["import { NextResponse } from 'next/server'\nimport { getSetting } from '@/lib/actions/setting.actions'\n\nexport async function GET() {\n  try {\n    const {\n      site: { url },\n    } = await getSetting()\n    const baseUrl = url || 'https://hager-zon.vercel.app'\n    const currentDate = new Date().toISOString()\n\n    const xml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"\n        xmlns:news=\"http://www.google.com/schemas/sitemap-news/0.9\">\n  <url>\n    <loc>${baseUrl}/blog</loc>\n    <news:news>\n      <news:publication>\n        <news:name>MGZon E-commerce</news:name>\n        <news:language>en</news:language>\n      </news:publication>\n      <news:publication_date>${currentDate}</news:publication_date>\n      <news:title>Latest Updates and News</news:title>\n    </news:news>\n  </url>\n</urlset>`\n\n    return new NextResponse(xml, {\n      headers: {\n        'Content-Type': 'application/xml',\n        'Cache-Control': 'public, max-age=3600, stale-while-revalidate=59',\n      },\n    })\n  } catch (error) {\n    console.error('Error generating news sitemap:', error)\n    return new NextResponse('Error generating sitemap', { status: 500 })\n  }\n}"],
      names: ["GET", "site", "url", "getSetting", "baseUrl", "currentDate", "Date", "toISOString", "xml", "NextResponse", "headers", "error", "console", "status"],
      mappings: ";;;;+BAGsBA;;;eAAAA;;;wBAHO;gCACF;AAEpB,eAAeA;IACpB,IAAI;QACF,MAAM,EACJC,MAAM,EAAEC,GAAG,EAAE,EACd,GAAG,MAAMC,IAAAA,0BAAU;QACpB,MAAMC,UAAUF,OAAO;QACvB,MAAMG,cAAc,IAAIC,OAAOC,WAAW;QAE1C,MAAMC,MAAM,CAAC;;;;SAIR,EAAEJ,QAAQ;;;;;;6BAMU,EAAEC,YAAY;;;;SAIlC,CAAC;QAEN,OAAO,IAAII,oBAAY,CAACD,KAAK;YAC3BE,SAAS;gBACP,gBAAgB;gBAChB,iBAAiB;YACnB;QACF;IACF,EAAE,OAAOC,OAAO;QACdC,QAAQD,KAAK,CAAC,kCAAkCA;QAChD,OAAO,IAAIF,oBAAY,CAAC,4BAA4B;YAAEI,QAAQ;QAAI;IACpE;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6ce6f3f2501830f11ae6097c490a95679ea0b66a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18fc9sm9a4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18fc9sm9a4();
cov_18fc9sm9a4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_18fc9sm9a4().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18fc9sm9a4().f[0]++;
    cov_18fc9sm9a4().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_18fc9sm9a4().s[3]++, require("next/server"));
const _settingactions =
/* istanbul ignore next */
(cov_18fc9sm9a4().s[4]++, require("../../lib/actions/setting.actions"));
async function GET() {
  /* istanbul ignore next */
  cov_18fc9sm9a4().f[1]++;
  cov_18fc9sm9a4().s[5]++;
  try {
    const {
      site: {
        url
      }
    } =
    /* istanbul ignore next */
    (cov_18fc9sm9a4().s[6]++, await (0, _settingactions.getSetting)());
    const baseUrl =
    /* istanbul ignore next */
    (cov_18fc9sm9a4().s[7]++,
    /* istanbul ignore next */
    (cov_18fc9sm9a4().b[0][0]++, url) ||
    /* istanbul ignore next */
    (cov_18fc9sm9a4().b[0][1]++, 'https://hager-zon.vercel.app'));
    const currentDate =
    /* istanbul ignore next */
    (cov_18fc9sm9a4().s[8]++, new Date().toISOString());
    const xml =
    /* istanbul ignore next */
    (cov_18fc9sm9a4().s[9]++, `<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
        xmlns:news="http://www.google.com/schemas/sitemap-news/0.9">
  <url>
    <loc>${baseUrl}/blog</loc>
    <news:news>
      <news:publication>
        <news:name>MGZon E-commerce</news:name>
        <news:language>en</news:language>
      </news:publication>
      <news:publication_date>${currentDate}</news:publication_date>
      <news:title>Latest Updates and News</news:title>
    </news:news>
  </url>
</urlset>`);
    /* istanbul ignore next */
    cov_18fc9sm9a4().s[10]++;
    return new _server.NextResponse(xml, {
      headers: {
        'Content-Type': 'application/xml',
        'Cache-Control': 'public, max-age=3600, stale-while-revalidate=59'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18fc9sm9a4().s[11]++;
    console.error('Error generating news sitemap:', error);
    /* istanbul ignore next */
    cov_18fc9sm9a4().s[12]++;
    return new _server.NextResponse('Error generating sitemap', {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMThmYzlzbTlhNCIsImFjdHVhbENvdmVyYWdlIiwicyIsIkdFVCIsImYiLCJzaXRlIiwidXJsIiwiX3NldHRpbmdhY3Rpb25zIiwiZ2V0U2V0dGluZyIsImJhc2VVcmwiLCJiIiwiY3VycmVudERhdGUiLCJEYXRlIiwidG9JU09TdHJpbmciLCJ4bWwiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwiaGVhZGVycyIsImVycm9yIiwiY29uc29sZSIsInN0YXR1cyJdLCJzb3VyY2VzIjpbIi9ob21lL2hhZ2VyL25ldy9teS1uZXh0anMtcHJvamVjdC1tYXN0ZXIgKDMpL215LW5leHRqcy1wcm9qZWN0LW1hc3Rlci9hcHAvc2l0ZW1hcC1uZXdzLnhtbC9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcidcbmltcG9ydCB7IGdldFNldHRpbmcgfSBmcm9tICdAL2xpYi9hY3Rpb25zL3NldHRpbmcuYWN0aW9ucydcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVCgpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB7XG4gICAgICBzaXRlOiB7IHVybCB9LFxuICAgIH0gPSBhd2FpdCBnZXRTZXR0aW5nKClcbiAgICBjb25zdCBiYXNlVXJsID0gdXJsIHx8ICdodHRwczovL2hhZ2VyLXpvbi52ZXJjZWwuYXBwJ1xuICAgIGNvbnN0IGN1cnJlbnREYXRlID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG5cbiAgICBjb25zdCB4bWwgPSBgPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+XG48dXJsc2V0IHhtbG5zPVwiaHR0cDovL3d3dy5zaXRlbWFwcy5vcmcvc2NoZW1hcy9zaXRlbWFwLzAuOVwiXG4gICAgICAgIHhtbG5zOm5ld3M9XCJodHRwOi8vd3d3Lmdvb2dsZS5jb20vc2NoZW1hcy9zaXRlbWFwLW5ld3MvMC45XCI+XG4gIDx1cmw+XG4gICAgPGxvYz4ke2Jhc2VVcmx9L2Jsb2c8L2xvYz5cbiAgICA8bmV3czpuZXdzPlxuICAgICAgPG5ld3M6cHVibGljYXRpb24+XG4gICAgICAgIDxuZXdzOm5hbWU+TUdab24gRS1jb21tZXJjZTwvbmV3czpuYW1lPlxuICAgICAgICA8bmV3czpsYW5ndWFnZT5lbjwvbmV3czpsYW5ndWFnZT5cbiAgICAgIDwvbmV3czpwdWJsaWNhdGlvbj5cbiAgICAgIDxuZXdzOnB1YmxpY2F0aW9uX2RhdGU+JHtjdXJyZW50RGF0ZX08L25ld3M6cHVibGljYXRpb25fZGF0ZT5cbiAgICAgIDxuZXdzOnRpdGxlPkxhdGVzdCBVcGRhdGVzIGFuZCBOZXdzPC9uZXdzOnRpdGxlPlxuICAgIDwvbmV3czpuZXdzPlxuICA8L3VybD5cbjwvdXJsc2V0PmBcblxuICAgIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKHhtbCwge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3htbCcsXG4gICAgICAgICdDYWNoZS1Db250cm9sJzogJ3B1YmxpYywgbWF4LWFnZT0zNjAwLCBzdGFsZS13aGlsZS1yZXZhbGlkYXRlPTU5JyxcbiAgICAgIH0sXG4gICAgfSlcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBnZW5lcmF0aW5nIG5ld3Mgc2l0ZW1hcDonLCBlcnJvcilcbiAgICByZXR1cm4gbmV3IE5leHRSZXNwb25zZSgnRXJyb3IgZ2VuZXJhdGluZyBzaXRlbWFwJywgeyBzdGF0dXM6IDUwMCB9KVxuICB9XG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBUUk7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTtBQUFBQSxjQUFBLEdBQUFFLENBQUE7Ozs7OzsrQkFMa0I7Ozs7OztXQUFBQyxHQUFBOzs7OztrQ0FITzs7O2tDQUNGO0FBRXBCLGVBQWVBLElBQUE7RUFBQTtFQUFBSCxjQUFBLEdBQUFJLENBQUE7RUFBQUosY0FBQSxHQUFBRSxDQUFBO0VBQ3BCLElBQUk7SUFDRixNQUFNO01BQ0pHLElBQUEsRUFBTTtRQUFFQztNQUFHO0lBQUUsQ0FDZDtJQUFBO0lBQUEsQ0FBQU4sY0FBQSxHQUFBRSxDQUFBLE9BQUcsTUFBTSxJQUFBSyxlQUFBLENBQUFDLFVBQVU7SUFDcEIsTUFBTUMsT0FBQTtJQUFBO0lBQUEsQ0FBQVQsY0FBQSxHQUFBRSxDQUFBO0lBQVU7SUFBQSxDQUFBRixjQUFBLEdBQUFVLENBQUEsVUFBQUosR0FBQTtJQUFBO0lBQUEsQ0FBQU4sY0FBQSxHQUFBVSxDQUFBLFVBQU87SUFDdkIsTUFBTUMsV0FBQTtJQUFBO0lBQUEsQ0FBQVgsY0FBQSxHQUFBRSxDQUFBLE9BQWMsSUFBSVUsSUFBQSxHQUFPQyxXQUFXO0lBRTFDLE1BQU1DLEdBQUE7SUFBQTtJQUFBLENBQUFkLGNBQUEsR0FBQUUsQ0FBQSxPQUFNOzs7O1dBSUxPLE9BQUE7Ozs7OzsrQkFNb0JFLFdBQUE7Ozs7VUFJckI7SUFBQTtJQUFBWCxjQUFBLEdBQUFFLENBQUE7SUFFTixPQUFPLElBQUlhLE9BQUEsQ0FBQUMsWUFBWSxDQUFDRixHQUFBLEVBQUs7TUFDM0JHLE9BQUEsRUFBUztRQUNQLGdCQUFnQjtRQUNoQixpQkFBaUI7TUFDbkI7SUFDRjtFQUNGLEVBQUUsT0FBT0MsS0FBQSxFQUFPO0lBQUE7SUFBQWxCLGNBQUEsR0FBQUUsQ0FBQTtJQUNkaUIsT0FBQSxDQUFRRCxLQUFLLENBQUMsa0NBQWtDQSxLQUFBO0lBQUE7SUFBQWxCLGNBQUEsR0FBQUUsQ0FBQTtJQUNoRCxPQUFPLElBQUlhLE9BQUEsQ0FBQUMsWUFBWSxDQUFDLDRCQUE0QjtNQUFFSSxNQUFBLEVBQVE7SUFBSTtFQUNwRTtBQUNGIiwiaWdub3JlTGlzdCI6W119