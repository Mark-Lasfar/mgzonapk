aa2fcf090aab996038ff913353509131
"use strict";

/* istanbul ignore next */
function cov_9hj7u449k() {
  var path = "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/sdk/index.ts";
  var hash = "cb87ec307e6f2a42fc4eada4bae8e58c5a48cecc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/sdk/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 38
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "5": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "6": {
        start: {
          line: 18,
          column: 26
        },
        end: {
          line: 18,
          column: 50
        }
      },
      "7": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 19,
          column: 59
        }
      },
      "8": {
        start: {
          line: 20,
          column: 25
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "10": {
        start: {
          line: 32,
          column: 26
        },
        end: {
          line: 32,
          column: 47
        }
      },
      "11": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 65
        }
      },
      "12": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 31
        }
      },
      "13": {
        start: {
          line: 38,
          column: 23
        },
        end: {
          line: 38,
          column: 40
        }
      },
      "14": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 110
        }
      },
      "15": {
        start: {
          line: 43,
          column: 29
        },
        end: {
          line: 43,
          column: 50
        }
      },
      "16": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "17": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 66
        }
      },
      "18": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 45,
          column: 66
        }
      },
      "19": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 67
        }
      },
      "20": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 11
        }
      },
      "21": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "22": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 64,
          column: 11
        }
      },
      "23": {
        start: {
          line: 68,
          column: 29
        },
        end: {
          line: 68,
          column: 50
        }
      },
      "24": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "25": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 66
        }
      },
      "26": {
        start: {
          line: 70,
          column: 23
        },
        end: {
          line: 70,
          column: 66
        }
      },
      "27": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 65
        }
      },
      "28": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "29": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "30": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "31": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 40
        }
      },
      "32": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 42
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 33
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 35
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 42
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 44,
            column: 39
          },
          end: {
            line: 44,
            column: 40
          }
        },
        loc: {
          start: {
            line: 44,
            column: 55
          },
          end: {
            line: 46,
            column: 9
          }
        },
        line: 44
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 30
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 49
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 34
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 55
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 28
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 61
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 33
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 67
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 69,
            column: 39
          },
          end: {
            line: 69,
            column: 40
          }
        },
        loc: {
          start: {
            line: 69,
            column: 55
          },
          end: {
            line: 71,
            column: 9
          }
        },
        line: 69
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 28
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 74
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 32
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 80
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 30
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 87
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        loc: {
          start: {
            line: 93,
            column: 24
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 93
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 28
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 96
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 17,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 17,
            column: 40
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 33,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 33,
            column: 39
          }
        }, {
          start: {
            line: 33,
            column: 43
          },
          end: {
            line: 33,
            column: 63
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 22
          },
          end: {
            line: 42,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 42,
            column: 31
          },
          end: {
            line: 42,
            column: 33
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 67,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 67,
            column: 29
          },
          end: {
            line: 67,
            column: 31
          }
        }],
        line: 67
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/sdk/index.ts"],
      sourcesContent: ["export class MGZonAPI {\n  private baseUrl: string;\n  private apiKey: string;\n  private apiSecret: string;\n\n  constructor(config: {\n    baseUrl: string;\n    apiKey: string;\n    apiSecret: string;\n  }) {\n    this.baseUrl = config.baseUrl;\n    this.apiKey = config.apiKey;\n    this.apiSecret = config.apiSecret;\n  }\n\n  private async request(\n    endpoint: string,\n    options: RequestInit = {}\n  ) {\n    const timestamp = new Date().toISOString();\n    const signature = this.generateSignature(timestamp);\n\n    const response = await fetch(`${this.baseUrl}/api/v1/${endpoint}`, {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        'x-api-key': this.apiKey,\n        'x-api-secret': this.apiSecret,\n        'x-timestamp': timestamp,\n        'x-signature': signature,\n        ...options.headers,\n      },\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'API request failed');\n    }\n\n    return response.json();\n  }\n\n  private generateSignature(timestamp: string): string {\n    const crypto = require('crypto');\n    return crypto\n      .createHmac('sha256', this.apiSecret)\n      .update(`${this.apiKey}${timestamp}`)\n      .digest('hex');\n  }\n\n  // Products API\n  async getProducts(params: {\n    page?: number;\n    limit?: number;\n    category?: string;\n    search?: string;\n    sort?: string;\n  } = {}) {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value) searchParams.append(key, value.toString());\n    });\n\n    return this.request(`products?${searchParams.toString()}`);\n  }\n\n  async createProduct(data: any) {\n    return this.request('products', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async updateProduct(id: string, data: any) {\n    return this.request(`products/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async deleteProduct(id: string) {\n    return this.request(`products/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Orders API\n  async getOrders(params: {\n    page?: number;\n    limit?: number;\n    status?: string;\n    from?: string;\n    to?: string;\n  } = {}) {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value) searchParams.append(key, value.toString());\n    });\n\n    return this.request(`orders?${searchParams.toString()}`);\n  }\n\n  async createOrder(data: any) {\n    return this.request('orders', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async updateOrder(id: string, data: any) {\n    return this.request(`orders/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  // Webhooks API\n  async createWebhook(data: {\n    url: string;\n    events: string[];\n  }) {\n    return this.request('webhooks', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async getWebhooks() {\n    return this.request('webhooks');\n  }\n\n  async deleteWebhook(id: string) {\n    return this.request(`webhooks/${id}`, {\n      method: 'DELETE',\n    });\n  }\n}"],
      names: ["MGZonAPI", "constructor", "config", "baseUrl", "apiKey", "apiSecret", "request", "endpoint", "options", "timestamp", "Date", "toISOString", "signature", "generateSignature", "response", "fetch", "headers", "ok", "error", "json", "Error", "crypto", "require", "createHmac", "update", "digest", "getProducts", "params", "searchParams", "URLSearchParams", "Object", "entries", "forEach", "key", "value", "append", "toString", "createProduct", "data", "method", "body", "JSON", "stringify", "updateProduct", "id", "deleteProduct", "getOrders", "createOrder", "updateOrder", "createWebhook", "getWebhooks", "deleteWebhook"],
      mappings: ";;;;+BAAaA;;;eAAAA;;;AAAN,MAAMA;IAKXC,YAAYC,MAIX,CAAE;QACD,IAAI,CAACC,OAAO,GAAGD,OAAOC,OAAO;QAC7B,IAAI,CAACC,MAAM,GAAGF,OAAOE,MAAM;QAC3B,IAAI,CAACC,SAAS,GAAGH,OAAOG,SAAS;IACnC;IAEA,MAAcC,QACZC,QAAgB,EAChBC,UAAuB,CAAC,CAAC,EACzB;QACA,MAAMC,YAAY,IAAIC,OAAOC,WAAW;QACxC,MAAMC,YAAY,IAAI,CAACC,iBAAiB,CAACJ;QAEzC,MAAMK,WAAW,MAAMC,MAAM,GAAG,IAAI,CAACZ,OAAO,CAAC,QAAQ,EAAEI,UAAU,EAAE;YACjE,GAAGC,OAAO;YACVQ,SAAS;gBACP,gBAAgB;gBAChB,aAAa,IAAI,CAACZ,MAAM;gBACxB,gBAAgB,IAAI,CAACC,SAAS;gBAC9B,eAAeI;gBACf,eAAeG;gBACf,GAAGJ,QAAQQ,OAAO;YACpB;QACF;QAEA,IAAI,CAACF,SAASG,EAAE,EAAE;YAChB,MAAMC,QAAQ,MAAMJ,SAASK,IAAI;YACjC,MAAM,IAAIC,MAAMF,MAAMA,KAAK,IAAI;QACjC;QAEA,OAAOJ,SAASK,IAAI;IACtB;IAEQN,kBAAkBJ,SAAiB,EAAU;QACnD,MAAMY,SAASC,QAAQ;QACvB,OAAOD,OACJE,UAAU,CAAC,UAAU,IAAI,CAAClB,SAAS,EACnCmB,MAAM,CAAC,GAAG,IAAI,CAACpB,MAAM,GAAGK,WAAW,EACnCgB,MAAM,CAAC;IACZ;IAEA,eAAe;IACf,MAAMC,YAAYC,SAMd,CAAC,CAAC,EAAE;QACN,MAAMC,eAAe,IAAIC;QACzBC,OAAOC,OAAO,CAACJ,QAAQK,OAAO,CAAC,CAAC,CAACC,KAAKC,MAAM;YAC1C,IAAIA,OAAON,aAAaO,MAAM,CAACF,KAAKC,MAAME,QAAQ;QACpD;QAEA,OAAO,IAAI,CAAC9B,OAAO,CAAC,CAAC,SAAS,EAAEsB,aAAaQ,QAAQ,IAAI;IAC3D;IAEA,MAAMC,cAAcC,IAAS,EAAE;QAC7B,OAAO,IAAI,CAAChC,OAAO,CAAC,YAAY;YAC9BiC,QAAQ;YACRC,MAAMC,KAAKC,SAAS,CAACJ;QACvB;IACF;IAEA,MAAMK,cAAcC,EAAU,EAAEN,IAAS,EAAE;QACzC,OAAO,IAAI,CAAChC,OAAO,CAAC,CAAC,SAAS,EAAEsC,IAAI,EAAE;YACpCL,QAAQ;YACRC,MAAMC,KAAKC,SAAS,CAACJ;QACvB;IACF;IAEA,MAAMO,cAAcD,EAAU,EAAE;QAC9B,OAAO,IAAI,CAACtC,OAAO,CAAC,CAAC,SAAS,EAAEsC,IAAI,EAAE;YACpCL,QAAQ;QACV;IACF;IAEA,aAAa;IACb,MAAMO,UAAUnB,SAMZ,CAAC,CAAC,EAAE;QACN,MAAMC,eAAe,IAAIC;QACzBC,OAAOC,OAAO,CAACJ,QAAQK,OAAO,CAAC,CAAC,CAACC,KAAKC,MAAM;YAC1C,IAAIA,OAAON,aAAaO,MAAM,CAACF,KAAKC,MAAME,QAAQ;QACpD;QAEA,OAAO,IAAI,CAAC9B,OAAO,CAAC,CAAC,OAAO,EAAEsB,aAAaQ,QAAQ,IAAI;IACzD;IAEA,MAAMW,YAAYT,IAAS,EAAE;QAC3B,OAAO,IAAI,CAAChC,OAAO,CAAC,UAAU;YAC5BiC,QAAQ;YACRC,MAAMC,KAAKC,SAAS,CAACJ;QACvB;IACF;IAEA,MAAMU,YAAYJ,EAAU,EAAEN,IAAS,EAAE;QACvC,OAAO,IAAI,CAAChC,OAAO,CAAC,CAAC,OAAO,EAAEsC,IAAI,EAAE;YAClCL,QAAQ;YACRC,MAAMC,KAAKC,SAAS,CAACJ;QACvB;IACF;IAEA,eAAe;IACf,MAAMW,cAAcX,IAGnB,EAAE;QACD,OAAO,IAAI,CAAChC,OAAO,CAAC,YAAY;YAC9BiC,QAAQ;YACRC,MAAMC,KAAKC,SAAS,CAACJ;QACvB;IACF;IAEA,MAAMY,cAAc;QAClB,OAAO,IAAI,CAAC5C,OAAO,CAAC;IACtB;IAEA,MAAM6C,cAAcP,EAAU,EAAE;QAC9B,OAAO,IAAI,CAACtC,OAAO,CAAC,CAAC,SAAS,EAAEsC,IAAI,EAAE;YACpCL,QAAQ;QACV;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cb87ec307e6f2a42fc4eada4bae8e58c5a48cecc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9hj7u449k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9hj7u449k();
cov_9hj7u449k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_9hj7u449k().s[1]++;
Object.defineProperty(exports, "MGZonAPI", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_9hj7u449k().f[0]++;
    cov_9hj7u449k().s[2]++;
    return MGZonAPI;
  }
});
class MGZonAPI {
  constructor(config) {
    /* istanbul ignore next */
    cov_9hj7u449k().f[1]++;
    cov_9hj7u449k().s[3]++;
    this.baseUrl = config.baseUrl;
    /* istanbul ignore next */
    cov_9hj7u449k().s[4]++;
    this.apiKey = config.apiKey;
    /* istanbul ignore next */
    cov_9hj7u449k().s[5]++;
    this.apiSecret = config.apiSecret;
  }
  async request(endpoint, options =
  /* istanbul ignore next */
  (cov_9hj7u449k().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_9hj7u449k().f[2]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_9hj7u449k().s[6]++, new Date().toISOString());
    const signature =
    /* istanbul ignore next */
    (cov_9hj7u449k().s[7]++, this.generateSignature(timestamp));
    const response =
    /* istanbul ignore next */
    (cov_9hj7u449k().s[8]++, await fetch(`${this.baseUrl}/api/v1/${endpoint}`, {
      ...options,
      headers: {
        'Content-Type': 'application/json',
        'x-api-key': this.apiKey,
        'x-api-secret': this.apiSecret,
        'x-timestamp': timestamp,
        'x-signature': signature,
        ...options.headers
      }
    }));
    /* istanbul ignore next */
    cov_9hj7u449k().s[9]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_9hj7u449k().b[1][0]++;
      const error =
      /* istanbul ignore next */
      (cov_9hj7u449k().s[10]++, await response.json());
      /* istanbul ignore next */
      cov_9hj7u449k().s[11]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_9hj7u449k().b[2][0]++, error.error) ||
      /* istanbul ignore next */
      (cov_9hj7u449k().b[2][1]++, 'API request failed'));
    } else
    /* istanbul ignore next */
    {
      cov_9hj7u449k().b[1][1]++;
    }
    cov_9hj7u449k().s[12]++;
    return response.json();
  }
  generateSignature(timestamp) {
    /* istanbul ignore next */
    cov_9hj7u449k().f[3]++;
    const crypto =
    /* istanbul ignore next */
    (cov_9hj7u449k().s[13]++, require('crypto'));
    /* istanbul ignore next */
    cov_9hj7u449k().s[14]++;
    return crypto.createHmac('sha256', this.apiSecret).update(`${this.apiKey}${timestamp}`).digest('hex');
  }
  // Products API
  async getProducts(params =
  /* istanbul ignore next */
  (cov_9hj7u449k().b[3][0]++, {})) {
    /* istanbul ignore next */
    cov_9hj7u449k().f[4]++;
    const searchParams =
    /* istanbul ignore next */
    (cov_9hj7u449k().s[15]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_9hj7u449k().s[16]++;
    Object.entries(params).forEach(([key, value]) => {
      /* istanbul ignore next */
      cov_9hj7u449k().f[5]++;
      cov_9hj7u449k().s[17]++;
      if (value) {
        /* istanbul ignore next */
        cov_9hj7u449k().b[4][0]++;
        cov_9hj7u449k().s[18]++;
        searchParams.append(key, value.toString());
      } else
      /* istanbul ignore next */
      {
        cov_9hj7u449k().b[4][1]++;
      }
    });
    /* istanbul ignore next */
    cov_9hj7u449k().s[19]++;
    return this.request(`products?${searchParams.toString()}`);
  }
  async createProduct(data) {
    /* istanbul ignore next */
    cov_9hj7u449k().f[6]++;
    cov_9hj7u449k().s[20]++;
    return this.request('products', {
      method: 'POST',
      body: JSON.stringify(data)
    });
  }
  async updateProduct(id, data) {
    /* istanbul ignore next */
    cov_9hj7u449k().f[7]++;
    cov_9hj7u449k().s[21]++;
    return this.request(`products/${id}`, {
      method: 'PUT',
      body: JSON.stringify(data)
    });
  }
  async deleteProduct(id) {
    /* istanbul ignore next */
    cov_9hj7u449k().f[8]++;
    cov_9hj7u449k().s[22]++;
    return this.request(`products/${id}`, {
      method: 'DELETE'
    });
  }
  // Orders API
  async getOrders(params =
  /* istanbul ignore next */
  (cov_9hj7u449k().b[5][0]++, {})) {
    /* istanbul ignore next */
    cov_9hj7u449k().f[9]++;
    const searchParams =
    /* istanbul ignore next */
    (cov_9hj7u449k().s[23]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_9hj7u449k().s[24]++;
    Object.entries(params).forEach(([key, value]) => {
      /* istanbul ignore next */
      cov_9hj7u449k().f[10]++;
      cov_9hj7u449k().s[25]++;
      if (value) {
        /* istanbul ignore next */
        cov_9hj7u449k().b[6][0]++;
        cov_9hj7u449k().s[26]++;
        searchParams.append(key, value.toString());
      } else
      /* istanbul ignore next */
      {
        cov_9hj7u449k().b[6][1]++;
      }
    });
    /* istanbul ignore next */
    cov_9hj7u449k().s[27]++;
    return this.request(`orders?${searchParams.toString()}`);
  }
  async createOrder(data) {
    /* istanbul ignore next */
    cov_9hj7u449k().f[11]++;
    cov_9hj7u449k().s[28]++;
    return this.request('orders', {
      method: 'POST',
      body: JSON.stringify(data)
    });
  }
  async updateOrder(id, data) {
    /* istanbul ignore next */
    cov_9hj7u449k().f[12]++;
    cov_9hj7u449k().s[29]++;
    return this.request(`orders/${id}`, {
      method: 'PUT',
      body: JSON.stringify(data)
    });
  }
  // Webhooks API
  async createWebhook(data) {
    /* istanbul ignore next */
    cov_9hj7u449k().f[13]++;
    cov_9hj7u449k().s[30]++;
    return this.request('webhooks', {
      method: 'POST',
      body: JSON.stringify(data)
    });
  }
  async getWebhooks() {
    /* istanbul ignore next */
    cov_9hj7u449k().f[14]++;
    cov_9hj7u449k().s[31]++;
    return this.request('webhooks');
  }
  async deleteWebhook(id) {
    /* istanbul ignore next */
    cov_9hj7u449k().f[15]++;
    cov_9hj7u449k().s[32]++;
    return this.request(`webhooks/${id}`, {
      method: 'DELETE'
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,