{"version":3,"names":["cov_9hj7u449k","actualCoverage","s","MGZonAPI","constructor","config","f","baseUrl","apiKey","apiSecret","request","endpoint","options","b","timestamp","Date","toISOString","signature","generateSignature","response","fetch","headers","ok","error","json","Error","crypto","require","createHmac","update","digest","getProducts","params","searchParams","URLSearchParams","Object","entries","forEach","key","value","append","toString","createProduct","data","method","body","JSON","stringify","updateProduct","id","deleteProduct","getOrders","createOrder","updateOrder","createWebhook","getWebhooks","deleteWebhook"],"sources":["/home/hager/new/my-nextjs-project-master (3)/my-nextjs-project-master/lib/api/sdk/index.ts"],"sourcesContent":["export class MGZonAPI {\n  private baseUrl: string;\n  private apiKey: string;\n  private apiSecret: string;\n\n  constructor(config: {\n    baseUrl: string;\n    apiKey: string;\n    apiSecret: string;\n  }) {\n    this.baseUrl = config.baseUrl;\n    this.apiKey = config.apiKey;\n    this.apiSecret = config.apiSecret;\n  }\n\n  private async request(\n    endpoint: string,\n    options: RequestInit = {}\n  ) {\n    const timestamp = new Date().toISOString();\n    const signature = this.generateSignature(timestamp);\n\n    const response = await fetch(`${this.baseUrl}/api/v1/${endpoint}`, {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        'x-api-key': this.apiKey,\n        'x-api-secret': this.apiSecret,\n        'x-timestamp': timestamp,\n        'x-signature': signature,\n        ...options.headers,\n      },\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.error || 'API request failed');\n    }\n\n    return response.json();\n  }\n\n  private generateSignature(timestamp: string): string {\n    const crypto = require('crypto');\n    return crypto\n      .createHmac('sha256', this.apiSecret)\n      .update(`${this.apiKey}${timestamp}`)\n      .digest('hex');\n  }\n\n  // Products API\n  async getProducts(params: {\n    page?: number;\n    limit?: number;\n    category?: string;\n    search?: string;\n    sort?: string;\n  } = {}) {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value) searchParams.append(key, value.toString());\n    });\n\n    return this.request(`products?${searchParams.toString()}`);\n  }\n\n  async createProduct(data: any) {\n    return this.request('products', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async updateProduct(id: string, data: any) {\n    return this.request(`products/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async deleteProduct(id: string) {\n    return this.request(`products/${id}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Orders API\n  async getOrders(params: {\n    page?: number;\n    limit?: number;\n    status?: string;\n    from?: string;\n    to?: string;\n  } = {}) {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value) searchParams.append(key, value.toString());\n    });\n\n    return this.request(`orders?${searchParams.toString()}`);\n  }\n\n  async createOrder(data: any) {\n    return this.request('orders', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async updateOrder(id: string, data: any) {\n    return this.request(`orders/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  }\n\n  // Webhooks API\n  async createWebhook(data: {\n    url: string;\n    events: string[];\n  }) {\n    return this.request('webhooks', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async getWebhooks() {\n    return this.request('webhooks');\n  }\n\n  async deleteWebhook(id: string) {\n    return this.request(`webhooks/${id}`, {\n      method: 'DELETE',\n    });\n  }\n}"],"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","ignoreList":[]}